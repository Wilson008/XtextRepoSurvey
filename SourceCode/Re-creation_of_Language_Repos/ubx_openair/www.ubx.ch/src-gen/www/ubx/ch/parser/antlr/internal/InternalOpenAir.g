/*
 * generated by Xtext 2.35.0
 */
grammar InternalOpenAir;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package www.ubx.ch.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package www.ubx.ch.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import www.ubx.ch.services.OpenAirGrammarAccess;

}

@parser::members {

 	private OpenAirGrammarAccess grammarAccess;

    public InternalOpenAirParser(TokenStream input, OpenAirGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "OpenAir";
   	}

   	@Override
   	protected OpenAirGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleOpenAir
entryRuleOpenAir returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOpenAirRule()); }
	iv_ruleOpenAir=ruleOpenAir
	{ $current=$iv_ruleOpenAir.current; }
	EOF;

// Rule OpenAir
ruleOpenAir returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getOpenAirAccess().getAirspacesAirspaceParserRuleCall_0());
			}
			lv_airspaces_0_0=ruleAirspace
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getOpenAirRule());
				}
				add(
					$current,
					"airspaces",
					lv_airspaces_0_0,
					"www.ubx.ch.OpenAir.Airspace");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleAirspace
entryRuleAirspace returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAirspaceRule()); }
	iv_ruleAirspace=ruleAirspace
	{ $current=$iv_ruleAirspace.current; }
	EOF;

// Rule Airspace
ruleAirspace returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getAirspaceAccess().getThedefTheDefParserRuleCall_0_0());
				}
				lv_thedef_0_0=ruleTheDef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAirspaceRule());
					}
					set(
						$current,
						"thedef",
						lv_thedef_0_0,
						"www.ubx.ch.OpenAir.TheDef");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getAirspaceAccess().getThegeomTheGeomParserRuleCall_1_0());
				}
				lv_thegeom_1_0=ruleTheGeom
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAirspaceRule());
					}
					add(
						$current,
						"thegeom",
						lv_thegeom_1_0,
						"www.ubx.ch.OpenAir.TheGeom");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleTheDef
entryRuleTheDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTheDefRule()); }
	iv_ruleTheDef=ruleTheDef
	{ $current=$iv_ruleTheDef.current; }
	EOF;

// Rule TheDef
ruleTheDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getTheDefAccess().getAsclassAsClassParserRuleCall_0_0());
				}
				lv_asclass_0_0=ruleAsClass
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTheDefRule());
					}
					set(
						$current,
						"asclass",
						lv_asclass_0_0,
						"www.ubx.ch.OpenAir.AsClass");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getTheDefAccess().getSpSPParserRuleCall_1_0());
				}
				lv_sp_1_0=ruleSP
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTheDefRule());
					}
					add(
						$current,
						"sp",
						lv_sp_1_0,
						"www.ubx.ch.OpenAir.SP");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getTheDefAccess().getSbSBParserRuleCall_2_0());
				}
				lv_sb_2_0=ruleSB
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTheDefRule());
					}
					add(
						$current,
						"sb",
						lv_sb_2_0,
						"www.ubx.ch.OpenAir.SB");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getTheDefAccess().getNameAsNameParserRuleCall_3_0());
				}
				lv_name_3_0=ruleAsName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTheDefRule());
					}
					set(
						$current,
						"name",
						lv_name_3_0,
						"www.ubx.ch.OpenAir.AsName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getTheDefAccess().getAtATParserRuleCall_4_0());
				}
				lv_at_4_0=ruleAT
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTheDefRule());
					}
					add(
						$current,
						"at",
						lv_at_4_0,
						"www.ubx.ch.OpenAir.AT");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getTheDefAccess().getLimitLimitesParserRuleCall_5_0());
				}
				lv_limit_5_0=ruleLimites
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTheDefRule());
					}
					set(
						$current,
						"limit",
						lv_limit_5_0,
						"www.ubx.ch.OpenAir.Limites");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getTheDefAccess().getAtATParserRuleCall_6_0());
				}
				lv_at_6_0=ruleAT
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTheDefRule());
					}
					add(
						$current,
						"at",
						lv_at_6_0,
						"www.ubx.ch.OpenAir.AT");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleAsClass
entryRuleAsClass returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAsClassRule()); }
	iv_ruleAsClass=ruleAsClass
	{ $current=$iv_ruleAsClass.current; }
	EOF;

// Rule AsClass
ruleAsClass returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getAsClassAccess().getAsClassAction_0(),
					$current);
			}
		)
		otherlv_1='AC'
		{
			newLeafNode(otherlv_1, grammarAccess.getAsClassAccess().getACKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAsClassAccess().getNameClassTypeEnumRuleCall_2_0());
				}
				lv_name_2_0=ruleClassType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAsClassRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"www.ubx.ch.OpenAir.ClassType");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleSP
entryRuleSP returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSPRule()); }
	iv_ruleSP=ruleSP
	{ $current=$iv_ruleSP.current; }
	EOF;

// Rule SP
ruleSP returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='SP'
		{
			newLeafNode(otherlv_0, grammarAccess.getSPAccess().getSPKeyword_0());
		}
		(
			(
				lv_sp0_1_0=RULE_INT
				{
					newLeafNode(lv_sp0_1_0, grammarAccess.getSPAccess().getSp0INTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSPRule());
					}
					setWithLastConsumed(
						$current,
						"sp0",
						lv_sp0_1_0,
						"www.ubx.ch.OpenAir.INT");
				}
			)
		)
		otherlv_2=','
		{
			newLeafNode(otherlv_2, grammarAccess.getSPAccess().getCommaKeyword_2());
		}
		(
			(
				lv_sp1_3_0=RULE_INT
				{
					newLeafNode(lv_sp1_3_0, grammarAccess.getSPAccess().getSp1INTTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSPRule());
					}
					setWithLastConsumed(
						$current,
						"sp1",
						lv_sp1_3_0,
						"www.ubx.ch.OpenAir.INT");
				}
			)
		)
		otherlv_4=','
		{
			newLeafNode(otherlv_4, grammarAccess.getSPAccess().getCommaKeyword_4());
		}
		(
			(
				lv_sp2_5_0=RULE_INT
				{
					newLeafNode(lv_sp2_5_0, grammarAccess.getSPAccess().getSp2INTTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSPRule());
					}
					setWithLastConsumed(
						$current,
						"sp2",
						lv_sp2_5_0,
						"www.ubx.ch.OpenAir.INT");
				}
			)
		)
		otherlv_6=','
		{
			newLeafNode(otherlv_6, grammarAccess.getSPAccess().getCommaKeyword_6());
		}
		(
			(
				lv_sp3_7_0=RULE_INT
				{
					newLeafNode(lv_sp3_7_0, grammarAccess.getSPAccess().getSp3INTTerminalRuleCall_7_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSPRule());
					}
					setWithLastConsumed(
						$current,
						"sp3",
						lv_sp3_7_0,
						"www.ubx.ch.OpenAir.INT");
				}
			)
		)
		otherlv_8=','
		{
			newLeafNode(otherlv_8, grammarAccess.getSPAccess().getCommaKeyword_8());
		}
		(
			(
				lv_sp4_9_0=RULE_INT
				{
					newLeafNode(lv_sp4_9_0, grammarAccess.getSPAccess().getSp4INTTerminalRuleCall_9_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSPRule());
					}
					setWithLastConsumed(
						$current,
						"sp4",
						lv_sp4_9_0,
						"www.ubx.ch.OpenAir.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleSB
entryRuleSB returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSBRule()); }
	iv_ruleSB=ruleSB
	{ $current=$iv_ruleSB.current; }
	EOF;

// Rule SB
ruleSB returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='SB'
		{
			newLeafNode(otherlv_0, grammarAccess.getSBAccess().getSBKeyword_0());
		}
		(
			(
				lv_sbVal1_1_0=RULE_INT
				{
					newLeafNode(lv_sbVal1_1_0, grammarAccess.getSBAccess().getSbVal1INTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSBRule());
					}
					setWithLastConsumed(
						$current,
						"sbVal1",
						lv_sbVal1_1_0,
						"www.ubx.ch.OpenAir.INT");
				}
			)
		)
		otherlv_2=','
		{
			newLeafNode(otherlv_2, grammarAccess.getSBAccess().getCommaKeyword_2());
		}
		(
			(
				lv_sbVal2_3_0=RULE_INT
				{
					newLeafNode(lv_sbVal2_3_0, grammarAccess.getSBAccess().getSbVal2INTTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSBRule());
					}
					setWithLastConsumed(
						$current,
						"sbVal2",
						lv_sbVal2_3_0,
						"www.ubx.ch.OpenAir.INT");
				}
			)
		)
		otherlv_4=','
		{
			newLeafNode(otherlv_4, grammarAccess.getSBAccess().getCommaKeyword_4());
		}
		(
			(
				lv_sbVal3_5_0=RULE_INT
				{
					newLeafNode(lv_sbVal3_5_0, grammarAccess.getSBAccess().getSbVal3INTTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSBRule());
					}
					setWithLastConsumed(
						$current,
						"sbVal3",
						lv_sbVal3_5_0,
						"www.ubx.ch.OpenAir.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleAsName
entryRuleAsName returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAsNameRule()); }
	iv_ruleAsName=ruleAsName
	{ $current=$iv_ruleAsName.current; }
	EOF;

// Rule AsName
ruleAsName returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='AN'
		{
			newLeafNode(otherlv_0, grammarAccess.getAsNameAccess().getANKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_STRING
				{
					newLeafNode(lv_name_1_0, grammarAccess.getAsNameAccess().getNameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAsNameRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleLimites
entryRuleLimites returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLimitesRule()); }
	iv_ruleLimites=ruleLimites
	{ $current=$iv_ruleLimites.current; }
	EOF;

// Rule Limites
ruleLimites returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getLimitesAccess().getLowLimitLowLimitParserRuleCall_0_0_0());
					}
					lv_lowLimit_0_0=ruleLowLimit
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLimitesRule());
						}
						set(
							$current,
							"lowLimit",
							lv_lowLimit_0_0,
							"www.ubx.ch.OpenAir.LowLimit");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getLimitesAccess().getHighLimitHighLimitParserRuleCall_0_1_0());
					}
					lv_highLimit_1_0=ruleHighLimit
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLimitesRule());
						}
						set(
							$current,
							"highLimit",
							lv_highLimit_1_0,
							"www.ubx.ch.OpenAir.HighLimit");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getLimitesAccess().getHeighLimitHighLimitParserRuleCall_1_0_0());
					}
					lv_heighLimit_2_0=ruleHighLimit
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLimitesRule());
						}
						set(
							$current,
							"heighLimit",
							lv_heighLimit_2_0,
							"www.ubx.ch.OpenAir.HighLimit");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getLimitesAccess().getLowLimitLowLimitParserRuleCall_1_1_0());
					}
					lv_lowLimit_3_0=ruleLowLimit
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLimitesRule());
						}
						set(
							$current,
							"lowLimit",
							lv_lowLimit_3_0,
							"www.ubx.ch.OpenAir.LowLimit");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleTheGeom
entryRuleTheGeom returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTheGeomRule()); }
	iv_ruleTheGeom=ruleTheGeom
	{ $current=$iv_ruleTheGeom.current; }
	EOF;

// Rule TheGeom
ruleTheGeom returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTheGeomAccess().getVParserRuleCall_0());
		}
		this_V_0=ruleV
		{
			$current = $this_V_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTheGeomAccess().getDPParserRuleCall_1());
		}
		this_DP_1=ruleDP
		{
			$current = $this_DP_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTheGeomAccess().getDAParserRuleCall_2());
		}
		this_DA_2=ruleDA
		{
			$current = $this_DA_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTheGeomAccess().getDBParserRuleCall_3());
		}
		this_DB_3=ruleDB
		{
			$current = $this_DB_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTheGeomAccess().getDCParserRuleCall_4());
		}
		this_DC_4=ruleDC
		{
			$current = $this_DC_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleLowLimit
entryRuleLowLimit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLowLimitRule()); }
	iv_ruleLowLimit=ruleLowLimit
	{ $current=$iv_ruleLowLimit.current; }
	EOF;

// Rule LowLimit
ruleLowLimit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='AL'
		{
			newLeafNode(otherlv_0, grammarAccess.getLowLimitAccess().getALKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLowLimitAccess().getLlLimitParserRuleCall_1_0());
				}
				lv_ll_1_0=ruleLimit
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLowLimitRule());
					}
					set(
						$current,
						"ll",
						lv_ll_1_0,
						"www.ubx.ch.OpenAir.Limit");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleHighLimit
entryRuleHighLimit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getHighLimitRule()); }
	iv_ruleHighLimit=ruleHighLimit
	{ $current=$iv_ruleHighLimit.current; }
	EOF;

// Rule HighLimit
ruleHighLimit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='AH'
		{
			newLeafNode(otherlv_0, grammarAccess.getHighLimitAccess().getAHKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getHighLimitAccess().getHlLimitParserRuleCall_1_0());
				}
				lv_hl_1_0=ruleLimit
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getHighLimitRule());
					}
					set(
						$current,
						"hl",
						lv_hl_1_0,
						"www.ubx.ch.OpenAir.Limit");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleLimit
entryRuleLimit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLimitRule()); }
	iv_ruleLimit=ruleLimit
	{ $current=$iv_ruleLimit.current; }
	EOF;

// Rule Limit
ruleLimit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getLimitAccess().getFLParserRuleCall_0());
		}
		this_FL_0=ruleFL
		{
			$current = $this_FL_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLimitAccess().getSFCParserRuleCall_1());
		}
		this_SFC_1=ruleSFC
		{
			$current = $this_SFC_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLimitAccess().getGNDParserRuleCall_2());
		}
		this_GND_2=ruleGND
		{
			$current = $this_GND_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLimitAccess().getUNLParserRuleCall_3());
		}
		this_UNL_3=ruleUNL
		{
			$current = $this_UNL_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLimitAccess().getVALParserRuleCall_4());
		}
		this_VAL_4=ruleVAL
		{
			$current = $this_VAL_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleFL
entryRuleFL returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFLRule()); }
	iv_ruleFL=ruleFL
	{ $current=$iv_ruleFL.current; }
	EOF;

// Rule FL
ruleFL returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='FL'
		{
			newLeafNode(otherlv_0, grammarAccess.getFLAccess().getFLKeyword_0());
		}
		(
			(
				lv_value_1_0=RULE_INT
				{
					newLeafNode(lv_value_1_0, grammarAccess.getFLAccess().getValueINTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFLRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_1_0,
						"www.ubx.ch.OpenAir.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleSFC
entryRuleSFC returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSFCRule()); }
	iv_ruleSFC=ruleSFC
	{ $current=$iv_ruleSFC.current; }
	EOF;

// Rule SFC
ruleSFC returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSFCAccess().getSFCAction_0(),
					$current);
			}
		)
		otherlv_1='SFC'
		{
			newLeafNode(otherlv_1, grammarAccess.getSFCAccess().getSFCKeyword_1());
		}
	)
;

// Entry rule entryRuleGND
entryRuleGND returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGNDRule()); }
	iv_ruleGND=ruleGND
	{ $current=$iv_ruleGND.current; }
	EOF;

// Rule GND
ruleGND returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getGNDAccess().getGNDAction_0(),
					$current);
			}
		)
		otherlv_1='GND'
		{
			newLeafNode(otherlv_1, grammarAccess.getGNDAccess().getGNDKeyword_1());
		}
	)
;

// Entry rule entryRuleUNL
entryRuleUNL returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUNLRule()); }
	iv_ruleUNL=ruleUNL
	{ $current=$iv_ruleUNL.current; }
	EOF;

// Rule UNL
ruleUNL returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getUNLAccess().getUNLAction_0(),
					$current);
			}
		)
		otherlv_1='UNL'
		{
			newLeafNode(otherlv_1, grammarAccess.getUNLAccess().getUNLKeyword_1());
		}
	)
;

// Entry rule entryRuleVAL
entryRuleVAL returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVALRule()); }
	iv_ruleVAL=ruleVAL
	{ $current=$iv_ruleVAL.current; }
	EOF;

// Rule VAL
ruleVAL returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_value_0_0=RULE_INT
				{
					newLeafNode(lv_value_0_0, grammarAccess.getVALAccess().getValueINTTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVALRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_0_0,
						"www.ubx.ch.OpenAir.INT");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getVALAccess().getUnitUnitsEnumRuleCall_1_0());
				}
				lv_unit_1_0=ruleUnits
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVALRule());
					}
					set(
						$current,
						"unit",
						lv_unit_1_0,
						"www.ubx.ch.OpenAir.Units");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleV
entryRuleV returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVRule()); }
	iv_ruleV=ruleV
	{ $current=$iv_ruleV.current; }
	EOF;

// Rule V
ruleV returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='V'
		{
			newLeafNode(otherlv_0, grammarAccess.getVAccess().getVKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVAccess().getVsubVsubParserRuleCall_1_0());
				}
				lv_vsub_1_0=ruleVsub
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVRule());
					}
					set(
						$current,
						"vsub",
						lv_vsub_1_0,
						"www.ubx.ch.OpenAir.Vsub");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleVsub
entryRuleVsub returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVsubRule()); }
	iv_ruleVsub=ruleVsub
	{ $current=$iv_ruleVsub.current; }
	EOF;

// Rule Vsub
ruleVsub returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='X='
			{
				newLeafNode(otherlv_0, grammarAccess.getVsubAccess().getXKeyword_0_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVsubAccess().getXPointParserRuleCall_0_1_0());
					}
					lv_x_1_0=rulePoint
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVsubRule());
						}
						set(
							$current,
							"x",
							lv_x_1_0,
							"www.ubx.ch.OpenAir.Point");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			otherlv_2='D='
			{
				newLeafNode(otherlv_2, grammarAccess.getVsubAccess().getDKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVsubAccess().getDDirParserRuleCall_1_1_0());
					}
					lv_d_3_0=ruleDir
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVsubRule());
						}
						set(
							$current,
							"d",
							lv_d_3_0,
							"www.ubx.ch.OpenAir.Dir");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleDir
entryRuleDir returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDirRule()); }
	iv_ruleDir=ruleDir
	{ $current=$iv_ruleDir.current; }
	EOF;

// Rule Dir
ruleDir returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDirAccess().getPlusParserRuleCall_0());
		}
		this_Plus_0=rulePlus
		{
			$current = $this_Plus_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDirAccess().getMinusParserRuleCall_1());
		}
		this_Minus_1=ruleMinus
		{
			$current = $this_Minus_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulePlus
entryRulePlus returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPlusRule()); }
	iv_rulePlus=rulePlus
	{ $current=$iv_rulePlus.current; }
	EOF;

// Rule Plus
rulePlus returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getPlusAccess().getPlusAction_0(),
					$current);
			}
		)
		otherlv_1='+'
		{
			newLeafNode(otherlv_1, grammarAccess.getPlusAccess().getPlusSignKeyword_1());
		}
	)
;

// Entry rule entryRuleMinus
entryRuleMinus returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMinusRule()); }
	iv_ruleMinus=ruleMinus
	{ $current=$iv_ruleMinus.current; }
	EOF;

// Rule Minus
ruleMinus returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getMinusAccess().getMinusAction_0(),
					$current);
			}
		)
		otherlv_1='-'
		{
			newLeafNode(otherlv_1, grammarAccess.getMinusAccess().getHyphenMinusKeyword_1());
		}
	)
;

// Entry rule entryRuleDC
entryRuleDC returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDCRule()); }
	iv_ruleDC=ruleDC
	{ $current=$iv_ruleDC.current; }
	EOF;

// Rule DC
ruleDC returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='DC'
		{
			newLeafNode(otherlv_0, grammarAccess.getDCAccess().getDCKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDCAccess().getRadiusRadiusParserRuleCall_1_0());
				}
				lv_radius_1_0=ruleRadius
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDCRule());
					}
					set(
						$current,
						"radius",
						lv_radius_1_0,
						"www.ubx.ch.OpenAir.Radius");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleRadius
entryRuleRadius returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRadiusRule()); }
	iv_ruleRadius=ruleRadius
	{ $current=$iv_ruleRadius.current; }
	EOF;

// Rule Radius
ruleRadius returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_intValue_0_0=RULE_INT
				{
					newLeafNode(lv_intValue_0_0, grammarAccess.getRadiusAccess().getIntValueINTTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRadiusRule());
					}
					setWithLastConsumed(
						$current,
						"intValue",
						lv_intValue_0_0,
						"www.ubx.ch.OpenAir.INT");
				}
			)
		)
		    |
		(
			(
				lv_reakValuer_1_0=RULE_REAL
				{
					newLeafNode(lv_reakValuer_1_0, grammarAccess.getRadiusAccess().getReakValuerREALTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRadiusRule());
					}
					setWithLastConsumed(
						$current,
						"reakValuer",
						lv_reakValuer_1_0,
						"www.ubx.ch.OpenAir.REAL");
				}
			)
		)
	)
;

// Entry rule entryRuleDP
entryRuleDP returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDPRule()); }
	iv_ruleDP=ruleDP
	{ $current=$iv_ruleDP.current; }
	EOF;

// Rule DP
ruleDP returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='DP'
		{
			newLeafNode(otherlv_0, grammarAccess.getDPAccess().getDPKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDPAccess().getDpPointParserRuleCall_1_0());
				}
				lv_dp_1_0=rulePoint
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDPRule());
					}
					set(
						$current,
						"dp",
						lv_dp_1_0,
						"www.ubx.ch.OpenAir.Point");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulePoint
entryRulePoint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPointRule()); }
	iv_rulePoint=rulePoint
	{ $current=$iv_rulePoint.current; }
	EOF;

// Rule Point
rulePoint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPointAccess().getPoint1ParserRuleCall_0());
		}
		this_Point1_0=rulePoint1
		{
			$current = $this_Point1_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPointAccess().getPoint2ParserRuleCall_1());
		}
		this_Point2_1=rulePoint2
		{
			$current = $this_Point2_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPointAccess().getPoint3ParserRuleCall_2());
		}
		this_Point3_2=rulePoint3
		{
			$current = $this_Point3_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPointAccess().getPoint4ParserRuleCall_3());
		}
		this_Point4_3=rulePoint4
		{
			$current = $this_Point4_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulePoint1
entryRulePoint1 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPoint1Rule()); }
	iv_rulePoint1=rulePoint1
	{ $current=$iv_rulePoint1.current; }
	EOF;

// Rule Point1
rulePoint1 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getPoint1Access().getLongDLongDegrParserRuleCall_0_0());
				}
				lv_longD_0_0=ruleLongDegr
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPoint1Rule());
					}
					set(
						$current,
						"longD",
						lv_longD_0_0,
						"www.ubx.ch.OpenAir.LongDegr");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getPoint1Access().getLongMMinSecParserRuleCall_1_0());
				}
				lv_longM_1_0=ruleMinSec
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPoint1Rule());
					}
					set(
						$current,
						"longM",
						lv_longM_1_0,
						"www.ubx.ch.OpenAir.MinSec");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getPoint1Access().getLongSMinSecParserRuleCall_2_0());
				}
				lv_longS_2_0=ruleMinSec
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPoint1Rule());
					}
					set(
						$current,
						"longS",
						lv_longS_2_0,
						"www.ubx.ch.OpenAir.MinSec");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getPoint1Access().getNsNSEnumRuleCall_3_0());
				}
				lv_ns_3_0=ruleNS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPoint1Rule());
					}
					set(
						$current,
						"ns",
						lv_ns_3_0,
						"www.ubx.ch.OpenAir.NS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getPoint1Access().getLatDLatDegrParserRuleCall_4_0());
				}
				lv_latD_4_0=ruleLatDegr
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPoint1Rule());
					}
					set(
						$current,
						"latD",
						lv_latD_4_0,
						"www.ubx.ch.OpenAir.LatDegr");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getPoint1Access().getLatMMinSecParserRuleCall_5_0());
				}
				lv_latM_5_0=ruleMinSec
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPoint1Rule());
					}
					set(
						$current,
						"latM",
						lv_latM_5_0,
						"www.ubx.ch.OpenAir.MinSec");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getPoint1Access().getLatSMinSecParserRuleCall_6_0());
				}
				lv_latS_6_0=ruleMinSec
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPoint1Rule());
					}
					set(
						$current,
						"latS",
						lv_latS_6_0,
						"www.ubx.ch.OpenAir.MinSec");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getPoint1Access().getWeWEEnumRuleCall_7_0());
				}
				lv_we_7_0=ruleWE
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPoint1Rule());
					}
					set(
						$current,
						"we",
						lv_we_7_0,
						"www.ubx.ch.OpenAir.WE");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulePoint2
entryRulePoint2 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPoint2Rule()); }
	iv_rulePoint2=rulePoint2
	{ $current=$iv_rulePoint2.current; }
	EOF;

// Rule Point2
rulePoint2 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getPoint2Access().getLongDLongDegrParserRuleCall_0_0());
				}
				lv_longD_0_0=ruleLongDegr
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPoint2Rule());
					}
					set(
						$current,
						"longD",
						lv_longD_0_0,
						"www.ubx.ch.OpenAir.LongDegr");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getPoint2Access().getLongMfMinDecParserRuleCall_1_0());
				}
				lv_longMf_1_0=ruleMinDec
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPoint2Rule());
					}
					set(
						$current,
						"longMf",
						lv_longMf_1_0,
						"www.ubx.ch.OpenAir.MinDec");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getPoint2Access().getNsNSEnumRuleCall_2_0());
				}
				lv_ns_2_0=ruleNS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPoint2Rule());
					}
					set(
						$current,
						"ns",
						lv_ns_2_0,
						"www.ubx.ch.OpenAir.NS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getPoint2Access().getLatDLatDegrParserRuleCall_3_0());
				}
				lv_latD_3_0=ruleLatDegr
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPoint2Rule());
					}
					set(
						$current,
						"latD",
						lv_latD_3_0,
						"www.ubx.ch.OpenAir.LatDegr");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getPoint2Access().getLatMfMinDecParserRuleCall_4_0());
				}
				lv_latMf_4_0=ruleMinDec
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPoint2Rule());
					}
					set(
						$current,
						"latMf",
						lv_latMf_4_0,
						"www.ubx.ch.OpenAir.MinDec");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getPoint2Access().getWeWEEnumRuleCall_5_0());
				}
				lv_we_5_0=ruleWE
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPoint2Rule());
					}
					set(
						$current,
						"we",
						lv_we_5_0,
						"www.ubx.ch.OpenAir.WE");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulePoint3
entryRulePoint3 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPoint3Rule()); }
	iv_rulePoint3=rulePoint3
	{ $current=$iv_rulePoint3.current; }
	EOF;

// Rule Point3
rulePoint3 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getPoint3Access().getLongDLongDegrParserRuleCall_0_0());
				}
				lv_longD_0_0=ruleLongDegr
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPoint3Rule());
					}
					set(
						$current,
						"longD",
						lv_longD_0_0,
						"www.ubx.ch.OpenAir.LongDegr");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getPoint3Access().getLongMMinSecParserRuleCall_1_0());
				}
				lv_longM_1_0=ruleMinSec
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPoint3Rule());
					}
					set(
						$current,
						"longM",
						lv_longM_1_0,
						"www.ubx.ch.OpenAir.MinSec");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getPoint3Access().getLongSSecDecParserRuleCall_2_0());
				}
				lv_longS_2_0=ruleSecDec
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPoint3Rule());
					}
					set(
						$current,
						"longS",
						lv_longS_2_0,
						"www.ubx.ch.OpenAir.SecDec");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getPoint3Access().getNsNSEnumRuleCall_3_0());
				}
				lv_ns_3_0=ruleNS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPoint3Rule());
					}
					set(
						$current,
						"ns",
						lv_ns_3_0,
						"www.ubx.ch.OpenAir.NS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getPoint3Access().getLatDLatDegrParserRuleCall_4_0());
				}
				lv_latD_4_0=ruleLatDegr
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPoint3Rule());
					}
					set(
						$current,
						"latD",
						lv_latD_4_0,
						"www.ubx.ch.OpenAir.LatDegr");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getPoint3Access().getLatMMinSecParserRuleCall_5_0());
				}
				lv_latM_5_0=ruleMinSec
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPoint3Rule());
					}
					set(
						$current,
						"latM",
						lv_latM_5_0,
						"www.ubx.ch.OpenAir.MinSec");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getPoint3Access().getLatSSecDecParserRuleCall_6_0());
				}
				lv_latS_6_0=ruleSecDec
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPoint3Rule());
					}
					set(
						$current,
						"latS",
						lv_latS_6_0,
						"www.ubx.ch.OpenAir.SecDec");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getPoint3Access().getWeWEEnumRuleCall_7_0());
				}
				lv_we_7_0=ruleWE
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPoint3Rule());
					}
					set(
						$current,
						"we",
						lv_we_7_0,
						"www.ubx.ch.OpenAir.WE");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulePoint4
entryRulePoint4 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPoint4Rule()); }
	iv_rulePoint4=rulePoint4
	{ $current=$iv_rulePoint4.current; }
	EOF;

// Rule Point4
rulePoint4 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getPoint4Access().getLongDLongDecParserRuleCall_0_0());
				}
				lv_longD_0_0=ruleLongDec
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPoint4Rule());
					}
					set(
						$current,
						"longD",
						lv_longD_0_0,
						"www.ubx.ch.OpenAir.LongDec");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getPoint4Access().getNsNSEnumRuleCall_1_0());
				}
				lv_ns_1_0=ruleNS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPoint4Rule());
					}
					set(
						$current,
						"ns",
						lv_ns_1_0,
						"www.ubx.ch.OpenAir.NS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getPoint4Access().getLatDLatDecParserRuleCall_2_0());
				}
				lv_latD_2_0=ruleLatDec
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPoint4Rule());
					}
					set(
						$current,
						"latD",
						lv_latD_2_0,
						"www.ubx.ch.OpenAir.LatDec");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getPoint4Access().getWeWEEnumRuleCall_3_0());
				}
				lv_we_3_0=ruleWE
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPoint4Rule());
					}
					set(
						$current,
						"we",
						lv_we_3_0,
						"www.ubx.ch.OpenAir.WE");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleLongDegr
entryRuleLongDegr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLongDegrRule()); }
	iv_ruleLongDegr=ruleLongDegr
	{ $current=$iv_ruleLongDegr.current; }
	EOF;

// Rule LongDegr
ruleLongDegr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_INT
			{
				newLeafNode(lv_value_0_0, grammarAccess.getLongDegrAccess().getValueINTTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getLongDegrRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"www.ubx.ch.OpenAir.INT");
			}
		)
	)
;

// Entry rule entryRuleLatDegr
entryRuleLatDegr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLatDegrRule()); }
	iv_ruleLatDegr=ruleLatDegr
	{ $current=$iv_ruleLatDegr.current; }
	EOF;

// Rule LatDegr
ruleLatDegr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_INT
			{
				newLeafNode(lv_value_0_0, grammarAccess.getLatDegrAccess().getValueINTTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getLatDegrRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"www.ubx.ch.OpenAir.INT");
			}
		)
	)
;

// Entry rule entryRuleMinSec
entryRuleMinSec returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMinSecRule()); }
	iv_ruleMinSec=ruleMinSec
	{ $current=$iv_ruleMinSec.current; }
	EOF;

// Rule MinSec
ruleMinSec returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getMinSecAccess().getSepParserRuleCall_0());
		}
		ruleSep
		{
			afterParserOrEnumRuleCall();
		}
		(
			(
				lv_value_1_0=RULE_INT
				{
					newLeafNode(lv_value_1_0, grammarAccess.getMinSecAccess().getValueINTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMinSecRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_1_0,
						"www.ubx.ch.OpenAir.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleSecDec
entryRuleSecDec returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSecDecRule()); }
	iv_ruleSecDec=ruleSecDec
	{ $current=$iv_ruleSecDec.current; }
	EOF;

// Rule SecDec
ruleSecDec returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getSecDecAccess().getSepParserRuleCall_0());
		}
		ruleSep
		{
			afterParserOrEnumRuleCall();
		}
		(
			(
				lv_value_1_0=RULE_REAL
				{
					newLeafNode(lv_value_1_0, grammarAccess.getSecDecAccess().getValueREALTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSecDecRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_1_0,
						"www.ubx.ch.OpenAir.REAL");
				}
			)
		)
	)
;

// Entry rule entryRuleMinDec
entryRuleMinDec returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMinDecRule()); }
	iv_ruleMinDec=ruleMinDec
	{ $current=$iv_ruleMinDec.current; }
	EOF;

// Rule MinDec
ruleMinDec returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getMinDecAccess().getSepParserRuleCall_0());
		}
		ruleSep
		{
			afterParserOrEnumRuleCall();
		}
		(
			(
				lv_value_1_0=RULE_REAL
				{
					newLeafNode(lv_value_1_0, grammarAccess.getMinDecAccess().getValueREALTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMinDecRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_1_0,
						"www.ubx.ch.OpenAir.REAL");
				}
			)
		)
	)
;

// Entry rule entryRuleLongDec
entryRuleLongDec returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLongDecRule()); }
	iv_ruleLongDec=ruleLongDec
	{ $current=$iv_ruleLongDec.current; }
	EOF;

// Rule LongDec
ruleLongDec returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_REAL
			{
				newLeafNode(lv_value_0_0, grammarAccess.getLongDecAccess().getValueREALTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getLongDecRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"www.ubx.ch.OpenAir.REAL");
			}
		)
	)
;

// Entry rule entryRuleLatDec
entryRuleLatDec returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLatDecRule()); }
	iv_ruleLatDec=ruleLatDec
	{ $current=$iv_ruleLatDec.current; }
	EOF;

// Rule LatDec
ruleLatDec returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_REAL
			{
				newLeafNode(lv_value_0_0, grammarAccess.getLatDecAccess().getValueREALTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getLatDecRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"www.ubx.ch.OpenAir.REAL");
			}
		)
	)
;

// Entry rule entryRuleSep
entryRuleSep returns [String current=null]:
	{ newCompositeNode(grammarAccess.getSepRule()); }
	iv_ruleSep=ruleSep
	{ $current=$iv_ruleSep.current.getText(); }
	EOF;

// Rule Sep
ruleSep returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw=':'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getSepAccess().getColonKeyword());
	}
;

// Entry rule entryRuleDA
entryRuleDA returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDARule()); }
	iv_ruleDA=ruleDA
	{ $current=$iv_ruleDA.current; }
	EOF;

// Rule DA
ruleDA returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='DA'
		{
			newLeafNode(otherlv_0, grammarAccess.getDAAccess().getDAKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDAAccess().getDaDaParamsParserRuleCall_1_0());
				}
				lv_da_1_0=ruleDaParams
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDARule());
					}
					set(
						$current,
						"da",
						lv_da_1_0,
						"www.ubx.ch.OpenAir.DaParams");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleDaParams
entryRuleDaParams returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDaParamsRule()); }
	iv_ruleDaParams=ruleDaParams
	{ $current=$iv_ruleDaParams.current; }
	EOF;

// Rule DaParams
ruleDaParams returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDaParamsAccess().getDaParams1ParserRuleCall_0());
		}
		this_DaParams1_0=ruleDaParams1
		{
			$current = $this_DaParams1_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDaParamsAccess().getDaParams2ParserRuleCall_1());
		}
		this_DaParams2_1=ruleDaParams2
		{
			$current = $this_DaParams2_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleDaParams1
entryRuleDaParams1 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDaParams1Rule()); }
	iv_ruleDaParams1=ruleDaParams1
	{ $current=$iv_ruleDaParams1.current; }
	EOF;

// Rule DaParams1
ruleDaParams1 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_radius_0_0=RULE_REAL
				{
					newLeafNode(lv_radius_0_0, grammarAccess.getDaParams1Access().getRadiusREALTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDaParams1Rule());
					}
					setWithLastConsumed(
						$current,
						"radius",
						lv_radius_0_0,
						"www.ubx.ch.OpenAir.REAL");
				}
			)
		)
		otherlv_1=','
		{
			newLeafNode(otherlv_1, grammarAccess.getDaParams1Access().getCommaKeyword_1());
		}
		(
			(
				lv_angleStart_2_0=RULE_INT
				{
					newLeafNode(lv_angleStart_2_0, grammarAccess.getDaParams1Access().getAngleStartINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDaParams1Rule());
					}
					setWithLastConsumed(
						$current,
						"angleStart",
						lv_angleStart_2_0,
						"www.ubx.ch.OpenAir.INT");
				}
			)
		)
		otherlv_3=','
		{
			newLeafNode(otherlv_3, grammarAccess.getDaParams1Access().getCommaKeyword_3());
		}
		(
			(
				lv_angleEnd_4_0=RULE_INT
				{
					newLeafNode(lv_angleEnd_4_0, grammarAccess.getDaParams1Access().getAngleEndINTTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDaParams1Rule());
					}
					setWithLastConsumed(
						$current,
						"angleEnd",
						lv_angleEnd_4_0,
						"www.ubx.ch.OpenAir.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleDaParams2
entryRuleDaParams2 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDaParams2Rule()); }
	iv_ruleDaParams2=ruleDaParams2
	{ $current=$iv_ruleDaParams2.current; }
	EOF;

// Rule DaParams2
ruleDaParams2 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_radius_0_0=RULE_INT
				{
					newLeafNode(lv_radius_0_0, grammarAccess.getDaParams2Access().getRadiusINTTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDaParams2Rule());
					}
					setWithLastConsumed(
						$current,
						"radius",
						lv_radius_0_0,
						"www.ubx.ch.OpenAir.INT");
				}
			)
		)
		otherlv_1=','
		{
			newLeafNode(otherlv_1, grammarAccess.getDaParams2Access().getCommaKeyword_1());
		}
		(
			(
				lv_angleStart_2_0=RULE_INT
				{
					newLeafNode(lv_angleStart_2_0, grammarAccess.getDaParams2Access().getAngleStartINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDaParams2Rule());
					}
					setWithLastConsumed(
						$current,
						"angleStart",
						lv_angleStart_2_0,
						"www.ubx.ch.OpenAir.INT");
				}
			)
		)
		otherlv_3=','
		{
			newLeafNode(otherlv_3, grammarAccess.getDaParams2Access().getCommaKeyword_3());
		}
		(
			(
				lv_angleEnd_4_0=RULE_INT
				{
					newLeafNode(lv_angleEnd_4_0, grammarAccess.getDaParams2Access().getAngleEndINTTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDaParams2Rule());
					}
					setWithLastConsumed(
						$current,
						"angleEnd",
						lv_angleEnd_4_0,
						"www.ubx.ch.OpenAir.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleDB
entryRuleDB returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDBRule()); }
	iv_ruleDB=ruleDB
	{ $current=$iv_ruleDB.current; }
	EOF;

// Rule DB
ruleDB returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='DB'
		{
			newLeafNode(otherlv_0, grammarAccess.getDBAccess().getDBKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDBAccess().getDp0PointParserRuleCall_1_0());
				}
				lv_dp0_1_0=rulePoint
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDBRule());
					}
					set(
						$current,
						"dp0",
						lv_dp0_1_0,
						"www.ubx.ch.OpenAir.Point");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getDBAccess().getCommaKeyword_2());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getDBAccess().getDp1PointParserRuleCall_3_0());
				}
				lv_dp1_3_0=rulePoint
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDBRule());
					}
					set(
						$current,
						"dp1",
						lv_dp1_3_0,
						"www.ubx.ch.OpenAir.Point");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleAT
entryRuleAT returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getATRule()); }
	iv_ruleAT=ruleAT
	{ $current=$iv_ruleAT.current; }
	EOF;

// Rule AT
ruleAT returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='AT'
		{
			newLeafNode(otherlv_0, grammarAccess.getATAccess().getATKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getATAccess().getLpPointParserRuleCall_1_0());
				}
				lv_lp_1_0=rulePoint
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getATRule());
					}
					set(
						$current,
						"lp",
						lv_lp_1_0,
						"www.ubx.ch.OpenAir.Point");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Rule ClassType
ruleClassType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='A'
			{
				$current = grammarAccess.getClassTypeAccess().getAEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getClassTypeAccess().getAEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='B'
			{
				$current = grammarAccess.getClassTypeAccess().getBEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getClassTypeAccess().getBEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='C'
			{
				$current = grammarAccess.getClassTypeAccess().getCEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getClassTypeAccess().getCEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='D'
			{
				$current = grammarAccess.getClassTypeAccess().getDEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getClassTypeAccess().getDEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='E'
			{
				$current = grammarAccess.getClassTypeAccess().getEEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getClassTypeAccess().getEEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='F'
			{
				$current = grammarAccess.getClassTypeAccess().getFEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getClassTypeAccess().getFEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='G'
			{
				$current = grammarAccess.getClassTypeAccess().getGEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getClassTypeAccess().getGEnumLiteralDeclaration_6());
			}
		)
		    |
		(
			enumLiteral_7='Q'
			{
				$current = grammarAccess.getClassTypeAccess().getQEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_7, grammarAccess.getClassTypeAccess().getQEnumLiteralDeclaration_7());
			}
		)
		    |
		(
			enumLiteral_8='R'
			{
				$current = grammarAccess.getClassTypeAccess().getREnumLiteralDeclaration_8().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_8, grammarAccess.getClassTypeAccess().getREnumLiteralDeclaration_8());
			}
		)
		    |
		(
			enumLiteral_9='W'
			{
				$current = grammarAccess.getClassTypeAccess().getWEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_9, grammarAccess.getClassTypeAccess().getWEnumLiteralDeclaration_9());
			}
		)
		    |
		(
			enumLiteral_10='P'
			{
				$current = grammarAccess.getClassTypeAccess().getPEnumLiteralDeclaration_10().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_10, grammarAccess.getClassTypeAccess().getPEnumLiteralDeclaration_10());
			}
		)
		    |
		(
			enumLiteral_11='GP'
			{
				$current = grammarAccess.getClassTypeAccess().getGPEnumLiteralDeclaration_11().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_11, grammarAccess.getClassTypeAccess().getGPEnumLiteralDeclaration_11());
			}
		)
		    |
		(
			enumLiteral_12='TMZ'
			{
				$current = grammarAccess.getClassTypeAccess().getTMZEnumLiteralDeclaration_12().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_12, grammarAccess.getClassTypeAccess().getTMZEnumLiteralDeclaration_12());
			}
		)
		    |
		(
			enumLiteral_13='CTR'
			{
				$current = grammarAccess.getClassTypeAccess().getCTREnumLiteralDeclaration_13().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_13, grammarAccess.getClassTypeAccess().getCTREnumLiteralDeclaration_13());
			}
		)
		    |
		(
			enumLiteral_14='Restricted'
			{
				$current = grammarAccess.getClassTypeAccess().getRestrictedEnumLiteralDeclaration_14().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_14, grammarAccess.getClassTypeAccess().getRestrictedEnumLiteralDeclaration_14());
			}
		)
		    |
		(
			enumLiteral_15='UKN'
			{
				$current = grammarAccess.getClassTypeAccess().getUKNEnumLiteralDeclaration_15().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_15, grammarAccess.getClassTypeAccess().getUKNEnumLiteralDeclaration_15());
			}
		)
	)
;

// Rule Units
ruleUnits returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='ft'
			{
				$current = grammarAccess.getUnitsAccess().getFeedEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getUnitsAccess().getFeedEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='m'
			{
				$current = grammarAccess.getUnitsAccess().getMeterEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getUnitsAccess().getMeterEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='MSL'
			{
				$current = grammarAccess.getUnitsAccess().getMslEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getUnitsAccess().getMslEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='m MSL'
			{
				$current = grammarAccess.getUnitsAccess().getM_mslEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getUnitsAccess().getM_mslEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='ft MSL'
			{
				$current = grammarAccess.getUnitsAccess().getFt_mslEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getUnitsAccess().getFt_mslEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='AGL'
			{
				$current = grammarAccess.getUnitsAccess().getAglEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getUnitsAccess().getAglEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='m AGL'
			{
				$current = grammarAccess.getUnitsAccess().getM_aglEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getUnitsAccess().getM_aglEnumLiteralDeclaration_6());
			}
		)
		    |
		(
			enumLiteral_7='ft AGL'
			{
				$current = grammarAccess.getUnitsAccess().getFt_AGLEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_7, grammarAccess.getUnitsAccess().getFt_AGLEnumLiteralDeclaration_7());
			}
		)
		    |
		(
			enumLiteral_8='AMSL'
			{
				$current = grammarAccess.getUnitsAccess().getAMSLEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_8, grammarAccess.getUnitsAccess().getAMSLEnumLiteralDeclaration_8());
			}
		)
		    |
		(
			enumLiteral_9='m AMSL'
			{
				$current = grammarAccess.getUnitsAccess().getM_AMSLEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_9, grammarAccess.getUnitsAccess().getM_AMSLEnumLiteralDeclaration_9());
			}
		)
	)
;

// Rule WE
ruleWE returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='W'
			{
				$current = grammarAccess.getWEAccess().getWEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getWEAccess().getWEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='E'
			{
				$current = grammarAccess.getWEAccess().getEEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getWEAccess().getEEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule NS
ruleNS returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='N'
			{
				$current = grammarAccess.getNSAccess().getNEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getNSAccess().getNEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='S'
			{
				$current = grammarAccess.getNSAccess().getSEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getNSAccess().getSEnumLiteralDeclaration_1());
			}
		)
	)
;

RULE_INT : ('-'|'+')? ('0'..'9')+;

RULE_REAL : RULE_INT+ '.' RULE_INT+;

RULE_SL_COMMENT : '*' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
