/*
 * generated by Xtext 2.35.0
 */
grammar InternalGraphqlXtext;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package es.unex.quercusseg.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package es.unex.quercusseg.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import es.unex.quercusseg.services.GraphqlXtextGrammarAccess;

}
@parser::members {
	private GraphqlXtextGrammarAccess grammarAccess;

	public void setGrammarAccess(GraphqlXtextGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleDocument
entryRuleDocument
:
{ before(grammarAccess.getDocumentRule()); }
	 ruleDocument
{ after(grammarAccess.getDocumentRule()); } 
	 EOF 
;

// Rule Document
ruleDocument 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDocumentAccess().getDefsAssignment()); }
		(rule__Document__DefsAssignment)*
		{ after(grammarAccess.getDocumentAccess().getDefsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDefinition
entryRuleDefinition
:
{ before(grammarAccess.getDefinitionRule()); }
	 ruleDefinition
{ after(grammarAccess.getDefinitionRule()); } 
	 EOF 
;

// Rule Definition
ruleDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDefinitionAccess().getAlternatives()); }
		(rule__Definition__Alternatives)
		{ after(grammarAccess.getDefinitionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperationDefinition
entryRuleOperationDefinition
:
{ before(grammarAccess.getOperationDefinitionRule()); }
	 ruleOperationDefinition
{ after(grammarAccess.getOperationDefinitionRule()); } 
	 EOF 
;

// Rule OperationDefinition
ruleOperationDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperationDefinitionAccess().getAlternatives()); }
		(rule__OperationDefinition__Alternatives)
		{ after(grammarAccess.getOperationDefinitionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperationType
entryRuleOperationType
:
{ before(grammarAccess.getOperationTypeRule()); }
	 ruleOperationType
{ after(grammarAccess.getOperationTypeRule()); } 
	 EOF 
;

// Rule OperationType
ruleOperationType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperationTypeAccess().getAlternatives()); }
		(rule__OperationType__Alternatives)
		{ after(grammarAccess.getOperationTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSelectionSet
entryRuleSelectionSet
:
{ before(grammarAccess.getSelectionSetRule()); }
	 ruleSelectionSet
{ after(grammarAccess.getSelectionSetRule()); } 
	 EOF 
;

// Rule SelectionSet
ruleSelectionSet 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSelectionSetAccess().getGroup()); }
		(rule__SelectionSet__Group__0)
		{ after(grammarAccess.getSelectionSetAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSelection
entryRuleSelection
:
{ before(grammarAccess.getSelectionRule()); }
	 ruleSelection
{ after(grammarAccess.getSelectionRule()); } 
	 EOF 
;

// Rule Selection
ruleSelection 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSelectionAccess().getAlternatives()); }
		(rule__Selection__Alternatives)
		{ after(grammarAccess.getSelectionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleField
entryRuleField
:
{ before(grammarAccess.getFieldRule()); }
	 ruleField
{ after(grammarAccess.getFieldRule()); } 
	 EOF 
;

// Rule Field
ruleField 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFieldAccess().getGroup()); }
		(rule__Field__Group__0)
		{ after(grammarAccess.getFieldAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAlias
entryRuleAlias
:
{ before(grammarAccess.getAliasRule()); }
	 ruleAlias
{ after(grammarAccess.getAliasRule()); } 
	 EOF 
;

// Rule Alias
ruleAlias 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAliasAccess().getGroup()); }
		(rule__Alias__Group__0)
		{ after(grammarAccess.getAliasAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArguments
entryRuleArguments
:
{ before(grammarAccess.getArgumentsRule()); }
	 ruleArguments
{ after(grammarAccess.getArgumentsRule()); } 
	 EOF 
;

// Rule Arguments
ruleArguments 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArgumentsAccess().getGroup()); }
		(rule__Arguments__Group__0)
		{ after(grammarAccess.getArgumentsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArgument
entryRuleArgument
:
{ before(grammarAccess.getArgumentRule()); }
	 ruleArgument
{ after(grammarAccess.getArgumentRule()); } 
	 EOF 
;

// Rule Argument
ruleArgument 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArgumentAccess().getGroup()); }
		(rule__Argument__Group__0)
		{ after(grammarAccess.getArgumentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFragmentSpread
entryRuleFragmentSpread
:
{ before(grammarAccess.getFragmentSpreadRule()); }
	 ruleFragmentSpread
{ after(grammarAccess.getFragmentSpreadRule()); } 
	 EOF 
;

// Rule FragmentSpread
ruleFragmentSpread 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFragmentSpreadAccess().getGroup()); }
		(rule__FragmentSpread__Group__0)
		{ after(grammarAccess.getFragmentSpreadAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInlineFragment
entryRuleInlineFragment
:
{ before(grammarAccess.getInlineFragmentRule()); }
	 ruleInlineFragment
{ after(grammarAccess.getInlineFragmentRule()); } 
	 EOF 
;

// Rule InlineFragment
ruleInlineFragment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInlineFragmentAccess().getGroup()); }
		(rule__InlineFragment__Group__0)
		{ after(grammarAccess.getInlineFragmentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFragmentDefinition
entryRuleFragmentDefinition
:
{ before(grammarAccess.getFragmentDefinitionRule()); }
	 ruleFragmentDefinition
{ after(grammarAccess.getFragmentDefinitionRule()); } 
	 EOF 
;

// Rule FragmentDefinition
ruleFragmentDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFragmentDefinitionAccess().getGroup()); }
		(rule__FragmentDefinition__Group__0)
		{ after(grammarAccess.getFragmentDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFragmentName
entryRuleFragmentName
:
{ before(grammarAccess.getFragmentNameRule()); }
	 ruleFragmentName
{ after(grammarAccess.getFragmentNameRule()); } 
	 EOF 
;

// Rule FragmentName
ruleFragmentName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFragmentNameAccess().getNAMETerminalRuleCall()); }
		RULE_NAME
		{ after(grammarAccess.getFragmentNameAccess().getNAMETerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeCondition
entryRuleTypeCondition
:
{ before(grammarAccess.getTypeConditionRule()); }
	 ruleTypeCondition
{ after(grammarAccess.getTypeConditionRule()); } 
	 EOF 
;

// Rule TypeCondition
ruleTypeCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeConditionAccess().getGroup()); }
		(rule__TypeCondition__Group__0)
		{ after(grammarAccess.getTypeConditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValue
entryRuleValue
:
{ before(grammarAccess.getValueRule()); }
	 ruleValue
{ after(grammarAccess.getValueRule()); } 
	 EOF 
;

// Rule Value
ruleValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValueAccess().getAlternatives()); }
		(rule__Value__Alternatives)
		{ after(grammarAccess.getValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSingleValue
entryRuleSingleValue
:
{ before(grammarAccess.getSingleValueRule()); }
	 ruleSingleValue
{ after(grammarAccess.getSingleValueRule()); } 
	 EOF 
;

// Rule SingleValue
ruleSingleValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSingleValueAccess().getAlternatives()); }
		(rule__SingleValue__Alternatives)
		{ after(grammarAccess.getSingleValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComplexValue
entryRuleComplexValue
:
{ before(grammarAccess.getComplexValueRule()); }
	 ruleComplexValue
{ after(grammarAccess.getComplexValueRule()); } 
	 EOF 
;

// Rule ComplexValue
ruleComplexValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComplexValueAccess().getAlternatives()); }
		(rule__ComplexValue__Alternatives)
		{ after(grammarAccess.getComplexValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnumValue
entryRuleEnumValue
:
{ before(grammarAccess.getEnumValueRule()); }
	 ruleEnumValue
{ after(grammarAccess.getEnumValueRule()); } 
	 EOF 
;

// Rule EnumValue
ruleEnumValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnumValueAccess().getNAMETerminalRuleCall()); }
		RULE_NAME
		{ after(grammarAccess.getEnumValueAccess().getNAMETerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleListValue
entryRuleListValue
:
{ before(grammarAccess.getListValueRule()); }
	 ruleListValue
{ after(grammarAccess.getListValueRule()); } 
	 EOF 
;

// Rule ListValue
ruleListValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getListValueAccess().getGroup()); }
		(rule__ListValue__Group__0)
		{ after(grammarAccess.getListValueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleObjectValue
entryRuleObjectValue
:
{ before(grammarAccess.getObjectValueRule()); }
	 ruleObjectValue
{ after(grammarAccess.getObjectValueRule()); } 
	 EOF 
;

// Rule ObjectValue
ruleObjectValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getObjectValueAccess().getGroup()); }
		(rule__ObjectValue__Group__0)
		{ after(grammarAccess.getObjectValueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleObjectField
entryRuleObjectField
:
{ before(grammarAccess.getObjectFieldRule()); }
	 ruleObjectField
{ after(grammarAccess.getObjectFieldRule()); } 
	 EOF 
;

// Rule ObjectField
ruleObjectField 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getObjectFieldAccess().getGroup()); }
		(rule__ObjectField__Group__0)
		{ after(grammarAccess.getObjectFieldAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableDefinition
entryRuleVariableDefinition
:
{ before(grammarAccess.getVariableDefinitionRule()); }
	 ruleVariableDefinition
{ after(grammarAccess.getVariableDefinitionRule()); } 
	 EOF 
;

// Rule VariableDefinition
ruleVariableDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableDefinitionAccess().getGroup()); }
		(rule__VariableDefinition__Group__0)
		{ after(grammarAccess.getVariableDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariable
entryRuleVariable
:
{ before(grammarAccess.getVariableRule()); }
	 ruleVariable
{ after(grammarAccess.getVariableRule()); } 
	 EOF 
;

// Rule Variable
ruleVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableAccess().getGroup()); }
		(rule__Variable__Group__0)
		{ after(grammarAccess.getVariableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDefaultValue
entryRuleDefaultValue
:
{ before(grammarAccess.getDefaultValueRule()); }
	 ruleDefaultValue
{ after(grammarAccess.getDefaultValueRule()); } 
	 EOF 
;

// Rule DefaultValue
ruleDefaultValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDefaultValueAccess().getGroup()); }
		(rule__DefaultValue__Group__0)
		{ after(grammarAccess.getDefaultValueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleType
entryRuleType
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAccess().getAlternatives()); }
		(rule__Type__Alternatives)
		{ after(grammarAccess.getTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNamedType
entryRuleNamedType
:
{ before(grammarAccess.getNamedTypeRule()); }
	 ruleNamedType
{ after(grammarAccess.getNamedTypeRule()); } 
	 EOF 
;

// Rule NamedType
ruleNamedType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNamedTypeAccess().getNAMETerminalRuleCall()); }
		RULE_NAME
		{ after(grammarAccess.getNamedTypeAccess().getNAMETerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleListType
entryRuleListType
:
{ before(grammarAccess.getListTypeRule()); }
	 ruleListType
{ after(grammarAccess.getListTypeRule()); } 
	 EOF 
;

// Rule ListType
ruleListType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getListTypeAccess().getGroup()); }
		(rule__ListType__Group__0)
		{ after(grammarAccess.getListTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDirective
entryRuleDirective
:
{ before(grammarAccess.getDirectiveRule()); }
	 ruleDirective
{ after(grammarAccess.getDirectiveRule()); } 
	 EOF 
;

// Rule Directive
ruleDirective 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDirectiveAccess().getGroup()); }
		(rule__Directive__Group__0)
		{ after(grammarAccess.getDirectiveAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIntValue
entryRuleIntValue
:
{ before(grammarAccess.getIntValueRule()); }
	 ruleIntValue
{ after(grammarAccess.getIntValueRule()); } 
	 EOF 
;

// Rule IntValue
ruleIntValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIntValueAccess().getDIGITTerminalRuleCall()); }
		RULE_DIGIT
		{ after(grammarAccess.getIntValueAccess().getDIGITTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStringValue
entryRuleStringValue
:
{ before(grammarAccess.getStringValueRule()); }
	 ruleStringValue
{ after(grammarAccess.getStringValueRule()); } 
	 EOF 
;

// Rule StringValue
ruleStringValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStringValueAccess().getSTRINGTerminalRuleCall()); }
		RULE_STRING
		{ after(grammarAccess.getStringValueAccess().getSTRINGTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionAccess().getOperationDefinitionParserRuleCall_0()); }
		ruleOperationDefinition
		{ after(grammarAccess.getDefinitionAccess().getOperationDefinitionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getDefinitionAccess().getFragmentDefinitionParserRuleCall_1()); }
		ruleFragmentDefinition
		{ after(grammarAccess.getDefinitionAccess().getFragmentDefinitionParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinition__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationDefinitionAccess().getSelectionAssignment_0()); }
		(rule__OperationDefinition__SelectionAssignment_0)
		{ after(grammarAccess.getOperationDefinitionAccess().getSelectionAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getOperationDefinitionAccess().getGroup_1()); }
		(rule__OperationDefinition__Group_1__0)
		{ after(grammarAccess.getOperationDefinitionAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationTypeAccess().getQueryKeyword_0()); }
		'query'
		{ after(grammarAccess.getOperationTypeAccess().getQueryKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getOperationTypeAccess().getMutationKeyword_1()); }
		'mutation'
		{ after(grammarAccess.getOperationTypeAccess().getMutationKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectionAccess().getFieldParserRuleCall_0()); }
		ruleField
		{ after(grammarAccess.getSelectionAccess().getFieldParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getSelectionAccess().getFragmentSpreadParserRuleCall_1()); }
		ruleFragmentSpread
		{ after(grammarAccess.getSelectionAccess().getFragmentSpreadParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getSelectionAccess().getInlineFragmentParserRuleCall_2()); }
		ruleInlineFragment
		{ after(grammarAccess.getSelectionAccess().getInlineFragmentParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getSingleValueParserRuleCall_0()); }
		ruleSingleValue
		{ after(grammarAccess.getValueAccess().getSingleValueParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getComplexValueParserRuleCall_1()); }
		ruleComplexValue
		{ after(grammarAccess.getValueAccess().getComplexValueParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleValue__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSingleValueAccess().getValueAssignment_0()); }
		(rule__SingleValue__ValueAssignment_0)
		{ after(grammarAccess.getSingleValueAccess().getValueAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getSingleValueAccess().getValueAssignment_1()); }
		(rule__SingleValue__ValueAssignment_1)
		{ after(grammarAccess.getSingleValueAccess().getValueAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getSingleValueAccess().getValueAssignment_2()); }
		(rule__SingleValue__ValueAssignment_2)
		{ after(grammarAccess.getSingleValueAccess().getValueAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getSingleValueAccess().getValueAssignment_3()); }
		(rule__SingleValue__ValueAssignment_3)
		{ after(grammarAccess.getSingleValueAccess().getValueAssignment_3()); }
	)
	|
	(
		{ before(grammarAccess.getSingleValueAccess().getValueAssignment_4()); }
		(rule__SingleValue__ValueAssignment_4)
		{ after(grammarAccess.getSingleValueAccess().getValueAssignment_4()); }
	)
	|
	(
		{ before(grammarAccess.getSingleValueAccess().getValueAssignment_5()); }
		(rule__SingleValue__ValueAssignment_5)
		{ after(grammarAccess.getSingleValueAccess().getValueAssignment_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexValue__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComplexValueAccess().getValueAssignment_0()); }
		(rule__ComplexValue__ValueAssignment_0)
		{ after(grammarAccess.getComplexValueAccess().getValueAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getComplexValueAccess().getValueAssignment_1()); }
		(rule__ComplexValue__ValueAssignment_1)
		{ after(grammarAccess.getComplexValueAccess().getValueAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getGroup_0()); }
		(rule__Type__Group_0__0)
		{ after(grammarAccess.getTypeAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getGroup_1()); }
		(rule__Type__Group_1__0)
		{ after(grammarAccess.getTypeAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinition__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationDefinition__Group_1__0__Impl
	rule__OperationDefinition__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinition__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationDefinitionAccess().getOpTypeAssignment_1_0()); }
	(rule__OperationDefinition__OpTypeAssignment_1_0)
	{ after(grammarAccess.getOperationDefinitionAccess().getOpTypeAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinition__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationDefinition__Group_1__1__Impl
	rule__OperationDefinition__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinition__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationDefinitionAccess().getNameAssignment_1_1()); }
	(rule__OperationDefinition__NameAssignment_1_1)?
	{ after(grammarAccess.getOperationDefinitionAccess().getNameAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinition__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationDefinition__Group_1__2__Impl
	rule__OperationDefinition__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinition__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationDefinitionAccess().getGroup_1_2()); }
	(rule__OperationDefinition__Group_1_2__0)?
	{ after(grammarAccess.getOperationDefinitionAccess().getGroup_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinition__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationDefinition__Group_1__3__Impl
	rule__OperationDefinition__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinition__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationDefinitionAccess().getDirectivesAssignment_1_3()); }
	(rule__OperationDefinition__DirectivesAssignment_1_3)*
	{ after(grammarAccess.getOperationDefinitionAccess().getDirectivesAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinition__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationDefinition__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinition__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationDefinitionAccess().getSelectionSetAssignment_1_4()); }
	(rule__OperationDefinition__SelectionSetAssignment_1_4)
	{ after(grammarAccess.getOperationDefinitionAccess().getSelectionSetAssignment_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OperationDefinition__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationDefinition__Group_1_2__0__Impl
	rule__OperationDefinition__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinition__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationDefinitionAccess().getLeftParenthesisKeyword_1_2_0()); }
	'('
	{ after(grammarAccess.getOperationDefinitionAccess().getLeftParenthesisKeyword_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinition__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationDefinition__Group_1_2__1__Impl
	rule__OperationDefinition__Group_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinition__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getOperationDefinitionAccess().getVarDefinitionsAssignment_1_2_1()); }
		(rule__OperationDefinition__VarDefinitionsAssignment_1_2_1)
		{ after(grammarAccess.getOperationDefinitionAccess().getVarDefinitionsAssignment_1_2_1()); }
	)
	(
		{ before(grammarAccess.getOperationDefinitionAccess().getVarDefinitionsAssignment_1_2_1()); }
		(rule__OperationDefinition__VarDefinitionsAssignment_1_2_1)*
		{ after(grammarAccess.getOperationDefinitionAccess().getVarDefinitionsAssignment_1_2_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinition__Group_1_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationDefinition__Group_1_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinition__Group_1_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationDefinitionAccess().getRightParenthesisKeyword_1_2_2()); }
	')'
	{ after(grammarAccess.getOperationDefinitionAccess().getRightParenthesisKeyword_1_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SelectionSet__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectionSet__Group__0__Impl
	rule__SelectionSet__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectionSet__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectionSetAccess().getSelectionSetAction_0()); }
	()
	{ after(grammarAccess.getSelectionSetAccess().getSelectionSetAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectionSet__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectionSet__Group__1__Impl
	rule__SelectionSet__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectionSet__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectionSetAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getSelectionSetAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectionSet__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectionSet__Group__2__Impl
	rule__SelectionSet__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectionSet__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getSelectionSetAccess().getSelectionsAssignment_2()); }
		(rule__SelectionSet__SelectionsAssignment_2)
		{ after(grammarAccess.getSelectionSetAccess().getSelectionsAssignment_2()); }
	)
	(
		{ before(grammarAccess.getSelectionSetAccess().getSelectionsAssignment_2()); }
		(rule__SelectionSet__SelectionsAssignment_2)*
		{ after(grammarAccess.getSelectionSetAccess().getSelectionsAssignment_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectionSet__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectionSet__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectionSet__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectionSetAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getSelectionSetAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Field__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group__0__Impl
	rule__Field__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getAliasAssignment_0()); }
	(rule__Field__AliasAssignment_0)?
	{ after(grammarAccess.getFieldAccess().getAliasAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group__1__Impl
	rule__Field__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getNameAssignment_1()); }
	(rule__Field__NameAssignment_1)
	{ after(grammarAccess.getFieldAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group__2__Impl
	rule__Field__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getArgsAssignment_2()); }
	(rule__Field__ArgsAssignment_2)?
	{ after(grammarAccess.getFieldAccess().getArgsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group__3__Impl
	rule__Field__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getDirectivesAssignment_3()); }
	(rule__Field__DirectivesAssignment_3)*
	{ after(grammarAccess.getFieldAccess().getDirectivesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccess().getSelectionSetAssignment_4()); }
	(rule__Field__SelectionSetAssignment_4)?
	{ after(grammarAccess.getFieldAccess().getSelectionSetAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Alias__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Alias__Group__0__Impl
	rule__Alias__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Alias__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAliasAccess().getNameAssignment_0()); }
	(rule__Alias__NameAssignment_0)
	{ after(grammarAccess.getAliasAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Alias__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Alias__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Alias__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAliasAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getAliasAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Arguments__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arguments__Group__0__Impl
	rule__Arguments__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentsAccess().getArgumentsAction_0()); }
	()
	{ after(grammarAccess.getArgumentsAccess().getArgumentsAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arguments__Group__1__Impl
	rule__Arguments__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentsAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getArgumentsAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arguments__Group__2__Impl
	rule__Arguments__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentsAccess().getArgsAssignment_2()); }
	(rule__Arguments__ArgsAssignment_2)*
	{ after(grammarAccess.getArgumentsAccess().getArgsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arguments__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentsAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getArgumentsAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Argument__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Argument__Group__0__Impl
	rule__Argument__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentAccess().getNameAssignment_0()); }
	(rule__Argument__NameAssignment_0)
	{ after(grammarAccess.getArgumentAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Argument__Group__1__Impl
	rule__Argument__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getArgumentAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Argument__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentAccess().getValueAssignment_2()); }
	(rule__Argument__ValueAssignment_2)
	{ after(grammarAccess.getArgumentAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FragmentSpread__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FragmentSpread__Group__0__Impl
	rule__FragmentSpread__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FragmentSpread__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFragmentSpreadAccess().getFullStopFullStopFullStopKeyword_0()); }
	'...'
	{ after(grammarAccess.getFragmentSpreadAccess().getFullStopFullStopFullStopKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FragmentSpread__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FragmentSpread__Group__1__Impl
	rule__FragmentSpread__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FragmentSpread__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFragmentSpreadAccess().getFragNameAssignment_1()); }
	(rule__FragmentSpread__FragNameAssignment_1)
	{ after(grammarAccess.getFragmentSpreadAccess().getFragNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FragmentSpread__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FragmentSpread__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FragmentSpread__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFragmentSpreadAccess().getDirectivesAssignment_2()); }
	(rule__FragmentSpread__DirectivesAssignment_2)*
	{ after(grammarAccess.getFragmentSpreadAccess().getDirectivesAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InlineFragment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InlineFragment__Group__0__Impl
	rule__InlineFragment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InlineFragment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInlineFragmentAccess().getInlineFragmentAction_0()); }
	()
	{ after(grammarAccess.getInlineFragmentAccess().getInlineFragmentAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InlineFragment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InlineFragment__Group__1__Impl
	rule__InlineFragment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InlineFragment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInlineFragmentAccess().getFullStopFullStopFullStopKeyword_1()); }
	'...'
	{ after(grammarAccess.getInlineFragmentAccess().getFullStopFullStopFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InlineFragment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InlineFragment__Group__2__Impl
	rule__InlineFragment__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InlineFragment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInlineFragmentAccess().getTypeConditionAssignment_2()); }
	(rule__InlineFragment__TypeConditionAssignment_2)?
	{ after(grammarAccess.getInlineFragmentAccess().getTypeConditionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InlineFragment__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InlineFragment__Group__3__Impl
	rule__InlineFragment__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InlineFragment__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInlineFragmentAccess().getDirectivesAssignment_3()); }
	(rule__InlineFragment__DirectivesAssignment_3)*
	{ after(grammarAccess.getInlineFragmentAccess().getDirectivesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InlineFragment__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InlineFragment__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InlineFragment__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInlineFragmentAccess().getSelectionSetAssignment_4()); }
	(rule__InlineFragment__SelectionSetAssignment_4)
	{ after(grammarAccess.getInlineFragmentAccess().getSelectionSetAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FragmentDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FragmentDefinition__Group__0__Impl
	rule__FragmentDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FragmentDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFragmentDefinitionAccess().getFragmentKeyword_0()); }
	'fragment'
	{ after(grammarAccess.getFragmentDefinitionAccess().getFragmentKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FragmentDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FragmentDefinition__Group__1__Impl
	rule__FragmentDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FragmentDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFragmentDefinitionAccess().getFragNameAssignment_1()); }
	(rule__FragmentDefinition__FragNameAssignment_1)
	{ after(grammarAccess.getFragmentDefinitionAccess().getFragNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FragmentDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FragmentDefinition__Group__2__Impl
	rule__FragmentDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FragmentDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFragmentDefinitionAccess().getTypeConditionAssignment_2()); }
	(rule__FragmentDefinition__TypeConditionAssignment_2)?
	{ after(grammarAccess.getFragmentDefinitionAccess().getTypeConditionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FragmentDefinition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FragmentDefinition__Group__3__Impl
	rule__FragmentDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FragmentDefinition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFragmentDefinitionAccess().getDirectivesAssignment_3()); }
	(rule__FragmentDefinition__DirectivesAssignment_3)*
	{ after(grammarAccess.getFragmentDefinitionAccess().getDirectivesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FragmentDefinition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FragmentDefinition__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FragmentDefinition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFragmentDefinitionAccess().getSelectionSetAssignment_4()); }
	(rule__FragmentDefinition__SelectionSetAssignment_4)
	{ after(grammarAccess.getFragmentDefinitionAccess().getSelectionSetAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeCondition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeCondition__Group__0__Impl
	rule__TypeCondition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeCondition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeConditionAccess().getOnKeyword_0()); }
	'on'
	{ after(grammarAccess.getTypeConditionAccess().getOnKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeCondition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeCondition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeCondition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeConditionAccess().getNamedTypeParserRuleCall_1()); }
	ruleNamedType
	{ after(grammarAccess.getTypeConditionAccess().getNamedTypeParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ListValue__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListValue__Group__0__Impl
	rule__ListValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListValue__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListValueAccess().getListValueAction_0()); }
	()
	{ after(grammarAccess.getListValueAccess().getListValueAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListValue__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListValue__Group__1__Impl
	rule__ListValue__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ListValue__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListValueAccess().getLeftSquareBracketKeyword_1()); }
	'['
	{ after(grammarAccess.getListValueAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListValue__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListValue__Group__2__Impl
	rule__ListValue__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ListValue__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListValueAccess().getValuesAssignment_2()); }
	(rule__ListValue__ValuesAssignment_2)*
	{ after(grammarAccess.getListValueAccess().getValuesAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListValue__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListValue__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListValue__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListValueAccess().getRightSquareBracketKeyword_3()); }
	']'
	{ after(grammarAccess.getListValueAccess().getRightSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectValue__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectValue__Group__0__Impl
	rule__ObjectValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectValue__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectValueAccess().getObjectValueAction_0()); }
	()
	{ after(grammarAccess.getObjectValueAccess().getObjectValueAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectValue__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectValue__Group__1__Impl
	rule__ObjectValue__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectValue__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectValueAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getObjectValueAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectValue__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectValue__Group__2__Impl
	rule__ObjectValue__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectValue__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectValueAccess().getFieldsAssignment_2()); }
	(rule__ObjectValue__FieldsAssignment_2)*
	{ after(grammarAccess.getObjectValueAccess().getFieldsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectValue__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectValue__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectValue__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectValueAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getObjectValueAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectField__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectField__Group__0__Impl
	rule__ObjectField__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectField__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectFieldAccess().getNameAssignment_0()); }
	(rule__ObjectField__NameAssignment_0)
	{ after(grammarAccess.getObjectFieldAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectField__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectField__Group__1__Impl
	rule__ObjectField__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectField__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectFieldAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getObjectFieldAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectField__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectField__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectField__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectFieldAccess().getValueAssignment_2()); }
	(rule__ObjectField__ValueAssignment_2)
	{ after(grammarAccess.getObjectFieldAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDefinition__Group__0__Impl
	rule__VariableDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDefinitionAccess().getDollarSignKeyword_0()); }
	'$'
	{ after(grammarAccess.getVariableDefinitionAccess().getDollarSignKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDefinition__Group__1__Impl
	rule__VariableDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDefinitionAccess().getNameAssignment_1()); }
	(rule__VariableDefinition__NameAssignment_1)
	{ after(grammarAccess.getVariableDefinitionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDefinition__Group__2__Impl
	rule__VariableDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDefinitionAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getVariableDefinitionAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDefinition__Group__3__Impl
	rule__VariableDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDefinitionAccess().getTypeAssignment_3()); }
	(rule__VariableDefinition__TypeAssignment_3)
	{ after(grammarAccess.getVariableDefinitionAccess().getTypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDefinition__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDefinitionAccess().getDefValueAssignment_4()); }
	(rule__VariableDefinition__DefValueAssignment_4)?
	{ after(grammarAccess.getVariableDefinitionAccess().getDefValueAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__0__Impl
	rule__Variable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getDollarSignKeyword_0()); }
	'$'
	{ after(grammarAccess.getVariableAccess().getDollarSignKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getNAMETerminalRuleCall_1()); }
	RULE_NAME
	{ after(grammarAccess.getVariableAccess().getNAMETerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DefaultValue__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefaultValue__Group__0__Impl
	rule__DefaultValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultValue__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefaultValueAccess().getEqualsSignKeyword_0()); }
	'='
	{ after(grammarAccess.getDefaultValueAccess().getEqualsSignKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultValue__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefaultValue__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultValue__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefaultValueAccess().getValueParserRuleCall_1()); }
	ruleValue
	{ after(grammarAccess.getDefaultValueAccess().getValueParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_0__0__Impl
	rule__Type__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getNameAssignment_0_0()); }
	(rule__Type__NameAssignment_0_0)
	{ after(grammarAccess.getTypeAccess().getNameAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getNotNullAssignment_0_1()); }
	(rule__Type__NotNullAssignment_0_1)?
	{ after(grammarAccess.getTypeAccess().getNotNullAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_1__0__Impl
	rule__Type__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getListAssignment_1_0()); }
	(rule__Type__ListAssignment_1_0)
	{ after(grammarAccess.getTypeAccess().getListAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getNotNullAssignment_1_1()); }
	(rule__Type__NotNullAssignment_1_1)?
	{ after(grammarAccess.getTypeAccess().getNotNullAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ListType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListType__Group__0__Impl
	rule__ListType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListTypeAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getListTypeAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListType__Group__1__Impl
	rule__ListType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ListType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListTypeAccess().getTypeAssignment_1()); }
	(rule__ListType__TypeAssignment_1)
	{ after(grammarAccess.getListTypeAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListType__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListTypeAccess().getRightSquareBracketKeyword_2()); }
	']'
	{ after(grammarAccess.getListTypeAccess().getRightSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Directive__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Directive__Group__0__Impl
	rule__Directive__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Directive__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectiveAccess().getCommercialAtKeyword_0()); }
	'@'
	{ after(grammarAccess.getDirectiveAccess().getCommercialAtKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Directive__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Directive__Group__1__Impl
	rule__Directive__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Directive__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectiveAccess().getNameAssignment_1()); }
	(rule__Directive__NameAssignment_1)
	{ after(grammarAccess.getDirectiveAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Directive__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Directive__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Directive__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDirectiveAccess().getArgsAssignment_2()); }
	(rule__Directive__ArgsAssignment_2)*
	{ after(grammarAccess.getDirectiveAccess().getArgsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Document__DefsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDocumentAccess().getDefsDefinitionParserRuleCall_0()); }
		ruleDefinition
		{ after(grammarAccess.getDocumentAccess().getDefsDefinitionParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinition__SelectionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationDefinitionAccess().getSelectionSelectionSetParserRuleCall_0_0()); }
		ruleSelectionSet
		{ after(grammarAccess.getOperationDefinitionAccess().getSelectionSelectionSetParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinition__OpTypeAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationDefinitionAccess().getOpTypeOperationTypeParserRuleCall_1_0_0()); }
		ruleOperationType
		{ after(grammarAccess.getOperationDefinitionAccess().getOpTypeOperationTypeParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinition__NameAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationDefinitionAccess().getNameNAMETerminalRuleCall_1_1_0()); }
		RULE_NAME
		{ after(grammarAccess.getOperationDefinitionAccess().getNameNAMETerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinition__VarDefinitionsAssignment_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationDefinitionAccess().getVarDefinitionsVariableDefinitionParserRuleCall_1_2_1_0()); }
		ruleVariableDefinition
		{ after(grammarAccess.getOperationDefinitionAccess().getVarDefinitionsVariableDefinitionParserRuleCall_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinition__DirectivesAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationDefinitionAccess().getDirectivesDirectiveParserRuleCall_1_3_0()); }
		ruleDirective
		{ after(grammarAccess.getOperationDefinitionAccess().getDirectivesDirectiveParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinition__SelectionSetAssignment_1_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationDefinitionAccess().getSelectionSetSelectionSetParserRuleCall_1_4_0()); }
		ruleSelectionSet
		{ after(grammarAccess.getOperationDefinitionAccess().getSelectionSetSelectionSetParserRuleCall_1_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectionSet__SelectionsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectionSetAccess().getSelectionsSelectionParserRuleCall_2_0()); }
		ruleSelection
		{ after(grammarAccess.getSelectionSetAccess().getSelectionsSelectionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__AliasAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldAccess().getAliasAliasParserRuleCall_0_0()); }
		ruleAlias
		{ after(grammarAccess.getFieldAccess().getAliasAliasParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldAccess().getNameNAMETerminalRuleCall_1_0()); }
		RULE_NAME
		{ after(grammarAccess.getFieldAccess().getNameNAMETerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__ArgsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldAccess().getArgsArgumentsParserRuleCall_2_0()); }
		ruleArguments
		{ after(grammarAccess.getFieldAccess().getArgsArgumentsParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__DirectivesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldAccess().getDirectivesDirectiveParserRuleCall_3_0()); }
		ruleDirective
		{ after(grammarAccess.getFieldAccess().getDirectivesDirectiveParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__SelectionSetAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldAccess().getSelectionSetSelectionSetParserRuleCall_4_0()); }
		ruleSelectionSet
		{ after(grammarAccess.getFieldAccess().getSelectionSetSelectionSetParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Alias__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAliasAccess().getNameNAMETerminalRuleCall_0_0()); }
		RULE_NAME
		{ after(grammarAccess.getAliasAccess().getNameNAMETerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__ArgsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentsAccess().getArgsArgumentParserRuleCall_2_0()); }
		ruleArgument
		{ after(grammarAccess.getArgumentsAccess().getArgsArgumentParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentAccess().getNameNAMETerminalRuleCall_0_0()); }
		RULE_NAME
		{ after(grammarAccess.getArgumentAccess().getNameNAMETerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentAccess().getValueValueParserRuleCall_2_0()); }
		ruleValue
		{ after(grammarAccess.getArgumentAccess().getValueValueParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FragmentSpread__FragNameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFragmentSpreadAccess().getFragNameFragmentNameParserRuleCall_1_0()); }
		ruleFragmentName
		{ after(grammarAccess.getFragmentSpreadAccess().getFragNameFragmentNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FragmentSpread__DirectivesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFragmentSpreadAccess().getDirectivesDirectiveParserRuleCall_2_0()); }
		ruleDirective
		{ after(grammarAccess.getFragmentSpreadAccess().getDirectivesDirectiveParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InlineFragment__TypeConditionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInlineFragmentAccess().getTypeConditionTypeConditionParserRuleCall_2_0()); }
		ruleTypeCondition
		{ after(grammarAccess.getInlineFragmentAccess().getTypeConditionTypeConditionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InlineFragment__DirectivesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInlineFragmentAccess().getDirectivesDirectiveParserRuleCall_3_0()); }
		ruleDirective
		{ after(grammarAccess.getInlineFragmentAccess().getDirectivesDirectiveParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InlineFragment__SelectionSetAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInlineFragmentAccess().getSelectionSetSelectionSetParserRuleCall_4_0()); }
		ruleSelectionSet
		{ after(grammarAccess.getInlineFragmentAccess().getSelectionSetSelectionSetParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FragmentDefinition__FragNameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFragmentDefinitionAccess().getFragNameFragmentNameParserRuleCall_1_0()); }
		ruleFragmentName
		{ after(grammarAccess.getFragmentDefinitionAccess().getFragNameFragmentNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FragmentDefinition__TypeConditionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFragmentDefinitionAccess().getTypeConditionTypeConditionParserRuleCall_2_0()); }
		ruleTypeCondition
		{ after(grammarAccess.getFragmentDefinitionAccess().getTypeConditionTypeConditionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FragmentDefinition__DirectivesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFragmentDefinitionAccess().getDirectivesDirectiveParserRuleCall_3_0()); }
		ruleDirective
		{ after(grammarAccess.getFragmentDefinitionAccess().getDirectivesDirectiveParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FragmentDefinition__SelectionSetAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFragmentDefinitionAccess().getSelectionSetSelectionSetParserRuleCall_4_0()); }
		ruleSelectionSet
		{ after(grammarAccess.getFragmentDefinitionAccess().getSelectionSetSelectionSetParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleValue__ValueAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSingleValueAccess().getValueVariableParserRuleCall_0_0()); }
		ruleVariable
		{ after(grammarAccess.getSingleValueAccess().getValueVariableParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleValue__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSingleValueAccess().getValueIntValueParserRuleCall_1_0()); }
		ruleIntValue
		{ after(grammarAccess.getSingleValueAccess().getValueIntValueParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleValue__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSingleValueAccess().getValueStringValueParserRuleCall_2_0()); }
		ruleStringValue
		{ after(grammarAccess.getSingleValueAccess().getValueStringValueParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleValue__ValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSingleValueAccess().getValueBOOLEANVALUETerminalRuleCall_3_0()); }
		RULE_BOOLEANVALUE
		{ after(grammarAccess.getSingleValueAccess().getValueBOOLEANVALUETerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleValue__ValueAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSingleValueAccess().getValueNULLVALUETerminalRuleCall_4_0()); }
		RULE_NULLVALUE
		{ after(grammarAccess.getSingleValueAccess().getValueNULLVALUETerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleValue__ValueAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSingleValueAccess().getValueEnumValueParserRuleCall_5_0()); }
		ruleEnumValue
		{ after(grammarAccess.getSingleValueAccess().getValueEnumValueParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexValue__ValueAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComplexValueAccess().getValueListValueParserRuleCall_0_0()); }
		ruleListValue
		{ after(grammarAccess.getComplexValueAccess().getValueListValueParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexValue__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComplexValueAccess().getValueObjectValueParserRuleCall_1_0()); }
		ruleObjectValue
		{ after(grammarAccess.getComplexValueAccess().getValueObjectValueParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListValue__ValuesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListValueAccess().getValuesValueParserRuleCall_2_0()); }
		ruleValue
		{ after(grammarAccess.getListValueAccess().getValuesValueParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectValue__FieldsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectValueAccess().getFieldsObjectFieldParserRuleCall_2_0()); }
		ruleObjectField
		{ after(grammarAccess.getObjectValueAccess().getFieldsObjectFieldParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectField__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectFieldAccess().getNameNAMETerminalRuleCall_0_0()); }
		RULE_NAME
		{ after(grammarAccess.getObjectFieldAccess().getNameNAMETerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectField__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectFieldAccess().getValueValueParserRuleCall_2_0()); }
		ruleValue
		{ after(grammarAccess.getObjectFieldAccess().getValueValueParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDefinitionAccess().getNameNAMETerminalRuleCall_1_0()); }
		RULE_NAME
		{ after(grammarAccess.getVariableDefinitionAccess().getNameNAMETerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__TypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDefinitionAccess().getTypeTypeParserRuleCall_3_0()); }
		ruleType
		{ after(grammarAccess.getVariableDefinitionAccess().getTypeTypeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__DefValueAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDefinitionAccess().getDefValueDefaultValueParserRuleCall_4_0()); }
		ruleDefaultValue
		{ after(grammarAccess.getVariableDefinitionAccess().getDefValueDefaultValueParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__NameAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getNameNamedTypeParserRuleCall_0_0_0()); }
		ruleNamedType
		{ after(grammarAccess.getTypeAccess().getNameNamedTypeParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__NotNullAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getNotNullExclamationMarkKeyword_0_1_0()); }
		(
			{ before(grammarAccess.getTypeAccess().getNotNullExclamationMarkKeyword_0_1_0()); }
			'!'
			{ after(grammarAccess.getTypeAccess().getNotNullExclamationMarkKeyword_0_1_0()); }
		)
		{ after(grammarAccess.getTypeAccess().getNotNullExclamationMarkKeyword_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__ListAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getListListTypeParserRuleCall_1_0_0()); }
		ruleListType
		{ after(grammarAccess.getTypeAccess().getListListTypeParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__NotNullAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getNotNullExclamationMarkKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getTypeAccess().getNotNullExclamationMarkKeyword_1_1_0()); }
			'!'
			{ after(grammarAccess.getTypeAccess().getNotNullExclamationMarkKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getTypeAccess().getNotNullExclamationMarkKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListType__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListTypeAccess().getTypeTypeParserRuleCall_1_0()); }
		ruleType
		{ after(grammarAccess.getListTypeAccess().getTypeTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Directive__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectiveAccess().getNameNAMETerminalRuleCall_1_0()); }
		RULE_NAME
		{ after(grammarAccess.getDirectiveAccess().getNameNAMETerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Directive__ArgsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectiveAccess().getArgsArgumentsParserRuleCall_2_0()); }
		ruleArguments
		{ after(grammarAccess.getDirectiveAccess().getArgsArgumentsParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_COMMA : ',';

RULE_COMMENT : '#' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_BOOLEANVALUE : ('true'|'false');

RULE_NULLVALUE : 'null';

RULE_DIGIT : '0'..'9';

RULE_INT : RULE_DIGIT+;

RULE_NAME : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
