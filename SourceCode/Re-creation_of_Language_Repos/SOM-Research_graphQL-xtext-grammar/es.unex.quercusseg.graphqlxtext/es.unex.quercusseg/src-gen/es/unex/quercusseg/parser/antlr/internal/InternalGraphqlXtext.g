/*
 * generated by Xtext 2.35.0
 */
grammar InternalGraphqlXtext;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package es.unex.quercusseg.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package es.unex.quercusseg.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import es.unex.quercusseg.services.GraphqlXtextGrammarAccess;

}

@parser::members {

 	private GraphqlXtextGrammarAccess grammarAccess;

    public InternalGraphqlXtextParser(TokenStream input, GraphqlXtextGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Document";
   	}

   	@Override
   	protected GraphqlXtextGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleDocument
entryRuleDocument returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDocumentRule()); }
	iv_ruleDocument=ruleDocument
	{ $current=$iv_ruleDocument.current; }
	EOF;

// Rule Document
ruleDocument returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getDocumentAccess().getDefsDefinitionParserRuleCall_0());
			}
			lv_defs_0_0=ruleDefinition
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getDocumentRule());
				}
				add(
					$current,
					"defs",
					lv_defs_0_0,
					"es.unex.quercusseg.GraphqlXtext.Definition");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleDefinition
entryRuleDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDefinitionRule()); }
	iv_ruleDefinition=ruleDefinition
	{ $current=$iv_ruleDefinition.current; }
	EOF;

// Rule Definition
ruleDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDefinitionAccess().getOperationDefinitionParserRuleCall_0());
		}
		this_OperationDefinition_0=ruleOperationDefinition
		{
			$current = $this_OperationDefinition_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDefinitionAccess().getFragmentDefinitionParserRuleCall_1());
		}
		this_FragmentDefinition_1=ruleFragmentDefinition
		{
			$current = $this_FragmentDefinition_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleOperationDefinition
entryRuleOperationDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperationDefinitionRule()); }
	iv_ruleOperationDefinition=ruleOperationDefinition
	{ $current=$iv_ruleOperationDefinition.current; }
	EOF;

// Rule OperationDefinition
ruleOperationDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getOperationDefinitionAccess().getSelectionSelectionSetParserRuleCall_0_0());
				}
				lv_selection_0_0=ruleSelectionSet
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperationDefinitionRule());
					}
					set(
						$current,
						"selection",
						lv_selection_0_0,
						"es.unex.quercusseg.GraphqlXtext.SelectionSet");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getOperationDefinitionAccess().getOpTypeOperationTypeParserRuleCall_1_0_0());
					}
					lv_opType_1_0=ruleOperationType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOperationDefinitionRule());
						}
						set(
							$current,
							"opType",
							lv_opType_1_0,
							"es.unex.quercusseg.GraphqlXtext.OperationType");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					lv_name_2_0=RULE_NAME
					{
						newLeafNode(lv_name_2_0, grammarAccess.getOperationDefinitionAccess().getNameNAMETerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOperationDefinitionRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_2_0,
							"es.unex.quercusseg.GraphqlXtext.NAME");
					}
				)
			)?
			(
				otherlv_3='('
				{
					newLeafNode(otherlv_3, grammarAccess.getOperationDefinitionAccess().getLeftParenthesisKeyword_1_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getOperationDefinitionAccess().getVarDefinitionsVariableDefinitionParserRuleCall_1_2_1_0());
						}
						lv_varDefinitions_4_0=ruleVariableDefinition
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getOperationDefinitionRule());
							}
							add(
								$current,
								"varDefinitions",
								lv_varDefinitions_4_0,
								"es.unex.quercusseg.GraphqlXtext.VariableDefinition");
							afterParserOrEnumRuleCall();
						}
					)
				)+
				otherlv_5=')'
				{
					newLeafNode(otherlv_5, grammarAccess.getOperationDefinitionAccess().getRightParenthesisKeyword_1_2_2());
				}
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getOperationDefinitionAccess().getDirectivesDirectiveParserRuleCall_1_3_0());
					}
					lv_directives_6_0=ruleDirective
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOperationDefinitionRule());
						}
						add(
							$current,
							"directives",
							lv_directives_6_0,
							"es.unex.quercusseg.GraphqlXtext.Directive");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			(
				(
					{
						newCompositeNode(grammarAccess.getOperationDefinitionAccess().getSelectionSetSelectionSetParserRuleCall_1_4_0());
					}
					lv_selectionSet_7_0=ruleSelectionSet
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOperationDefinitionRule());
						}
						set(
							$current,
							"selectionSet",
							lv_selectionSet_7_0,
							"es.unex.quercusseg.GraphqlXtext.SelectionSet");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleOperationType
entryRuleOperationType returns [String current=null]:
	{ newCompositeNode(grammarAccess.getOperationTypeRule()); }
	iv_ruleOperationType=ruleOperationType
	{ $current=$iv_ruleOperationType.current.getText(); }
	EOF;

// Rule OperationType
ruleOperationType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='query'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOperationTypeAccess().getQueryKeyword_0());
		}
		    |
		kw='mutation'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOperationTypeAccess().getMutationKeyword_1());
		}
	)
;

// Entry rule entryRuleSelectionSet
entryRuleSelectionSet returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSelectionSetRule()); }
	iv_ruleSelectionSet=ruleSelectionSet
	{ $current=$iv_ruleSelectionSet.current; }
	EOF;

// Rule SelectionSet
ruleSelectionSet returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSelectionSetAccess().getSelectionSetAction_0(),
					$current);
			}
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getSelectionSetAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSelectionSetAccess().getSelectionsSelectionParserRuleCall_2_0());
				}
				lv_selections_2_0=ruleSelection
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSelectionSetRule());
					}
					add(
						$current,
						"selections",
						lv_selections_2_0,
						"es.unex.quercusseg.GraphqlXtext.Selection");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getSelectionSetAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleSelection
entryRuleSelection returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSelectionRule()); }
	iv_ruleSelection=ruleSelection
	{ $current=$iv_ruleSelection.current; }
	EOF;

// Rule Selection
ruleSelection returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getSelectionAccess().getFieldParserRuleCall_0());
		}
		this_Field_0=ruleField
		{
			$current = $this_Field_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSelectionAccess().getFragmentSpreadParserRuleCall_1());
		}
		this_FragmentSpread_1=ruleFragmentSpread
		{
			$current = $this_FragmentSpread_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSelectionAccess().getInlineFragmentParserRuleCall_2());
		}
		this_InlineFragment_2=ruleInlineFragment
		{
			$current = $this_InlineFragment_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleField
entryRuleField returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFieldRule()); }
	iv_ruleField=ruleField
	{ $current=$iv_ruleField.current; }
	EOF;

// Rule Field
ruleField returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getFieldAccess().getAliasAliasParserRuleCall_0_0());
				}
				lv_alias_0_0=ruleAlias
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFieldRule());
					}
					set(
						$current,
						"alias",
						lv_alias_0_0,
						"es.unex.quercusseg.GraphqlXtext.Alias");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				lv_name_1_0=RULE_NAME
				{
					newLeafNode(lv_name_1_0, grammarAccess.getFieldAccess().getNameNAMETerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFieldRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"es.unex.quercusseg.GraphqlXtext.NAME");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFieldAccess().getArgsArgumentsParserRuleCall_2_0());
				}
				lv_args_2_0=ruleArguments
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFieldRule());
					}
					set(
						$current,
						"args",
						lv_args_2_0,
						"es.unex.quercusseg.GraphqlXtext.Arguments");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getFieldAccess().getDirectivesDirectiveParserRuleCall_3_0());
				}
				lv_directives_3_0=ruleDirective
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFieldRule());
					}
					add(
						$current,
						"directives",
						lv_directives_3_0,
						"es.unex.quercusseg.GraphqlXtext.Directive");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getFieldAccess().getSelectionSetSelectionSetParserRuleCall_4_0());
				}
				lv_selectionSet_4_0=ruleSelectionSet
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFieldRule());
					}
					set(
						$current,
						"selectionSet",
						lv_selectionSet_4_0,
						"es.unex.quercusseg.GraphqlXtext.SelectionSet");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleAlias
entryRuleAlias returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAliasRule()); }
	iv_ruleAlias=ruleAlias
	{ $current=$iv_ruleAlias.current; }
	EOF;

// Rule Alias
ruleAlias returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_NAME
				{
					newLeafNode(lv_name_0_0, grammarAccess.getAliasAccess().getNameNAMETerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAliasRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"es.unex.quercusseg.GraphqlXtext.NAME");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getAliasAccess().getColonKeyword_1());
		}
	)
;

// Entry rule entryRuleArguments
entryRuleArguments returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArgumentsRule()); }
	iv_ruleArguments=ruleArguments
	{ $current=$iv_ruleArguments.current; }
	EOF;

// Rule Arguments
ruleArguments returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getArgumentsAccess().getArgumentsAction_0(),
					$current);
			}
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getArgumentsAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getArgumentsAccess().getArgsArgumentParserRuleCall_2_0());
				}
				lv_args_2_0=ruleArgument
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArgumentsRule());
					}
					add(
						$current,
						"args",
						lv_args_2_0,
						"es.unex.quercusseg.GraphqlXtext.Argument");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getArgumentsAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleArgument
entryRuleArgument returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArgumentRule()); }
	iv_ruleArgument=ruleArgument
	{ $current=$iv_ruleArgument.current; }
	EOF;

// Rule Argument
ruleArgument returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_NAME
				{
					newLeafNode(lv_name_0_0, grammarAccess.getArgumentAccess().getNameNAMETerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getArgumentRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"es.unex.quercusseg.GraphqlXtext.NAME");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getArgumentAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getArgumentAccess().getValueValueParserRuleCall_2_0());
				}
				lv_value_2_0=ruleValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArgumentRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"es.unex.quercusseg.GraphqlXtext.Value");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFragmentSpread
entryRuleFragmentSpread returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFragmentSpreadRule()); }
	iv_ruleFragmentSpread=ruleFragmentSpread
	{ $current=$iv_ruleFragmentSpread.current; }
	EOF;

// Rule FragmentSpread
ruleFragmentSpread returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='...'
		{
			newLeafNode(otherlv_0, grammarAccess.getFragmentSpreadAccess().getFullStopFullStopFullStopKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFragmentSpreadAccess().getFragNameFragmentNameParserRuleCall_1_0());
				}
				lv_fragName_1_0=ruleFragmentName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFragmentSpreadRule());
					}
					set(
						$current,
						"fragName",
						lv_fragName_1_0,
						"es.unex.quercusseg.GraphqlXtext.FragmentName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFragmentSpreadAccess().getDirectivesDirectiveParserRuleCall_2_0());
				}
				lv_directives_2_0=ruleDirective
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFragmentSpreadRule());
					}
					add(
						$current,
						"directives",
						lv_directives_2_0,
						"es.unex.quercusseg.GraphqlXtext.Directive");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleInlineFragment
entryRuleInlineFragment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInlineFragmentRule()); }
	iv_ruleInlineFragment=ruleInlineFragment
	{ $current=$iv_ruleInlineFragment.current; }
	EOF;

// Rule InlineFragment
ruleInlineFragment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getInlineFragmentAccess().getInlineFragmentAction_0(),
					$current);
			}
		)
		otherlv_1='...'
		{
			newLeafNode(otherlv_1, grammarAccess.getInlineFragmentAccess().getFullStopFullStopFullStopKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInlineFragmentAccess().getTypeConditionTypeConditionParserRuleCall_2_0());
				}
				lv_typeCondition_2_0=ruleTypeCondition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInlineFragmentRule());
					}
					set(
						$current,
						"typeCondition",
						lv_typeCondition_2_0,
						"es.unex.quercusseg.GraphqlXtext.TypeCondition");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getInlineFragmentAccess().getDirectivesDirectiveParserRuleCall_3_0());
				}
				lv_directives_3_0=ruleDirective
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInlineFragmentRule());
					}
					add(
						$current,
						"directives",
						lv_directives_3_0,
						"es.unex.quercusseg.GraphqlXtext.Directive");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getInlineFragmentAccess().getSelectionSetSelectionSetParserRuleCall_4_0());
				}
				lv_selectionSet_4_0=ruleSelectionSet
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInlineFragmentRule());
					}
					set(
						$current,
						"selectionSet",
						lv_selectionSet_4_0,
						"es.unex.quercusseg.GraphqlXtext.SelectionSet");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFragmentDefinition
entryRuleFragmentDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFragmentDefinitionRule()); }
	iv_ruleFragmentDefinition=ruleFragmentDefinition
	{ $current=$iv_ruleFragmentDefinition.current; }
	EOF;

// Rule FragmentDefinition
ruleFragmentDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='fragment'
		{
			newLeafNode(otherlv_0, grammarAccess.getFragmentDefinitionAccess().getFragmentKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFragmentDefinitionAccess().getFragNameFragmentNameParserRuleCall_1_0());
				}
				lv_fragName_1_0=ruleFragmentName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFragmentDefinitionRule());
					}
					set(
						$current,
						"fragName",
						lv_fragName_1_0,
						"es.unex.quercusseg.GraphqlXtext.FragmentName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFragmentDefinitionAccess().getTypeConditionTypeConditionParserRuleCall_2_0());
				}
				lv_typeCondition_2_0=ruleTypeCondition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFragmentDefinitionRule());
					}
					set(
						$current,
						"typeCondition",
						lv_typeCondition_2_0,
						"es.unex.quercusseg.GraphqlXtext.TypeCondition");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getFragmentDefinitionAccess().getDirectivesDirectiveParserRuleCall_3_0());
				}
				lv_directives_3_0=ruleDirective
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFragmentDefinitionRule());
					}
					add(
						$current,
						"directives",
						lv_directives_3_0,
						"es.unex.quercusseg.GraphqlXtext.Directive");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getFragmentDefinitionAccess().getSelectionSetSelectionSetParserRuleCall_4_0());
				}
				lv_selectionSet_4_0=ruleSelectionSet
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFragmentDefinitionRule());
					}
					set(
						$current,
						"selectionSet",
						lv_selectionSet_4_0,
						"es.unex.quercusseg.GraphqlXtext.SelectionSet");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFragmentName
entryRuleFragmentName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getFragmentNameRule()); }
	iv_ruleFragmentName=ruleFragmentName
	{ $current=$iv_ruleFragmentName.current.getText(); }
	EOF;

// Rule FragmentName
ruleFragmentName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_NAME_0=RULE_NAME
	{
		$current.merge(this_NAME_0);
	}
	{
		newLeafNode(this_NAME_0, grammarAccess.getFragmentNameAccess().getNAMETerminalRuleCall());
	}
;

// Entry rule entryRuleTypeCondition
entryRuleTypeCondition returns [String current=null]:
	{ newCompositeNode(grammarAccess.getTypeConditionRule()); }
	iv_ruleTypeCondition=ruleTypeCondition
	{ $current=$iv_ruleTypeCondition.current.getText(); }
	EOF;

// Rule TypeCondition
ruleTypeCondition returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='on'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTypeConditionAccess().getOnKeyword_0());
		}
		{
			newCompositeNode(grammarAccess.getTypeConditionAccess().getNamedTypeParserRuleCall_1());
		}
		this_NamedType_1=ruleNamedType
		{
			$current.merge(this_NamedType_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleValue
entryRuleValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getValueRule()); }
	iv_ruleValue=ruleValue
	{ $current=$iv_ruleValue.current; }
	EOF;

// Rule Value
ruleValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getValueAccess().getSingleValueParserRuleCall_0());
		}
		this_SingleValue_0=ruleSingleValue
		{
			$current = $this_SingleValue_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getValueAccess().getComplexValueParserRuleCall_1());
		}
		this_ComplexValue_1=ruleComplexValue
		{
			$current = $this_ComplexValue_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSingleValue
entryRuleSingleValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSingleValueRule()); }
	iv_ruleSingleValue=ruleSingleValue
	{ $current=$iv_ruleSingleValue.current; }
	EOF;

// Rule SingleValue
ruleSingleValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSingleValueAccess().getValueVariableParserRuleCall_0_0());
				}
				lv_value_0_0=ruleVariable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSingleValueRule());
					}
					set(
						$current,
						"value",
						lv_value_0_0,
						"es.unex.quercusseg.GraphqlXtext.Variable");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getSingleValueAccess().getValueIntValueParserRuleCall_1_0());
				}
				lv_value_1_0=ruleIntValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSingleValueRule());
					}
					set(
						$current,
						"value",
						lv_value_1_0,
						"es.unex.quercusseg.GraphqlXtext.IntValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getSingleValueAccess().getValueStringValueParserRuleCall_2_0());
				}
				lv_value_2_0=ruleStringValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSingleValueRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"es.unex.quercusseg.GraphqlXtext.StringValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				lv_value_3_0=RULE_BOOLEANVALUE
				{
					newLeafNode(lv_value_3_0, grammarAccess.getSingleValueAccess().getValueBOOLEANVALUETerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSingleValueRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_3_0,
						"es.unex.quercusseg.GraphqlXtext.BOOLEANVALUE");
				}
			)
		)
		    |
		(
			(
				lv_value_4_0=RULE_NULLVALUE
				{
					newLeafNode(lv_value_4_0, grammarAccess.getSingleValueAccess().getValueNULLVALUETerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSingleValueRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_4_0,
						"es.unex.quercusseg.GraphqlXtext.NULLVALUE");
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getSingleValueAccess().getValueEnumValueParserRuleCall_5_0());
				}
				lv_value_5_0=ruleEnumValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSingleValueRule());
					}
					set(
						$current,
						"value",
						lv_value_5_0,
						"es.unex.quercusseg.GraphqlXtext.EnumValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleComplexValue
entryRuleComplexValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComplexValueRule()); }
	iv_ruleComplexValue=ruleComplexValue
	{ $current=$iv_ruleComplexValue.current; }
	EOF;

// Rule ComplexValue
ruleComplexValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getComplexValueAccess().getValueListValueParserRuleCall_0_0());
				}
				lv_value_0_0=ruleListValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComplexValueRule());
					}
					set(
						$current,
						"value",
						lv_value_0_0,
						"es.unex.quercusseg.GraphqlXtext.ListValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getComplexValueAccess().getValueObjectValueParserRuleCall_1_0());
				}
				lv_value_1_0=ruleObjectValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComplexValueRule());
					}
					set(
						$current,
						"value",
						lv_value_1_0,
						"es.unex.quercusseg.GraphqlXtext.ObjectValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleEnumValue
entryRuleEnumValue returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEnumValueRule()); }
	iv_ruleEnumValue=ruleEnumValue
	{ $current=$iv_ruleEnumValue.current.getText(); }
	EOF;

// Rule EnumValue
ruleEnumValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_NAME_0=RULE_NAME
	{
		$current.merge(this_NAME_0);
	}
	{
		newLeafNode(this_NAME_0, grammarAccess.getEnumValueAccess().getNAMETerminalRuleCall());
	}
;

// Entry rule entryRuleListValue
entryRuleListValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getListValueRule()); }
	iv_ruleListValue=ruleListValue
	{ $current=$iv_ruleListValue.current; }
	EOF;

// Rule ListValue
ruleListValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getListValueAccess().getListValueAction_0(),
					$current);
			}
		)
		otherlv_1='['
		{
			newLeafNode(otherlv_1, grammarAccess.getListValueAccess().getLeftSquareBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getListValueAccess().getValuesValueParserRuleCall_2_0());
				}
				lv_values_2_0=ruleValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getListValueRule());
					}
					add(
						$current,
						"values",
						lv_values_2_0,
						"es.unex.quercusseg.GraphqlXtext.Value");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_3=']'
		{
			newLeafNode(otherlv_3, grammarAccess.getListValueAccess().getRightSquareBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleObjectValue
entryRuleObjectValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getObjectValueRule()); }
	iv_ruleObjectValue=ruleObjectValue
	{ $current=$iv_ruleObjectValue.current; }
	EOF;

// Rule ObjectValue
ruleObjectValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getObjectValueAccess().getObjectValueAction_0(),
					$current);
			}
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getObjectValueAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getObjectValueAccess().getFieldsObjectFieldParserRuleCall_2_0());
				}
				lv_fields_2_0=ruleObjectField
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getObjectValueRule());
					}
					add(
						$current,
						"fields",
						lv_fields_2_0,
						"es.unex.quercusseg.GraphqlXtext.ObjectField");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getObjectValueAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleObjectField
entryRuleObjectField returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getObjectFieldRule()); }
	iv_ruleObjectField=ruleObjectField
	{ $current=$iv_ruleObjectField.current; }
	EOF;

// Rule ObjectField
ruleObjectField returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_NAME
				{
					newLeafNode(lv_name_0_0, grammarAccess.getObjectFieldAccess().getNameNAMETerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getObjectFieldRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"es.unex.quercusseg.GraphqlXtext.NAME");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getObjectFieldAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getObjectFieldAccess().getValueValueParserRuleCall_2_0());
				}
				lv_value_2_0=ruleValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getObjectFieldRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"es.unex.quercusseg.GraphqlXtext.Value");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleVariableDefinition
entryRuleVariableDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariableDefinitionRule()); }
	iv_ruleVariableDefinition=ruleVariableDefinition
	{ $current=$iv_ruleVariableDefinition.current; }
	EOF;

// Rule VariableDefinition
ruleVariableDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='$'
		{
			newLeafNode(otherlv_0, grammarAccess.getVariableDefinitionAccess().getDollarSignKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_NAME
				{
					newLeafNode(lv_name_1_0, grammarAccess.getVariableDefinitionAccess().getNameNAMETerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVariableDefinitionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"es.unex.quercusseg.GraphqlXtext.NAME");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getVariableDefinitionAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVariableDefinitionAccess().getTypeTypeParserRuleCall_3_0());
				}
				lv_type_3_0=ruleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVariableDefinitionRule());
					}
					set(
						$current,
						"type",
						lv_type_3_0,
						"es.unex.quercusseg.GraphqlXtext.Type");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getVariableDefinitionAccess().getDefValueDefaultValueParserRuleCall_4_0());
				}
				lv_defValue_4_0=ruleDefaultValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVariableDefinitionRule());
					}
					set(
						$current,
						"defValue",
						lv_defValue_4_0,
						"es.unex.quercusseg.GraphqlXtext.DefaultValue");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleVariable
entryRuleVariable returns [String current=null]:
	{ newCompositeNode(grammarAccess.getVariableRule()); }
	iv_ruleVariable=ruleVariable
	{ $current=$iv_ruleVariable.current.getText(); }
	EOF;

// Rule Variable
ruleVariable returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='$'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getVariableAccess().getDollarSignKeyword_0());
		}
		this_NAME_1=RULE_NAME
		{
			$current.merge(this_NAME_1);
		}
		{
			newLeafNode(this_NAME_1, grammarAccess.getVariableAccess().getNAMETerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleDefaultValue
entryRuleDefaultValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDefaultValueRule()); }
	iv_ruleDefaultValue=ruleDefaultValue
	{ $current=$iv_ruleDefaultValue.current; }
	EOF;

// Rule DefaultValue
ruleDefaultValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='='
		{
			newLeafNode(otherlv_0, grammarAccess.getDefaultValueAccess().getEqualsSignKeyword_0());
		}
		{
			newCompositeNode(grammarAccess.getDefaultValueAccess().getValueParserRuleCall_1());
		}
		this_Value_1=ruleValue
		{
			$current = $this_Value_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleType
entryRuleType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeRule()); }
	iv_ruleType=ruleType
	{ $current=$iv_ruleType.current; }
	EOF;

// Rule Type
ruleType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getTypeAccess().getNameNamedTypeParserRuleCall_0_0_0());
					}
					lv_name_0_0=ruleNamedType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTypeRule());
						}
						set(
							$current,
							"name",
							lv_name_0_0,
							"es.unex.quercusseg.GraphqlXtext.NamedType");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					lv_notNull_1_0='!'
					{
						newLeafNode(lv_notNull_1_0, grammarAccess.getTypeAccess().getNotNullExclamationMarkKeyword_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTypeRule());
						}
						setWithLastConsumed($current, "notNull", lv_notNull_1_0 != null, "!");
					}
				)
			)?
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getTypeAccess().getListListTypeParserRuleCall_1_0_0());
					}
					lv_list_2_0=ruleListType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTypeRule());
						}
						set(
							$current,
							"list",
							lv_list_2_0,
							"es.unex.quercusseg.GraphqlXtext.ListType");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					lv_notNull_3_0='!'
					{
						newLeafNode(lv_notNull_3_0, grammarAccess.getTypeAccess().getNotNullExclamationMarkKeyword_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTypeRule());
						}
						setWithLastConsumed($current, "notNull", lv_notNull_3_0 != null, "!");
					}
				)
			)?
		)
	)
;

// Entry rule entryRuleNamedType
entryRuleNamedType returns [String current=null]:
	{ newCompositeNode(grammarAccess.getNamedTypeRule()); }
	iv_ruleNamedType=ruleNamedType
	{ $current=$iv_ruleNamedType.current.getText(); }
	EOF;

// Rule NamedType
ruleNamedType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_NAME_0=RULE_NAME
	{
		$current.merge(this_NAME_0);
	}
	{
		newLeafNode(this_NAME_0, grammarAccess.getNamedTypeAccess().getNAMETerminalRuleCall());
	}
;

// Entry rule entryRuleListType
entryRuleListType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getListTypeRule()); }
	iv_ruleListType=ruleListType
	{ $current=$iv_ruleListType.current; }
	EOF;

// Rule ListType
ruleListType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='['
		{
			newLeafNode(otherlv_0, grammarAccess.getListTypeAccess().getLeftSquareBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getListTypeAccess().getTypeTypeParserRuleCall_1_0());
				}
				lv_type_1_0=ruleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getListTypeRule());
					}
					set(
						$current,
						"type",
						lv_type_1_0,
						"es.unex.quercusseg.GraphqlXtext.Type");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=']'
		{
			newLeafNode(otherlv_2, grammarAccess.getListTypeAccess().getRightSquareBracketKeyword_2());
		}
	)
;

// Entry rule entryRuleDirective
entryRuleDirective returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDirectiveRule()); }
	iv_ruleDirective=ruleDirective
	{ $current=$iv_ruleDirective.current; }
	EOF;

// Rule Directive
ruleDirective returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='@'
		{
			newLeafNode(otherlv_0, grammarAccess.getDirectiveAccess().getCommercialAtKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_NAME
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDirectiveAccess().getNameNAMETerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDirectiveRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"es.unex.quercusseg.GraphqlXtext.NAME");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDirectiveAccess().getArgsArgumentsParserRuleCall_2_0());
				}
				lv_args_2_0=ruleArguments
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDirectiveRule());
					}
					add(
						$current,
						"args",
						lv_args_2_0,
						"es.unex.quercusseg.GraphqlXtext.Arguments");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleIntValue
entryRuleIntValue returns [String current=null]:
	{ newCompositeNode(grammarAccess.getIntValueRule()); }
	iv_ruleIntValue=ruleIntValue
	{ $current=$iv_ruleIntValue.current.getText(); }
	EOF;

// Rule IntValue
ruleIntValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_DIGIT_0=RULE_DIGIT
	{
		$current.merge(this_DIGIT_0);
	}
	{
		newLeafNode(this_DIGIT_0, grammarAccess.getIntValueAccess().getDIGITTerminalRuleCall());
	}
;

// Entry rule entryRuleStringValue
entryRuleStringValue returns [String current=null]:
	{ newCompositeNode(grammarAccess.getStringValueRule()); }
	iv_ruleStringValue=ruleStringValue
	{ $current=$iv_ruleStringValue.current.getText(); }
	EOF;

// Rule StringValue
ruleStringValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_STRING_0=RULE_STRING
	{
		$current.merge(this_STRING_0);
	}
	{
		newLeafNode(this_STRING_0, grammarAccess.getStringValueAccess().getSTRINGTerminalRuleCall());
	}
;

RULE_COMMA : ',';

RULE_COMMENT : '#' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_BOOLEANVALUE : ('true'|'false');

RULE_NULLVALUE : 'null';

RULE_DIGIT : '0'..'9';

RULE_INT : RULE_DIGIT+;

RULE_NAME : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
