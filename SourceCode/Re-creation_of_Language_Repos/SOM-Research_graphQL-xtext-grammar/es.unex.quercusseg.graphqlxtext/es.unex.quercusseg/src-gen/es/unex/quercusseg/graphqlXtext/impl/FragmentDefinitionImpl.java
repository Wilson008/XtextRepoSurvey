/**
 * generated by Xtext 2.35.0
 */
package es.unex.quercusseg.graphqlXtext.impl;

import es.unex.quercusseg.graphqlXtext.FragmentDefinition;
import es.unex.quercusseg.graphqlXtext.GraphqlXtextPackage;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Fragment Definition</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link es.unex.quercusseg.graphqlXtext.impl.FragmentDefinitionImpl#getFragName <em>Frag Name</em>}</li>
 *   <li>{@link es.unex.quercusseg.graphqlXtext.impl.FragmentDefinitionImpl#getTypeCondition <em>Type Condition</em>}</li>
 * </ul>
 *
 * @generated
 */
public class FragmentDefinitionImpl extends DefinitionImpl implements FragmentDefinition
{
  /**
   * The default value of the '{@link #getFragName() <em>Frag Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFragName()
   * @generated
   * @ordered
   */
  protected static final String FRAG_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getFragName() <em>Frag Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFragName()
   * @generated
   * @ordered
   */
  protected String fragName = FRAG_NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getTypeCondition() <em>Type Condition</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTypeCondition()
   * @generated
   * @ordered
   */
  protected static final String TYPE_CONDITION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getTypeCondition() <em>Type Condition</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTypeCondition()
   * @generated
   * @ordered
   */
  protected String typeCondition = TYPE_CONDITION_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected FragmentDefinitionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return GraphqlXtextPackage.Literals.FRAGMENT_DEFINITION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getFragName()
  {
    return fragName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFragName(String newFragName)
  {
    String oldFragName = fragName;
    fragName = newFragName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GraphqlXtextPackage.FRAGMENT_DEFINITION__FRAG_NAME, oldFragName, fragName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getTypeCondition()
  {
    return typeCondition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setTypeCondition(String newTypeCondition)
  {
    String oldTypeCondition = typeCondition;
    typeCondition = newTypeCondition;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GraphqlXtextPackage.FRAGMENT_DEFINITION__TYPE_CONDITION, oldTypeCondition, typeCondition));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case GraphqlXtextPackage.FRAGMENT_DEFINITION__FRAG_NAME:
        return getFragName();
      case GraphqlXtextPackage.FRAGMENT_DEFINITION__TYPE_CONDITION:
        return getTypeCondition();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case GraphqlXtextPackage.FRAGMENT_DEFINITION__FRAG_NAME:
        setFragName((String)newValue);
        return;
      case GraphqlXtextPackage.FRAGMENT_DEFINITION__TYPE_CONDITION:
        setTypeCondition((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case GraphqlXtextPackage.FRAGMENT_DEFINITION__FRAG_NAME:
        setFragName(FRAG_NAME_EDEFAULT);
        return;
      case GraphqlXtextPackage.FRAGMENT_DEFINITION__TYPE_CONDITION:
        setTypeCondition(TYPE_CONDITION_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case GraphqlXtextPackage.FRAGMENT_DEFINITION__FRAG_NAME:
        return FRAG_NAME_EDEFAULT == null ? fragName != null : !FRAG_NAME_EDEFAULT.equals(fragName);
      case GraphqlXtextPackage.FRAGMENT_DEFINITION__TYPE_CONDITION:
        return TYPE_CONDITION_EDEFAULT == null ? typeCondition != null : !TYPE_CONDITION_EDEFAULT.equals(typeCondition);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (fragName: ");
    result.append(fragName);
    result.append(", typeCondition: ");
    result.append(typeCondition);
    result.append(')');
    return result.toString();
  }

} //FragmentDefinitionImpl
