/**
 * generated by Xtext 2.35.0
 */
package es.unex.quercusseg.graphqlIDL.impl;

import es.unex.quercusseg.graphqlIDL.GraphqlIDLPackage;
import es.unex.quercusseg.graphqlIDL.GraphqlListType;
import es.unex.quercusseg.graphqlIDL.GraphqlNamedType;
import es.unex.quercusseg.graphqlIDL.GraphqlType;
import es.unex.quercusseg.graphqlIDL.GraphqlTypeDefinition;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Graphql Type</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link es.unex.quercusseg.graphqlIDL.impl.GraphqlTypeImpl#getDtype <em>Dtype</em>}</li>
 *   <li>{@link es.unex.quercusseg.graphqlIDL.impl.GraphqlTypeImpl#isNonNull <em>Non Null</em>}</li>
 *   <li>{@link es.unex.quercusseg.graphqlIDL.impl.GraphqlTypeImpl#getNtype <em>Ntype</em>}</li>
 *   <li>{@link es.unex.quercusseg.graphqlIDL.impl.GraphqlTypeImpl#getLtype <em>Ltype</em>}</li>
 * </ul>
 *
 * @generated
 */
public class GraphqlTypeImpl extends GraphqlListTypeImpl implements GraphqlType
{
  /**
   * The cached value of the '{@link #getDtype() <em>Dtype</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDtype()
   * @generated
   * @ordered
   */
  protected GraphqlTypeDefinition dtype;

  /**
   * The default value of the '{@link #isNonNull() <em>Non Null</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isNonNull()
   * @generated
   * @ordered
   */
  protected static final boolean NON_NULL_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isNonNull() <em>Non Null</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isNonNull()
   * @generated
   * @ordered
   */
  protected boolean nonNull = NON_NULL_EDEFAULT;

  /**
   * The cached value of the '{@link #getNtype() <em>Ntype</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNtype()
   * @generated
   * @ordered
   */
  protected GraphqlNamedType ntype;

  /**
   * The cached value of the '{@link #getLtype() <em>Ltype</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLtype()
   * @generated
   * @ordered
   */
  protected GraphqlListType ltype;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected GraphqlTypeImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return GraphqlIDLPackage.Literals.GRAPHQL_TYPE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public GraphqlTypeDefinition getDtype()
  {
    if (dtype != null && dtype.eIsProxy())
    {
      InternalEObject oldDtype = (InternalEObject)dtype;
      dtype = (GraphqlTypeDefinition)eResolveProxy(oldDtype);
      if (dtype != oldDtype)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, GraphqlIDLPackage.GRAPHQL_TYPE__DTYPE, oldDtype, dtype));
      }
    }
    return dtype;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public GraphqlTypeDefinition basicGetDtype()
  {
    return dtype;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDtype(GraphqlTypeDefinition newDtype)
  {
    GraphqlTypeDefinition oldDtype = dtype;
    dtype = newDtype;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GraphqlIDLPackage.GRAPHQL_TYPE__DTYPE, oldDtype, dtype));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isNonNull()
  {
    return nonNull;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setNonNull(boolean newNonNull)
  {
    boolean oldNonNull = nonNull;
    nonNull = newNonNull;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GraphqlIDLPackage.GRAPHQL_TYPE__NON_NULL, oldNonNull, nonNull));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public GraphqlNamedType getNtype()
  {
    return ntype;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetNtype(GraphqlNamedType newNtype, NotificationChain msgs)
  {
    GraphqlNamedType oldNtype = ntype;
    ntype = newNtype;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GraphqlIDLPackage.GRAPHQL_TYPE__NTYPE, oldNtype, newNtype);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setNtype(GraphqlNamedType newNtype)
  {
    if (newNtype != ntype)
    {
      NotificationChain msgs = null;
      if (ntype != null)
        msgs = ((InternalEObject)ntype).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GraphqlIDLPackage.GRAPHQL_TYPE__NTYPE, null, msgs);
      if (newNtype != null)
        msgs = ((InternalEObject)newNtype).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GraphqlIDLPackage.GRAPHQL_TYPE__NTYPE, null, msgs);
      msgs = basicSetNtype(newNtype, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GraphqlIDLPackage.GRAPHQL_TYPE__NTYPE, newNtype, newNtype));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public GraphqlListType getLtype()
  {
    return ltype;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetLtype(GraphqlListType newLtype, NotificationChain msgs)
  {
    GraphqlListType oldLtype = ltype;
    ltype = newLtype;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GraphqlIDLPackage.GRAPHQL_TYPE__LTYPE, oldLtype, newLtype);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setLtype(GraphqlListType newLtype)
  {
    if (newLtype != ltype)
    {
      NotificationChain msgs = null;
      if (ltype != null)
        msgs = ((InternalEObject)ltype).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GraphqlIDLPackage.GRAPHQL_TYPE__LTYPE, null, msgs);
      if (newLtype != null)
        msgs = ((InternalEObject)newLtype).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GraphqlIDLPackage.GRAPHQL_TYPE__LTYPE, null, msgs);
      msgs = basicSetLtype(newLtype, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GraphqlIDLPackage.GRAPHQL_TYPE__LTYPE, newLtype, newLtype));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case GraphqlIDLPackage.GRAPHQL_TYPE__NTYPE:
        return basicSetNtype(null, msgs);
      case GraphqlIDLPackage.GRAPHQL_TYPE__LTYPE:
        return basicSetLtype(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case GraphqlIDLPackage.GRAPHQL_TYPE__DTYPE:
        if (resolve) return getDtype();
        return basicGetDtype();
      case GraphqlIDLPackage.GRAPHQL_TYPE__NON_NULL:
        return isNonNull();
      case GraphqlIDLPackage.GRAPHQL_TYPE__NTYPE:
        return getNtype();
      case GraphqlIDLPackage.GRAPHQL_TYPE__LTYPE:
        return getLtype();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case GraphqlIDLPackage.GRAPHQL_TYPE__DTYPE:
        setDtype((GraphqlTypeDefinition)newValue);
        return;
      case GraphqlIDLPackage.GRAPHQL_TYPE__NON_NULL:
        setNonNull((Boolean)newValue);
        return;
      case GraphqlIDLPackage.GRAPHQL_TYPE__NTYPE:
        setNtype((GraphqlNamedType)newValue);
        return;
      case GraphqlIDLPackage.GRAPHQL_TYPE__LTYPE:
        setLtype((GraphqlListType)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case GraphqlIDLPackage.GRAPHQL_TYPE__DTYPE:
        setDtype((GraphqlTypeDefinition)null);
        return;
      case GraphqlIDLPackage.GRAPHQL_TYPE__NON_NULL:
        setNonNull(NON_NULL_EDEFAULT);
        return;
      case GraphqlIDLPackage.GRAPHQL_TYPE__NTYPE:
        setNtype((GraphqlNamedType)null);
        return;
      case GraphqlIDLPackage.GRAPHQL_TYPE__LTYPE:
        setLtype((GraphqlListType)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case GraphqlIDLPackage.GRAPHQL_TYPE__DTYPE:
        return dtype != null;
      case GraphqlIDLPackage.GRAPHQL_TYPE__NON_NULL:
        return nonNull != NON_NULL_EDEFAULT;
      case GraphqlIDLPackage.GRAPHQL_TYPE__NTYPE:
        return ntype != null;
      case GraphqlIDLPackage.GRAPHQL_TYPE__LTYPE:
        return ltype != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (nonNull: ");
    result.append(nonNull);
    result.append(')');
    return result.toString();
  }

} //GraphqlTypeImpl
