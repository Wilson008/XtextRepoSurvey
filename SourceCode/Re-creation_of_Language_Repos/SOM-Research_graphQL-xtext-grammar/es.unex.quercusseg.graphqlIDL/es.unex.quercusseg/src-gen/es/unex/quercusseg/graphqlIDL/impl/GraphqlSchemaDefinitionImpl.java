/**
 * generated by Xtext 2.35.0
 */
package es.unex.quercusseg.graphqlIDL.impl;

import es.unex.quercusseg.graphqlIDL.GraphqlIDLPackage;
import es.unex.quercusseg.graphqlIDL.GraphqlObjectTypeDefinition;
import es.unex.quercusseg.graphqlIDL.GraphqlRootQuery;
import es.unex.quercusseg.graphqlIDL.GraphqlSchemaDefinition;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Graphql Schema Definition</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link es.unex.quercusseg.graphqlIDL.impl.GraphqlSchemaDefinitionImpl#getName <em>Name</em>}</li>
 *   <li>{@link es.unex.quercusseg.graphqlIDL.impl.GraphqlSchemaDefinitionImpl#getRootQuery <em>Root Query</em>}</li>
 *   <li>{@link es.unex.quercusseg.graphqlIDL.impl.GraphqlSchemaDefinitionImpl#getMutation <em>Mutation</em>}</li>
 *   <li>{@link es.unex.quercusseg.graphqlIDL.impl.GraphqlSchemaDefinitionImpl#getSubcription <em>Subcription</em>}</li>
 * </ul>
 *
 * @generated
 */
public class GraphqlSchemaDefinitionImpl extends MinimalEObjectImpl.Container implements GraphqlSchemaDefinition
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getRootQuery() <em>Root Query</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRootQuery()
   * @generated
   * @ordered
   */
  protected GraphqlRootQuery rootQuery;

  /**
   * The cached value of the '{@link #getMutation() <em>Mutation</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMutation()
   * @generated
   * @ordered
   */
  protected GraphqlObjectTypeDefinition mutation;

  /**
   * The cached value of the '{@link #getSubcription() <em>Subcription</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSubcription()
   * @generated
   * @ordered
   */
  protected GraphqlObjectTypeDefinition subcription;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected GraphqlSchemaDefinitionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return GraphqlIDLPackage.Literals.GRAPHQL_SCHEMA_DEFINITION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GraphqlIDLPackage.GRAPHQL_SCHEMA_DEFINITION__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public GraphqlRootQuery getRootQuery()
  {
    return rootQuery;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetRootQuery(GraphqlRootQuery newRootQuery, NotificationChain msgs)
  {
    GraphqlRootQuery oldRootQuery = rootQuery;
    rootQuery = newRootQuery;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GraphqlIDLPackage.GRAPHQL_SCHEMA_DEFINITION__ROOT_QUERY, oldRootQuery, newRootQuery);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setRootQuery(GraphqlRootQuery newRootQuery)
  {
    if (newRootQuery != rootQuery)
    {
      NotificationChain msgs = null;
      if (rootQuery != null)
        msgs = ((InternalEObject)rootQuery).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GraphqlIDLPackage.GRAPHQL_SCHEMA_DEFINITION__ROOT_QUERY, null, msgs);
      if (newRootQuery != null)
        msgs = ((InternalEObject)newRootQuery).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GraphqlIDLPackage.GRAPHQL_SCHEMA_DEFINITION__ROOT_QUERY, null, msgs);
      msgs = basicSetRootQuery(newRootQuery, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GraphqlIDLPackage.GRAPHQL_SCHEMA_DEFINITION__ROOT_QUERY, newRootQuery, newRootQuery));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public GraphqlObjectTypeDefinition getMutation()
  {
    if (mutation != null && mutation.eIsProxy())
    {
      InternalEObject oldMutation = (InternalEObject)mutation;
      mutation = (GraphqlObjectTypeDefinition)eResolveProxy(oldMutation);
      if (mutation != oldMutation)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, GraphqlIDLPackage.GRAPHQL_SCHEMA_DEFINITION__MUTATION, oldMutation, mutation));
      }
    }
    return mutation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public GraphqlObjectTypeDefinition basicGetMutation()
  {
    return mutation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setMutation(GraphqlObjectTypeDefinition newMutation)
  {
    GraphqlObjectTypeDefinition oldMutation = mutation;
    mutation = newMutation;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GraphqlIDLPackage.GRAPHQL_SCHEMA_DEFINITION__MUTATION, oldMutation, mutation));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public GraphqlObjectTypeDefinition getSubcription()
  {
    if (subcription != null && subcription.eIsProxy())
    {
      InternalEObject oldSubcription = (InternalEObject)subcription;
      subcription = (GraphqlObjectTypeDefinition)eResolveProxy(oldSubcription);
      if (subcription != oldSubcription)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, GraphqlIDLPackage.GRAPHQL_SCHEMA_DEFINITION__SUBCRIPTION, oldSubcription, subcription));
      }
    }
    return subcription;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public GraphqlObjectTypeDefinition basicGetSubcription()
  {
    return subcription;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSubcription(GraphqlObjectTypeDefinition newSubcription)
  {
    GraphqlObjectTypeDefinition oldSubcription = subcription;
    subcription = newSubcription;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GraphqlIDLPackage.GRAPHQL_SCHEMA_DEFINITION__SUBCRIPTION, oldSubcription, subcription));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case GraphqlIDLPackage.GRAPHQL_SCHEMA_DEFINITION__ROOT_QUERY:
        return basicSetRootQuery(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case GraphqlIDLPackage.GRAPHQL_SCHEMA_DEFINITION__NAME:
        return getName();
      case GraphqlIDLPackage.GRAPHQL_SCHEMA_DEFINITION__ROOT_QUERY:
        return getRootQuery();
      case GraphqlIDLPackage.GRAPHQL_SCHEMA_DEFINITION__MUTATION:
        if (resolve) return getMutation();
        return basicGetMutation();
      case GraphqlIDLPackage.GRAPHQL_SCHEMA_DEFINITION__SUBCRIPTION:
        if (resolve) return getSubcription();
        return basicGetSubcription();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case GraphqlIDLPackage.GRAPHQL_SCHEMA_DEFINITION__NAME:
        setName((String)newValue);
        return;
      case GraphqlIDLPackage.GRAPHQL_SCHEMA_DEFINITION__ROOT_QUERY:
        setRootQuery((GraphqlRootQuery)newValue);
        return;
      case GraphqlIDLPackage.GRAPHQL_SCHEMA_DEFINITION__MUTATION:
        setMutation((GraphqlObjectTypeDefinition)newValue);
        return;
      case GraphqlIDLPackage.GRAPHQL_SCHEMA_DEFINITION__SUBCRIPTION:
        setSubcription((GraphqlObjectTypeDefinition)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case GraphqlIDLPackage.GRAPHQL_SCHEMA_DEFINITION__NAME:
        setName(NAME_EDEFAULT);
        return;
      case GraphqlIDLPackage.GRAPHQL_SCHEMA_DEFINITION__ROOT_QUERY:
        setRootQuery((GraphqlRootQuery)null);
        return;
      case GraphqlIDLPackage.GRAPHQL_SCHEMA_DEFINITION__MUTATION:
        setMutation((GraphqlObjectTypeDefinition)null);
        return;
      case GraphqlIDLPackage.GRAPHQL_SCHEMA_DEFINITION__SUBCRIPTION:
        setSubcription((GraphqlObjectTypeDefinition)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case GraphqlIDLPackage.GRAPHQL_SCHEMA_DEFINITION__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case GraphqlIDLPackage.GRAPHQL_SCHEMA_DEFINITION__ROOT_QUERY:
        return rootQuery != null;
      case GraphqlIDLPackage.GRAPHQL_SCHEMA_DEFINITION__MUTATION:
        return mutation != null;
      case GraphqlIDLPackage.GRAPHQL_SCHEMA_DEFINITION__SUBCRIPTION:
        return subcription != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(')');
    return result.toString();
  }

} //GraphqlSchemaDefinitionImpl
