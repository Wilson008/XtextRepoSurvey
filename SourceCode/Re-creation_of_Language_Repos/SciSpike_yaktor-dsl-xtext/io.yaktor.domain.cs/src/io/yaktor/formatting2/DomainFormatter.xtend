/*
 * generated by Xtext 2.35.0
 */
package io.yaktor.formatting2

import com.google.inject.Inject
import io.yaktor.domain.Association
import io.yaktor.domain.DomainModel
import io.yaktor.services.DomainGrammarAccess
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument

class DomainFormatter extends AbstractFormatter2 {
	
	@Inject extension DomainGrammarAccess

	def dispatch void format(DomainModel domainModel, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (domainModelImport : domainModel.domainModelImports) {
			domainModelImport.format
		}
		domainModel.genOptions.format
		for (namedType : domainModel.types) {
			namedType.format
		}
	}

	def dispatch void format(Association association, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		association.start.format
		association.end.format
	}
	
	// TODO: implement for Entity, Type, EnumType, JpaGenOptions, MongoNodeGenOptions, MongoNodeTableOptions
}
