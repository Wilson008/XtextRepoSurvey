/*
 * generated by Xtext 2.35.0
 */
package io.yaktor.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.UnorderedGroup;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class DomainGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class DomainModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.yaktor.Domain.DomainModel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Keyword cImportKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cDomainModelImportsAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cDomainModelImportsDomainModelImportParserRuleCall_0_1_0 = (RuleCall)cDomainModelImportsAssignment_0_1.eContents().get(0);
		private final Keyword cDomainModelKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cGenOptionsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cGenOptionsGenOptionsParserRuleCall_4_0 = (RuleCall)cGenOptionsAssignment_4.eContents().get(0);
		private final Assignment cTypesAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cTypesNamedTypeParserRuleCall_5_0 = (RuleCall)cTypesAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//DomainModel:
		//  ('import' domainModelImports+=DomainModelImport)*
		//  'domain-model' name=ID '{'
		//  (genOptions=GenOptions)?
		//  types+=NamedType*
		//  '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//('import' domainModelImports+=DomainModelImport)*
		//'domain-model' name=ID '{'
		//(genOptions=GenOptions)?
		//types+=NamedType*
		//'}'
		public Group getGroup() { return cGroup; }
		
		//('import' domainModelImports+=DomainModelImport)*
		public Group getGroup_0() { return cGroup_0; }
		
		//'import'
		public Keyword getImportKeyword_0_0() { return cImportKeyword_0_0; }
		
		//domainModelImports+=DomainModelImport
		public Assignment getDomainModelImportsAssignment_0_1() { return cDomainModelImportsAssignment_0_1; }
		
		//DomainModelImport
		public RuleCall getDomainModelImportsDomainModelImportParserRuleCall_0_1_0() { return cDomainModelImportsDomainModelImportParserRuleCall_0_1_0; }
		
		//'domain-model'
		public Keyword getDomainModelKeyword_1() { return cDomainModelKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//(genOptions=GenOptions)?
		public Assignment getGenOptionsAssignment_4() { return cGenOptionsAssignment_4; }
		
		//GenOptions
		public RuleCall getGenOptionsGenOptionsParserRuleCall_4_0() { return cGenOptionsGenOptionsParserRuleCall_4_0; }
		
		//types+=NamedType*
		public Assignment getTypesAssignment_5() { return cTypesAssignment_5; }
		
		//NamedType
		public RuleCall getTypesNamedTypeParserRuleCall_5_0() { return cTypesNamedTypeParserRuleCall_5_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class DomainModelImportElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.yaktor.Domain.DomainModelImport");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cRefAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cRefDomainModelCrossReference_0_0 = (CrossReference)cRefAssignment_0.eContents().get(0);
		private final RuleCall cRefDomainModelIDTerminalRuleCall_0_0_1 = (RuleCall)cRefDomainModelCrossReference_0_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cAsKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cAliasAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cAliasIDTerminalRuleCall_1_1_0 = (RuleCall)cAliasAssignment_1_1.eContents().get(0);
		
		//DomainModelImport :
		//  ref=[DomainModel|ID] ('as' alias=ID)?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ref=[DomainModel|ID] ('as' alias=ID)?
		public Group getGroup() { return cGroup; }
		
		//ref=[DomainModel|ID]
		public Assignment getRefAssignment_0() { return cRefAssignment_0; }
		
		//[DomainModel|ID]
		public CrossReference getRefDomainModelCrossReference_0_0() { return cRefDomainModelCrossReference_0_0; }
		
		//ID
		public RuleCall getRefDomainModelIDTerminalRuleCall_0_0_1() { return cRefDomainModelIDTerminalRuleCall_0_0_1; }
		
		//('as' alias=ID)?
		public Group getGroup_1() { return cGroup_1; }
		
		//'as'
		public Keyword getAsKeyword_1_0() { return cAsKeyword_1_0; }
		
		//alias=ID
		public Assignment getAliasAssignment_1_1() { return cAliasAssignment_1_1; }
		
		//ID
		public RuleCall getAliasIDTerminalRuleCall_1_1_0() { return cAliasIDTerminalRuleCall_1_1_0; }
	}
	public class NamedTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.yaktor.Domain.NamedType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cAssociationParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cAssociationRefParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cEntityParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cEnumTypeParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cTypeParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		
		//NamedType:
		//  Association | AssociationRef | Entity | EnumType | Type
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//Association | AssociationRef | Entity | EnumType | Type
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Association
		public RuleCall getAssociationParserRuleCall_0() { return cAssociationParserRuleCall_0; }
		
		//AssociationRef
		public RuleCall getAssociationRefParserRuleCall_1() { return cAssociationRefParserRuleCall_1; }
		
		//Entity
		public RuleCall getEntityParserRuleCall_2() { return cEntityParserRuleCall_2; }
		
		//EnumType
		public RuleCall getEnumTypeParserRuleCall_3() { return cEnumTypeParserRuleCall_3; }
		
		//Type
		public RuleCall getTypeParserRuleCall_4() { return cTypeParserRuleCall_4; }
	}
	public class AssociationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.yaktor.Domain.Association");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAssociationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cStartAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cStartAssociationEndParserRuleCall_3_0 = (RuleCall)cStartAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final Assignment cIsUnidirectionalAssignment_4_0 = (Assignment)cAlternatives_4.eContents().get(0);
		private final Keyword cIsUnidirectionalHyphenMinusHyphenMinusGreaterThanSignKeyword_4_0_0 = (Keyword)cIsUnidirectionalAssignment_4_0.eContents().get(0);
		private final Keyword cLessThanSignHyphenMinusHyphenMinusGreaterThanSignKeyword_4_1 = (Keyword)cAlternatives_4.eContents().get(1);
		private final Assignment cEndAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cEndAssociationEndParserRuleCall_5_0 = (RuleCall)cEndAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Association:
		//  'association' name=ID '{'
		//  start=AssociationEnd
		//  (isUnidirectional?='-->'|'<-->')
		//  end=AssociationEnd
		//  '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'association' name=ID '{'
		//start=AssociationEnd
		//(isUnidirectional?='-->'|'<-->')
		//end=AssociationEnd
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'association'
		public Keyword getAssociationKeyword_0() { return cAssociationKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//start=AssociationEnd
		public Assignment getStartAssignment_3() { return cStartAssignment_3; }
		
		//AssociationEnd
		public RuleCall getStartAssociationEndParserRuleCall_3_0() { return cStartAssociationEndParserRuleCall_3_0; }
		
		//(isUnidirectional?='-->'|'<-->')
		public Alternatives getAlternatives_4() { return cAlternatives_4; }
		
		//isUnidirectional?='-->'
		public Assignment getIsUnidirectionalAssignment_4_0() { return cIsUnidirectionalAssignment_4_0; }
		
		//'-->'
		public Keyword getIsUnidirectionalHyphenMinusHyphenMinusGreaterThanSignKeyword_4_0_0() { return cIsUnidirectionalHyphenMinusHyphenMinusGreaterThanSignKeyword_4_0_0; }
		
		//'<-->'
		public Keyword getLessThanSignHyphenMinusHyphenMinusGreaterThanSignKeyword_4_1() { return cLessThanSignHyphenMinusHyphenMinusGreaterThanSignKeyword_4_1; }
		
		//end=AssociationEnd
		public Assignment getEndAssignment_5() { return cEndAssignment_5; }
		
		//AssociationEnd
		public RuleCall getEndAssociationEndParserRuleCall_5_0() { return cEndAssociationEndParserRuleCall_5_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class AssociationRefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.yaktor.Domain.AssociationRef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAssociationRefKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cRefAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cRefAssociationCrossReference_1_0 = (CrossReference)cRefAssignment_1.eContents().get(0);
		private final RuleCall cRefAssociationPossiblyQualifiedNameParserRuleCall_1_0_1 = (RuleCall)cRefAssociationCrossReference_1_0.eContents().get(1);
		
		//AssociationRef:
		//  'association-ref' ref=[Association|PossiblyQualifiedName]
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'association-ref' ref=[Association|PossiblyQualifiedName]
		public Group getGroup() { return cGroup; }
		
		//'association-ref'
		public Keyword getAssociationRefKeyword_0() { return cAssociationRefKeyword_0; }
		
		//ref=[Association|PossiblyQualifiedName]
		public Assignment getRefAssignment_1() { return cRefAssignment_1; }
		
		//[Association|PossiblyQualifiedName]
		public CrossReference getRefAssociationCrossReference_1_0() { return cRefAssociationCrossReference_1_0; }
		
		//PossiblyQualifiedName
		public RuleCall getRefAssociationPossiblyQualifiedNameParserRuleCall_1_0_1() { return cRefAssociationPossiblyQualifiedNameParserRuleCall_1_0_1; }
	}
	public class AssociationEndElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.yaktor.Domain.AssociationEnd");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cReferencesAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cReferencesEntityCrossReference_0_0 = (CrossReference)cReferencesAssignment_0.eContents().get(0);
		private final RuleCall cReferencesEntityPossiblyQualifiedNameParserRuleCall_0_0_1 = (RuleCall)cReferencesEntityCrossReference_0_0.eContents().get(1);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cCardinalityAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cCardinalityCardinalityEnumRuleCall_2_0 = (RuleCall)cCardinalityAssignment_2.eContents().get(0);
		private final Assignment cIsCompositionAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cIsCompositionCompositionKeyword_3_0 = (Keyword)cIsCompositionAssignment_3.eContents().get(0);
		private final Assignment cUniqueAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final Keyword cUniqueUniqueKeyword_4_0 = (Keyword)cUniqueAssignment_4.eContents().get(0);
		
		//AssociationEnd:
		//  references=[Entity|PossiblyQualifiedName]
		//  name=ID
		//  (cardinality=Cardinality)?
		//  isComposition?='composition'?
		//  unique?='unique'?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//references=[Entity|PossiblyQualifiedName]
		//name=ID
		//(cardinality=Cardinality)?
		//isComposition?='composition'?
		//unique?='unique'?
		public Group getGroup() { return cGroup; }
		
		//references=[Entity|PossiblyQualifiedName]
		public Assignment getReferencesAssignment_0() { return cReferencesAssignment_0; }
		
		//[Entity|PossiblyQualifiedName]
		public CrossReference getReferencesEntityCrossReference_0_0() { return cReferencesEntityCrossReference_0_0; }
		
		//PossiblyQualifiedName
		public RuleCall getReferencesEntityPossiblyQualifiedNameParserRuleCall_0_0_1() { return cReferencesEntityPossiblyQualifiedNameParserRuleCall_0_0_1; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//(cardinality=Cardinality)?
		public Assignment getCardinalityAssignment_2() { return cCardinalityAssignment_2; }
		
		//Cardinality
		public RuleCall getCardinalityCardinalityEnumRuleCall_2_0() { return cCardinalityCardinalityEnumRuleCall_2_0; }
		
		//isComposition?='composition'?
		public Assignment getIsCompositionAssignment_3() { return cIsCompositionAssignment_3; }
		
		//'composition'
		public Keyword getIsCompositionCompositionKeyword_3_0() { return cIsCompositionCompositionKeyword_3_0; }
		
		//unique?='unique'?
		public Assignment getUniqueAssignment_4() { return cUniqueAssignment_4; }
		
		//'unique'
		public Keyword getUniqueUniqueKeyword_4_0() { return cUniqueUniqueKeyword_4_0; }
	}
	public class SimpleFieldElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.yaktor.Domain.SimpleField");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cIdFieldParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cShortIdFieldParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cStringFieldParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cDateFieldParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cIntegerFieldParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cEnumFieldParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cNumericFieldParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cBooleanFieldParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cPriceFieldParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		private final RuleCall cAmountFieldParserRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		private final RuleCall cCountFieldParserRuleCall_10 = (RuleCall)cAlternatives.eContents().get(10);
		private final RuleCall cEntityReferenceFieldParserRuleCall_11 = (RuleCall)cAlternatives.eContents().get(11);
		private final RuleCall cGeoLocationFieldParserRuleCall_12 = (RuleCall)cAlternatives.eContents().get(12);
		
		//SimpleField:
		//  IdField | ShortIdField | StringField | DateField | IntegerField | EnumField |
		//  NumericField | BooleanField | PriceField | AmountField |
		//  CountField | EntityReferenceField| GeoLocationField;
		@Override public ParserRule getRule() { return rule; }
		
		//IdField | ShortIdField | StringField | DateField | IntegerField | EnumField |
		//NumericField | BooleanField | PriceField | AmountField |
		//CountField | EntityReferenceField| GeoLocationField
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//IdField
		public RuleCall getIdFieldParserRuleCall_0() { return cIdFieldParserRuleCall_0; }
		
		//ShortIdField
		public RuleCall getShortIdFieldParserRuleCall_1() { return cShortIdFieldParserRuleCall_1; }
		
		//StringField
		public RuleCall getStringFieldParserRuleCall_2() { return cStringFieldParserRuleCall_2; }
		
		//DateField
		public RuleCall getDateFieldParserRuleCall_3() { return cDateFieldParserRuleCall_3; }
		
		//IntegerField
		public RuleCall getIntegerFieldParserRuleCall_4() { return cIntegerFieldParserRuleCall_4; }
		
		//EnumField
		public RuleCall getEnumFieldParserRuleCall_5() { return cEnumFieldParserRuleCall_5; }
		
		//NumericField
		public RuleCall getNumericFieldParserRuleCall_6() { return cNumericFieldParserRuleCall_6; }
		
		//BooleanField
		public RuleCall getBooleanFieldParserRuleCall_7() { return cBooleanFieldParserRuleCall_7; }
		
		//PriceField
		public RuleCall getPriceFieldParserRuleCall_8() { return cPriceFieldParserRuleCall_8; }
		
		//AmountField
		public RuleCall getAmountFieldParserRuleCall_9() { return cAmountFieldParserRuleCall_9; }
		
		//CountField
		public RuleCall getCountFieldParserRuleCall_10() { return cCountFieldParserRuleCall_10; }
		
		//EntityReferenceField
		public RuleCall getEntityReferenceFieldParserRuleCall_11() { return cEntityReferenceFieldParserRuleCall_11; }
		
		//GeoLocationField
		public RuleCall getGeoLocationFieldParserRuleCall_12() { return cGeoLocationFieldParserRuleCall_12; }
	}
	public class FieldElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.yaktor.Domain.Field");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSimpleFieldParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cTypeFieldParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cAnyFieldParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//Field:
		//  SimpleField | TypeField | AnyField;
		@Override public ParserRule getRule() { return rule; }
		
		//SimpleField | TypeField | AnyField
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//SimpleField
		public RuleCall getSimpleFieldParserRuleCall_0() { return cSimpleFieldParserRuleCall_0; }
		
		//TypeField
		public RuleCall getTypeFieldParserRuleCall_1() { return cTypeFieldParserRuleCall_1; }
		
		//AnyField
		public RuleCall getAnyFieldParserRuleCall_2() { return cAnyFieldParserRuleCall_2; }
	}
	public class ConstraintTypeFieldElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.yaktor.Domain.ConstraintTypeField");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSimpleFieldParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cAssociationEndParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//ConstraintTypeField:
		//  SimpleField | AssociationEnd;
		@Override public ParserRule getRule() { return rule; }
		
		//SimpleField | AssociationEnd
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//SimpleField
		public RuleCall getSimpleFieldParserRuleCall_0() { return cSimpleFieldParserRuleCall_0; }
		
		//AssociationEnd
		public RuleCall getAssociationEndParserRuleCall_1() { return cAssociationEndParserRuleCall_1; }
	}
	public class UniqueConstraintElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.yaktor.Domain.UniqueConstraint");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cUniqueConstraintKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cFieldsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cFieldsConstraintTypeFieldCrossReference_1_0 = (CrossReference)cFieldsAssignment_1.eContents().get(0);
		private final RuleCall cFieldsConstraintTypeFieldPossiblyQualifiedNameParserRuleCall_1_0_1 = (RuleCall)cFieldsConstraintTypeFieldCrossReference_1_0.eContents().get(1);
		
		//UniqueConstraint:
		//  'unique-constraint' fields+=[ConstraintTypeField|PossiblyQualifiedName]+;
		@Override public ParserRule getRule() { return rule; }
		
		//'unique-constraint' fields+=[ConstraintTypeField|PossiblyQualifiedName]+
		public Group getGroup() { return cGroup; }
		
		//'unique-constraint'
		public Keyword getUniqueConstraintKeyword_0() { return cUniqueConstraintKeyword_0; }
		
		//fields+=[ConstraintTypeField|PossiblyQualifiedName]+
		public Assignment getFieldsAssignment_1() { return cFieldsAssignment_1; }
		
		//[ConstraintTypeField|PossiblyQualifiedName]
		public CrossReference getFieldsConstraintTypeFieldCrossReference_1_0() { return cFieldsConstraintTypeFieldCrossReference_1_0; }
		
		//PossiblyQualifiedName
		public RuleCall getFieldsConstraintTypeFieldPossiblyQualifiedNameParserRuleCall_1_0_1() { return cFieldsConstraintTypeFieldPossiblyQualifiedNameParserRuleCall_1_0_1; }
	}
	public class IndexConstraintElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.yaktor.Domain.IndexConstraint");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCompositeIndexKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cFieldsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cFieldsConstraintTypeFieldCrossReference_1_0 = (CrossReference)cFieldsAssignment_1.eContents().get(0);
		private final RuleCall cFieldsConstraintTypeFieldPossiblyQualifiedNameParserRuleCall_1_0_1 = (RuleCall)cFieldsConstraintTypeFieldCrossReference_1_0.eContents().get(1);
		
		//IndexConstraint:
		//  'composite-index' fields+=[ConstraintTypeField|PossiblyQualifiedName]+;
		@Override public ParserRule getRule() { return rule; }
		
		//'composite-index' fields+=[ConstraintTypeField|PossiblyQualifiedName]+
		public Group getGroup() { return cGroup; }
		
		//'composite-index'
		public Keyword getCompositeIndexKeyword_0() { return cCompositeIndexKeyword_0; }
		
		//fields+=[ConstraintTypeField|PossiblyQualifiedName]+
		public Assignment getFieldsAssignment_1() { return cFieldsAssignment_1; }
		
		//[ConstraintTypeField|PossiblyQualifiedName]
		public CrossReference getFieldsConstraintTypeFieldCrossReference_1_0() { return cFieldsConstraintTypeFieldCrossReference_1_0; }
		
		//PossiblyQualifiedName
		public RuleCall getFieldsConstraintTypeFieldPossiblyQualifiedNameParserRuleCall_1_0_1() { return cFieldsConstraintTypeFieldPossiblyQualifiedNameParserRuleCall_1_0_1; }
	}
	public class EntityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.yaktor.Domain.Entity");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIsAbstractAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cIsAbstractAbstractKeyword_0_0 = (Keyword)cIsAbstractAssignment_0.eContents().get(0);
		private final Keyword cEntityKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cExtendsKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cSupertypeAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cSupertypeEntityCrossReference_3_1_0 = (CrossReference)cSupertypeAssignment_3_1.eContents().get(0);
		private final RuleCall cSupertypeEntityPossiblyQualifiedNameParserRuleCall_3_1_0_1 = (RuleCall)cSupertypeEntityCrossReference_3_1_0.eContents().get(1);
		private final Assignment cMetaDataAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final Keyword cMetaDataAuditableKeyword_4_0 = (Keyword)cMetaDataAssignment_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cFieldsAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cFieldsFieldParserRuleCall_6_0 = (RuleCall)cFieldsAssignment_6.eContents().get(0);
		private final Assignment cUniqueConstraintsAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cUniqueConstraintsUniqueConstraintParserRuleCall_7_0 = (RuleCall)cUniqueConstraintsAssignment_7.eContents().get(0);
		private final Assignment cIndexConstraintsAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cIndexConstraintsIndexConstraintParserRuleCall_8_0 = (RuleCall)cIndexConstraintsAssignment_8.eContents().get(0);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cKeyKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_9_1 = (Keyword)cGroup_9.eContents().get(1);
		private final Assignment cKeysAssignment_9_2 = (Assignment)cGroup_9.eContents().get(2);
		private final CrossReference cKeysFieldCrossReference_9_2_0 = (CrossReference)cKeysAssignment_9_2.eContents().get(0);
		private final RuleCall cKeysFieldIDTerminalRuleCall_9_2_0_1 = (RuleCall)cKeysFieldCrossReference_9_2_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_9_3 = (Keyword)cGroup_9.eContents().get(3);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//Entity:
		//  isAbstract?='abstract'? 'entity' name=ID ('extends' supertype=[Entity|PossiblyQualifiedName])?  metaData?='auditable'?'{'
		//  fields+=Field*
		//  uniqueConstraints+=UniqueConstraint*
		//  indexConstraints+=IndexConstraint*
		//  ('key' '(' keys+=[Field|ID] ')')?
		//  '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//isAbstract?='abstract'? 'entity' name=ID ('extends' supertype=[Entity|PossiblyQualifiedName])?  metaData?='auditable'?'{'
		//fields+=Field*
		//uniqueConstraints+=UniqueConstraint*
		//indexConstraints+=IndexConstraint*
		//('key' '(' keys+=[Field|ID] ')')?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//isAbstract?='abstract'?
		public Assignment getIsAbstractAssignment_0() { return cIsAbstractAssignment_0; }
		
		//'abstract'
		public Keyword getIsAbstractAbstractKeyword_0_0() { return cIsAbstractAbstractKeyword_0_0; }
		
		//'entity'
		public Keyword getEntityKeyword_1() { return cEntityKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//('extends' supertype=[Entity|PossiblyQualifiedName])?
		public Group getGroup_3() { return cGroup_3; }
		
		//'extends'
		public Keyword getExtendsKeyword_3_0() { return cExtendsKeyword_3_0; }
		
		//supertype=[Entity|PossiblyQualifiedName]
		public Assignment getSupertypeAssignment_3_1() { return cSupertypeAssignment_3_1; }
		
		//[Entity|PossiblyQualifiedName]
		public CrossReference getSupertypeEntityCrossReference_3_1_0() { return cSupertypeEntityCrossReference_3_1_0; }
		
		//PossiblyQualifiedName
		public RuleCall getSupertypeEntityPossiblyQualifiedNameParserRuleCall_3_1_0_1() { return cSupertypeEntityPossiblyQualifiedNameParserRuleCall_3_1_0_1; }
		
		//metaData?='auditable'?
		public Assignment getMetaDataAssignment_4() { return cMetaDataAssignment_4; }
		
		//'auditable'
		public Keyword getMetaDataAuditableKeyword_4_0() { return cMetaDataAuditableKeyword_4_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }
		
		//fields+=Field*
		public Assignment getFieldsAssignment_6() { return cFieldsAssignment_6; }
		
		//Field
		public RuleCall getFieldsFieldParserRuleCall_6_0() { return cFieldsFieldParserRuleCall_6_0; }
		
		//uniqueConstraints+=UniqueConstraint*
		public Assignment getUniqueConstraintsAssignment_7() { return cUniqueConstraintsAssignment_7; }
		
		//UniqueConstraint
		public RuleCall getUniqueConstraintsUniqueConstraintParserRuleCall_7_0() { return cUniqueConstraintsUniqueConstraintParserRuleCall_7_0; }
		
		//indexConstraints+=IndexConstraint*
		public Assignment getIndexConstraintsAssignment_8() { return cIndexConstraintsAssignment_8; }
		
		//IndexConstraint
		public RuleCall getIndexConstraintsIndexConstraintParserRuleCall_8_0() { return cIndexConstraintsIndexConstraintParserRuleCall_8_0; }
		
		//('key' '(' keys+=[Field|ID] ')')?
		public Group getGroup_9() { return cGroup_9; }
		
		//'key'
		public Keyword getKeyKeyword_9_0() { return cKeyKeyword_9_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_9_1() { return cLeftParenthesisKeyword_9_1; }
		
		//keys+=[Field|ID]
		public Assignment getKeysAssignment_9_2() { return cKeysAssignment_9_2; }
		
		//[Field|ID]
		public CrossReference getKeysFieldCrossReference_9_2_0() { return cKeysFieldCrossReference_9_2_0; }
		
		//ID
		public RuleCall getKeysFieldIDTerminalRuleCall_9_2_0_1() { return cKeysFieldIDTerminalRuleCall_9_2_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_9_3() { return cRightParenthesisKeyword_9_3; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }
	}
	public class TypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.yaktor.Domain.Type");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIsAbstractAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cIsAbstractAbstractKeyword_0_0 = (Keyword)cIsAbstractAssignment_0.eContents().get(0);
		private final Keyword cTypeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cExtendsKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cSupertypeAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cSupertypeTypeCrossReference_3_1_0 = (CrossReference)cSupertypeAssignment_3_1.eContents().get(0);
		private final RuleCall cSupertypeTypePossiblyQualifiedNameParserRuleCall_3_1_0_1 = (RuleCall)cSupertypeTypeCrossReference_3_1_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cFieldsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cFieldsFieldParserRuleCall_5_0 = (RuleCall)cFieldsAssignment_5.eContents().get(0);
		private final Assignment cUniqueConstraintsAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cUniqueConstraintsUniqueConstraintParserRuleCall_6_0 = (RuleCall)cUniqueConstraintsAssignment_6.eContents().get(0);
		private final Assignment cIndexConstraintsAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cIndexConstraintsIndexConstraintParserRuleCall_7_0 = (RuleCall)cIndexConstraintsAssignment_7.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cKeyKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_8_1 = (Keyword)cGroup_8.eContents().get(1);
		private final Assignment cKeysAssignment_8_2 = (Assignment)cGroup_8.eContents().get(2);
		private final CrossReference cKeysFieldCrossReference_8_2_0 = (CrossReference)cKeysAssignment_8_2.eContents().get(0);
		private final RuleCall cKeysFieldIDTerminalRuleCall_8_2_0_1 = (RuleCall)cKeysFieldCrossReference_8_2_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_8_3 = (Keyword)cGroup_8.eContents().get(3);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//Type:
		//  isAbstract?='abstract'? 'type' name=ID ('extends' supertype=[Type|PossiblyQualifiedName])?  '{'
		//  fields+=Field*
		//  uniqueConstraints+=UniqueConstraint*
		//  indexConstraints+=IndexConstraint*
		//  ('key' '(' keys+=[Field|ID] ')')?
		//  '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//isAbstract?='abstract'? 'type' name=ID ('extends' supertype=[Type|PossiblyQualifiedName])?  '{'
		//fields+=Field*
		//uniqueConstraints+=UniqueConstraint*
		//indexConstraints+=IndexConstraint*
		//('key' '(' keys+=[Field|ID] ')')?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//isAbstract?='abstract'?
		public Assignment getIsAbstractAssignment_0() { return cIsAbstractAssignment_0; }
		
		//'abstract'
		public Keyword getIsAbstractAbstractKeyword_0_0() { return cIsAbstractAbstractKeyword_0_0; }
		
		//'type'
		public Keyword getTypeKeyword_1() { return cTypeKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//('extends' supertype=[Type|PossiblyQualifiedName])?
		public Group getGroup_3() { return cGroup_3; }
		
		//'extends'
		public Keyword getExtendsKeyword_3_0() { return cExtendsKeyword_3_0; }
		
		//supertype=[Type|PossiblyQualifiedName]
		public Assignment getSupertypeAssignment_3_1() { return cSupertypeAssignment_3_1; }
		
		//[Type|PossiblyQualifiedName]
		public CrossReference getSupertypeTypeCrossReference_3_1_0() { return cSupertypeTypeCrossReference_3_1_0; }
		
		//PossiblyQualifiedName
		public RuleCall getSupertypeTypePossiblyQualifiedNameParserRuleCall_3_1_0_1() { return cSupertypeTypePossiblyQualifiedNameParserRuleCall_3_1_0_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }
		
		//fields+=Field*
		public Assignment getFieldsAssignment_5() { return cFieldsAssignment_5; }
		
		//Field
		public RuleCall getFieldsFieldParserRuleCall_5_0() { return cFieldsFieldParserRuleCall_5_0; }
		
		//uniqueConstraints+=UniqueConstraint*
		public Assignment getUniqueConstraintsAssignment_6() { return cUniqueConstraintsAssignment_6; }
		
		//UniqueConstraint
		public RuleCall getUniqueConstraintsUniqueConstraintParserRuleCall_6_0() { return cUniqueConstraintsUniqueConstraintParserRuleCall_6_0; }
		
		//indexConstraints+=IndexConstraint*
		public Assignment getIndexConstraintsAssignment_7() { return cIndexConstraintsAssignment_7; }
		
		//IndexConstraint
		public RuleCall getIndexConstraintsIndexConstraintParserRuleCall_7_0() { return cIndexConstraintsIndexConstraintParserRuleCall_7_0; }
		
		//('key' '(' keys+=[Field|ID] ')')?
		public Group getGroup_8() { return cGroup_8; }
		
		//'key'
		public Keyword getKeyKeyword_8_0() { return cKeyKeyword_8_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_8_1() { return cLeftParenthesisKeyword_8_1; }
		
		//keys+=[Field|ID]
		public Assignment getKeysAssignment_8_2() { return cKeysAssignment_8_2; }
		
		//[Field|ID]
		public CrossReference getKeysFieldCrossReference_8_2_0() { return cKeysFieldCrossReference_8_2_0; }
		
		//ID
		public RuleCall getKeysFieldIDTerminalRuleCall_8_2_0_1() { return cKeysFieldIDTerminalRuleCall_8_2_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_8_3() { return cRightParenthesisKeyword_8_3; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}
	public class EnumTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.yaktor.Domain.EnumType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEnumKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cValuesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cValuesEnumValueParserRuleCall_3_0 = (RuleCall)cValuesAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//EnumType:
		//  'enum' name=ID '{'
		//  values+=EnumValue+
		//  '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'enum' name=ID '{'
		//values+=EnumValue+
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'enum'
		public Keyword getEnumKeyword_0() { return cEnumKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//values+=EnumValue+
		public Assignment getValuesAssignment_3() { return cValuesAssignment_3; }
		
		//EnumValue
		public RuleCall getValuesEnumValueParserRuleCall_3_0() { return cValuesEnumValueParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class EnumValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.yaktor.Domain.EnumValue");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueSTRINGTerminalRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//EnumValue:
		//  name=ID '=' value=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID '=' value=STRING
		public Group getGroup() { return cGroup; }
		
		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }
		
		//value=STRING
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }
		
		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_2_0() { return cValueSTRINGTerminalRuleCall_2_0; }
	}
	public class IdFieldElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.yaktor.Domain.IdField");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cIdKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cCardinalityAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cCardinalityCardinalityEnumRuleCall_2_0 = (RuleCall)cCardinalityAssignment_2.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_3 = (UnorderedGroup)cGroup.eContents().get(3);
		private final Assignment cUniqueAssignment_3_0 = (Assignment)cUnorderedGroup_3.eContents().get(0);
		private final Keyword cUniqueUniqueKeyword_3_0_0 = (Keyword)cUniqueAssignment_3_0.eContents().get(0);
		private final Assignment cIndexedAssignment_3_1 = (Assignment)cUnorderedGroup_3.eContents().get(1);
		private final Keyword cIndexedIndexedKeyword_3_1_0 = (Keyword)cIndexedAssignment_3_1.eContents().get(0);
		
		//IdField:
		//    'Id' name=ID
		//  (cardinality=Cardinality)?
		//  (unique?='unique'? &
		//  indexed?='indexed'?)
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  'Id' name=ID
		//(cardinality=Cardinality)?
		//(unique?='unique'? &
		//indexed?='indexed'?)
		public Group getGroup() { return cGroup; }
		
		//'Id'
		public Keyword getIdKeyword_0() { return cIdKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//(cardinality=Cardinality)?
		public Assignment getCardinalityAssignment_2() { return cCardinalityAssignment_2; }
		
		//Cardinality
		public RuleCall getCardinalityCardinalityEnumRuleCall_2_0() { return cCardinalityCardinalityEnumRuleCall_2_0; }
		
		//(unique?='unique'? &
		//indexed?='indexed'?)
		public UnorderedGroup getUnorderedGroup_3() { return cUnorderedGroup_3; }
		
		//unique?='unique'?
		public Assignment getUniqueAssignment_3_0() { return cUniqueAssignment_3_0; }
		
		//'unique'
		public Keyword getUniqueUniqueKeyword_3_0_0() { return cUniqueUniqueKeyword_3_0_0; }
		
		//indexed?='indexed'?
		public Assignment getIndexedAssignment_3_1() { return cIndexedAssignment_3_1; }
		
		//'indexed'
		public Keyword getIndexedIndexedKeyword_3_1_0() { return cIndexedIndexedKeyword_3_1_0; }
	}
	public class ShortIdFieldElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.yaktor.Domain.ShortIdField");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cShortIdKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cCardinalityAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cCardinalityCardinalityEnumRuleCall_2_0 = (RuleCall)cCardinalityAssignment_2.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_3 = (UnorderedGroup)cGroup.eContents().get(3);
		private final Group cGroup_3_0 = (Group)cUnorderedGroup_3.eContents().get(0);
		private final Assignment cPatternAssignment_3_0_0 = (Assignment)cGroup_3_0.eContents().get(0);
		private final RuleCall cPatternSTRINGTerminalRuleCall_3_0_0_0 = (RuleCall)cPatternAssignment_3_0_0.eContents().get(0);
		private final Assignment cMaxValueAssignment_3_0_1 = (Assignment)cGroup_3_0.eContents().get(1);
		private final RuleCall cMaxValueINTTerminalRuleCall_3_0_1_0 = (RuleCall)cMaxValueAssignment_3_0_1.eContents().get(0);
		private final Assignment cUniqueAssignment_3_1 = (Assignment)cUnorderedGroup_3.eContents().get(1);
		private final Keyword cUniqueUniqueKeyword_3_1_0 = (Keyword)cUniqueAssignment_3_1.eContents().get(0);
		private final Assignment cIndexedAssignment_3_2 = (Assignment)cUnorderedGroup_3.eContents().get(2);
		private final Keyword cIndexedIndexedKeyword_3_2_0 = (Keyword)cIndexedAssignment_3_2.eContents().get(0);
		
		//ShortIdField:
		//    'ShortId' name=ID
		//  (cardinality=Cardinality)?
		//  ((pattern=STRING maxValue=INT?)? &
		//  unique?='unique'? &
		//  indexed?='indexed'?)
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  'ShortId' name=ID
		//(cardinality=Cardinality)?
		//((pattern=STRING maxValue=INT?)? &
		//unique?='unique'? &
		//indexed?='indexed'?)
		public Group getGroup() { return cGroup; }
		
		//'ShortId'
		public Keyword getShortIdKeyword_0() { return cShortIdKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//(cardinality=Cardinality)?
		public Assignment getCardinalityAssignment_2() { return cCardinalityAssignment_2; }
		
		//Cardinality
		public RuleCall getCardinalityCardinalityEnumRuleCall_2_0() { return cCardinalityCardinalityEnumRuleCall_2_0; }
		
		//((pattern=STRING maxValue=INT?)? &
		//unique?='unique'? &
		//indexed?='indexed'?)
		public UnorderedGroup getUnorderedGroup_3() { return cUnorderedGroup_3; }
		
		//(pattern=STRING maxValue=INT?)?
		public Group getGroup_3_0() { return cGroup_3_0; }
		
		//pattern=STRING
		public Assignment getPatternAssignment_3_0_0() { return cPatternAssignment_3_0_0; }
		
		//STRING
		public RuleCall getPatternSTRINGTerminalRuleCall_3_0_0_0() { return cPatternSTRINGTerminalRuleCall_3_0_0_0; }
		
		//maxValue=INT?
		public Assignment getMaxValueAssignment_3_0_1() { return cMaxValueAssignment_3_0_1; }
		
		//INT
		public RuleCall getMaxValueINTTerminalRuleCall_3_0_1_0() { return cMaxValueINTTerminalRuleCall_3_0_1_0; }
		
		//unique?='unique'?
		public Assignment getUniqueAssignment_3_1() { return cUniqueAssignment_3_1; }
		
		//'unique'
		public Keyword getUniqueUniqueKeyword_3_1_0() { return cUniqueUniqueKeyword_3_1_0; }
		
		//indexed?='indexed'?
		public Assignment getIndexedAssignment_3_2() { return cIndexedAssignment_3_2; }
		
		//'indexed'
		public Keyword getIndexedIndexedKeyword_3_2_0() { return cIndexedIndexedKeyword_3_2_0; }
	}
	public class StringFieldElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.yaktor.Domain.StringField");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cStringKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cCardinalityAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cCardinalityCardinalityEnumRuleCall_2_0 = (RuleCall)cCardinalityAssignment_2.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_3 = (UnorderedGroup)cGroup.eContents().get(3);
		private final Group cGroup_3_0 = (Group)cUnorderedGroup_3.eContents().get(0);
		private final Keyword cEqualsSignKeyword_3_0_0 = (Keyword)cGroup_3_0.eContents().get(0);
		private final Assignment cDefaultValueAssignment_3_0_1 = (Assignment)cGroup_3_0.eContents().get(1);
		private final RuleCall cDefaultValueSTRINGTerminalRuleCall_3_0_1_0 = (RuleCall)cDefaultValueAssignment_3_0_1.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cUnorderedGroup_3.eContents().get(1);
		private final Keyword cPatternKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Assignment cPatternAssignment_3_1_1 = (Assignment)cGroup_3_1.eContents().get(1);
		private final RuleCall cPatternSTRINGTerminalRuleCall_3_1_1_0 = (RuleCall)cPatternAssignment_3_1_1.eContents().get(0);
		private final Assignment cUniqueAssignment_3_2 = (Assignment)cUnorderedGroup_3.eContents().get(2);
		private final Keyword cUniqueUniqueKeyword_3_2_0 = (Keyword)cUniqueAssignment_3_2.eContents().get(0);
		private final Assignment cIndexedAssignment_3_3 = (Assignment)cUnorderedGroup_3.eContents().get(3);
		private final Keyword cIndexedIndexedKeyword_3_3_0 = (Keyword)cIndexedAssignment_3_3.eContents().get(0);
		private final Assignment cObscuredAssignment_3_4 = (Assignment)cUnorderedGroup_3.eContents().get(4);
		private final Keyword cObscuredObscuredKeyword_3_4_0 = (Keyword)cObscuredAssignment_3_4.eContents().get(0);
		private final Group cGroup_3_5 = (Group)cUnorderedGroup_3.eContents().get(5);
		private final Keyword cLeftSquareBracketKeyword_3_5_0 = (Keyword)cGroup_3_5.eContents().get(0);
		private final Assignment cMinLengthAssignment_3_5_1 = (Assignment)cGroup_3_5.eContents().get(1);
		private final RuleCall cMinLengthINTTerminalRuleCall_3_5_1_0 = (RuleCall)cMinLengthAssignment_3_5_1.eContents().get(0);
		private final Keyword cFullStopFullStopKeyword_3_5_2 = (Keyword)cGroup_3_5.eContents().get(2);
		private final Assignment cMaxLengthAssignment_3_5_3 = (Assignment)cGroup_3_5.eContents().get(3);
		private final RuleCall cMaxLengthINTTerminalRuleCall_3_5_3_0 = (RuleCall)cMaxLengthAssignment_3_5_3.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_3_5_4 = (Keyword)cGroup_3_5.eContents().get(4);
		
		//StringField:
		//  'String' name=ID
		//  (cardinality=Cardinality)?
		//  (('=' defaultValue=STRING)? &
		//  ('pattern' pattern=STRING)? &
		//  unique?='unique'? &
		//  indexed?='indexed'? &
		//  obscured?='obscured'? &
		//  ('[' (minLength=INT)? '..' (maxLength=INT)? ']')?)
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'String' name=ID
		//(cardinality=Cardinality)?
		//(('=' defaultValue=STRING)? &
		//('pattern' pattern=STRING)? &
		//unique?='unique'? &
		//indexed?='indexed'? &
		//obscured?='obscured'? &
		//('[' (minLength=INT)? '..' (maxLength=INT)? ']')?)
		public Group getGroup() { return cGroup; }
		
		//'String'
		public Keyword getStringKeyword_0() { return cStringKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//(cardinality=Cardinality)?
		public Assignment getCardinalityAssignment_2() { return cCardinalityAssignment_2; }
		
		//Cardinality
		public RuleCall getCardinalityCardinalityEnumRuleCall_2_0() { return cCardinalityCardinalityEnumRuleCall_2_0; }
		
		//(('=' defaultValue=STRING)? &
		//('pattern' pattern=STRING)? &
		//unique?='unique'? &
		//indexed?='indexed'? &
		//obscured?='obscured'? &
		//('[' (minLength=INT)? '..' (maxLength=INT)? ']')?)
		public UnorderedGroup getUnorderedGroup_3() { return cUnorderedGroup_3; }
		
		//('=' defaultValue=STRING)?
		public Group getGroup_3_0() { return cGroup_3_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_3_0_0() { return cEqualsSignKeyword_3_0_0; }
		
		//defaultValue=STRING
		public Assignment getDefaultValueAssignment_3_0_1() { return cDefaultValueAssignment_3_0_1; }
		
		//STRING
		public RuleCall getDefaultValueSTRINGTerminalRuleCall_3_0_1_0() { return cDefaultValueSTRINGTerminalRuleCall_3_0_1_0; }
		
		//('pattern' pattern=STRING)?
		public Group getGroup_3_1() { return cGroup_3_1; }
		
		//'pattern'
		public Keyword getPatternKeyword_3_1_0() { return cPatternKeyword_3_1_0; }
		
		//pattern=STRING
		public Assignment getPatternAssignment_3_1_1() { return cPatternAssignment_3_1_1; }
		
		//STRING
		public RuleCall getPatternSTRINGTerminalRuleCall_3_1_1_0() { return cPatternSTRINGTerminalRuleCall_3_1_1_0; }
		
		//unique?='unique'?
		public Assignment getUniqueAssignment_3_2() { return cUniqueAssignment_3_2; }
		
		//'unique'
		public Keyword getUniqueUniqueKeyword_3_2_0() { return cUniqueUniqueKeyword_3_2_0; }
		
		//indexed?='indexed'?
		public Assignment getIndexedAssignment_3_3() { return cIndexedAssignment_3_3; }
		
		//'indexed'
		public Keyword getIndexedIndexedKeyword_3_3_0() { return cIndexedIndexedKeyword_3_3_0; }
		
		//obscured?='obscured'?
		public Assignment getObscuredAssignment_3_4() { return cObscuredAssignment_3_4; }
		
		//'obscured'
		public Keyword getObscuredObscuredKeyword_3_4_0() { return cObscuredObscuredKeyword_3_4_0; }
		
		//('[' (minLength=INT)? '..' (maxLength=INT)? ']')?
		public Group getGroup_3_5() { return cGroup_3_5; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_3_5_0() { return cLeftSquareBracketKeyword_3_5_0; }
		
		//(minLength=INT)?
		public Assignment getMinLengthAssignment_3_5_1() { return cMinLengthAssignment_3_5_1; }
		
		//INT
		public RuleCall getMinLengthINTTerminalRuleCall_3_5_1_0() { return cMinLengthINTTerminalRuleCall_3_5_1_0; }
		
		//'..'
		public Keyword getFullStopFullStopKeyword_3_5_2() { return cFullStopFullStopKeyword_3_5_2; }
		
		//(maxLength=INT)?
		public Assignment getMaxLengthAssignment_3_5_3() { return cMaxLengthAssignment_3_5_3; }
		
		//INT
		public RuleCall getMaxLengthINTTerminalRuleCall_3_5_3_0() { return cMaxLengthINTTerminalRuleCall_3_5_3_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_3_5_4() { return cRightSquareBracketKeyword_3_5_4; }
	}
	public class DateFieldElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.yaktor.Domain.DateField");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDateKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cEqualsSignKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cDefaultValueAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cDefaultValueSTRINGTerminalRuleCall_2_1_0 = (RuleCall)cDefaultValueAssignment_2_1.eContents().get(0);
		private final Assignment cCardinalityAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cCardinalityCardinalityEnumRuleCall_3_0 = (RuleCall)cCardinalityAssignment_3.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_4 = (UnorderedGroup)cGroup.eContents().get(4);
		private final Group cGroup_4_0 = (Group)cUnorderedGroup_4.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_4_0_0 = (Keyword)cGroup_4_0.eContents().get(0);
		private final Assignment cBeforeAssignment_4_0_1 = (Assignment)cGroup_4_0.eContents().get(1);
		private final RuleCall cBeforeSTRINGTerminalRuleCall_4_0_1_0 = (RuleCall)cBeforeAssignment_4_0_1.eContents().get(0);
		private final Keyword cFullStopFullStopKeyword_4_0_2 = (Keyword)cGroup_4_0.eContents().get(2);
		private final Assignment cAfterAssignment_4_0_3 = (Assignment)cGroup_4_0.eContents().get(3);
		private final RuleCall cAfterSTRINGTerminalRuleCall_4_0_3_0 = (RuleCall)cAfterAssignment_4_0_3.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_4_0_4 = (Keyword)cGroup_4_0.eContents().get(4);
		private final Assignment cUniqueAssignment_4_1 = (Assignment)cUnorderedGroup_4.eContents().get(1);
		private final Keyword cUniqueUniqueKeyword_4_1_0 = (Keyword)cUniqueAssignment_4_1.eContents().get(0);
		private final Assignment cIndexedAssignment_4_2 = (Assignment)cUnorderedGroup_4.eContents().get(2);
		private final Keyword cIndexedIndexedKeyword_4_2_0 = (Keyword)cIndexedAssignment_4_2.eContents().get(0);
		private final Alternatives cAlternatives_4_3 = (Alternatives)cUnorderedGroup_4.eContents().get(3);
		private final Assignment cPastAssignment_4_3_0 = (Assignment)cAlternatives_4_3.eContents().get(0);
		private final Keyword cPastPastKeyword_4_3_0_0 = (Keyword)cPastAssignment_4_3_0.eContents().get(0);
		private final Assignment cFutureAssignment_4_3_1 = (Assignment)cAlternatives_4_3.eContents().get(1);
		private final Keyword cFutureFutureKeyword_4_3_1_0 = (Keyword)cFutureAssignment_4_3_1.eContents().get(0);
		
		//DateField:
		//  'Date' name=ID
		//  ('=' defaultValue=STRING)?
		//  (cardinality=Cardinality)?
		//  (('[' (before=STRING)? '..' (after=STRING)? ']')? &
		//  unique?='unique'? &
		//  indexed?='indexed'? &
		//  (past?='past' | future?='future')?)
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'Date' name=ID
		//('=' defaultValue=STRING)?
		//(cardinality=Cardinality)?
		//(('[' (before=STRING)? '..' (after=STRING)? ']')? &
		//unique?='unique'? &
		//indexed?='indexed'? &
		//(past?='past' | future?='future')?)
		public Group getGroup() { return cGroup; }
		
		//'Date'
		public Keyword getDateKeyword_0() { return cDateKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//('=' defaultValue=STRING)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'='
		public Keyword getEqualsSignKeyword_2_0() { return cEqualsSignKeyword_2_0; }
		
		//defaultValue=STRING
		public Assignment getDefaultValueAssignment_2_1() { return cDefaultValueAssignment_2_1; }
		
		//STRING
		public RuleCall getDefaultValueSTRINGTerminalRuleCall_2_1_0() { return cDefaultValueSTRINGTerminalRuleCall_2_1_0; }
		
		//(cardinality=Cardinality)?
		public Assignment getCardinalityAssignment_3() { return cCardinalityAssignment_3; }
		
		//Cardinality
		public RuleCall getCardinalityCardinalityEnumRuleCall_3_0() { return cCardinalityCardinalityEnumRuleCall_3_0; }
		
		//(('[' (before=STRING)? '..' (after=STRING)? ']')? &
		//unique?='unique'? &
		//indexed?='indexed'? &
		//(past?='past' | future?='future')?)
		public UnorderedGroup getUnorderedGroup_4() { return cUnorderedGroup_4; }
		
		//('[' (before=STRING)? '..' (after=STRING)? ']')?
		public Group getGroup_4_0() { return cGroup_4_0; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_4_0_0() { return cLeftSquareBracketKeyword_4_0_0; }
		
		//(before=STRING)?
		public Assignment getBeforeAssignment_4_0_1() { return cBeforeAssignment_4_0_1; }
		
		//STRING
		public RuleCall getBeforeSTRINGTerminalRuleCall_4_0_1_0() { return cBeforeSTRINGTerminalRuleCall_4_0_1_0; }
		
		//'..'
		public Keyword getFullStopFullStopKeyword_4_0_2() { return cFullStopFullStopKeyword_4_0_2; }
		
		//(after=STRING)?
		public Assignment getAfterAssignment_4_0_3() { return cAfterAssignment_4_0_3; }
		
		//STRING
		public RuleCall getAfterSTRINGTerminalRuleCall_4_0_3_0() { return cAfterSTRINGTerminalRuleCall_4_0_3_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_4_0_4() { return cRightSquareBracketKeyword_4_0_4; }
		
		//unique?='unique'?
		public Assignment getUniqueAssignment_4_1() { return cUniqueAssignment_4_1; }
		
		//'unique'
		public Keyword getUniqueUniqueKeyword_4_1_0() { return cUniqueUniqueKeyword_4_1_0; }
		
		//indexed?='indexed'?
		public Assignment getIndexedAssignment_4_2() { return cIndexedAssignment_4_2; }
		
		//'indexed'
		public Keyword getIndexedIndexedKeyword_4_2_0() { return cIndexedIndexedKeyword_4_2_0; }
		
		//(past?='past' | future?='future')?
		public Alternatives getAlternatives_4_3() { return cAlternatives_4_3; }
		
		//past?='past'
		public Assignment getPastAssignment_4_3_0() { return cPastAssignment_4_3_0; }
		
		//'past'
		public Keyword getPastPastKeyword_4_3_0_0() { return cPastPastKeyword_4_3_0_0; }
		
		//future?='future'
		public Assignment getFutureAssignment_4_3_1() { return cFutureAssignment_4_3_1; }
		
		//'future'
		public Keyword getFutureFutureKeyword_4_3_1_0() { return cFutureFutureKeyword_4_3_1_0; }
	}
	public class GeoLocationFieldElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.yaktor.Domain.GeoLocationField");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cGeoLocationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cCardinalityAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cCardinalitySinglularCardinalityEnumRuleCall_2_0 = (RuleCall)cCardinalityAssignment_2.eContents().get(0);
		
		//GeoLocationField:
		//  'GeoLocation' name=ID
		//  (cardinality=SinglularCardinality)?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'GeoLocation' name=ID
		//(cardinality=SinglularCardinality)?
		public Group getGroup() { return cGroup; }
		
		//'GeoLocation'
		public Keyword getGeoLocationKeyword_0() { return cGeoLocationKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//(cardinality=SinglularCardinality)?
		public Assignment getCardinalityAssignment_2() { return cCardinalityAssignment_2; }
		
		//SinglularCardinality
		public RuleCall getCardinalitySinglularCardinalityEnumRuleCall_2_0() { return cCardinalitySinglularCardinalityEnumRuleCall_2_0; }
	}
	public class IntegerFieldElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.yaktor.Domain.IntegerField");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cIntegerKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cCardinalityAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cCardinalityCardinalityEnumRuleCall_2_0 = (RuleCall)cCardinalityAssignment_2.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_3 = (UnorderedGroup)cGroup.eContents().get(3);
		private final Group cGroup_3_0 = (Group)cUnorderedGroup_3.eContents().get(0);
		private final Keyword cEqualsSignKeyword_3_0_0 = (Keyword)cGroup_3_0.eContents().get(0);
		private final Assignment cDefaultValueAssignment_3_0_1 = (Assignment)cGroup_3_0.eContents().get(1);
		private final RuleCall cDefaultValueIntegerConstParserRuleCall_3_0_1_0 = (RuleCall)cDefaultValueAssignment_3_0_1.eContents().get(0);
		private final Assignment cUniqueAssignment_3_1 = (Assignment)cUnorderedGroup_3.eContents().get(1);
		private final Keyword cUniqueUniqueKeyword_3_1_0 = (Keyword)cUniqueAssignment_3_1.eContents().get(0);
		private final Assignment cIndexedAssignment_3_2 = (Assignment)cUnorderedGroup_3.eContents().get(2);
		private final Keyword cIndexedIndexedKeyword_3_2_0 = (Keyword)cIndexedAssignment_3_2.eContents().get(0);
		private final Group cGroup_3_3 = (Group)cUnorderedGroup_3.eContents().get(3);
		private final Keyword cLeftSquareBracketKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cMinValueAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final RuleCall cMinValueIntegerConstParserRuleCall_3_3_1_0 = (RuleCall)cMinValueAssignment_3_3_1.eContents().get(0);
		private final Keyword cFullStopFullStopKeyword_3_3_2 = (Keyword)cGroup_3_3.eContents().get(2);
		private final Assignment cMaxValueAssignment_3_3_3 = (Assignment)cGroup_3_3.eContents().get(3);
		private final RuleCall cMaxValueIntegerConstParserRuleCall_3_3_3_0 = (RuleCall)cMaxValueAssignment_3_3_3.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_3_3_4 = (Keyword)cGroup_3_3.eContents().get(4);
		
		//IntegerField:
		//  'Integer' name=ID
		//  (cardinality=Cardinality)?
		//  (('=' defaultValue=IntegerConst)? &
		//  unique?='unique'? &
		//  indexed?='indexed'? &
		//  ('[' (minValue=IntegerConst)? '..' (maxValue=IntegerConst)? ']')?)
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'Integer' name=ID
		//(cardinality=Cardinality)?
		//(('=' defaultValue=IntegerConst)? &
		//unique?='unique'? &
		//indexed?='indexed'? &
		//('[' (minValue=IntegerConst)? '..' (maxValue=IntegerConst)? ']')?)
		public Group getGroup() { return cGroup; }
		
		//'Integer'
		public Keyword getIntegerKeyword_0() { return cIntegerKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//(cardinality=Cardinality)?
		public Assignment getCardinalityAssignment_2() { return cCardinalityAssignment_2; }
		
		//Cardinality
		public RuleCall getCardinalityCardinalityEnumRuleCall_2_0() { return cCardinalityCardinalityEnumRuleCall_2_0; }
		
		//(('=' defaultValue=IntegerConst)? &
		//unique?='unique'? &
		//indexed?='indexed'? &
		//('[' (minValue=IntegerConst)? '..' (maxValue=IntegerConst)? ']')?)
		public UnorderedGroup getUnorderedGroup_3() { return cUnorderedGroup_3; }
		
		//('=' defaultValue=IntegerConst)?
		public Group getGroup_3_0() { return cGroup_3_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_3_0_0() { return cEqualsSignKeyword_3_0_0; }
		
		//defaultValue=IntegerConst
		public Assignment getDefaultValueAssignment_3_0_1() { return cDefaultValueAssignment_3_0_1; }
		
		//IntegerConst
		public RuleCall getDefaultValueIntegerConstParserRuleCall_3_0_1_0() { return cDefaultValueIntegerConstParserRuleCall_3_0_1_0; }
		
		//unique?='unique'?
		public Assignment getUniqueAssignment_3_1() { return cUniqueAssignment_3_1; }
		
		//'unique'
		public Keyword getUniqueUniqueKeyword_3_1_0() { return cUniqueUniqueKeyword_3_1_0; }
		
		//indexed?='indexed'?
		public Assignment getIndexedAssignment_3_2() { return cIndexedAssignment_3_2; }
		
		//'indexed'
		public Keyword getIndexedIndexedKeyword_3_2_0() { return cIndexedIndexedKeyword_3_2_0; }
		
		//('[' (minValue=IntegerConst)? '..' (maxValue=IntegerConst)? ']')?
		public Group getGroup_3_3() { return cGroup_3_3; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_3_3_0() { return cLeftSquareBracketKeyword_3_3_0; }
		
		//(minValue=IntegerConst)?
		public Assignment getMinValueAssignment_3_3_1() { return cMinValueAssignment_3_3_1; }
		
		//IntegerConst
		public RuleCall getMinValueIntegerConstParserRuleCall_3_3_1_0() { return cMinValueIntegerConstParserRuleCall_3_3_1_0; }
		
		//'..'
		public Keyword getFullStopFullStopKeyword_3_3_2() { return cFullStopFullStopKeyword_3_3_2; }
		
		//(maxValue=IntegerConst)?
		public Assignment getMaxValueAssignment_3_3_3() { return cMaxValueAssignment_3_3_3; }
		
		//IntegerConst
		public RuleCall getMaxValueIntegerConstParserRuleCall_3_3_3_0() { return cMaxValueIntegerConstParserRuleCall_3_3_3_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_3_3_4() { return cRightSquareBracketKeyword_3_3_4; }
	}
	public class NumericFieldElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.yaktor.Domain.NumericField");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNumericKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cCardinalityAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cCardinalityCardinalityEnumRuleCall_2_0 = (RuleCall)cCardinalityAssignment_2.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_3 = (UnorderedGroup)cGroup.eContents().get(3);
		private final Group cGroup_3_0 = (Group)cUnorderedGroup_3.eContents().get(0);
		private final Keyword cEqualsSignKeyword_3_0_0 = (Keyword)cGroup_3_0.eContents().get(0);
		private final Assignment cDefaultValueAssignment_3_0_1 = (Assignment)cGroup_3_0.eContents().get(1);
		private final RuleCall cDefaultValueFloatingPointConstParserRuleCall_3_0_1_0 = (RuleCall)cDefaultValueAssignment_3_0_1.eContents().get(0);
		private final Assignment cUniqueAssignment_3_1 = (Assignment)cUnorderedGroup_3.eContents().get(1);
		private final Keyword cUniqueUniqueKeyword_3_1_0 = (Keyword)cUniqueAssignment_3_1.eContents().get(0);
		private final Assignment cIndexedAssignment_3_2 = (Assignment)cUnorderedGroup_3.eContents().get(2);
		private final Keyword cIndexedIndexedKeyword_3_2_0 = (Keyword)cIndexedAssignment_3_2.eContents().get(0);
		private final Group cGroup_3_3 = (Group)cUnorderedGroup_3.eContents().get(3);
		private final Keyword cLeftSquareBracketKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cMinValueAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final RuleCall cMinValueFloatingPointConstParserRuleCall_3_3_1_0 = (RuleCall)cMinValueAssignment_3_3_1.eContents().get(0);
		private final Keyword cFullStopFullStopKeyword_3_3_2 = (Keyword)cGroup_3_3.eContents().get(2);
		private final Assignment cMaxValueAssignment_3_3_3 = (Assignment)cGroup_3_3.eContents().get(3);
		private final RuleCall cMaxValueFloatingPointConstParserRuleCall_3_3_3_0 = (RuleCall)cMaxValueAssignment_3_3_3.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_3_3_4 = (Keyword)cGroup_3_3.eContents().get(4);
		
		//NumericField:
		//  'Numeric' name=ID
		//  (cardinality=Cardinality)?
		//  (('=' defaultValue=FloatingPointConst)? &
		//  unique?='unique'? &
		//  indexed?='indexed'? &
		//  ('[' (minValue=FloatingPointConst)? '..' (maxValue=FloatingPointConst)? ']')?)
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'Numeric' name=ID
		//(cardinality=Cardinality)?
		//(('=' defaultValue=FloatingPointConst)? &
		//unique?='unique'? &
		//indexed?='indexed'? &
		//('[' (minValue=FloatingPointConst)? '..' (maxValue=FloatingPointConst)? ']')?)
		public Group getGroup() { return cGroup; }
		
		//'Numeric'
		public Keyword getNumericKeyword_0() { return cNumericKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//(cardinality=Cardinality)?
		public Assignment getCardinalityAssignment_2() { return cCardinalityAssignment_2; }
		
		//Cardinality
		public RuleCall getCardinalityCardinalityEnumRuleCall_2_0() { return cCardinalityCardinalityEnumRuleCall_2_0; }
		
		//(('=' defaultValue=FloatingPointConst)? &
		//unique?='unique'? &
		//indexed?='indexed'? &
		//('[' (minValue=FloatingPointConst)? '..' (maxValue=FloatingPointConst)? ']')?)
		public UnorderedGroup getUnorderedGroup_3() { return cUnorderedGroup_3; }
		
		//('=' defaultValue=FloatingPointConst)?
		public Group getGroup_3_0() { return cGroup_3_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_3_0_0() { return cEqualsSignKeyword_3_0_0; }
		
		//defaultValue=FloatingPointConst
		public Assignment getDefaultValueAssignment_3_0_1() { return cDefaultValueAssignment_3_0_1; }
		
		//FloatingPointConst
		public RuleCall getDefaultValueFloatingPointConstParserRuleCall_3_0_1_0() { return cDefaultValueFloatingPointConstParserRuleCall_3_0_1_0; }
		
		//unique?='unique'?
		public Assignment getUniqueAssignment_3_1() { return cUniqueAssignment_3_1; }
		
		//'unique'
		public Keyword getUniqueUniqueKeyword_3_1_0() { return cUniqueUniqueKeyword_3_1_0; }
		
		//indexed?='indexed'?
		public Assignment getIndexedAssignment_3_2() { return cIndexedAssignment_3_2; }
		
		//'indexed'
		public Keyword getIndexedIndexedKeyword_3_2_0() { return cIndexedIndexedKeyword_3_2_0; }
		
		//('[' (minValue=FloatingPointConst)? '..' (maxValue=FloatingPointConst)? ']')?
		public Group getGroup_3_3() { return cGroup_3_3; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_3_3_0() { return cLeftSquareBracketKeyword_3_3_0; }
		
		//(minValue=FloatingPointConst)?
		public Assignment getMinValueAssignment_3_3_1() { return cMinValueAssignment_3_3_1; }
		
		//FloatingPointConst
		public RuleCall getMinValueFloatingPointConstParserRuleCall_3_3_1_0() { return cMinValueFloatingPointConstParserRuleCall_3_3_1_0; }
		
		//'..'
		public Keyword getFullStopFullStopKeyword_3_3_2() { return cFullStopFullStopKeyword_3_3_2; }
		
		//(maxValue=FloatingPointConst)?
		public Assignment getMaxValueAssignment_3_3_3() { return cMaxValueAssignment_3_3_3; }
		
		//FloatingPointConst
		public RuleCall getMaxValueFloatingPointConstParserRuleCall_3_3_3_0() { return cMaxValueFloatingPointConstParserRuleCall_3_3_3_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_3_3_4() { return cRightSquareBracketKeyword_3_3_4; }
	}
	public class BooleanFieldElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.yaktor.Domain.BooleanField");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cBooleanKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cCardinalityAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cCardinalityCardinalityEnumRuleCall_2_0 = (RuleCall)cCardinalityAssignment_2.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_3 = (UnorderedGroup)cGroup.eContents().get(3);
		private final Assignment cUniqueAssignment_3_0 = (Assignment)cUnorderedGroup_3.eContents().get(0);
		private final Keyword cUniqueUniqueKeyword_3_0_0 = (Keyword)cUniqueAssignment_3_0.eContents().get(0);
		private final Assignment cIndexedAssignment_3_1 = (Assignment)cUnorderedGroup_3.eContents().get(1);
		private final Keyword cIndexedIndexedKeyword_3_1_0 = (Keyword)cIndexedAssignment_3_1.eContents().get(0);
		private final Group cGroup_3_2 = (Group)cUnorderedGroup_3.eContents().get(2);
		private final Keyword cEqualsSignKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Assignment cDefaultValueAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final RuleCall cDefaultValueBooleanConstParserRuleCall_3_2_1_0 = (RuleCall)cDefaultValueAssignment_3_2_1.eContents().get(0);
		
		//BooleanField:
		//  'Boolean' name=ID
		//  (cardinality=Cardinality)?
		//  (unique?='unique'? &
		//  indexed?='indexed'? &
		//  ('=' defaultValue=BooleanConst))?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'Boolean' name=ID
		//(cardinality=Cardinality)?
		//(unique?='unique'? &
		//indexed?='indexed'? &
		//('=' defaultValue=BooleanConst))?
		public Group getGroup() { return cGroup; }
		
		//'Boolean'
		public Keyword getBooleanKeyword_0() { return cBooleanKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//(cardinality=Cardinality)?
		public Assignment getCardinalityAssignment_2() { return cCardinalityAssignment_2; }
		
		//Cardinality
		public RuleCall getCardinalityCardinalityEnumRuleCall_2_0() { return cCardinalityCardinalityEnumRuleCall_2_0; }
		
		//(unique?='unique'? &
		//indexed?='indexed'? &
		//('=' defaultValue=BooleanConst))?
		public UnorderedGroup getUnorderedGroup_3() { return cUnorderedGroup_3; }
		
		//unique?='unique'?
		public Assignment getUniqueAssignment_3_0() { return cUniqueAssignment_3_0; }
		
		//'unique'
		public Keyword getUniqueUniqueKeyword_3_0_0() { return cUniqueUniqueKeyword_3_0_0; }
		
		//indexed?='indexed'?
		public Assignment getIndexedAssignment_3_1() { return cIndexedAssignment_3_1; }
		
		//'indexed'
		public Keyword getIndexedIndexedKeyword_3_1_0() { return cIndexedIndexedKeyword_3_1_0; }
		
		//('=' defaultValue=BooleanConst)
		public Group getGroup_3_2() { return cGroup_3_2; }
		
		//'='
		public Keyword getEqualsSignKeyword_3_2_0() { return cEqualsSignKeyword_3_2_0; }
		
		//defaultValue=BooleanConst
		public Assignment getDefaultValueAssignment_3_2_1() { return cDefaultValueAssignment_3_2_1; }
		
		//BooleanConst
		public RuleCall getDefaultValueBooleanConstParserRuleCall_3_2_1_0() { return cDefaultValueBooleanConstParserRuleCall_3_2_1_0; }
	}
	public class PriceFieldElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.yaktor.Domain.PriceField");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPriceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cCardinalityAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cCardinalityCardinalityEnumRuleCall_2_0 = (RuleCall)cCardinalityAssignment_2.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_3 = (UnorderedGroup)cGroup.eContents().get(3);
		private final Assignment cIndexedAssignment_3_0 = (Assignment)cUnorderedGroup_3.eContents().get(0);
		private final Keyword cIndexedIndexedKeyword_3_0_0 = (Keyword)cIndexedAssignment_3_0.eContents().get(0);
		private final Assignment cUniqueAssignment_3_1 = (Assignment)cUnorderedGroup_3.eContents().get(1);
		private final Keyword cUniqueUniqueKeyword_3_1_0 = (Keyword)cUniqueAssignment_3_1.eContents().get(0);
		
		//PriceField:
		//  'Price' name=ID
		//  (cardinality=Cardinality)?
		//  (indexed?='indexed'? &
		//  unique?='unique'?)
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'Price' name=ID
		//(cardinality=Cardinality)?
		//(indexed?='indexed'? &
		//unique?='unique'?)
		public Group getGroup() { return cGroup; }
		
		//'Price'
		public Keyword getPriceKeyword_0() { return cPriceKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//(cardinality=Cardinality)?
		public Assignment getCardinalityAssignment_2() { return cCardinalityAssignment_2; }
		
		//Cardinality
		public RuleCall getCardinalityCardinalityEnumRuleCall_2_0() { return cCardinalityCardinalityEnumRuleCall_2_0; }
		
		//(indexed?='indexed'? &
		//unique?='unique'?)
		public UnorderedGroup getUnorderedGroup_3() { return cUnorderedGroup_3; }
		
		//indexed?='indexed'?
		public Assignment getIndexedAssignment_3_0() { return cIndexedAssignment_3_0; }
		
		//'indexed'
		public Keyword getIndexedIndexedKeyword_3_0_0() { return cIndexedIndexedKeyword_3_0_0; }
		
		//unique?='unique'?
		public Assignment getUniqueAssignment_3_1() { return cUniqueAssignment_3_1; }
		
		//'unique'
		public Keyword getUniqueUniqueKeyword_3_1_0() { return cUniqueUniqueKeyword_3_1_0; }
	}
	public class AmountFieldElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.yaktor.Domain.AmountField");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAmountKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cCardinalityAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cCardinalityCardinalityEnumRuleCall_2_0 = (RuleCall)cCardinalityAssignment_2.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_3 = (UnorderedGroup)cGroup.eContents().get(3);
		private final Assignment cIndexedAssignment_3_0 = (Assignment)cUnorderedGroup_3.eContents().get(0);
		private final Keyword cIndexedIndexedKeyword_3_0_0 = (Keyword)cIndexedAssignment_3_0.eContents().get(0);
		private final Assignment cUniqueAssignment_3_1 = (Assignment)cUnorderedGroup_3.eContents().get(1);
		private final Keyword cUniqueUniqueKeyword_3_1_0 = (Keyword)cUniqueAssignment_3_1.eContents().get(0);
		
		//AmountField:
		//  'Amount' name=ID
		//  (cardinality=Cardinality)?
		//  (indexed?='indexed'? &
		//  unique?='unique'?)
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'Amount' name=ID
		//(cardinality=Cardinality)?
		//(indexed?='indexed'? &
		//unique?='unique'?)
		public Group getGroup() { return cGroup; }
		
		//'Amount'
		public Keyword getAmountKeyword_0() { return cAmountKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//(cardinality=Cardinality)?
		public Assignment getCardinalityAssignment_2() { return cCardinalityAssignment_2; }
		
		//Cardinality
		public RuleCall getCardinalityCardinalityEnumRuleCall_2_0() { return cCardinalityCardinalityEnumRuleCall_2_0; }
		
		//(indexed?='indexed'? &
		//unique?='unique'?)
		public UnorderedGroup getUnorderedGroup_3() { return cUnorderedGroup_3; }
		
		//indexed?='indexed'?
		public Assignment getIndexedAssignment_3_0() { return cIndexedAssignment_3_0; }
		
		//'indexed'
		public Keyword getIndexedIndexedKeyword_3_0_0() { return cIndexedIndexedKeyword_3_0_0; }
		
		//unique?='unique'?
		public Assignment getUniqueAssignment_3_1() { return cUniqueAssignment_3_1; }
		
		//'unique'
		public Keyword getUniqueUniqueKeyword_3_1_0() { return cUniqueUniqueKeyword_3_1_0; }
	}
	public class CountFieldElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.yaktor.Domain.CountField");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCountKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cCardinalityAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cCardinalityCardinalityEnumRuleCall_2_0 = (RuleCall)cCardinalityAssignment_2.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_3 = (UnorderedGroup)cGroup.eContents().get(3);
		private final Assignment cIndexedAssignment_3_0 = (Assignment)cUnorderedGroup_3.eContents().get(0);
		private final Keyword cIndexedIndexedKeyword_3_0_0 = (Keyword)cIndexedAssignment_3_0.eContents().get(0);
		private final Assignment cUniqueAssignment_3_1 = (Assignment)cUnorderedGroup_3.eContents().get(1);
		private final Keyword cUniqueUniqueKeyword_3_1_0 = (Keyword)cUniqueAssignment_3_1.eContents().get(0);
		
		//CountField:
		//  'Count' name=ID
		//  (cardinality=Cardinality)?
		//  (indexed?='indexed'? &
		//  unique?='unique'?)
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'Count' name=ID
		//(cardinality=Cardinality)?
		//(indexed?='indexed'? &
		//unique?='unique'?)
		public Group getGroup() { return cGroup; }
		
		//'Count'
		public Keyword getCountKeyword_0() { return cCountKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//(cardinality=Cardinality)?
		public Assignment getCardinalityAssignment_2() { return cCardinalityAssignment_2; }
		
		//Cardinality
		public RuleCall getCardinalityCardinalityEnumRuleCall_2_0() { return cCardinalityCardinalityEnumRuleCall_2_0; }
		
		//(indexed?='indexed'? &
		//unique?='unique'?)
		public UnorderedGroup getUnorderedGroup_3() { return cUnorderedGroup_3; }
		
		//indexed?='indexed'?
		public Assignment getIndexedAssignment_3_0() { return cIndexedAssignment_3_0; }
		
		//'indexed'
		public Keyword getIndexedIndexedKeyword_3_0_0() { return cIndexedIndexedKeyword_3_0_0; }
		
		//unique?='unique'?
		public Assignment getUniqueAssignment_3_1() { return cUniqueAssignment_3_1; }
		
		//'unique'
		public Keyword getUniqueUniqueKeyword_3_1_0() { return cUniqueUniqueKeyword_3_1_0; }
	}
	public class EnumFieldElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.yaktor.Domain.EnumField");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEnumKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cIsTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cIsTypeEnumTypeCrossReference_1_0 = (CrossReference)cIsTypeAssignment_1.eContents().get(0);
		private final RuleCall cIsTypeEnumTypePossiblyQualifiedNameParserRuleCall_1_0_1 = (RuleCall)cIsTypeEnumTypeCrossReference_1_0.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Assignment cCardinalityAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cCardinalityCardinalityEnumRuleCall_3_0 = (RuleCall)cCardinalityAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cJpaEnumTypeKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cIsJpaEnumTypeAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cIsJpaEnumTypeJpaEnumTypeEnumRuleCall_4_1_0 = (RuleCall)cIsJpaEnumTypeAssignment_4_1.eContents().get(0);
		
		//EnumField:
		//  'enum' isType=[EnumType|PossiblyQualifiedName] name=ID
		//  (cardinality=Cardinality)?
		//  ('jpa-enum-type' isJpaEnumType=JpaEnumType)?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'enum' isType=[EnumType|PossiblyQualifiedName] name=ID
		//(cardinality=Cardinality)?
		//('jpa-enum-type' isJpaEnumType=JpaEnumType)?
		public Group getGroup() { return cGroup; }
		
		//'enum'
		public Keyword getEnumKeyword_0() { return cEnumKeyword_0; }
		
		//isType=[EnumType|PossiblyQualifiedName]
		public Assignment getIsTypeAssignment_1() { return cIsTypeAssignment_1; }
		
		//[EnumType|PossiblyQualifiedName]
		public CrossReference getIsTypeEnumTypeCrossReference_1_0() { return cIsTypeEnumTypeCrossReference_1_0; }
		
		//PossiblyQualifiedName
		public RuleCall getIsTypeEnumTypePossiblyQualifiedNameParserRuleCall_1_0_1() { return cIsTypeEnumTypePossiblyQualifiedNameParserRuleCall_1_0_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//(cardinality=Cardinality)?
		public Assignment getCardinalityAssignment_3() { return cCardinalityAssignment_3; }
		
		//Cardinality
		public RuleCall getCardinalityCardinalityEnumRuleCall_3_0() { return cCardinalityCardinalityEnumRuleCall_3_0; }
		
		//('jpa-enum-type' isJpaEnumType=JpaEnumType)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'jpa-enum-type'
		public Keyword getJpaEnumTypeKeyword_4_0() { return cJpaEnumTypeKeyword_4_0; }
		
		//isJpaEnumType=JpaEnumType
		public Assignment getIsJpaEnumTypeAssignment_4_1() { return cIsJpaEnumTypeAssignment_4_1; }
		
		//JpaEnumType
		public RuleCall getIsJpaEnumTypeJpaEnumTypeEnumRuleCall_4_1_0() { return cIsJpaEnumTypeJpaEnumTypeEnumRuleCall_4_1_0; }
	}
	public class TypeFieldElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.yaktor.Domain.TypeField");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIsTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cIsTypeTypeCrossReference_0_0 = (CrossReference)cIsTypeAssignment_0.eContents().get(0);
		private final RuleCall cIsTypeTypePossiblyQualifiedNameParserRuleCall_0_0_1 = (RuleCall)cIsTypeTypeCrossReference_0_0.eContents().get(1);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cCardinalityAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cCardinalityCardinalityEnumRuleCall_2_0 = (RuleCall)cCardinalityAssignment_2.eContents().get(0);
		
		//TypeField:
		//  isType=[Type|PossiblyQualifiedName] name=ID
		//  (cardinality=Cardinality)?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//isType=[Type|PossiblyQualifiedName] name=ID
		//(cardinality=Cardinality)?
		public Group getGroup() { return cGroup; }
		
		//isType=[Type|PossiblyQualifiedName]
		public Assignment getIsTypeAssignment_0() { return cIsTypeAssignment_0; }
		
		//[Type|PossiblyQualifiedName]
		public CrossReference getIsTypeTypeCrossReference_0_0() { return cIsTypeTypeCrossReference_0_0; }
		
		//PossiblyQualifiedName
		public RuleCall getIsTypeTypePossiblyQualifiedNameParserRuleCall_0_0_1() { return cIsTypeTypePossiblyQualifiedNameParserRuleCall_0_0_1; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//(cardinality=Cardinality)?
		public Assignment getCardinalityAssignment_2() { return cCardinalityAssignment_2; }
		
		//Cardinality
		public RuleCall getCardinalityCardinalityEnumRuleCall_2_0() { return cCardinalityCardinalityEnumRuleCall_2_0; }
	}
	public class AnyFieldElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.yaktor.Domain.AnyField");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAnyKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cCardinalityAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cCardinalityCardinalityEnumRuleCall_2_0 = (RuleCall)cCardinalityAssignment_2.eContents().get(0);
		
		//AnyField:
		//  'Any' name=ID
		//  (cardinality=Cardinality)?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'Any' name=ID
		//(cardinality=Cardinality)?
		public Group getGroup() { return cGroup; }
		
		//'Any'
		public Keyword getAnyKeyword_0() { return cAnyKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//(cardinality=Cardinality)?
		public Assignment getCardinalityAssignment_2() { return cCardinalityAssignment_2; }
		
		//Cardinality
		public RuleCall getCardinalityCardinalityEnumRuleCall_2_0() { return cCardinalityCardinalityEnumRuleCall_2_0; }
	}
	public class EntityReferenceFieldElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.yaktor.Domain.EntityReferenceField");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRefKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cRefTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cRefTypeEntityCrossReference_1_0 = (CrossReference)cRefTypeAssignment_1.eContents().get(0);
		private final RuleCall cRefTypeEntityPossiblyQualifiedNameParserRuleCall_1_0_1 = (RuleCall)cRefTypeEntityCrossReference_1_0.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Assignment cCardinalityAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cCardinalityCardinalityEnumRuleCall_3_0 = (RuleCall)cCardinalityAssignment_3.eContents().get(0);
		
		//EntityReferenceField:
		//  'ref' refType=[Entity|PossiblyQualifiedName] name=ID
		//  (cardinality=Cardinality)?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'ref' refType=[Entity|PossiblyQualifiedName] name=ID
		//(cardinality=Cardinality)?
		public Group getGroup() { return cGroup; }
		
		//'ref'
		public Keyword getRefKeyword_0() { return cRefKeyword_0; }
		
		//refType=[Entity|PossiblyQualifiedName]
		public Assignment getRefTypeAssignment_1() { return cRefTypeAssignment_1; }
		
		//[Entity|PossiblyQualifiedName]
		public CrossReference getRefTypeEntityCrossReference_1_0() { return cRefTypeEntityCrossReference_1_0; }
		
		//PossiblyQualifiedName
		public RuleCall getRefTypeEntityPossiblyQualifiedNameParserRuleCall_1_0_1() { return cRefTypeEntityPossiblyQualifiedNameParserRuleCall_1_0_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//(cardinality=Cardinality)?
		public Assignment getCardinalityAssignment_3() { return cCardinalityAssignment_3; }
		
		//Cardinality
		public RuleCall getCardinalityCardinalityEnumRuleCall_3_0() { return cCardinalityCardinalityEnumRuleCall_3_0; }
	}
	public class FloatingPointConstElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.yaktor.Domain.FloatingPointConst");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cINTTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Alternatives cAlternatives_4_0 = (Alternatives)cGroup_4.eContents().get(0);
		private final Keyword cEKeyword_4_0_0 = (Keyword)cAlternatives_4_0.eContents().get(0);
		private final Keyword cEKeyword_4_0_1 = (Keyword)cAlternatives_4_0.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_4_2 = (RuleCall)cGroup_4.eContents().get(2);
		
		//FloatingPointConst:
		//    '-'? INT? '.' INT (('E'|'e') '-'? INT)?;
		@Override public ParserRule getRule() { return rule; }
		
		//'-'? INT? '.' INT (('E'|'e') '-'? INT)?
		public Group getGroup() { return cGroup; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//INT?
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
		
		//'.'
		public Keyword getFullStopKeyword_2() { return cFullStopKeyword_2; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_3() { return cINTTerminalRuleCall_3; }
		
		//(('E'|'e') '-'? INT)?
		public Group getGroup_4() { return cGroup_4; }
		
		//('E'|'e')
		public Alternatives getAlternatives_4_0() { return cAlternatives_4_0; }
		
		//'E'
		public Keyword getEKeyword_4_0_0() { return cEKeyword_4_0_0; }
		
		//'e'
		public Keyword getEKeyword_4_0_1() { return cEKeyword_4_0_1; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_4_1() { return cHyphenMinusKeyword_4_1; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_4_2() { return cINTTerminalRuleCall_4_2; }
	}
	public class IntegerConstElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.yaktor.Domain.IntegerConst");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//IntegerConst:
		//  '-'? INT;
		@Override public ParserRule getRule() { return rule; }
		
		//'-'? INT
		public Group getGroup() { return cGroup; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
	}
	public class BooleanConstElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.yaktor.Domain.BooleanConst");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cTrueKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cFalseKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//BooleanConst:
		//  'true' | 'false';
		@Override public ParserRule getRule() { return rule; }
		
		//'true' | 'false'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'true'
		public Keyword getTrueKeyword_0() { return cTrueKeyword_0; }
		
		//'false'
		public Keyword getFalseKeyword_1() { return cFalseKeyword_1; }
	}
	public class GenOptionsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.yaktor.Domain.GenOptions");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cJpaGenOptionsParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cMongoNodeGenOptionsParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//GenOptions:
		//  JpaGenOptions | MongoNodeGenOptions
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//JpaGenOptions | MongoNodeGenOptions
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//JpaGenOptions
		public RuleCall getJpaGenOptionsParserRuleCall_0() { return cJpaGenOptionsParserRuleCall_0; }
		
		//MongoNodeGenOptions
		public RuleCall getMongoNodeGenOptionsParserRuleCall_1() { return cMongoNodeGenOptionsParserRuleCall_1; }
	}
	public class JpaGenOptionsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.yaktor.Domain.JpaGenOptions");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cJpaGenOptionsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cProjectAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cProjectProjectOptionsParserRuleCall_2_0 = (RuleCall)cProjectAssignment_2.eContents().get(0);
		private final Assignment cPersistenceAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cPersistencePersistenceOptionsParserRuleCall_3_0 = (RuleCall)cPersistenceAssignment_3.eContents().get(0);
		private final Assignment cGenerationInclusionAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cGenerationInclusionGenerationInclusionParserRuleCall_4_0 = (RuleCall)cGenerationInclusionAssignment_4.eContents().get(0);
		private final Assignment cUseAspectsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final Keyword cUseAspectsUseAspectsKeyword_5_0 = (Keyword)cUseAspectsAssignment_5.eContents().get(0);
		private final Assignment cMetaDataAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final Keyword cMetaDataAuditableKeyword_6_0 = (Keyword)cMetaDataAssignment_6.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cExtensionsKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Assignment cTableOptionsAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cTableOptionsJpaTableOptionsParserRuleCall_7_2_0 = (RuleCall)cTableOptionsAssignment_7_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7_3 = (Keyword)cGroup_7.eContents().get(3);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//JpaGenOptions:
		//  'jpa-gen-options' '{'
		//    project=ProjectOptions
		//    (persistence=PersistenceOptions)?
		//    (generationInclusion=GenerationInclusion)?
		//    useAspects?='use-aspects'?
		//    metaData?='auditable'?
		//    ('extensions' '{'
		//      (tableOptions+=JpaTableOptions)*
		//    '}')?
		//  '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'jpa-gen-options' '{'
		//  project=ProjectOptions
		//  (persistence=PersistenceOptions)?
		//  (generationInclusion=GenerationInclusion)?
		//  useAspects?='use-aspects'?
		//  metaData?='auditable'?
		//  ('extensions' '{'
		//    (tableOptions+=JpaTableOptions)*
		//  '}')?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'jpa-gen-options'
		public Keyword getJpaGenOptionsKeyword_0() { return cJpaGenOptionsKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//project=ProjectOptions
		public Assignment getProjectAssignment_2() { return cProjectAssignment_2; }
		
		//ProjectOptions
		public RuleCall getProjectProjectOptionsParserRuleCall_2_0() { return cProjectProjectOptionsParserRuleCall_2_0; }
		
		//(persistence=PersistenceOptions)?
		public Assignment getPersistenceAssignment_3() { return cPersistenceAssignment_3; }
		
		//PersistenceOptions
		public RuleCall getPersistencePersistenceOptionsParserRuleCall_3_0() { return cPersistencePersistenceOptionsParserRuleCall_3_0; }
		
		//(generationInclusion=GenerationInclusion)?
		public Assignment getGenerationInclusionAssignment_4() { return cGenerationInclusionAssignment_4; }
		
		//GenerationInclusion
		public RuleCall getGenerationInclusionGenerationInclusionParserRuleCall_4_0() { return cGenerationInclusionGenerationInclusionParserRuleCall_4_0; }
		
		//useAspects?='use-aspects'?
		public Assignment getUseAspectsAssignment_5() { return cUseAspectsAssignment_5; }
		
		//'use-aspects'
		public Keyword getUseAspectsUseAspectsKeyword_5_0() { return cUseAspectsUseAspectsKeyword_5_0; }
		
		//metaData?='auditable'?
		public Assignment getMetaDataAssignment_6() { return cMetaDataAssignment_6; }
		
		//'auditable'
		public Keyword getMetaDataAuditableKeyword_6_0() { return cMetaDataAuditableKeyword_6_0; }
		
		//('extensions' '{'
		//  (tableOptions+=JpaTableOptions)*
		//'}')?
		public Group getGroup_7() { return cGroup_7; }
		
		//'extensions'
		public Keyword getExtensionsKeyword_7_0() { return cExtensionsKeyword_7_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_7_1() { return cLeftCurlyBracketKeyword_7_1; }
		
		//(tableOptions+=JpaTableOptions)*
		public Assignment getTableOptionsAssignment_7_2() { return cTableOptionsAssignment_7_2; }
		
		//JpaTableOptions
		public RuleCall getTableOptionsJpaTableOptionsParserRuleCall_7_2_0() { return cTableOptionsJpaTableOptionsParserRuleCall_7_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7_3() { return cRightCurlyBracketKeyword_7_3; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	public class ProjectOptionsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.yaktor.Domain.ProjectOptions");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cProjectOptionsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final UnorderedGroup cUnorderedGroup_2 = (UnorderedGroup)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cUnorderedGroup_2.eContents().get(0);
		private final Keyword cProjectNameKeyword_2_0_0 = (Keyword)cGroup_2_0.eContents().get(0);
		private final Assignment cNameAssignment_2_0_1 = (Assignment)cGroup_2_0.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_2_0_1_0 = (RuleCall)cNameAssignment_2_0_1.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cUnorderedGroup_2.eContents().get(1);
		private final Keyword cRootPackageKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cRootPackageAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cRootPackageQualifiedNameParserRuleCall_2_1_1_0 = (RuleCall)cRootPackageAssignment_2_1_1.eContents().get(0);
		private final Group cGroup_2_2 = (Group)cUnorderedGroup_2.eContents().get(2);
		private final Keyword cDomainSubpackageKeyword_2_2_0 = (Keyword)cGroup_2_2.eContents().get(0);
		private final Assignment cDomainSubpackageAssignment_2_2_1 = (Assignment)cGroup_2_2.eContents().get(1);
		private final RuleCall cDomainSubpackageQualifiedNameParserRuleCall_2_2_1_0 = (RuleCall)cDomainSubpackageAssignment_2_2_1.eContents().get(0);
		private final Group cGroup_2_3 = (Group)cUnorderedGroup_2.eContents().get(3);
		private final Keyword cControllerSubpackageKeyword_2_3_0 = (Keyword)cGroup_2_3.eContents().get(0);
		private final Assignment cControllerSubpackageAssignment_2_3_1 = (Assignment)cGroup_2_3.eContents().get(1);
		private final RuleCall cControllerSubpackageQualifiedNameParserRuleCall_2_3_1_0 = (RuleCall)cControllerSubpackageAssignment_2_3_1.eContents().get(0);
		private final Assignment cJsonSupportAssignment_2_4 = (Assignment)cUnorderedGroup_2.eContents().get(4);
		private final Keyword cJsonSupportJsonSupportKeyword_2_4_0 = (Keyword)cJsonSupportAssignment_2_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//ProjectOptions:
		//  'project-options' '{'
		//  (('project-name' name=ID) &
		//  ('root-package' rootPackage=QualifiedName) &
		//  ('domain-subpackage' domainSubpackage=QualifiedName)? &
		//  ('controller-subpackage' controllerSubpackage=QualifiedName)? &
		//  jsonSupport?='json-support'?)
		//  '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'project-options' '{'
		//(('project-name' name=ID) &
		//('root-package' rootPackage=QualifiedName) &
		//('domain-subpackage' domainSubpackage=QualifiedName)? &
		//('controller-subpackage' controllerSubpackage=QualifiedName)? &
		//jsonSupport?='json-support'?)
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'project-options'
		public Keyword getProjectOptionsKeyword_0() { return cProjectOptionsKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//(('project-name' name=ID) &
		//('root-package' rootPackage=QualifiedName) &
		//('domain-subpackage' domainSubpackage=QualifiedName)? &
		//('controller-subpackage' controllerSubpackage=QualifiedName)? &
		//jsonSupport?='json-support'?)
		public UnorderedGroup getUnorderedGroup_2() { return cUnorderedGroup_2; }
		
		//('project-name' name=ID)
		public Group getGroup_2_0() { return cGroup_2_0; }
		
		//'project-name'
		public Keyword getProjectNameKeyword_2_0_0() { return cProjectNameKeyword_2_0_0; }
		
		//name=ID
		public Assignment getNameAssignment_2_0_1() { return cNameAssignment_2_0_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0_1_0() { return cNameIDTerminalRuleCall_2_0_1_0; }
		
		//('root-package' rootPackage=QualifiedName)
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//'root-package'
		public Keyword getRootPackageKeyword_2_1_0() { return cRootPackageKeyword_2_1_0; }
		
		//rootPackage=QualifiedName
		public Assignment getRootPackageAssignment_2_1_1() { return cRootPackageAssignment_2_1_1; }
		
		//QualifiedName
		public RuleCall getRootPackageQualifiedNameParserRuleCall_2_1_1_0() { return cRootPackageQualifiedNameParserRuleCall_2_1_1_0; }
		
		//('domain-subpackage' domainSubpackage=QualifiedName)?
		public Group getGroup_2_2() { return cGroup_2_2; }
		
		//'domain-subpackage'
		public Keyword getDomainSubpackageKeyword_2_2_0() { return cDomainSubpackageKeyword_2_2_0; }
		
		//domainSubpackage=QualifiedName
		public Assignment getDomainSubpackageAssignment_2_2_1() { return cDomainSubpackageAssignment_2_2_1; }
		
		//QualifiedName
		public RuleCall getDomainSubpackageQualifiedNameParserRuleCall_2_2_1_0() { return cDomainSubpackageQualifiedNameParserRuleCall_2_2_1_0; }
		
		//('controller-subpackage' controllerSubpackage=QualifiedName)?
		public Group getGroup_2_3() { return cGroup_2_3; }
		
		//'controller-subpackage'
		public Keyword getControllerSubpackageKeyword_2_3_0() { return cControllerSubpackageKeyword_2_3_0; }
		
		//controllerSubpackage=QualifiedName
		public Assignment getControllerSubpackageAssignment_2_3_1() { return cControllerSubpackageAssignment_2_3_1; }
		
		//QualifiedName
		public RuleCall getControllerSubpackageQualifiedNameParserRuleCall_2_3_1_0() { return cControllerSubpackageQualifiedNameParserRuleCall_2_3_1_0; }
		
		//jsonSupport?='json-support'?
		public Assignment getJsonSupportAssignment_2_4() { return cJsonSupportAssignment_2_4; }
		
		//'json-support'
		public Keyword getJsonSupportJsonSupportKeyword_2_4_0() { return cJsonSupportJsonSupportKeyword_2_4_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	public class GenerationInclusionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.yaktor.Domain.GenerationInclusion");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cGenerationInclusionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final UnorderedGroup cUnorderedGroup_2 = (UnorderedGroup)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cUnorderedGroup_2.eContents().get(0);
		private final Keyword cTypesKeyword_2_0_0 = (Keyword)cGroup_2_0.eContents().get(0);
		private final Assignment cTypesAssignment_2_0_1 = (Assignment)cGroup_2_0.eContents().get(1);
		private final RuleCall cTypesInclusionTypeEnumRuleCall_2_0_1_0 = (RuleCall)cTypesAssignment_2_0_1.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cUnorderedGroup_2.eContents().get(1);
		private final Keyword cControllerKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cControllerAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cControllerInclusionTypeEnumRuleCall_2_1_1_0 = (RuleCall)cControllerAssignment_2_1_1.eContents().get(0);
		private final Group cGroup_2_2 = (Group)cUnorderedGroup_2.eContents().get(2);
		private final Keyword cResourcesKeyword_2_2_0 = (Keyword)cGroup_2_2.eContents().get(0);
		private final Assignment cResourcesAssignment_2_2_1 = (Assignment)cGroup_2_2.eContents().get(1);
		private final RuleCall cResourcesInclusionTypeEnumRuleCall_2_2_1_0 = (RuleCall)cResourcesAssignment_2_2_1.eContents().get(0);
		private final Group cGroup_2_3 = (Group)cUnorderedGroup_2.eContents().get(3);
		private final Keyword cPropertiesKeyword_2_3_0 = (Keyword)cGroup_2_3.eContents().get(0);
		private final Assignment cPropertiesAssignment_2_3_1 = (Assignment)cGroup_2_3.eContents().get(1);
		private final RuleCall cPropertiesInclusionTypeEnumRuleCall_2_3_1_0 = (RuleCall)cPropertiesAssignment_2_3_1.eContents().get(0);
		private final Group cGroup_2_4 = (Group)cUnorderedGroup_2.eContents().get(4);
		private final Keyword cViewsKeyword_2_4_0 = (Keyword)cGroup_2_4.eContents().get(0);
		private final Assignment cViewsAssignment_2_4_1 = (Assignment)cGroup_2_4.eContents().get(1);
		private final RuleCall cViewsInclusionTypeEnumRuleCall_2_4_1_0 = (RuleCall)cViewsAssignment_2_4_1.eContents().get(0);
		private final Group cGroup_2_5 = (Group)cUnorderedGroup_2.eContents().get(5);
		private final Keyword cWebXmlKeyword_2_5_0 = (Keyword)cGroup_2_5.eContents().get(0);
		private final Assignment cWebxmlAssignment_2_5_1 = (Assignment)cGroup_2_5.eContents().get(1);
		private final RuleCall cWebxmlInclusionTypeEnumRuleCall_2_5_1_0 = (RuleCall)cWebxmlAssignment_2_5_1.eContents().get(0);
		private final Group cGroup_2_6 = (Group)cUnorderedGroup_2.eContents().get(6);
		private final Keyword cPomKeyword_2_6_0 = (Keyword)cGroup_2_6.eContents().get(0);
		private final Assignment cPomAssignment_2_6_1 = (Assignment)cGroup_2_6.eContents().get(1);
		private final RuleCall cPomInclusionTypeEnumRuleCall_2_6_1_0 = (RuleCall)cPomAssignment_2_6_1.eContents().get(0);
		private final Group cGroup_2_7 = (Group)cUnorderedGroup_2.eContents().get(7);
		private final Keyword cStylesKeyword_2_7_0 = (Keyword)cGroup_2_7.eContents().get(0);
		private final Assignment cStylesAssignment_2_7_1 = (Assignment)cGroup_2_7.eContents().get(1);
		private final RuleCall cStylesInclusionTypeEnumRuleCall_2_7_1_0 = (RuleCall)cStylesAssignment_2_7_1.eContents().get(0);
		private final Group cGroup_2_8 = (Group)cUnorderedGroup_2.eContents().get(8);
		private final Keyword cClassesKeyword_2_8_0 = (Keyword)cGroup_2_8.eContents().get(0);
		private final Assignment cClassesAssignment_2_8_1 = (Assignment)cGroup_2_8.eContents().get(1);
		private final RuleCall cClassesInclusionTypeEnumRuleCall_2_8_1_0 = (RuleCall)cClassesAssignment_2_8_1.eContents().get(0);
		private final Group cGroup_2_9 = (Group)cUnorderedGroup_2.eContents().get(9);
		private final Keyword cLayoutsKeyword_2_9_0 = (Keyword)cGroup_2_9.eContents().get(0);
		private final Assignment cLayoutsAssignment_2_9_1 = (Assignment)cGroup_2_9.eContents().get(1);
		private final RuleCall cLayoutsInclusionTypeEnumRuleCall_2_9_1_0 = (RuleCall)cLayoutsAssignment_2_9_1.eContents().get(0);
		private final Group cGroup_2_10 = (Group)cUnorderedGroup_2.eContents().get(10);
		private final Keyword cWebMvcKeyword_2_10_0 = (Keyword)cGroup_2_10.eContents().get(0);
		private final Assignment cWebmvcAssignment_2_10_1 = (Assignment)cGroup_2_10.eContents().get(1);
		private final RuleCall cWebmvcInclusionTypeEnumRuleCall_2_10_1_0 = (RuleCall)cWebmvcAssignment_2_10_1.eContents().get(0);
		private final Group cGroup_2_11 = (Group)cUnorderedGroup_2.eContents().get(11);
		private final Keyword cTagsKeyword_2_11_0 = (Keyword)cGroup_2_11.eContents().get(0);
		private final Assignment cTagsAssignment_2_11_1 = (Assignment)cGroup_2_11.eContents().get(1);
		private final RuleCall cTagsInclusionTypeEnumRuleCall_2_11_1_0 = (RuleCall)cTagsAssignment_2_11_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//GenerationInclusion:
		//  'generation-inclusion' '{'
		//  (
		//        ('types'      types=InclusionType) &
		//        ('controller' controller=InclusionType)? &
		//        ('resources'  resources=InclusionType)? &
		//        ('properties' properties=InclusionType)? &
		//        ('views'      views=InclusionType)? &
		//        ('web-xml'    webxml=InclusionType)? &
		//        ('pom'        pom=InclusionType)? &
		//        ('styles'     styles=InclusionType)? &
		//        ('classes'    classes=InclusionType)? &
		//        ('layouts'    layouts=InclusionType)? &
		//        ('web-mvc'    webmvc=InclusionType)? &
		//        ('tags'       tags=InclusionType)?
		//        )
		//  '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'generation-inclusion' '{'
		//(
		//      ('types'      types=InclusionType) &
		//      ('controller' controller=InclusionType)? &
		//      ('resources'  resources=InclusionType)? &
		//      ('properties' properties=InclusionType)? &
		//      ('views'      views=InclusionType)? &
		//      ('web-xml'    webxml=InclusionType)? &
		//      ('pom'        pom=InclusionType)? &
		//      ('styles'     styles=InclusionType)? &
		//      ('classes'    classes=InclusionType)? &
		//      ('layouts'    layouts=InclusionType)? &
		//      ('web-mvc'    webmvc=InclusionType)? &
		//      ('tags'       tags=InclusionType)?
		//      )
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'generation-inclusion'
		public Keyword getGenerationInclusionKeyword_0() { return cGenerationInclusionKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//(
		//      ('types'      types=InclusionType) &
		//      ('controller' controller=InclusionType)? &
		//      ('resources'  resources=InclusionType)? &
		//      ('properties' properties=InclusionType)? &
		//      ('views'      views=InclusionType)? &
		//      ('web-xml'    webxml=InclusionType)? &
		//      ('pom'        pom=InclusionType)? &
		//      ('styles'     styles=InclusionType)? &
		//      ('classes'    classes=InclusionType)? &
		//      ('layouts'    layouts=InclusionType)? &
		//      ('web-mvc'    webmvc=InclusionType)? &
		//      ('tags'       tags=InclusionType)?
		//      )
		public UnorderedGroup getUnorderedGroup_2() { return cUnorderedGroup_2; }
		
		//('types'      types=InclusionType)
		public Group getGroup_2_0() { return cGroup_2_0; }
		
		//'types'
		public Keyword getTypesKeyword_2_0_0() { return cTypesKeyword_2_0_0; }
		
		//types=InclusionType
		public Assignment getTypesAssignment_2_0_1() { return cTypesAssignment_2_0_1; }
		
		//InclusionType
		public RuleCall getTypesInclusionTypeEnumRuleCall_2_0_1_0() { return cTypesInclusionTypeEnumRuleCall_2_0_1_0; }
		
		//('controller' controller=InclusionType)?
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//'controller'
		public Keyword getControllerKeyword_2_1_0() { return cControllerKeyword_2_1_0; }
		
		//controller=InclusionType
		public Assignment getControllerAssignment_2_1_1() { return cControllerAssignment_2_1_1; }
		
		//InclusionType
		public RuleCall getControllerInclusionTypeEnumRuleCall_2_1_1_0() { return cControllerInclusionTypeEnumRuleCall_2_1_1_0; }
		
		//('resources'  resources=InclusionType)?
		public Group getGroup_2_2() { return cGroup_2_2; }
		
		//'resources'
		public Keyword getResourcesKeyword_2_2_0() { return cResourcesKeyword_2_2_0; }
		
		//resources=InclusionType
		public Assignment getResourcesAssignment_2_2_1() { return cResourcesAssignment_2_2_1; }
		
		//InclusionType
		public RuleCall getResourcesInclusionTypeEnumRuleCall_2_2_1_0() { return cResourcesInclusionTypeEnumRuleCall_2_2_1_0; }
		
		//('properties' properties=InclusionType)?
		public Group getGroup_2_3() { return cGroup_2_3; }
		
		//'properties'
		public Keyword getPropertiesKeyword_2_3_0() { return cPropertiesKeyword_2_3_0; }
		
		//properties=InclusionType
		public Assignment getPropertiesAssignment_2_3_1() { return cPropertiesAssignment_2_3_1; }
		
		//InclusionType
		public RuleCall getPropertiesInclusionTypeEnumRuleCall_2_3_1_0() { return cPropertiesInclusionTypeEnumRuleCall_2_3_1_0; }
		
		//('views'      views=InclusionType)?
		public Group getGroup_2_4() { return cGroup_2_4; }
		
		//'views'
		public Keyword getViewsKeyword_2_4_0() { return cViewsKeyword_2_4_0; }
		
		//views=InclusionType
		public Assignment getViewsAssignment_2_4_1() { return cViewsAssignment_2_4_1; }
		
		//InclusionType
		public RuleCall getViewsInclusionTypeEnumRuleCall_2_4_1_0() { return cViewsInclusionTypeEnumRuleCall_2_4_1_0; }
		
		//('web-xml'    webxml=InclusionType)?
		public Group getGroup_2_5() { return cGroup_2_5; }
		
		//'web-xml'
		public Keyword getWebXmlKeyword_2_5_0() { return cWebXmlKeyword_2_5_0; }
		
		//webxml=InclusionType
		public Assignment getWebxmlAssignment_2_5_1() { return cWebxmlAssignment_2_5_1; }
		
		//InclusionType
		public RuleCall getWebxmlInclusionTypeEnumRuleCall_2_5_1_0() { return cWebxmlInclusionTypeEnumRuleCall_2_5_1_0; }
		
		//('pom'        pom=InclusionType)?
		public Group getGroup_2_6() { return cGroup_2_6; }
		
		//'pom'
		public Keyword getPomKeyword_2_6_0() { return cPomKeyword_2_6_0; }
		
		//pom=InclusionType
		public Assignment getPomAssignment_2_6_1() { return cPomAssignment_2_6_1; }
		
		//InclusionType
		public RuleCall getPomInclusionTypeEnumRuleCall_2_6_1_0() { return cPomInclusionTypeEnumRuleCall_2_6_1_0; }
		
		//('styles'     styles=InclusionType)?
		public Group getGroup_2_7() { return cGroup_2_7; }
		
		//'styles'
		public Keyword getStylesKeyword_2_7_0() { return cStylesKeyword_2_7_0; }
		
		//styles=InclusionType
		public Assignment getStylesAssignment_2_7_1() { return cStylesAssignment_2_7_1; }
		
		//InclusionType
		public RuleCall getStylesInclusionTypeEnumRuleCall_2_7_1_0() { return cStylesInclusionTypeEnumRuleCall_2_7_1_0; }
		
		//('classes'    classes=InclusionType)?
		public Group getGroup_2_8() { return cGroup_2_8; }
		
		//'classes'
		public Keyword getClassesKeyword_2_8_0() { return cClassesKeyword_2_8_0; }
		
		//classes=InclusionType
		public Assignment getClassesAssignment_2_8_1() { return cClassesAssignment_2_8_1; }
		
		//InclusionType
		public RuleCall getClassesInclusionTypeEnumRuleCall_2_8_1_0() { return cClassesInclusionTypeEnumRuleCall_2_8_1_0; }
		
		//('layouts'    layouts=InclusionType)?
		public Group getGroup_2_9() { return cGroup_2_9; }
		
		//'layouts'
		public Keyword getLayoutsKeyword_2_9_0() { return cLayoutsKeyword_2_9_0; }
		
		//layouts=InclusionType
		public Assignment getLayoutsAssignment_2_9_1() { return cLayoutsAssignment_2_9_1; }
		
		//InclusionType
		public RuleCall getLayoutsInclusionTypeEnumRuleCall_2_9_1_0() { return cLayoutsInclusionTypeEnumRuleCall_2_9_1_0; }
		
		//('web-mvc'    webmvc=InclusionType)?
		public Group getGroup_2_10() { return cGroup_2_10; }
		
		//'web-mvc'
		public Keyword getWebMvcKeyword_2_10_0() { return cWebMvcKeyword_2_10_0; }
		
		//webmvc=InclusionType
		public Assignment getWebmvcAssignment_2_10_1() { return cWebmvcAssignment_2_10_1; }
		
		//InclusionType
		public RuleCall getWebmvcInclusionTypeEnumRuleCall_2_10_1_0() { return cWebmvcInclusionTypeEnumRuleCall_2_10_1_0; }
		
		//('tags'       tags=InclusionType)?
		public Group getGroup_2_11() { return cGroup_2_11; }
		
		//'tags'
		public Keyword getTagsKeyword_2_11_0() { return cTagsKeyword_2_11_0; }
		
		//tags=InclusionType
		public Assignment getTagsAssignment_2_11_1() { return cTagsAssignment_2_11_1; }
		
		//InclusionType
		public RuleCall getTagsInclusionTypeEnumRuleCall_2_11_1_0() { return cTagsInclusionTypeEnumRuleCall_2_11_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	public class TtlElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.yaktor.Domain.Ttl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTtlKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cFieldAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cFieldDateFieldCrossReference_1_0 = (CrossReference)cFieldAssignment_1.eContents().get(0);
		private final RuleCall cFieldDateFieldPossiblyQualifiedNameParserRuleCall_1_0_1 = (RuleCall)cFieldDateFieldCrossReference_1_0.eContents().get(1);
		private final Assignment cExpireAfterSecondsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cExpireAfterSecondsINTTerminalRuleCall_2_0 = (RuleCall)cExpireAfterSecondsAssignment_2.eContents().get(0);
		
		//Ttl:
		//  'ttl'
		//  field=[DateField|PossiblyQualifiedName]
		//  expireAfterSeconds=INT
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'ttl'
		//field=[DateField|PossiblyQualifiedName]
		//expireAfterSeconds=INT
		public Group getGroup() { return cGroup; }
		
		//'ttl'
		public Keyword getTtlKeyword_0() { return cTtlKeyword_0; }
		
		//field=[DateField|PossiblyQualifiedName]
		public Assignment getFieldAssignment_1() { return cFieldAssignment_1; }
		
		//[DateField|PossiblyQualifiedName]
		public CrossReference getFieldDateFieldCrossReference_1_0() { return cFieldDateFieldCrossReference_1_0; }
		
		//PossiblyQualifiedName
		public RuleCall getFieldDateFieldPossiblyQualifiedNameParserRuleCall_1_0_1() { return cFieldDateFieldPossiblyQualifiedNameParserRuleCall_1_0_1; }
		
		//expireAfterSeconds=INT
		public Assignment getExpireAfterSecondsAssignment_2() { return cExpireAfterSecondsAssignment_2; }
		
		//INT
		public RuleCall getExpireAfterSecondsINTTerminalRuleCall_2_0() { return cExpireAfterSecondsINTTerminalRuleCall_2_0; }
	}
	public class MongoNodeGenOptionsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.yaktor.Domain.MongoNodeGenOptions");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMongoNodeGenOptionsAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cNodeMongoOptionsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cUseLoggerAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cUseLoggerUseLoggerKeyword_3_0 = (Keyword)cUseLoggerAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cModelPathKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cModelPathAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cModelPathSTRINGTerminalRuleCall_4_1_0 = (RuleCall)cModelPathAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cTestPathKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cTestPathAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cTestPathSTRINGTerminalRuleCall_5_1_0 = (RuleCall)cTestPathAssignment_5_1.eContents().get(0);
		private final Assignment cGenerateTestAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final Keyword cGenerateTestGenTestKeyword_6_0 = (Keyword)cGenerateTestAssignment_6.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cExtensionsKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Assignment cTableOptionsAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cTableOptionsMongoNodeTableOptionsParserRuleCall_7_2_0 = (RuleCall)cTableOptionsAssignment_7_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7_3 = (Keyword)cGroup_7.eContents().get(3);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//MongoNodeGenOptions:
		//  {MongoNodeGenOptions}
		//  'node-mongo-options' '{'
		//    useLogger?='use-logger'?
		//    ('model-path' modelPath=STRING)?
		//    ('test-path'  testPath=STRING)?
		//    (generateTest?='gen-test')?
		//    ('extensions' '{'
		//      (tableOptions+=MongoNodeTableOptions)*
		//    '}')?
		//  '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{MongoNodeGenOptions}
		//'node-mongo-options' '{'
		//  useLogger?='use-logger'?
		//  ('model-path' modelPath=STRING)?
		//  ('test-path'  testPath=STRING)?
		//  (generateTest?='gen-test')?
		//  ('extensions' '{'
		//    (tableOptions+=MongoNodeTableOptions)*
		//  '}')?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{MongoNodeGenOptions}
		public Action getMongoNodeGenOptionsAction_0() { return cMongoNodeGenOptionsAction_0; }
		
		//'node-mongo-options'
		public Keyword getNodeMongoOptionsKeyword_1() { return cNodeMongoOptionsKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//useLogger?='use-logger'?
		public Assignment getUseLoggerAssignment_3() { return cUseLoggerAssignment_3; }
		
		//'use-logger'
		public Keyword getUseLoggerUseLoggerKeyword_3_0() { return cUseLoggerUseLoggerKeyword_3_0; }
		
		//('model-path' modelPath=STRING)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'model-path'
		public Keyword getModelPathKeyword_4_0() { return cModelPathKeyword_4_0; }
		
		//modelPath=STRING
		public Assignment getModelPathAssignment_4_1() { return cModelPathAssignment_4_1; }
		
		//STRING
		public RuleCall getModelPathSTRINGTerminalRuleCall_4_1_0() { return cModelPathSTRINGTerminalRuleCall_4_1_0; }
		
		//('test-path'  testPath=STRING)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'test-path'
		public Keyword getTestPathKeyword_5_0() { return cTestPathKeyword_5_0; }
		
		//testPath=STRING
		public Assignment getTestPathAssignment_5_1() { return cTestPathAssignment_5_1; }
		
		//STRING
		public RuleCall getTestPathSTRINGTerminalRuleCall_5_1_0() { return cTestPathSTRINGTerminalRuleCall_5_1_0; }
		
		//(generateTest?='gen-test')?
		public Assignment getGenerateTestAssignment_6() { return cGenerateTestAssignment_6; }
		
		//'gen-test'
		public Keyword getGenerateTestGenTestKeyword_6_0() { return cGenerateTestGenTestKeyword_6_0; }
		
		//('extensions' '{'
		//  (tableOptions+=MongoNodeTableOptions)*
		//'}')?
		public Group getGroup_7() { return cGroup_7; }
		
		//'extensions'
		public Keyword getExtensionsKeyword_7_0() { return cExtensionsKeyword_7_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_7_1() { return cLeftCurlyBracketKeyword_7_1; }
		
		//(tableOptions+=MongoNodeTableOptions)*
		public Assignment getTableOptionsAssignment_7_2() { return cTableOptionsAssignment_7_2; }
		
		//MongoNodeTableOptions
		public RuleCall getTableOptionsMongoNodeTableOptionsParserRuleCall_7_2_0() { return cTableOptionsMongoNodeTableOptionsParserRuleCall_7_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7_3() { return cRightCurlyBracketKeyword_7_3; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	public class JpaTableOptionsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.yaktor.Domain.JpaTableOptions");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cTypeEntityCrossReference_0_0 = (CrossReference)cTypeAssignment_0.eContents().get(0);
		private final RuleCall cTypeEntityIDTerminalRuleCall_0_0_1 = (RuleCall)cTypeEntityCrossReference_0_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cSingleTableRootAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cSingleTableRootSingleTableRootKeyword_2_0 = (Keyword)cSingleTableRootAssignment_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//JpaTableOptions:
		//  type=[Entity|ID] "{"
		//    (singleTableRoot?='single-table-root')?
		//  "}"
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//type=[Entity|ID] "{"
		//  (singleTableRoot?='single-table-root')?
		//"}"
		public Group getGroup() { return cGroup; }
		
		//type=[Entity|ID]
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }
		
		//[Entity|ID]
		public CrossReference getTypeEntityCrossReference_0_0() { return cTypeEntityCrossReference_0_0; }
		
		//ID
		public RuleCall getTypeEntityIDTerminalRuleCall_0_0_1() { return cTypeEntityIDTerminalRuleCall_0_0_1; }
		
		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//(singleTableRoot?='single-table-root')?
		public Assignment getSingleTableRootAssignment_2() { return cSingleTableRootAssignment_2; }
		
		//'single-table-root'
		public Keyword getSingleTableRootSingleTableRootKeyword_2_0() { return cSingleTableRootSingleTableRootKeyword_2_0; }
		
		//"}"
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	public class MongoNodeTableOptionsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.yaktor.Domain.MongoNodeTableOptions");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cTypeEntityCrossReference_0_0 = (CrossReference)cTypeAssignment_0.eContents().get(0);
		private final RuleCall cTypeEntityIDTerminalRuleCall_0_0_1 = (RuleCall)cTypeEntityCrossReference_0_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cTtlAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTtlTtlParserRuleCall_2_0 = (RuleCall)cTtlAssignment_2.eContents().get(0);
		private final Assignment cSingleTableRootAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cSingleTableRootSingleTableRootKeyword_3_0 = (Keyword)cSingleTableRootAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//MongoNodeTableOptions:
		//  type=[Entity|ID] '{'
		//    (ttl=Ttl)?
		//    (singleTableRoot?='single-table-root')?
		//  '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//type=[Entity|ID] '{'
		//  (ttl=Ttl)?
		//  (singleTableRoot?='single-table-root')?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//type=[Entity|ID]
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }
		
		//[Entity|ID]
		public CrossReference getTypeEntityCrossReference_0_0() { return cTypeEntityCrossReference_0_0; }
		
		//ID
		public RuleCall getTypeEntityIDTerminalRuleCall_0_0_1() { return cTypeEntityIDTerminalRuleCall_0_0_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//(ttl=Ttl)?
		public Assignment getTtlAssignment_2() { return cTtlAssignment_2; }
		
		//Ttl
		public RuleCall getTtlTtlParserRuleCall_2_0() { return cTtlTtlParserRuleCall_2_0; }
		
		//(singleTableRoot?='single-table-root')?
		public Assignment getSingleTableRootAssignment_3() { return cSingleTableRootAssignment_3; }
		
		//'single-table-root'
		public Keyword getSingleTableRootSingleTableRootKeyword_3_0() { return cSingleTableRootSingleTableRootKeyword_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class QualifiedNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.yaktor.Domain.QualifiedName");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//QualifiedName:
		//  ID ('.' ID)*;
		@Override public ParserRule getRule() { return rule; }
		
		//ID ('.' ID)*
		public Group getGroup() { return cGroup; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }
		
		//('.' ID)*
		public Group getGroup_1() { return cGroup_1; }
		
		//'.'
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1_1() { return cIDTerminalRuleCall_1_1; }
	}
	public class PossiblyQualifiedNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.yaktor.Domain.PossiblyQualifiedName");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//PossiblyQualifiedName:
		//  ID ('.' ID)*;
		@Override public ParserRule getRule() { return rule; }
		
		//ID ('.' ID)*
		public Group getGroup() { return cGroup; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }
		
		//('.' ID)*
		public Group getGroup_1() { return cGroup_1; }
		
		//'.'
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1_1() { return cIDTerminalRuleCall_1_1; }
	}
	public class PersistenceOptionsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "io.yaktor.Domain.PersistenceOptions");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPersistenceOptionsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final UnorderedGroup cUnorderedGroup_2 = (UnorderedGroup)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cUnorderedGroup_2.eContents().get(0);
		private final Keyword cDatabaseKeyword_2_0_0 = (Keyword)cGroup_2_0.eContents().get(0);
		private final Assignment cDbTypeAssignment_2_0_1 = (Assignment)cGroup_2_0.eContents().get(1);
		private final RuleCall cDbTypeDbTypeEnumRuleCall_2_0_1_0 = (RuleCall)cDbTypeAssignment_2_0_1.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cUnorderedGroup_2.eContents().get(1);
		private final Keyword cProviderKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cDbProviderAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cDbProviderDbProviderEnumRuleCall_2_1_1_0 = (RuleCall)cDbProviderAssignment_2_1_1.eContents().get(0);
		private final Group cGroup_2_2 = (Group)cUnorderedGroup_2.eContents().get(2);
		private final Keyword cUserKeyword_2_2_0 = (Keyword)cGroup_2_2.eContents().get(0);
		private final Assignment cUserNameAssignment_2_2_1 = (Assignment)cGroup_2_2.eContents().get(1);
		private final RuleCall cUserNameIDTerminalRuleCall_2_2_1_0 = (RuleCall)cUserNameAssignment_2_2_1.eContents().get(0);
		private final Group cGroup_2_3 = (Group)cUnorderedGroup_2.eContents().get(3);
		private final Keyword cPasswordKeyword_2_3_0 = (Keyword)cGroup_2_3.eContents().get(0);
		private final Assignment cPasswordAssignment_2_3_1 = (Assignment)cGroup_2_3.eContents().get(1);
		private final Alternatives cPasswordAlternatives_2_3_1_0 = (Alternatives)cPasswordAssignment_2_3_1.eContents().get(0);
		private final RuleCall cPasswordIDTerminalRuleCall_2_3_1_0_0 = (RuleCall)cPasswordAlternatives_2_3_1_0.eContents().get(0);
		private final RuleCall cPasswordSTRINGTerminalRuleCall_2_3_1_0_1 = (RuleCall)cPasswordAlternatives_2_3_1_0.eContents().get(1);
		private final Group cGroup_2_4 = (Group)cUnorderedGroup_2.eContents().get(4);
		private final Keyword cUrlKeyword_2_4_0 = (Keyword)cGroup_2_4.eContents().get(0);
		private final Assignment cUrlAssignment_2_4_1 = (Assignment)cGroup_2_4.eContents().get(1);
		private final RuleCall cUrlSTRINGTerminalRuleCall_2_4_1_0 = (RuleCall)cUrlAssignment_2_4_1.eContents().get(0);
		private final Group cGroup_2_5 = (Group)cUnorderedGroup_2.eContents().get(5);
		private final Keyword cDbNameKeyword_2_5_0 = (Keyword)cGroup_2_5.eContents().get(0);
		private final Assignment cDbNameAssignment_2_5_1 = (Assignment)cGroup_2_5.eContents().get(1);
		private final RuleCall cDbNameIDTerminalRuleCall_2_5_1_0 = (RuleCall)cDbNameAssignment_2_5_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//PersistenceOptions:
		//  'persistence-options' '{'
		//  (('database' dbType=DbType) &
		//  ('provider' dbProvider=DbProvider) &
		//  ('user' userName=ID)? &
		//  ('password' password=(ID | STRING))? &
		//  ('url' url=STRING)? &
		//  ('db-name' dbName=ID)?)
		//  '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'persistence-options' '{'
		//(('database' dbType=DbType) &
		//('provider' dbProvider=DbProvider) &
		//('user' userName=ID)? &
		//('password' password=(ID | STRING))? &
		//('url' url=STRING)? &
		//('db-name' dbName=ID)?)
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'persistence-options'
		public Keyword getPersistenceOptionsKeyword_0() { return cPersistenceOptionsKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//(('database' dbType=DbType) &
		//('provider' dbProvider=DbProvider) &
		//('user' userName=ID)? &
		//('password' password=(ID | STRING))? &
		//('url' url=STRING)? &
		//('db-name' dbName=ID)?)
		public UnorderedGroup getUnorderedGroup_2() { return cUnorderedGroup_2; }
		
		//('database' dbType=DbType)
		public Group getGroup_2_0() { return cGroup_2_0; }
		
		//'database'
		public Keyword getDatabaseKeyword_2_0_0() { return cDatabaseKeyword_2_0_0; }
		
		//dbType=DbType
		public Assignment getDbTypeAssignment_2_0_1() { return cDbTypeAssignment_2_0_1; }
		
		//DbType
		public RuleCall getDbTypeDbTypeEnumRuleCall_2_0_1_0() { return cDbTypeDbTypeEnumRuleCall_2_0_1_0; }
		
		//('provider' dbProvider=DbProvider)
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//'provider'
		public Keyword getProviderKeyword_2_1_0() { return cProviderKeyword_2_1_0; }
		
		//dbProvider=DbProvider
		public Assignment getDbProviderAssignment_2_1_1() { return cDbProviderAssignment_2_1_1; }
		
		//DbProvider
		public RuleCall getDbProviderDbProviderEnumRuleCall_2_1_1_0() { return cDbProviderDbProviderEnumRuleCall_2_1_1_0; }
		
		//('user' userName=ID)?
		public Group getGroup_2_2() { return cGroup_2_2; }
		
		//'user'
		public Keyword getUserKeyword_2_2_0() { return cUserKeyword_2_2_0; }
		
		//userName=ID
		public Assignment getUserNameAssignment_2_2_1() { return cUserNameAssignment_2_2_1; }
		
		//ID
		public RuleCall getUserNameIDTerminalRuleCall_2_2_1_0() { return cUserNameIDTerminalRuleCall_2_2_1_0; }
		
		//('password' password=(ID | STRING))?
		public Group getGroup_2_3() { return cGroup_2_3; }
		
		//'password'
		public Keyword getPasswordKeyword_2_3_0() { return cPasswordKeyword_2_3_0; }
		
		//password=(ID | STRING)
		public Assignment getPasswordAssignment_2_3_1() { return cPasswordAssignment_2_3_1; }
		
		//(ID | STRING)
		public Alternatives getPasswordAlternatives_2_3_1_0() { return cPasswordAlternatives_2_3_1_0; }
		
		//ID
		public RuleCall getPasswordIDTerminalRuleCall_2_3_1_0_0() { return cPasswordIDTerminalRuleCall_2_3_1_0_0; }
		
		//STRING
		public RuleCall getPasswordSTRINGTerminalRuleCall_2_3_1_0_1() { return cPasswordSTRINGTerminalRuleCall_2_3_1_0_1; }
		
		//('url' url=STRING)?
		public Group getGroup_2_4() { return cGroup_2_4; }
		
		//'url'
		public Keyword getUrlKeyword_2_4_0() { return cUrlKeyword_2_4_0; }
		
		//url=STRING
		public Assignment getUrlAssignment_2_4_1() { return cUrlAssignment_2_4_1; }
		
		//STRING
		public RuleCall getUrlSTRINGTerminalRuleCall_2_4_1_0() { return cUrlSTRINGTerminalRuleCall_2_4_1_0; }
		
		//('db-name' dbName=ID)?
		public Group getGroup_2_5() { return cGroup_2_5; }
		
		//'db-name'
		public Keyword getDbNameKeyword_2_5_0() { return cDbNameKeyword_2_5_0; }
		
		//dbName=ID
		public Assignment getDbNameAssignment_2_5_1() { return cDbNameAssignment_2_5_1; }
		
		//ID
		public RuleCall getDbNameIDTerminalRuleCall_2_5_1_0() { return cDbNameIDTerminalRuleCall_2_5_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	
	public class CardinalityElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "io.yaktor.Domain.Cardinality");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cRequiredEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cRequiredExclamationMarkKeyword_0_0 = (Keyword)cRequiredEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cOptionalEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cOptionalQuestionMarkKeyword_1_0 = (Keyword)cOptionalEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cOneOrMoreEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cOneOrMorePlusSignKeyword_2_0 = (Keyword)cOneOrMoreEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cManyEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cManyAsteriskKeyword_3_0 = (Keyword)cManyEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum Cardinality:
		//  Required = '!' | Optional = '?' | OneOrMore = '+' | Many = '*';
		public EnumRule getRule() { return rule; }
		
		//Required = '!' | Optional = '?' | OneOrMore = '+' | Many = '*'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Required = '!'
		public EnumLiteralDeclaration getRequiredEnumLiteralDeclaration_0() { return cRequiredEnumLiteralDeclaration_0; }
		
		//'!'
		public Keyword getRequiredExclamationMarkKeyword_0_0() { return cRequiredExclamationMarkKeyword_0_0; }
		
		//Optional = '?'
		public EnumLiteralDeclaration getOptionalEnumLiteralDeclaration_1() { return cOptionalEnumLiteralDeclaration_1; }
		
		//'?'
		public Keyword getOptionalQuestionMarkKeyword_1_0() { return cOptionalQuestionMarkKeyword_1_0; }
		
		//OneOrMore = '+'
		public EnumLiteralDeclaration getOneOrMoreEnumLiteralDeclaration_2() { return cOneOrMoreEnumLiteralDeclaration_2; }
		
		//'+'
		public Keyword getOneOrMorePlusSignKeyword_2_0() { return cOneOrMorePlusSignKeyword_2_0; }
		
		//Many = '*'
		public EnumLiteralDeclaration getManyEnumLiteralDeclaration_3() { return cManyEnumLiteralDeclaration_3; }
		
		//'*'
		public Keyword getManyAsteriskKeyword_3_0() { return cManyAsteriskKeyword_3_0; }
	}
	public class SinglularCardinalityElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "io.yaktor.Domain.SinglularCardinality");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cRequiredEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cRequiredExclamationMarkKeyword_0_0 = (Keyword)cRequiredEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cOptionalEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cOptionalQuestionMarkKeyword_1_0 = (Keyword)cOptionalEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum SinglularCardinality returns Cardinality:
		//  Required = '!' | Optional = '?';
		public EnumRule getRule() { return rule; }
		
		//Required = '!' | Optional = '?'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Required = '!'
		public EnumLiteralDeclaration getRequiredEnumLiteralDeclaration_0() { return cRequiredEnumLiteralDeclaration_0; }
		
		//'!'
		public Keyword getRequiredExclamationMarkKeyword_0_0() { return cRequiredExclamationMarkKeyword_0_0; }
		
		//Optional = '?'
		public EnumLiteralDeclaration getOptionalEnumLiteralDeclaration_1() { return cOptionalEnumLiteralDeclaration_1; }
		
		//'?'
		public Keyword getOptionalQuestionMarkKeyword_1_0() { return cOptionalQuestionMarkKeyword_1_0; }
	}
	public class InclusionTypeElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "io.yaktor.Domain.InclusionType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cOverwriteEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cOverwriteOVERWRITEKeyword_0_0 = (Keyword)cOverwriteEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cProtectedEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cProtectedPROTECTEDKeyword_1_0 = (Keyword)cProtectedEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cNoneEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cNoneNONEKeyword_2_0 = (Keyword)cNoneEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum InclusionType:
		//  Overwrite = 'OVERWRITE' | Protected = 'PROTECTED' | None = 'NONE';
		public EnumRule getRule() { return rule; }
		
		//Overwrite = 'OVERWRITE' | Protected = 'PROTECTED' | None = 'NONE'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Overwrite = 'OVERWRITE'
		public EnumLiteralDeclaration getOverwriteEnumLiteralDeclaration_0() { return cOverwriteEnumLiteralDeclaration_0; }
		
		//'OVERWRITE'
		public Keyword getOverwriteOVERWRITEKeyword_0_0() { return cOverwriteOVERWRITEKeyword_0_0; }
		
		//Protected = 'PROTECTED'
		public EnumLiteralDeclaration getProtectedEnumLiteralDeclaration_1() { return cProtectedEnumLiteralDeclaration_1; }
		
		//'PROTECTED'
		public Keyword getProtectedPROTECTEDKeyword_1_0() { return cProtectedPROTECTEDKeyword_1_0; }
		
		//None = 'NONE'
		public EnumLiteralDeclaration getNoneEnumLiteralDeclaration_2() { return cNoneEnumLiteralDeclaration_2; }
		
		//'NONE'
		public Keyword getNoneNONEKeyword_2_0() { return cNoneNONEKeyword_2_0; }
	}
	public class DbTypeElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "io.yaktor.Domain.DbType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cMySqlEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cMySqlMYSQLKeyword_0_0 = (Keyword)cMySqlEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cOracleEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cOracleORACLEKeyword_1_0 = (Keyword)cOracleEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cDatabaseDotComEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cDatabaseDotComDATABASE_DOT_COMKeyword_2_0 = (Keyword)cDatabaseDotComEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cDb2400EnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cDb2400DB2_400Keyword_3_0 = (Keyword)cDb2400EnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cDb2ExpressCEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cDb2ExpressCDB2_EXPRESS_CKeyword_4_0 = (Keyword)cDb2ExpressCEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cDerbyClientEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cDerbyClientDERBY_CLIENTKeyword_5_0 = (Keyword)cDerbyClientEnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cDerbyEmbeddedEnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cDerbyEmbeddedDERBY_EMBEDDEDKeyword_6_0 = (Keyword)cDerbyEmbeddedEnumLiteralDeclaration_6.eContents().get(0);
		private final EnumLiteralDeclaration cFirebirdEnumLiteralDeclaration_7 = (EnumLiteralDeclaration)cAlternatives.eContents().get(7);
		private final Keyword cFirebirdFIREBIRDKeyword_7_0 = (Keyword)cFirebirdEnumLiteralDeclaration_7.eContents().get(0);
		private final EnumLiteralDeclaration cGoogleAppEngineEnumLiteralDeclaration_8 = (EnumLiteralDeclaration)cAlternatives.eContents().get(8);
		private final Keyword cGoogleAppEngineGOOGLE_APP_ENGINEKeyword_8_0 = (Keyword)cGoogleAppEngineEnumLiteralDeclaration_8.eContents().get(0);
		private final EnumLiteralDeclaration cH2InMemoryEnumLiteralDeclaration_9 = (EnumLiteralDeclaration)cAlternatives.eContents().get(9);
		private final Keyword cH2InMemoryH2_IN_MEMORYKeyword_9_0 = (Keyword)cH2InMemoryEnumLiteralDeclaration_9.eContents().get(0);
		private final EnumLiteralDeclaration cHypersonicInMemoryEnumLiteralDeclaration_10 = (EnumLiteralDeclaration)cAlternatives.eContents().get(10);
		private final Keyword cHypersonicInMemoryHYPERSONIC_IN_MEMORYKeyword_10_0 = (Keyword)cHypersonicInMemoryEnumLiteralDeclaration_10.eContents().get(0);
		private final EnumLiteralDeclaration cHypersonicPersistentEnumLiteralDeclaration_11 = (EnumLiteralDeclaration)cAlternatives.eContents().get(11);
		private final Keyword cHypersonicPersistentHYPERSONIC_PERSISTENTKeyword_11_0 = (Keyword)cHypersonicPersistentEnumLiteralDeclaration_11.eContents().get(0);
		private final EnumLiteralDeclaration cMsSqlEnumLiteralDeclaration_12 = (EnumLiteralDeclaration)cAlternatives.eContents().get(12);
		private final Keyword cMsSqlMSSQLKeyword_12_0 = (Keyword)cMsSqlEnumLiteralDeclaration_12.eContents().get(0);
		private final EnumLiteralDeclaration cPostgresEnumLiteralDeclaration_13 = (EnumLiteralDeclaration)cAlternatives.eContents().get(13);
		private final Keyword cPostgresPOSTGRESKeyword_13_0 = (Keyword)cPostgresEnumLiteralDeclaration_13.eContents().get(0);
		private final EnumLiteralDeclaration cSybaseEnumLiteralDeclaration_14 = (EnumLiteralDeclaration)cAlternatives.eContents().get(14);
		private final Keyword cSybaseSYBASEKeyword_14_0 = (Keyword)cSybaseEnumLiteralDeclaration_14.eContents().get(0);
		
		//enum DbType:
		//  MySql = 'MYSQL' | Oracle = 'ORACLE' |
		//  DatabaseDotCom = 'DATABASE_DOT_COM' | Db2400 = 'DB2_400' | Db2ExpressC = 'DB2_EXPRESS_C' | DerbyClient = 'DERBY_CLIENT' | DerbyEmbedded = 'DERBY_EMBEDDED' |
		//    Firebird = 'FIREBIRD' | GoogleAppEngine = 'GOOGLE_APP_ENGINE' | H2InMemory = 'H2_IN_MEMORY' | HypersonicInMemory = 'HYPERSONIC_IN_MEMORY' |
		//    HypersonicPersistent = 'HYPERSONIC_PERSISTENT' | MsSql = 'MSSQL' | Postgres = 'POSTGRES' | Sybase = 'SYBASE'
		//  ;
		public EnumRule getRule() { return rule; }
		
		//MySql = 'MYSQL' | Oracle = 'ORACLE' |
		//DatabaseDotCom = 'DATABASE_DOT_COM' | Db2400 = 'DB2_400' | Db2ExpressC = 'DB2_EXPRESS_C' | DerbyClient = 'DERBY_CLIENT' | DerbyEmbedded = 'DERBY_EMBEDDED' |
		//  Firebird = 'FIREBIRD' | GoogleAppEngine = 'GOOGLE_APP_ENGINE' | H2InMemory = 'H2_IN_MEMORY' | HypersonicInMemory = 'HYPERSONIC_IN_MEMORY' |
		//  HypersonicPersistent = 'HYPERSONIC_PERSISTENT' | MsSql = 'MSSQL' | Postgres = 'POSTGRES' | Sybase = 'SYBASE'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//MySql = 'MYSQL'
		public EnumLiteralDeclaration getMySqlEnumLiteralDeclaration_0() { return cMySqlEnumLiteralDeclaration_0; }
		
		//'MYSQL'
		public Keyword getMySqlMYSQLKeyword_0_0() { return cMySqlMYSQLKeyword_0_0; }
		
		//Oracle = 'ORACLE'
		public EnumLiteralDeclaration getOracleEnumLiteralDeclaration_1() { return cOracleEnumLiteralDeclaration_1; }
		
		//'ORACLE'
		public Keyword getOracleORACLEKeyword_1_0() { return cOracleORACLEKeyword_1_0; }
		
		//DatabaseDotCom = 'DATABASE_DOT_COM'
		public EnumLiteralDeclaration getDatabaseDotComEnumLiteralDeclaration_2() { return cDatabaseDotComEnumLiteralDeclaration_2; }
		
		//'DATABASE_DOT_COM'
		public Keyword getDatabaseDotComDATABASE_DOT_COMKeyword_2_0() { return cDatabaseDotComDATABASE_DOT_COMKeyword_2_0; }
		
		//Db2400 = 'DB2_400'
		public EnumLiteralDeclaration getDb2400EnumLiteralDeclaration_3() { return cDb2400EnumLiteralDeclaration_3; }
		
		//'DB2_400'
		public Keyword getDb2400DB2_400Keyword_3_0() { return cDb2400DB2_400Keyword_3_0; }
		
		//Db2ExpressC = 'DB2_EXPRESS_C'
		public EnumLiteralDeclaration getDb2ExpressCEnumLiteralDeclaration_4() { return cDb2ExpressCEnumLiteralDeclaration_4; }
		
		//'DB2_EXPRESS_C'
		public Keyword getDb2ExpressCDB2_EXPRESS_CKeyword_4_0() { return cDb2ExpressCDB2_EXPRESS_CKeyword_4_0; }
		
		//DerbyClient = 'DERBY_CLIENT'
		public EnumLiteralDeclaration getDerbyClientEnumLiteralDeclaration_5() { return cDerbyClientEnumLiteralDeclaration_5; }
		
		//'DERBY_CLIENT'
		public Keyword getDerbyClientDERBY_CLIENTKeyword_5_0() { return cDerbyClientDERBY_CLIENTKeyword_5_0; }
		
		//DerbyEmbedded = 'DERBY_EMBEDDED'
		public EnumLiteralDeclaration getDerbyEmbeddedEnumLiteralDeclaration_6() { return cDerbyEmbeddedEnumLiteralDeclaration_6; }
		
		//'DERBY_EMBEDDED'
		public Keyword getDerbyEmbeddedDERBY_EMBEDDEDKeyword_6_0() { return cDerbyEmbeddedDERBY_EMBEDDEDKeyword_6_0; }
		
		//Firebird = 'FIREBIRD'
		public EnumLiteralDeclaration getFirebirdEnumLiteralDeclaration_7() { return cFirebirdEnumLiteralDeclaration_7; }
		
		//'FIREBIRD'
		public Keyword getFirebirdFIREBIRDKeyword_7_0() { return cFirebirdFIREBIRDKeyword_7_0; }
		
		//GoogleAppEngine = 'GOOGLE_APP_ENGINE'
		public EnumLiteralDeclaration getGoogleAppEngineEnumLiteralDeclaration_8() { return cGoogleAppEngineEnumLiteralDeclaration_8; }
		
		//'GOOGLE_APP_ENGINE'
		public Keyword getGoogleAppEngineGOOGLE_APP_ENGINEKeyword_8_0() { return cGoogleAppEngineGOOGLE_APP_ENGINEKeyword_8_0; }
		
		//H2InMemory = 'H2_IN_MEMORY'
		public EnumLiteralDeclaration getH2InMemoryEnumLiteralDeclaration_9() { return cH2InMemoryEnumLiteralDeclaration_9; }
		
		//'H2_IN_MEMORY'
		public Keyword getH2InMemoryH2_IN_MEMORYKeyword_9_0() { return cH2InMemoryH2_IN_MEMORYKeyword_9_0; }
		
		//HypersonicInMemory = 'HYPERSONIC_IN_MEMORY'
		public EnumLiteralDeclaration getHypersonicInMemoryEnumLiteralDeclaration_10() { return cHypersonicInMemoryEnumLiteralDeclaration_10; }
		
		//'HYPERSONIC_IN_MEMORY'
		public Keyword getHypersonicInMemoryHYPERSONIC_IN_MEMORYKeyword_10_0() { return cHypersonicInMemoryHYPERSONIC_IN_MEMORYKeyword_10_0; }
		
		//HypersonicPersistent = 'HYPERSONIC_PERSISTENT'
		public EnumLiteralDeclaration getHypersonicPersistentEnumLiteralDeclaration_11() { return cHypersonicPersistentEnumLiteralDeclaration_11; }
		
		//'HYPERSONIC_PERSISTENT'
		public Keyword getHypersonicPersistentHYPERSONIC_PERSISTENTKeyword_11_0() { return cHypersonicPersistentHYPERSONIC_PERSISTENTKeyword_11_0; }
		
		//MsSql = 'MSSQL'
		public EnumLiteralDeclaration getMsSqlEnumLiteralDeclaration_12() { return cMsSqlEnumLiteralDeclaration_12; }
		
		//'MSSQL'
		public Keyword getMsSqlMSSQLKeyword_12_0() { return cMsSqlMSSQLKeyword_12_0; }
		
		//Postgres = 'POSTGRES'
		public EnumLiteralDeclaration getPostgresEnumLiteralDeclaration_13() { return cPostgresEnumLiteralDeclaration_13; }
		
		//'POSTGRES'
		public Keyword getPostgresPOSTGRESKeyword_13_0() { return cPostgresPOSTGRESKeyword_13_0; }
		
		//Sybase = 'SYBASE'
		public EnumLiteralDeclaration getSybaseEnumLiteralDeclaration_14() { return cSybaseEnumLiteralDeclaration_14; }
		
		//'SYBASE'
		public Keyword getSybaseSYBASEKeyword_14_0() { return cSybaseSYBASEKeyword_14_0; }
	}
	public class DbProviderElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "io.yaktor.Domain.DbProvider");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cHibernateEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cHibernateHIBERNATEKeyword_0_0 = (Keyword)cHibernateEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cDataNucleusEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cDataNucleusDATANUCLEUSKeyword_1_0 = (Keyword)cDataNucleusEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cEclipseLinkEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cEclipseLinkECLIPSELINKKeyword_2_0 = (Keyword)cEclipseLinkEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cOpenJPAEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cOpenJPAOPENJPAKeyword_3_0 = (Keyword)cOpenJPAEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum DbProvider:
		//    Hibernate = 'HIBERNATE' | DataNucleus = 'DATANUCLEUS' |
		//    EclipseLink = 'ECLIPSELINK' | OpenJPA = 'OPENJPA'
		//    ;
		public EnumRule getRule() { return rule; }
		
		//Hibernate = 'HIBERNATE' | DataNucleus = 'DATANUCLEUS' |
		//EclipseLink = 'ECLIPSELINK' | OpenJPA = 'OPENJPA'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Hibernate = 'HIBERNATE'
		public EnumLiteralDeclaration getHibernateEnumLiteralDeclaration_0() { return cHibernateEnumLiteralDeclaration_0; }
		
		//'HIBERNATE'
		public Keyword getHibernateHIBERNATEKeyword_0_0() { return cHibernateHIBERNATEKeyword_0_0; }
		
		//DataNucleus = 'DATANUCLEUS'
		public EnumLiteralDeclaration getDataNucleusEnumLiteralDeclaration_1() { return cDataNucleusEnumLiteralDeclaration_1; }
		
		//'DATANUCLEUS'
		public Keyword getDataNucleusDATANUCLEUSKeyword_1_0() { return cDataNucleusDATANUCLEUSKeyword_1_0; }
		
		//EclipseLink = 'ECLIPSELINK'
		public EnumLiteralDeclaration getEclipseLinkEnumLiteralDeclaration_2() { return cEclipseLinkEnumLiteralDeclaration_2; }
		
		//'ECLIPSELINK'
		public Keyword getEclipseLinkECLIPSELINKKeyword_2_0() { return cEclipseLinkECLIPSELINKKeyword_2_0; }
		
		//OpenJPA = 'OPENJPA'
		public EnumLiteralDeclaration getOpenJPAEnumLiteralDeclaration_3() { return cOpenJPAEnumLiteralDeclaration_3; }
		
		//'OPENJPA'
		public Keyword getOpenJPAOPENJPAKeyword_3_0() { return cOpenJPAOPENJPAKeyword_3_0; }
	}
	public class JpaEnumTypeElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "io.yaktor.Domain.JpaEnumType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cOrdinalEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cOrdinalORDINALKeyword_0_0 = (Keyword)cOrdinalEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cStringEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cStringSTRINGKeyword_1_0 = (Keyword)cStringEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cNoneEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cNoneNONEKeyword_2_0 = (Keyword)cNoneEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum JpaEnumType:
		//    Ordinal = 'ORDINAL' | String = 'STRING' | None = 'NONE'
		//    ;
		public EnumRule getRule() { return rule; }
		
		//Ordinal = 'ORDINAL' | String = 'STRING' | None = 'NONE'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Ordinal = 'ORDINAL'
		public EnumLiteralDeclaration getOrdinalEnumLiteralDeclaration_0() { return cOrdinalEnumLiteralDeclaration_0; }
		
		//'ORDINAL'
		public Keyword getOrdinalORDINALKeyword_0_0() { return cOrdinalORDINALKeyword_0_0; }
		
		//String = 'STRING'
		public EnumLiteralDeclaration getStringEnumLiteralDeclaration_1() { return cStringEnumLiteralDeclaration_1; }
		
		//'STRING'
		public Keyword getStringSTRINGKeyword_1_0() { return cStringSTRINGKeyword_1_0; }
		
		//None = 'NONE'
		public EnumLiteralDeclaration getNoneEnumLiteralDeclaration_2() { return cNoneEnumLiteralDeclaration_2; }
		
		//'NONE'
		public Keyword getNoneNONEKeyword_2_0() { return cNoneNONEKeyword_2_0; }
	}
	
	private final DomainModelElements pDomainModel;
	private final DomainModelImportElements pDomainModelImport;
	private final NamedTypeElements pNamedType;
	private final AssociationElements pAssociation;
	private final AssociationRefElements pAssociationRef;
	private final AssociationEndElements pAssociationEnd;
	private final SimpleFieldElements pSimpleField;
	private final FieldElements pField;
	private final ConstraintTypeFieldElements pConstraintTypeField;
	private final UniqueConstraintElements pUniqueConstraint;
	private final IndexConstraintElements pIndexConstraint;
	private final EntityElements pEntity;
	private final TypeElements pType;
	private final EnumTypeElements pEnumType;
	private final EnumValueElements pEnumValue;
	private final IdFieldElements pIdField;
	private final ShortIdFieldElements pShortIdField;
	private final StringFieldElements pStringField;
	private final DateFieldElements pDateField;
	private final GeoLocationFieldElements pGeoLocationField;
	private final IntegerFieldElements pIntegerField;
	private final NumericFieldElements pNumericField;
	private final BooleanFieldElements pBooleanField;
	private final PriceFieldElements pPriceField;
	private final AmountFieldElements pAmountField;
	private final CountFieldElements pCountField;
	private final EnumFieldElements pEnumField;
	private final TypeFieldElements pTypeField;
	private final AnyFieldElements pAnyField;
	private final EntityReferenceFieldElements pEntityReferenceField;
	private final CardinalityElements eCardinality;
	private final SinglularCardinalityElements eSinglularCardinality;
	private final FloatingPointConstElements pFloatingPointConst;
	private final IntegerConstElements pIntegerConst;
	private final BooleanConstElements pBooleanConst;
	private final GenOptionsElements pGenOptions;
	private final JpaGenOptionsElements pJpaGenOptions;
	private final ProjectOptionsElements pProjectOptions;
	private final GenerationInclusionElements pGenerationInclusion;
	private final TtlElements pTtl;
	private final MongoNodeGenOptionsElements pMongoNodeGenOptions;
	private final JpaTableOptionsElements pJpaTableOptions;
	private final MongoNodeTableOptionsElements pMongoNodeTableOptions;
	private final InclusionTypeElements eInclusionType;
	private final QualifiedNameElements pQualifiedName;
	private final PossiblyQualifiedNameElements pPossiblyQualifiedName;
	private final PersistenceOptionsElements pPersistenceOptions;
	private final DbTypeElements eDbType;
	private final DbProviderElements eDbProvider;
	private final JpaEnumTypeElements eJpaEnumType;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public DomainGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pDomainModel = new DomainModelElements();
		this.pDomainModelImport = new DomainModelImportElements();
		this.pNamedType = new NamedTypeElements();
		this.pAssociation = new AssociationElements();
		this.pAssociationRef = new AssociationRefElements();
		this.pAssociationEnd = new AssociationEndElements();
		this.pSimpleField = new SimpleFieldElements();
		this.pField = new FieldElements();
		this.pConstraintTypeField = new ConstraintTypeFieldElements();
		this.pUniqueConstraint = new UniqueConstraintElements();
		this.pIndexConstraint = new IndexConstraintElements();
		this.pEntity = new EntityElements();
		this.pType = new TypeElements();
		this.pEnumType = new EnumTypeElements();
		this.pEnumValue = new EnumValueElements();
		this.pIdField = new IdFieldElements();
		this.pShortIdField = new ShortIdFieldElements();
		this.pStringField = new StringFieldElements();
		this.pDateField = new DateFieldElements();
		this.pGeoLocationField = new GeoLocationFieldElements();
		this.pIntegerField = new IntegerFieldElements();
		this.pNumericField = new NumericFieldElements();
		this.pBooleanField = new BooleanFieldElements();
		this.pPriceField = new PriceFieldElements();
		this.pAmountField = new AmountFieldElements();
		this.pCountField = new CountFieldElements();
		this.pEnumField = new EnumFieldElements();
		this.pTypeField = new TypeFieldElements();
		this.pAnyField = new AnyFieldElements();
		this.pEntityReferenceField = new EntityReferenceFieldElements();
		this.eCardinality = new CardinalityElements();
		this.eSinglularCardinality = new SinglularCardinalityElements();
		this.pFloatingPointConst = new FloatingPointConstElements();
		this.pIntegerConst = new IntegerConstElements();
		this.pBooleanConst = new BooleanConstElements();
		this.pGenOptions = new GenOptionsElements();
		this.pJpaGenOptions = new JpaGenOptionsElements();
		this.pProjectOptions = new ProjectOptionsElements();
		this.pGenerationInclusion = new GenerationInclusionElements();
		this.pTtl = new TtlElements();
		this.pMongoNodeGenOptions = new MongoNodeGenOptionsElements();
		this.pJpaTableOptions = new JpaTableOptionsElements();
		this.pMongoNodeTableOptions = new MongoNodeTableOptionsElements();
		this.eInclusionType = new InclusionTypeElements();
		this.pQualifiedName = new QualifiedNameElements();
		this.pPossiblyQualifiedName = new PossiblyQualifiedNameElements();
		this.pPersistenceOptions = new PersistenceOptionsElements();
		this.eDbType = new DbTypeElements();
		this.eDbProvider = new DbProviderElements();
		this.eJpaEnumType = new JpaEnumTypeElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("io.yaktor.Domain".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//DomainModel:
	//  ('import' domainModelImports+=DomainModelImport)*
	//  'domain-model' name=ID '{'
	//  (genOptions=GenOptions)?
	//  types+=NamedType*
	//  '}'
	//;
	public DomainModelElements getDomainModelAccess() {
		return pDomainModel;
	}
	
	public ParserRule getDomainModelRule() {
		return getDomainModelAccess().getRule();
	}
	
	//DomainModelImport :
	//  ref=[DomainModel|ID] ('as' alias=ID)?
	//;
	public DomainModelImportElements getDomainModelImportAccess() {
		return pDomainModelImport;
	}
	
	public ParserRule getDomainModelImportRule() {
		return getDomainModelImportAccess().getRule();
	}
	
	//NamedType:
	//  Association | AssociationRef | Entity | EnumType | Type
	//;
	public NamedTypeElements getNamedTypeAccess() {
		return pNamedType;
	}
	
	public ParserRule getNamedTypeRule() {
		return getNamedTypeAccess().getRule();
	}
	
	//Association:
	//  'association' name=ID '{'
	//  start=AssociationEnd
	//  (isUnidirectional?='-->'|'<-->')
	//  end=AssociationEnd
	//  '}'
	//;
	public AssociationElements getAssociationAccess() {
		return pAssociation;
	}
	
	public ParserRule getAssociationRule() {
		return getAssociationAccess().getRule();
	}
	
	//AssociationRef:
	//  'association-ref' ref=[Association|PossiblyQualifiedName]
	//;
	public AssociationRefElements getAssociationRefAccess() {
		return pAssociationRef;
	}
	
	public ParserRule getAssociationRefRule() {
		return getAssociationRefAccess().getRule();
	}
	
	//AssociationEnd:
	//  references=[Entity|PossiblyQualifiedName]
	//  name=ID
	//  (cardinality=Cardinality)?
	//  isComposition?='composition'?
	//  unique?='unique'?
	//;
	public AssociationEndElements getAssociationEndAccess() {
		return pAssociationEnd;
	}
	
	public ParserRule getAssociationEndRule() {
		return getAssociationEndAccess().getRule();
	}
	
	//SimpleField:
	//  IdField | ShortIdField | StringField | DateField | IntegerField | EnumField |
	//  NumericField | BooleanField | PriceField | AmountField |
	//  CountField | EntityReferenceField| GeoLocationField;
	public SimpleFieldElements getSimpleFieldAccess() {
		return pSimpleField;
	}
	
	public ParserRule getSimpleFieldRule() {
		return getSimpleFieldAccess().getRule();
	}
	
	//Field:
	//  SimpleField | TypeField | AnyField;
	public FieldElements getFieldAccess() {
		return pField;
	}
	
	public ParserRule getFieldRule() {
		return getFieldAccess().getRule();
	}
	
	//ConstraintTypeField:
	//  SimpleField | AssociationEnd;
	public ConstraintTypeFieldElements getConstraintTypeFieldAccess() {
		return pConstraintTypeField;
	}
	
	public ParserRule getConstraintTypeFieldRule() {
		return getConstraintTypeFieldAccess().getRule();
	}
	
	//UniqueConstraint:
	//  'unique-constraint' fields+=[ConstraintTypeField|PossiblyQualifiedName]+;
	public UniqueConstraintElements getUniqueConstraintAccess() {
		return pUniqueConstraint;
	}
	
	public ParserRule getUniqueConstraintRule() {
		return getUniqueConstraintAccess().getRule();
	}
	
	//IndexConstraint:
	//  'composite-index' fields+=[ConstraintTypeField|PossiblyQualifiedName]+;
	public IndexConstraintElements getIndexConstraintAccess() {
		return pIndexConstraint;
	}
	
	public ParserRule getIndexConstraintRule() {
		return getIndexConstraintAccess().getRule();
	}
	
	//Entity:
	//  isAbstract?='abstract'? 'entity' name=ID ('extends' supertype=[Entity|PossiblyQualifiedName])?  metaData?='auditable'?'{'
	//  fields+=Field*
	//  uniqueConstraints+=UniqueConstraint*
	//  indexConstraints+=IndexConstraint*
	//  ('key' '(' keys+=[Field|ID] ')')?
	//  '}'
	//;
	public EntityElements getEntityAccess() {
		return pEntity;
	}
	
	public ParserRule getEntityRule() {
		return getEntityAccess().getRule();
	}
	
	//Type:
	//  isAbstract?='abstract'? 'type' name=ID ('extends' supertype=[Type|PossiblyQualifiedName])?  '{'
	//  fields+=Field*
	//  uniqueConstraints+=UniqueConstraint*
	//  indexConstraints+=IndexConstraint*
	//  ('key' '(' keys+=[Field|ID] ')')?
	//  '}'
	//;
	public TypeElements getTypeAccess() {
		return pType;
	}
	
	public ParserRule getTypeRule() {
		return getTypeAccess().getRule();
	}
	
	//EnumType:
	//  'enum' name=ID '{'
	//  values+=EnumValue+
	//  '}'
	//;
	public EnumTypeElements getEnumTypeAccess() {
		return pEnumType;
	}
	
	public ParserRule getEnumTypeRule() {
		return getEnumTypeAccess().getRule();
	}
	
	//EnumValue:
	//  name=ID '=' value=STRING;
	public EnumValueElements getEnumValueAccess() {
		return pEnumValue;
	}
	
	public ParserRule getEnumValueRule() {
		return getEnumValueAccess().getRule();
	}
	
	//IdField:
	//    'Id' name=ID
	//  (cardinality=Cardinality)?
	//  (unique?='unique'? &
	//  indexed?='indexed'?)
	//;
	public IdFieldElements getIdFieldAccess() {
		return pIdField;
	}
	
	public ParserRule getIdFieldRule() {
		return getIdFieldAccess().getRule();
	}
	
	//ShortIdField:
	//    'ShortId' name=ID
	//  (cardinality=Cardinality)?
	//  ((pattern=STRING maxValue=INT?)? &
	//  unique?='unique'? &
	//  indexed?='indexed'?)
	//;
	public ShortIdFieldElements getShortIdFieldAccess() {
		return pShortIdField;
	}
	
	public ParserRule getShortIdFieldRule() {
		return getShortIdFieldAccess().getRule();
	}
	
	//StringField:
	//  'String' name=ID
	//  (cardinality=Cardinality)?
	//  (('=' defaultValue=STRING)? &
	//  ('pattern' pattern=STRING)? &
	//  unique?='unique'? &
	//  indexed?='indexed'? &
	//  obscured?='obscured'? &
	//  ('[' (minLength=INT)? '..' (maxLength=INT)? ']')?)
	//;
	public StringFieldElements getStringFieldAccess() {
		return pStringField;
	}
	
	public ParserRule getStringFieldRule() {
		return getStringFieldAccess().getRule();
	}
	
	//DateField:
	//  'Date' name=ID
	//  ('=' defaultValue=STRING)?
	//  (cardinality=Cardinality)?
	//  (('[' (before=STRING)? '..' (after=STRING)? ']')? &
	//  unique?='unique'? &
	//  indexed?='indexed'? &
	//  (past?='past' | future?='future')?)
	//;
	public DateFieldElements getDateFieldAccess() {
		return pDateField;
	}
	
	public ParserRule getDateFieldRule() {
		return getDateFieldAccess().getRule();
	}
	
	//GeoLocationField:
	//  'GeoLocation' name=ID
	//  (cardinality=SinglularCardinality)?
	//;
	public GeoLocationFieldElements getGeoLocationFieldAccess() {
		return pGeoLocationField;
	}
	
	public ParserRule getGeoLocationFieldRule() {
		return getGeoLocationFieldAccess().getRule();
	}
	
	//IntegerField:
	//  'Integer' name=ID
	//  (cardinality=Cardinality)?
	//  (('=' defaultValue=IntegerConst)? &
	//  unique?='unique'? &
	//  indexed?='indexed'? &
	//  ('[' (minValue=IntegerConst)? '..' (maxValue=IntegerConst)? ']')?)
	//;
	public IntegerFieldElements getIntegerFieldAccess() {
		return pIntegerField;
	}
	
	public ParserRule getIntegerFieldRule() {
		return getIntegerFieldAccess().getRule();
	}
	
	//NumericField:
	//  'Numeric' name=ID
	//  (cardinality=Cardinality)?
	//  (('=' defaultValue=FloatingPointConst)? &
	//  unique?='unique'? &
	//  indexed?='indexed'? &
	//  ('[' (minValue=FloatingPointConst)? '..' (maxValue=FloatingPointConst)? ']')?)
	//;
	public NumericFieldElements getNumericFieldAccess() {
		return pNumericField;
	}
	
	public ParserRule getNumericFieldRule() {
		return getNumericFieldAccess().getRule();
	}
	
	//BooleanField:
	//  'Boolean' name=ID
	//  (cardinality=Cardinality)?
	//  (unique?='unique'? &
	//  indexed?='indexed'? &
	//  ('=' defaultValue=BooleanConst))?
	//;
	public BooleanFieldElements getBooleanFieldAccess() {
		return pBooleanField;
	}
	
	public ParserRule getBooleanFieldRule() {
		return getBooleanFieldAccess().getRule();
	}
	
	//PriceField:
	//  'Price' name=ID
	//  (cardinality=Cardinality)?
	//  (indexed?='indexed'? &
	//  unique?='unique'?)
	//;
	public PriceFieldElements getPriceFieldAccess() {
		return pPriceField;
	}
	
	public ParserRule getPriceFieldRule() {
		return getPriceFieldAccess().getRule();
	}
	
	//AmountField:
	//  'Amount' name=ID
	//  (cardinality=Cardinality)?
	//  (indexed?='indexed'? &
	//  unique?='unique'?)
	//;
	public AmountFieldElements getAmountFieldAccess() {
		return pAmountField;
	}
	
	public ParserRule getAmountFieldRule() {
		return getAmountFieldAccess().getRule();
	}
	
	//CountField:
	//  'Count' name=ID
	//  (cardinality=Cardinality)?
	//  (indexed?='indexed'? &
	//  unique?='unique'?)
	//;
	public CountFieldElements getCountFieldAccess() {
		return pCountField;
	}
	
	public ParserRule getCountFieldRule() {
		return getCountFieldAccess().getRule();
	}
	
	//EnumField:
	//  'enum' isType=[EnumType|PossiblyQualifiedName] name=ID
	//  (cardinality=Cardinality)?
	//  ('jpa-enum-type' isJpaEnumType=JpaEnumType)?
	//;
	public EnumFieldElements getEnumFieldAccess() {
		return pEnumField;
	}
	
	public ParserRule getEnumFieldRule() {
		return getEnumFieldAccess().getRule();
	}
	
	//TypeField:
	//  isType=[Type|PossiblyQualifiedName] name=ID
	//  (cardinality=Cardinality)?
	//;
	public TypeFieldElements getTypeFieldAccess() {
		return pTypeField;
	}
	
	public ParserRule getTypeFieldRule() {
		return getTypeFieldAccess().getRule();
	}
	
	//AnyField:
	//  'Any' name=ID
	//  (cardinality=Cardinality)?
	//;
	public AnyFieldElements getAnyFieldAccess() {
		return pAnyField;
	}
	
	public ParserRule getAnyFieldRule() {
		return getAnyFieldAccess().getRule();
	}
	
	//EntityReferenceField:
	//  'ref' refType=[Entity|PossiblyQualifiedName] name=ID
	//  (cardinality=Cardinality)?
	//;
	public EntityReferenceFieldElements getEntityReferenceFieldAccess() {
		return pEntityReferenceField;
	}
	
	public ParserRule getEntityReferenceFieldRule() {
		return getEntityReferenceFieldAccess().getRule();
	}
	
	//enum Cardinality:
	//  Required = '!' | Optional = '?' | OneOrMore = '+' | Many = '*';
	public CardinalityElements getCardinalityAccess() {
		return eCardinality;
	}
	
	public EnumRule getCardinalityRule() {
		return getCardinalityAccess().getRule();
	}
	
	//enum SinglularCardinality returns Cardinality:
	//  Required = '!' | Optional = '?';
	public SinglularCardinalityElements getSinglularCardinalityAccess() {
		return eSinglularCardinality;
	}
	
	public EnumRule getSinglularCardinalityRule() {
		return getSinglularCardinalityAccess().getRule();
	}
	
	//FloatingPointConst:
	//    '-'? INT? '.' INT (('E'|'e') '-'? INT)?;
	public FloatingPointConstElements getFloatingPointConstAccess() {
		return pFloatingPointConst;
	}
	
	public ParserRule getFloatingPointConstRule() {
		return getFloatingPointConstAccess().getRule();
	}
	
	//IntegerConst:
	//  '-'? INT;
	public IntegerConstElements getIntegerConstAccess() {
		return pIntegerConst;
	}
	
	public ParserRule getIntegerConstRule() {
		return getIntegerConstAccess().getRule();
	}
	
	//BooleanConst:
	//  'true' | 'false';
	public BooleanConstElements getBooleanConstAccess() {
		return pBooleanConst;
	}
	
	public ParserRule getBooleanConstRule() {
		return getBooleanConstAccess().getRule();
	}
	
	//GenOptions:
	//  JpaGenOptions | MongoNodeGenOptions
	//;
	public GenOptionsElements getGenOptionsAccess() {
		return pGenOptions;
	}
	
	public ParserRule getGenOptionsRule() {
		return getGenOptionsAccess().getRule();
	}
	
	//JpaGenOptions:
	//  'jpa-gen-options' '{'
	//    project=ProjectOptions
	//    (persistence=PersistenceOptions)?
	//    (generationInclusion=GenerationInclusion)?
	//    useAspects?='use-aspects'?
	//    metaData?='auditable'?
	//    ('extensions' '{'
	//      (tableOptions+=JpaTableOptions)*
	//    '}')?
	//  '}'
	//;
	public JpaGenOptionsElements getJpaGenOptionsAccess() {
		return pJpaGenOptions;
	}
	
	public ParserRule getJpaGenOptionsRule() {
		return getJpaGenOptionsAccess().getRule();
	}
	
	//ProjectOptions:
	//  'project-options' '{'
	//  (('project-name' name=ID) &
	//  ('root-package' rootPackage=QualifiedName) &
	//  ('domain-subpackage' domainSubpackage=QualifiedName)? &
	//  ('controller-subpackage' controllerSubpackage=QualifiedName)? &
	//  jsonSupport?='json-support'?)
	//  '}'
	//;
	public ProjectOptionsElements getProjectOptionsAccess() {
		return pProjectOptions;
	}
	
	public ParserRule getProjectOptionsRule() {
		return getProjectOptionsAccess().getRule();
	}
	
	//GenerationInclusion:
	//  'generation-inclusion' '{'
	//  (
	//        ('types'      types=InclusionType) &
	//        ('controller' controller=InclusionType)? &
	//        ('resources'  resources=InclusionType)? &
	//        ('properties' properties=InclusionType)? &
	//        ('views'      views=InclusionType)? &
	//        ('web-xml'    webxml=InclusionType)? &
	//        ('pom'        pom=InclusionType)? &
	//        ('styles'     styles=InclusionType)? &
	//        ('classes'    classes=InclusionType)? &
	//        ('layouts'    layouts=InclusionType)? &
	//        ('web-mvc'    webmvc=InclusionType)? &
	//        ('tags'       tags=InclusionType)?
	//        )
	//  '}'
	//;
	public GenerationInclusionElements getGenerationInclusionAccess() {
		return pGenerationInclusion;
	}
	
	public ParserRule getGenerationInclusionRule() {
		return getGenerationInclusionAccess().getRule();
	}
	
	//Ttl:
	//  'ttl'
	//  field=[DateField|PossiblyQualifiedName]
	//  expireAfterSeconds=INT
	//;
	public TtlElements getTtlAccess() {
		return pTtl;
	}
	
	public ParserRule getTtlRule() {
		return getTtlAccess().getRule();
	}
	
	//MongoNodeGenOptions:
	//  {MongoNodeGenOptions}
	//  'node-mongo-options' '{'
	//    useLogger?='use-logger'?
	//    ('model-path' modelPath=STRING)?
	//    ('test-path'  testPath=STRING)?
	//    (generateTest?='gen-test')?
	//    ('extensions' '{'
	//      (tableOptions+=MongoNodeTableOptions)*
	//    '}')?
	//  '}'
	//;
	public MongoNodeGenOptionsElements getMongoNodeGenOptionsAccess() {
		return pMongoNodeGenOptions;
	}
	
	public ParserRule getMongoNodeGenOptionsRule() {
		return getMongoNodeGenOptionsAccess().getRule();
	}
	
	//JpaTableOptions:
	//  type=[Entity|ID] "{"
	//    (singleTableRoot?='single-table-root')?
	//  "}"
	//;
	public JpaTableOptionsElements getJpaTableOptionsAccess() {
		return pJpaTableOptions;
	}
	
	public ParserRule getJpaTableOptionsRule() {
		return getJpaTableOptionsAccess().getRule();
	}
	
	//MongoNodeTableOptions:
	//  type=[Entity|ID] '{'
	//    (ttl=Ttl)?
	//    (singleTableRoot?='single-table-root')?
	//  '}'
	//;
	public MongoNodeTableOptionsElements getMongoNodeTableOptionsAccess() {
		return pMongoNodeTableOptions;
	}
	
	public ParserRule getMongoNodeTableOptionsRule() {
		return getMongoNodeTableOptionsAccess().getRule();
	}
	
	//enum InclusionType:
	//  Overwrite = 'OVERWRITE' | Protected = 'PROTECTED' | None = 'NONE';
	public InclusionTypeElements getInclusionTypeAccess() {
		return eInclusionType;
	}
	
	public EnumRule getInclusionTypeRule() {
		return getInclusionTypeAccess().getRule();
	}
	
	//QualifiedName:
	//  ID ('.' ID)*;
	public QualifiedNameElements getQualifiedNameAccess() {
		return pQualifiedName;
	}
	
	public ParserRule getQualifiedNameRule() {
		return getQualifiedNameAccess().getRule();
	}
	
	//PossiblyQualifiedName:
	//  ID ('.' ID)*;
	public PossiblyQualifiedNameElements getPossiblyQualifiedNameAccess() {
		return pPossiblyQualifiedName;
	}
	
	public ParserRule getPossiblyQualifiedNameRule() {
		return getPossiblyQualifiedNameAccess().getRule();
	}
	
	//PersistenceOptions:
	//  'persistence-options' '{'
	//  (('database' dbType=DbType) &
	//  ('provider' dbProvider=DbProvider) &
	//  ('user' userName=ID)? &
	//  ('password' password=(ID | STRING))? &
	//  ('url' url=STRING)? &
	//  ('db-name' dbName=ID)?)
	//  '}'
	//;
	public PersistenceOptionsElements getPersistenceOptionsAccess() {
		return pPersistenceOptions;
	}
	
	public ParserRule getPersistenceOptionsRule() {
		return getPersistenceOptionsAccess().getRule();
	}
	
	//enum DbType:
	//  MySql = 'MYSQL' | Oracle = 'ORACLE' |
	//  DatabaseDotCom = 'DATABASE_DOT_COM' | Db2400 = 'DB2_400' | Db2ExpressC = 'DB2_EXPRESS_C' | DerbyClient = 'DERBY_CLIENT' | DerbyEmbedded = 'DERBY_EMBEDDED' |
	//    Firebird = 'FIREBIRD' | GoogleAppEngine = 'GOOGLE_APP_ENGINE' | H2InMemory = 'H2_IN_MEMORY' | HypersonicInMemory = 'HYPERSONIC_IN_MEMORY' |
	//    HypersonicPersistent = 'HYPERSONIC_PERSISTENT' | MsSql = 'MSSQL' | Postgres = 'POSTGRES' | Sybase = 'SYBASE'
	//  ;
	public DbTypeElements getDbTypeAccess() {
		return eDbType;
	}
	
	public EnumRule getDbTypeRule() {
		return getDbTypeAccess().getRule();
	}
	
	//enum DbProvider:
	//    Hibernate = 'HIBERNATE' | DataNucleus = 'DATANUCLEUS' |
	//    EclipseLink = 'ECLIPSELINK' | OpenJPA = 'OPENJPA'
	//    ;
	public DbProviderElements getDbProviderAccess() {
		return eDbProvider;
	}
	
	public EnumRule getDbProviderRule() {
		return getDbProviderAccess().getRule();
	}
	
	//enum JpaEnumType:
	//    Ordinal = 'ORDINAL' | String = 'STRING' | None = 'NONE'
	//    ;
	public JpaEnumTypeElements getJpaEnumTypeAccess() {
		return eJpaEnumType;
	}
	
	public EnumRule getJpaEnumTypeRule() {
		return getJpaEnumTypeAccess().getRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
