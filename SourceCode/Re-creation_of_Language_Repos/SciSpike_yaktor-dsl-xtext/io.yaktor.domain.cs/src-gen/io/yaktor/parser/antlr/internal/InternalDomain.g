/*
 * generated by Xtext 2.35.0
 */
grammar InternalDomain;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package io.yaktor.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package io.yaktor.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import io.yaktor.services.DomainGrammarAccess;

}

@parser::members {

 	private DomainGrammarAccess grammarAccess;

    public InternalDomainParser(TokenStream input, DomainGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "DomainModel";
   	}

   	@Override
   	protected DomainGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleDomainModel
entryRuleDomainModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDomainModelRule()); }
	iv_ruleDomainModel=ruleDomainModel
	{ $current=$iv_ruleDomainModel.current; }
	EOF;

// Rule DomainModel
ruleDomainModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='import'
			{
				newLeafNode(otherlv_0, grammarAccess.getDomainModelAccess().getImportKeyword_0_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDomainModelAccess().getDomainModelImportsDomainModelImportParserRuleCall_0_1_0());
					}
					lv_domainModelImports_1_0=ruleDomainModelImport
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDomainModelRule());
						}
						add(
							$current,
							"domainModelImports",
							lv_domainModelImports_1_0,
							"io.yaktor.Domain.DomainModelImport");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_2='domain-model'
		{
			newLeafNode(otherlv_2, grammarAccess.getDomainModelAccess().getDomainModelKeyword_1());
		}
		(
			(
				lv_name_3_0=RULE_ID
				{
					newLeafNode(lv_name_3_0, grammarAccess.getDomainModelAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDomainModelRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getDomainModelAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDomainModelAccess().getGenOptionsGenOptionsParserRuleCall_4_0());
				}
				lv_genOptions_5_0=ruleGenOptions
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDomainModelRule());
					}
					set(
						$current,
						"genOptions",
						lv_genOptions_5_0,
						"io.yaktor.Domain.GenOptions");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getDomainModelAccess().getTypesNamedTypeParserRuleCall_5_0());
				}
				lv_types_6_0=ruleNamedType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDomainModelRule());
					}
					add(
						$current,
						"types",
						lv_types_6_0,
						"io.yaktor.Domain.NamedType");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getDomainModelAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleDomainModelImport
entryRuleDomainModelImport returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDomainModelImportRule()); }
	iv_ruleDomainModelImport=ruleDomainModelImport
	{ $current=$iv_ruleDomainModelImport.current; }
	EOF;

// Rule DomainModelImport
ruleDomainModelImport returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDomainModelImportRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getDomainModelImportAccess().getRefDomainModelCrossReference_0_0());
				}
			)
		)
		(
			otherlv_1='as'
			{
				newLeafNode(otherlv_1, grammarAccess.getDomainModelImportAccess().getAsKeyword_1_0());
			}
			(
				(
					lv_alias_2_0=RULE_ID
					{
						newLeafNode(lv_alias_2_0, grammarAccess.getDomainModelImportAccess().getAliasIDTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDomainModelImportRule());
						}
						setWithLastConsumed(
							$current,
							"alias",
							lv_alias_2_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleNamedType
entryRuleNamedType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNamedTypeRule()); }
	iv_ruleNamedType=ruleNamedType
	{ $current=$iv_ruleNamedType.current; }
	EOF;

// Rule NamedType
ruleNamedType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getNamedTypeAccess().getAssociationParserRuleCall_0());
		}
		this_Association_0=ruleAssociation
		{
			$current = $this_Association_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getNamedTypeAccess().getAssociationRefParserRuleCall_1());
		}
		this_AssociationRef_1=ruleAssociationRef
		{
			$current = $this_AssociationRef_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getNamedTypeAccess().getEntityParserRuleCall_2());
		}
		this_Entity_2=ruleEntity
		{
			$current = $this_Entity_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getNamedTypeAccess().getEnumTypeParserRuleCall_3());
		}
		this_EnumType_3=ruleEnumType
		{
			$current = $this_EnumType_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getNamedTypeAccess().getTypeParserRuleCall_4());
		}
		this_Type_4=ruleType
		{
			$current = $this_Type_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleAssociation
entryRuleAssociation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAssociationRule()); }
	iv_ruleAssociation=ruleAssociation
	{ $current=$iv_ruleAssociation.current; }
	EOF;

// Rule Association
ruleAssociation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='association'
		{
			newLeafNode(otherlv_0, grammarAccess.getAssociationAccess().getAssociationKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getAssociationAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAssociationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getAssociationAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAssociationAccess().getStartAssociationEndParserRuleCall_3_0());
				}
				lv_start_3_0=ruleAssociationEnd
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAssociationRule());
					}
					set(
						$current,
						"start",
						lv_start_3_0,
						"io.yaktor.Domain.AssociationEnd");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					lv_isUnidirectional_4_0='-->'
					{
						newLeafNode(lv_isUnidirectional_4_0, grammarAccess.getAssociationAccess().getIsUnidirectionalHyphenMinusHyphenMinusGreaterThanSignKeyword_4_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAssociationRule());
						}
						setWithLastConsumed($current, "isUnidirectional", lv_isUnidirectional_4_0 != null, "-->");
					}
				)
			)
			    |
			otherlv_5='<-->'
			{
				newLeafNode(otherlv_5, grammarAccess.getAssociationAccess().getLessThanSignHyphenMinusHyphenMinusGreaterThanSignKeyword_4_1());
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getAssociationAccess().getEndAssociationEndParserRuleCall_5_0());
				}
				lv_end_6_0=ruleAssociationEnd
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAssociationRule());
					}
					set(
						$current,
						"end",
						lv_end_6_0,
						"io.yaktor.Domain.AssociationEnd");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getAssociationAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleAssociationRef
entryRuleAssociationRef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAssociationRefRule()); }
	iv_ruleAssociationRef=ruleAssociationRef
	{ $current=$iv_ruleAssociationRef.current; }
	EOF;

// Rule AssociationRef
ruleAssociationRef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='association-ref'
		{
			newLeafNode(otherlv_0, grammarAccess.getAssociationRefAccess().getAssociationRefKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAssociationRefRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getAssociationRefAccess().getRefAssociationCrossReference_1_0());
				}
				rulePossiblyQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleAssociationEnd
entryRuleAssociationEnd returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAssociationEndRule()); }
	iv_ruleAssociationEnd=ruleAssociationEnd
	{ $current=$iv_ruleAssociationEnd.current; }
	EOF;

// Rule AssociationEnd
ruleAssociationEnd returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAssociationEndRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getAssociationEndAccess().getReferencesEntityCrossReference_0_0());
				}
				rulePossiblyQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getAssociationEndAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAssociationEndRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getAssociationEndAccess().getCardinalityCardinalityEnumRuleCall_2_0());
				}
				lv_cardinality_2_0=ruleCardinality
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAssociationEndRule());
					}
					set(
						$current,
						"cardinality",
						lv_cardinality_2_0,
						"io.yaktor.Domain.Cardinality");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				lv_isComposition_3_0='composition'
				{
					newLeafNode(lv_isComposition_3_0, grammarAccess.getAssociationEndAccess().getIsCompositionCompositionKeyword_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAssociationEndRule());
					}
					setWithLastConsumed($current, "isComposition", lv_isComposition_3_0 != null, "composition");
				}
			)
		)?
		(
			(
				lv_unique_4_0='unique'
				{
					newLeafNode(lv_unique_4_0, grammarAccess.getAssociationEndAccess().getUniqueUniqueKeyword_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAssociationEndRule());
					}
					setWithLastConsumed($current, "unique", lv_unique_4_0 != null, "unique");
				}
			)
		)?
	)
;

// Entry rule entryRuleSimpleField
entryRuleSimpleField returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimpleFieldRule()); }
	iv_ruleSimpleField=ruleSimpleField
	{ $current=$iv_ruleSimpleField.current; }
	EOF;

// Rule SimpleField
ruleSimpleField returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getSimpleFieldAccess().getIdFieldParserRuleCall_0());
		}
		this_IdField_0=ruleIdField
		{
			$current = $this_IdField_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSimpleFieldAccess().getShortIdFieldParserRuleCall_1());
		}
		this_ShortIdField_1=ruleShortIdField
		{
			$current = $this_ShortIdField_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSimpleFieldAccess().getStringFieldParserRuleCall_2());
		}
		this_StringField_2=ruleStringField
		{
			$current = $this_StringField_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSimpleFieldAccess().getDateFieldParserRuleCall_3());
		}
		this_DateField_3=ruleDateField
		{
			$current = $this_DateField_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSimpleFieldAccess().getIntegerFieldParserRuleCall_4());
		}
		this_IntegerField_4=ruleIntegerField
		{
			$current = $this_IntegerField_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSimpleFieldAccess().getEnumFieldParserRuleCall_5());
		}
		this_EnumField_5=ruleEnumField
		{
			$current = $this_EnumField_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSimpleFieldAccess().getNumericFieldParserRuleCall_6());
		}
		this_NumericField_6=ruleNumericField
		{
			$current = $this_NumericField_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSimpleFieldAccess().getBooleanFieldParserRuleCall_7());
		}
		this_BooleanField_7=ruleBooleanField
		{
			$current = $this_BooleanField_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSimpleFieldAccess().getPriceFieldParserRuleCall_8());
		}
		this_PriceField_8=rulePriceField
		{
			$current = $this_PriceField_8.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSimpleFieldAccess().getAmountFieldParserRuleCall_9());
		}
		this_AmountField_9=ruleAmountField
		{
			$current = $this_AmountField_9.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSimpleFieldAccess().getCountFieldParserRuleCall_10());
		}
		this_CountField_10=ruleCountField
		{
			$current = $this_CountField_10.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSimpleFieldAccess().getEntityReferenceFieldParserRuleCall_11());
		}
		this_EntityReferenceField_11=ruleEntityReferenceField
		{
			$current = $this_EntityReferenceField_11.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSimpleFieldAccess().getGeoLocationFieldParserRuleCall_12());
		}
		this_GeoLocationField_12=ruleGeoLocationField
		{
			$current = $this_GeoLocationField_12.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleField
entryRuleField returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFieldRule()); }
	iv_ruleField=ruleField
	{ $current=$iv_ruleField.current; }
	EOF;

// Rule Field
ruleField returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getFieldAccess().getSimpleFieldParserRuleCall_0());
		}
		this_SimpleField_0=ruleSimpleField
		{
			$current = $this_SimpleField_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFieldAccess().getTypeFieldParserRuleCall_1());
		}
		this_TypeField_1=ruleTypeField
		{
			$current = $this_TypeField_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFieldAccess().getAnyFieldParserRuleCall_2());
		}
		this_AnyField_2=ruleAnyField
		{
			$current = $this_AnyField_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleUniqueConstraint
entryRuleUniqueConstraint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUniqueConstraintRule()); }
	iv_ruleUniqueConstraint=ruleUniqueConstraint
	{ $current=$iv_ruleUniqueConstraint.current; }
	EOF;

// Rule UniqueConstraint
ruleUniqueConstraint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='unique-constraint'
		{
			newLeafNode(otherlv_0, grammarAccess.getUniqueConstraintAccess().getUniqueConstraintKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUniqueConstraintRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getUniqueConstraintAccess().getFieldsConstraintTypeFieldCrossReference_1_0());
				}
				rulePossiblyQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleIndexConstraint
entryRuleIndexConstraint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIndexConstraintRule()); }
	iv_ruleIndexConstraint=ruleIndexConstraint
	{ $current=$iv_ruleIndexConstraint.current; }
	EOF;

// Rule IndexConstraint
ruleIndexConstraint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='composite-index'
		{
			newLeafNode(otherlv_0, grammarAccess.getIndexConstraintAccess().getCompositeIndexKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIndexConstraintRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getIndexConstraintAccess().getFieldsConstraintTypeFieldCrossReference_1_0());
				}
				rulePossiblyQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleEntity
entryRuleEntity returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEntityRule()); }
	iv_ruleEntity=ruleEntity
	{ $current=$iv_ruleEntity.current; }
	EOF;

// Rule Entity
ruleEntity returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_isAbstract_0_0='abstract'
				{
					newLeafNode(lv_isAbstract_0_0, grammarAccess.getEntityAccess().getIsAbstractAbstractKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEntityRule());
					}
					setWithLastConsumed($current, "isAbstract", lv_isAbstract_0_0 != null, "abstract");
				}
			)
		)?
		otherlv_1='entity'
		{
			newLeafNode(otherlv_1, grammarAccess.getEntityAccess().getEntityKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEntityRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_3='extends'
			{
				newLeafNode(otherlv_3, grammarAccess.getEntityAccess().getExtendsKeyword_3_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEntityRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getEntityAccess().getSupertypeEntityCrossReference_3_1_0());
					}
					rulePossiblyQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			(
				lv_metaData_5_0='auditable'
				{
					newLeafNode(lv_metaData_5_0, grammarAccess.getEntityAccess().getMetaDataAuditableKeyword_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEntityRule());
					}
					setWithLastConsumed($current, "metaData", lv_metaData_5_0 != null, "auditable");
				}
			)
		)?
		otherlv_6='{'
		{
			newLeafNode(otherlv_6, grammarAccess.getEntityAccess().getLeftCurlyBracketKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEntityAccess().getFieldsFieldParserRuleCall_6_0());
				}
				lv_fields_7_0=ruleField
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEntityRule());
					}
					add(
						$current,
						"fields",
						lv_fields_7_0,
						"io.yaktor.Domain.Field");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getEntityAccess().getUniqueConstraintsUniqueConstraintParserRuleCall_7_0());
				}
				lv_uniqueConstraints_8_0=ruleUniqueConstraint
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEntityRule());
					}
					add(
						$current,
						"uniqueConstraints",
						lv_uniqueConstraints_8_0,
						"io.yaktor.Domain.UniqueConstraint");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getEntityAccess().getIndexConstraintsIndexConstraintParserRuleCall_8_0());
				}
				lv_indexConstraints_9_0=ruleIndexConstraint
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEntityRule());
					}
					add(
						$current,
						"indexConstraints",
						lv_indexConstraints_9_0,
						"io.yaktor.Domain.IndexConstraint");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			otherlv_10='key'
			{
				newLeafNode(otherlv_10, grammarAccess.getEntityAccess().getKeyKeyword_9_0());
			}
			otherlv_11='('
			{
				newLeafNode(otherlv_11, grammarAccess.getEntityAccess().getLeftParenthesisKeyword_9_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEntityRule());
						}
					}
					otherlv_12=RULE_ID
					{
						newLeafNode(otherlv_12, grammarAccess.getEntityAccess().getKeysFieldCrossReference_9_2_0());
					}
				)
			)
			otherlv_13=')'
			{
				newLeafNode(otherlv_13, grammarAccess.getEntityAccess().getRightParenthesisKeyword_9_3());
			}
		)?
		otherlv_14='}'
		{
			newLeafNode(otherlv_14, grammarAccess.getEntityAccess().getRightCurlyBracketKeyword_10());
		}
	)
;

// Entry rule entryRuleType
entryRuleType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeRule()); }
	iv_ruleType=ruleType
	{ $current=$iv_ruleType.current; }
	EOF;

// Rule Type
ruleType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_isAbstract_0_0='abstract'
				{
					newLeafNode(lv_isAbstract_0_0, grammarAccess.getTypeAccess().getIsAbstractAbstractKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTypeRule());
					}
					setWithLastConsumed($current, "isAbstract", lv_isAbstract_0_0 != null, "abstract");
				}
			)
		)?
		otherlv_1='type'
		{
			newLeafNode(otherlv_1, grammarAccess.getTypeAccess().getTypeKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getTypeAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTypeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_3='extends'
			{
				newLeafNode(otherlv_3, grammarAccess.getTypeAccess().getExtendsKeyword_3_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTypeRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getTypeAccess().getSupertypeTypeCrossReference_3_1_0());
					}
					rulePossiblyQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_5='{'
		{
			newLeafNode(otherlv_5, grammarAccess.getTypeAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeAccess().getFieldsFieldParserRuleCall_5_0());
				}
				lv_fields_6_0=ruleField
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeRule());
					}
					add(
						$current,
						"fields",
						lv_fields_6_0,
						"io.yaktor.Domain.Field");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeAccess().getUniqueConstraintsUniqueConstraintParserRuleCall_6_0());
				}
				lv_uniqueConstraints_7_0=ruleUniqueConstraint
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeRule());
					}
					add(
						$current,
						"uniqueConstraints",
						lv_uniqueConstraints_7_0,
						"io.yaktor.Domain.UniqueConstraint");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeAccess().getIndexConstraintsIndexConstraintParserRuleCall_7_0());
				}
				lv_indexConstraints_8_0=ruleIndexConstraint
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeRule());
					}
					add(
						$current,
						"indexConstraints",
						lv_indexConstraints_8_0,
						"io.yaktor.Domain.IndexConstraint");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			otherlv_9='key'
			{
				newLeafNode(otherlv_9, grammarAccess.getTypeAccess().getKeyKeyword_8_0());
			}
			otherlv_10='('
			{
				newLeafNode(otherlv_10, grammarAccess.getTypeAccess().getLeftParenthesisKeyword_8_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTypeRule());
						}
					}
					otherlv_11=RULE_ID
					{
						newLeafNode(otherlv_11, grammarAccess.getTypeAccess().getKeysFieldCrossReference_8_2_0());
					}
				)
			)
			otherlv_12=')'
			{
				newLeafNode(otherlv_12, grammarAccess.getTypeAccess().getRightParenthesisKeyword_8_3());
			}
		)?
		otherlv_13='}'
		{
			newLeafNode(otherlv_13, grammarAccess.getTypeAccess().getRightCurlyBracketKeyword_9());
		}
	)
;

// Entry rule entryRuleEnumType
entryRuleEnumType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnumTypeRule()); }
	iv_ruleEnumType=ruleEnumType
	{ $current=$iv_ruleEnumType.current; }
	EOF;

// Rule EnumType
ruleEnumType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='enum'
		{
			newLeafNode(otherlv_0, grammarAccess.getEnumTypeAccess().getEnumKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getEnumTypeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEnumTypeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getEnumTypeAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEnumTypeAccess().getValuesEnumValueParserRuleCall_3_0());
				}
				lv_values_3_0=ruleEnumValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEnumTypeRule());
					}
					add(
						$current,
						"values",
						lv_values_3_0,
						"io.yaktor.Domain.EnumValue");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getEnumTypeAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleEnumValue
entryRuleEnumValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnumValueRule()); }
	iv_ruleEnumValue=ruleEnumValue
	{ $current=$iv_ruleEnumValue.current; }
	EOF;

// Rule EnumValue
ruleEnumValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getEnumValueAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEnumValueRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getEnumValueAccess().getEqualsSignKeyword_1());
		}
		(
			(
				lv_value_2_0=RULE_STRING
				{
					newLeafNode(lv_value_2_0, grammarAccess.getEnumValueAccess().getValueSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEnumValueRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleIdField
entryRuleIdField returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIdFieldRule()); }
	iv_ruleIdField=ruleIdField
	{ $current=$iv_ruleIdField.current; }
	EOF;

// Rule IdField
ruleIdField returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Id'
		{
			newLeafNode(otherlv_0, grammarAccess.getIdFieldAccess().getIdKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getIdFieldAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIdFieldRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getIdFieldAccess().getCardinalityCardinalityEnumRuleCall_2_0());
				}
				lv_cardinality_2_0=ruleCardinality
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIdFieldRule());
					}
					set(
						$current,
						"cardinality",
						lv_cardinality_2_0,
						"io.yaktor.Domain.Cardinality");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getIdFieldAccess().getUnorderedGroup_3());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getIdFieldAccess().getUnorderedGroup_3(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getIdFieldAccess().getUnorderedGroup_3(), 0);
					}
								({true}?=>((
									lv_unique_4_0='unique'
									{
										newLeafNode(lv_unique_4_0, grammarAccess.getIdFieldAccess().getUniqueUniqueKeyword_3_0_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getIdFieldRule());
										}
										setWithLastConsumed($current, "unique", lv_unique_4_0 != null, "unique");
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getIdFieldAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getIdFieldAccess().getUnorderedGroup_3(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getIdFieldAccess().getUnorderedGroup_3(), 1);
					}
								({true}?=>((
									lv_indexed_5_0='indexed'
									{
										newLeafNode(lv_indexed_5_0, grammarAccess.getIdFieldAccess().getIndexedIndexedKeyword_3_1_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getIdFieldRule());
										}
										setWithLastConsumed($current, "indexed", lv_indexed_5_0 != null, "indexed");
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getIdFieldAccess().getUnorderedGroup_3());
					}
				)
			)
					)*
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getIdFieldAccess().getUnorderedGroup_3());
				}
		)
	)
;

// Entry rule entryRuleShortIdField
entryRuleShortIdField returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getShortIdFieldRule()); }
	iv_ruleShortIdField=ruleShortIdField
	{ $current=$iv_ruleShortIdField.current; }
	EOF;

// Rule ShortIdField
ruleShortIdField returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ShortId'
		{
			newLeafNode(otherlv_0, grammarAccess.getShortIdFieldAccess().getShortIdKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getShortIdFieldAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getShortIdFieldRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getShortIdFieldAccess().getCardinalityCardinalityEnumRuleCall_2_0());
				}
				lv_cardinality_2_0=ruleCardinality
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getShortIdFieldRule());
					}
					set(
						$current,
						"cardinality",
						lv_cardinality_2_0,
						"io.yaktor.Domain.Cardinality");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getShortIdFieldAccess().getUnorderedGroup_3());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getShortIdFieldAccess().getUnorderedGroup_3(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getShortIdFieldAccess().getUnorderedGroup_3(), 0);
					}
								({true}?=>((
									(
										lv_pattern_4_0=RULE_STRING
										{
											newLeafNode(lv_pattern_4_0, grammarAccess.getShortIdFieldAccess().getPatternSTRINGTerminalRuleCall_3_0_0_0());
										}
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getShortIdFieldRule());
											}
											setWithLastConsumed(
												$current,
												"pattern",
												lv_pattern_4_0,
												"org.eclipse.xtext.common.Terminals.STRING");
										}
									)
								)
								(
									(
										lv_maxValue_5_0=RULE_INT
										{
											newLeafNode(lv_maxValue_5_0, grammarAccess.getShortIdFieldAccess().getMaxValueINTTerminalRuleCall_3_0_1_0());
										}
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getShortIdFieldRule());
											}
											setWithLastConsumed(
												$current,
												"maxValue",
												lv_maxValue_5_0,
												"org.eclipse.xtext.common.Terminals.INT");
										}
									)
								)?
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getShortIdFieldAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getShortIdFieldAccess().getUnorderedGroup_3(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getShortIdFieldAccess().getUnorderedGroup_3(), 1);
					}
								({true}?=>((
									lv_unique_6_0='unique'
									{
										newLeafNode(lv_unique_6_0, grammarAccess.getShortIdFieldAccess().getUniqueUniqueKeyword_3_1_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getShortIdFieldRule());
										}
										setWithLastConsumed($current, "unique", lv_unique_6_0 != null, "unique");
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getShortIdFieldAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getShortIdFieldAccess().getUnorderedGroup_3(), 2)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getShortIdFieldAccess().getUnorderedGroup_3(), 2);
					}
								({true}?=>((
									lv_indexed_7_0='indexed'
									{
										newLeafNode(lv_indexed_7_0, grammarAccess.getShortIdFieldAccess().getIndexedIndexedKeyword_3_2_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getShortIdFieldRule());
										}
										setWithLastConsumed($current, "indexed", lv_indexed_7_0 != null, "indexed");
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getShortIdFieldAccess().getUnorderedGroup_3());
					}
				)
			)
					)*
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getShortIdFieldAccess().getUnorderedGroup_3());
				}
		)
	)
;

// Entry rule entryRuleStringField
entryRuleStringField returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStringFieldRule()); }
	iv_ruleStringField=ruleStringField
	{ $current=$iv_ruleStringField.current; }
	EOF;

// Rule StringField
ruleStringField returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='String'
		{
			newLeafNode(otherlv_0, grammarAccess.getStringFieldAccess().getStringKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getStringFieldAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStringFieldRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getStringFieldAccess().getCardinalityCardinalityEnumRuleCall_2_0());
				}
				lv_cardinality_2_0=ruleCardinality
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStringFieldRule());
					}
					set(
						$current,
						"cardinality",
						lv_cardinality_2_0,
						"io.yaktor.Domain.Cardinality");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getStringFieldAccess().getUnorderedGroup_3());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getStringFieldAccess().getUnorderedGroup_3(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getStringFieldAccess().getUnorderedGroup_3(), 0);
					}
								({true}?=>(otherlv_4='='
								{
									newLeafNode(otherlv_4, grammarAccess.getStringFieldAccess().getEqualsSignKeyword_3_0_0());
								}
								(
									(
										lv_defaultValue_5_0=RULE_STRING
										{
											newLeafNode(lv_defaultValue_5_0, grammarAccess.getStringFieldAccess().getDefaultValueSTRINGTerminalRuleCall_3_0_1_0());
										}
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getStringFieldRule());
											}
											setWithLastConsumed(
												$current,
												"defaultValue",
												lv_defaultValue_5_0,
												"org.eclipse.xtext.common.Terminals.STRING");
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getStringFieldAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getStringFieldAccess().getUnorderedGroup_3(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getStringFieldAccess().getUnorderedGroup_3(), 1);
					}
								({true}?=>(otherlv_6='pattern'
								{
									newLeafNode(otherlv_6, grammarAccess.getStringFieldAccess().getPatternKeyword_3_1_0());
								}
								(
									(
										lv_pattern_7_0=RULE_STRING
										{
											newLeafNode(lv_pattern_7_0, grammarAccess.getStringFieldAccess().getPatternSTRINGTerminalRuleCall_3_1_1_0());
										}
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getStringFieldRule());
											}
											setWithLastConsumed(
												$current,
												"pattern",
												lv_pattern_7_0,
												"org.eclipse.xtext.common.Terminals.STRING");
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getStringFieldAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getStringFieldAccess().getUnorderedGroup_3(), 2)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getStringFieldAccess().getUnorderedGroup_3(), 2);
					}
								({true}?=>((
									lv_unique_8_0='unique'
									{
										newLeafNode(lv_unique_8_0, grammarAccess.getStringFieldAccess().getUniqueUniqueKeyword_3_2_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getStringFieldRule());
										}
										setWithLastConsumed($current, "unique", lv_unique_8_0 != null, "unique");
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getStringFieldAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getStringFieldAccess().getUnorderedGroup_3(), 3)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getStringFieldAccess().getUnorderedGroup_3(), 3);
					}
								({true}?=>((
									lv_indexed_9_0='indexed'
									{
										newLeafNode(lv_indexed_9_0, grammarAccess.getStringFieldAccess().getIndexedIndexedKeyword_3_3_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getStringFieldRule());
										}
										setWithLastConsumed($current, "indexed", lv_indexed_9_0 != null, "indexed");
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getStringFieldAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getStringFieldAccess().getUnorderedGroup_3(), 4)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getStringFieldAccess().getUnorderedGroup_3(), 4);
					}
								({true}?=>((
									lv_obscured_10_0='obscured'
									{
										newLeafNode(lv_obscured_10_0, grammarAccess.getStringFieldAccess().getObscuredObscuredKeyword_3_4_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getStringFieldRule());
										}
										setWithLastConsumed($current, "obscured", lv_obscured_10_0 != null, "obscured");
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getStringFieldAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getStringFieldAccess().getUnorderedGroup_3(), 5)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getStringFieldAccess().getUnorderedGroup_3(), 5);
					}
								({true}?=>(otherlv_11='['
								{
									newLeafNode(otherlv_11, grammarAccess.getStringFieldAccess().getLeftSquareBracketKeyword_3_5_0());
								}
								(
									(
										lv_minLength_12_0=RULE_INT
										{
											newLeafNode(lv_minLength_12_0, grammarAccess.getStringFieldAccess().getMinLengthINTTerminalRuleCall_3_5_1_0());
										}
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getStringFieldRule());
											}
											setWithLastConsumed(
												$current,
												"minLength",
												lv_minLength_12_0,
												"org.eclipse.xtext.common.Terminals.INT");
										}
									)
								)?
								otherlv_13='..'
								{
									newLeafNode(otherlv_13, grammarAccess.getStringFieldAccess().getFullStopFullStopKeyword_3_5_2());
								}
								(
									(
										lv_maxLength_14_0=RULE_INT
										{
											newLeafNode(lv_maxLength_14_0, grammarAccess.getStringFieldAccess().getMaxLengthINTTerminalRuleCall_3_5_3_0());
										}
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getStringFieldRule());
											}
											setWithLastConsumed(
												$current,
												"maxLength",
												lv_maxLength_14_0,
												"org.eclipse.xtext.common.Terminals.INT");
										}
									)
								)?
								otherlv_15=']'
								{
									newLeafNode(otherlv_15, grammarAccess.getStringFieldAccess().getRightSquareBracketKeyword_3_5_4());
								}
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getStringFieldAccess().getUnorderedGroup_3());
					}
				)
			)
					)*
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getStringFieldAccess().getUnorderedGroup_3());
				}
		)
	)
;

// Entry rule entryRuleDateField
entryRuleDateField returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDateFieldRule()); }
	iv_ruleDateField=ruleDateField
	{ $current=$iv_ruleDateField.current; }
	EOF;

// Rule DateField
ruleDateField returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Date'
		{
			newLeafNode(otherlv_0, grammarAccess.getDateFieldAccess().getDateKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDateFieldAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDateFieldRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2='='
			{
				newLeafNode(otherlv_2, grammarAccess.getDateFieldAccess().getEqualsSignKeyword_2_0());
			}
			(
				(
					lv_defaultValue_3_0=RULE_STRING
					{
						newLeafNode(lv_defaultValue_3_0, grammarAccess.getDateFieldAccess().getDefaultValueSTRINGTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDateFieldRule());
						}
						setWithLastConsumed(
							$current,
							"defaultValue",
							lv_defaultValue_3_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getDateFieldAccess().getCardinalityCardinalityEnumRuleCall_3_0());
				}
				lv_cardinality_4_0=ruleCardinality
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDateFieldRule());
					}
					set(
						$current,
						"cardinality",
						lv_cardinality_4_0,
						"io.yaktor.Domain.Cardinality");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getDateFieldAccess().getUnorderedGroup_4());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getDateFieldAccess().getUnorderedGroup_4(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getDateFieldAccess().getUnorderedGroup_4(), 0);
					}
								({true}?=>(otherlv_6='['
								{
									newLeafNode(otherlv_6, grammarAccess.getDateFieldAccess().getLeftSquareBracketKeyword_4_0_0());
								}
								(
									(
										lv_before_7_0=RULE_STRING
										{
											newLeafNode(lv_before_7_0, grammarAccess.getDateFieldAccess().getBeforeSTRINGTerminalRuleCall_4_0_1_0());
										}
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getDateFieldRule());
											}
											setWithLastConsumed(
												$current,
												"before",
												lv_before_7_0,
												"org.eclipse.xtext.common.Terminals.STRING");
										}
									)
								)?
								otherlv_8='..'
								{
									newLeafNode(otherlv_8, grammarAccess.getDateFieldAccess().getFullStopFullStopKeyword_4_0_2());
								}
								(
									(
										lv_after_9_0=RULE_STRING
										{
											newLeafNode(lv_after_9_0, grammarAccess.getDateFieldAccess().getAfterSTRINGTerminalRuleCall_4_0_3_0());
										}
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getDateFieldRule());
											}
											setWithLastConsumed(
												$current,
												"after",
												lv_after_9_0,
												"org.eclipse.xtext.common.Terminals.STRING");
										}
									)
								)?
								otherlv_10=']'
								{
									newLeafNode(otherlv_10, grammarAccess.getDateFieldAccess().getRightSquareBracketKeyword_4_0_4());
								}
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDateFieldAccess().getUnorderedGroup_4());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getDateFieldAccess().getUnorderedGroup_4(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getDateFieldAccess().getUnorderedGroup_4(), 1);
					}
								({true}?=>((
									lv_unique_11_0='unique'
									{
										newLeafNode(lv_unique_11_0, grammarAccess.getDateFieldAccess().getUniqueUniqueKeyword_4_1_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getDateFieldRule());
										}
										setWithLastConsumed($current, "unique", lv_unique_11_0 != null, "unique");
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDateFieldAccess().getUnorderedGroup_4());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getDateFieldAccess().getUnorderedGroup_4(), 2)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getDateFieldAccess().getUnorderedGroup_4(), 2);
					}
								({true}?=>((
									lv_indexed_12_0='indexed'
									{
										newLeafNode(lv_indexed_12_0, grammarAccess.getDateFieldAccess().getIndexedIndexedKeyword_4_2_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getDateFieldRule());
										}
										setWithLastConsumed($current, "indexed", lv_indexed_12_0 != null, "indexed");
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDateFieldAccess().getUnorderedGroup_4());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getDateFieldAccess().getUnorderedGroup_4(), 3)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getDateFieldAccess().getUnorderedGroup_4(), 3);
					}
								({true}?=>((
									(
										lv_past_13_0='past'
										{
											newLeafNode(lv_past_13_0, grammarAccess.getDateFieldAccess().getPastPastKeyword_4_3_0_0());
										}
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getDateFieldRule());
											}
											setWithLastConsumed($current, "past", lv_past_13_0 != null, "past");
										}
									)
								)
								    |
								(
									(
										lv_future_14_0='future'
										{
											newLeafNode(lv_future_14_0, grammarAccess.getDateFieldAccess().getFutureFutureKeyword_4_3_1_0());
										}
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getDateFieldRule());
											}
											setWithLastConsumed($current, "future", lv_future_14_0 != null, "future");
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDateFieldAccess().getUnorderedGroup_4());
					}
				)
			)
					)*
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getDateFieldAccess().getUnorderedGroup_4());
				}
		)
	)
;

// Entry rule entryRuleGeoLocationField
entryRuleGeoLocationField returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGeoLocationFieldRule()); }
	iv_ruleGeoLocationField=ruleGeoLocationField
	{ $current=$iv_ruleGeoLocationField.current; }
	EOF;

// Rule GeoLocationField
ruleGeoLocationField returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='GeoLocation'
		{
			newLeafNode(otherlv_0, grammarAccess.getGeoLocationFieldAccess().getGeoLocationKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getGeoLocationFieldAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGeoLocationFieldRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getGeoLocationFieldAccess().getCardinalitySinglularCardinalityEnumRuleCall_2_0());
				}
				lv_cardinality_2_0=ruleSinglularCardinality
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGeoLocationFieldRule());
					}
					set(
						$current,
						"cardinality",
						lv_cardinality_2_0,
						"io.yaktor.Domain.SinglularCardinality");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleIntegerField
entryRuleIntegerField returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIntegerFieldRule()); }
	iv_ruleIntegerField=ruleIntegerField
	{ $current=$iv_ruleIntegerField.current; }
	EOF;

// Rule IntegerField
ruleIntegerField returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Integer'
		{
			newLeafNode(otherlv_0, grammarAccess.getIntegerFieldAccess().getIntegerKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getIntegerFieldAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIntegerFieldRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getIntegerFieldAccess().getCardinalityCardinalityEnumRuleCall_2_0());
				}
				lv_cardinality_2_0=ruleCardinality
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIntegerFieldRule());
					}
					set(
						$current,
						"cardinality",
						lv_cardinality_2_0,
						"io.yaktor.Domain.Cardinality");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getIntegerFieldAccess().getUnorderedGroup_3());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getIntegerFieldAccess().getUnorderedGroup_3(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getIntegerFieldAccess().getUnorderedGroup_3(), 0);
					}
								({true}?=>(otherlv_4='='
								{
									newLeafNode(otherlv_4, grammarAccess.getIntegerFieldAccess().getEqualsSignKeyword_3_0_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getIntegerFieldAccess().getDefaultValueIntegerConstParserRuleCall_3_0_1_0());
										}
										lv_defaultValue_5_0=ruleIntegerConst
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getIntegerFieldRule());
											}
											set(
												$current,
												"defaultValue",
												lv_defaultValue_5_0,
												"io.yaktor.Domain.IntegerConst");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getIntegerFieldAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getIntegerFieldAccess().getUnorderedGroup_3(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getIntegerFieldAccess().getUnorderedGroup_3(), 1);
					}
								({true}?=>((
									lv_unique_6_0='unique'
									{
										newLeafNode(lv_unique_6_0, grammarAccess.getIntegerFieldAccess().getUniqueUniqueKeyword_3_1_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getIntegerFieldRule());
										}
										setWithLastConsumed($current, "unique", lv_unique_6_0 != null, "unique");
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getIntegerFieldAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getIntegerFieldAccess().getUnorderedGroup_3(), 2)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getIntegerFieldAccess().getUnorderedGroup_3(), 2);
					}
								({true}?=>((
									lv_indexed_7_0='indexed'
									{
										newLeafNode(lv_indexed_7_0, grammarAccess.getIntegerFieldAccess().getIndexedIndexedKeyword_3_2_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getIntegerFieldRule());
										}
										setWithLastConsumed($current, "indexed", lv_indexed_7_0 != null, "indexed");
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getIntegerFieldAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getIntegerFieldAccess().getUnorderedGroup_3(), 3)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getIntegerFieldAccess().getUnorderedGroup_3(), 3);
					}
								({true}?=>(otherlv_8='['
								{
									newLeafNode(otherlv_8, grammarAccess.getIntegerFieldAccess().getLeftSquareBracketKeyword_3_3_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getIntegerFieldAccess().getMinValueIntegerConstParserRuleCall_3_3_1_0());
										}
										lv_minValue_9_0=ruleIntegerConst
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getIntegerFieldRule());
											}
											set(
												$current,
												"minValue",
												lv_minValue_9_0,
												"io.yaktor.Domain.IntegerConst");
											afterParserOrEnumRuleCall();
										}
									)
								)?
								otherlv_10='..'
								{
									newLeafNode(otherlv_10, grammarAccess.getIntegerFieldAccess().getFullStopFullStopKeyword_3_3_2());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getIntegerFieldAccess().getMaxValueIntegerConstParserRuleCall_3_3_3_0());
										}
										lv_maxValue_11_0=ruleIntegerConst
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getIntegerFieldRule());
											}
											set(
												$current,
												"maxValue",
												lv_maxValue_11_0,
												"io.yaktor.Domain.IntegerConst");
											afterParserOrEnumRuleCall();
										}
									)
								)?
								otherlv_12=']'
								{
									newLeafNode(otherlv_12, grammarAccess.getIntegerFieldAccess().getRightSquareBracketKeyword_3_3_4());
								}
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getIntegerFieldAccess().getUnorderedGroup_3());
					}
				)
			)
					)*
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getIntegerFieldAccess().getUnorderedGroup_3());
				}
		)
	)
;

// Entry rule entryRuleNumericField
entryRuleNumericField returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNumericFieldRule()); }
	iv_ruleNumericField=ruleNumericField
	{ $current=$iv_ruleNumericField.current; }
	EOF;

// Rule NumericField
ruleNumericField returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Numeric'
		{
			newLeafNode(otherlv_0, grammarAccess.getNumericFieldAccess().getNumericKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getNumericFieldAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNumericFieldRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getNumericFieldAccess().getCardinalityCardinalityEnumRuleCall_2_0());
				}
				lv_cardinality_2_0=ruleCardinality
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNumericFieldRule());
					}
					set(
						$current,
						"cardinality",
						lv_cardinality_2_0,
						"io.yaktor.Domain.Cardinality");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getNumericFieldAccess().getUnorderedGroup_3());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getNumericFieldAccess().getUnorderedGroup_3(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getNumericFieldAccess().getUnorderedGroup_3(), 0);
					}
								({true}?=>(otherlv_4='='
								{
									newLeafNode(otherlv_4, grammarAccess.getNumericFieldAccess().getEqualsSignKeyword_3_0_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getNumericFieldAccess().getDefaultValueFloatingPointConstParserRuleCall_3_0_1_0());
										}
										lv_defaultValue_5_0=ruleFloatingPointConst
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getNumericFieldRule());
											}
											set(
												$current,
												"defaultValue",
												lv_defaultValue_5_0,
												"io.yaktor.Domain.FloatingPointConst");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNumericFieldAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getNumericFieldAccess().getUnorderedGroup_3(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getNumericFieldAccess().getUnorderedGroup_3(), 1);
					}
								({true}?=>((
									lv_unique_6_0='unique'
									{
										newLeafNode(lv_unique_6_0, grammarAccess.getNumericFieldAccess().getUniqueUniqueKeyword_3_1_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getNumericFieldRule());
										}
										setWithLastConsumed($current, "unique", lv_unique_6_0 != null, "unique");
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNumericFieldAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getNumericFieldAccess().getUnorderedGroup_3(), 2)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getNumericFieldAccess().getUnorderedGroup_3(), 2);
					}
								({true}?=>((
									lv_indexed_7_0='indexed'
									{
										newLeafNode(lv_indexed_7_0, grammarAccess.getNumericFieldAccess().getIndexedIndexedKeyword_3_2_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getNumericFieldRule());
										}
										setWithLastConsumed($current, "indexed", lv_indexed_7_0 != null, "indexed");
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNumericFieldAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getNumericFieldAccess().getUnorderedGroup_3(), 3)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getNumericFieldAccess().getUnorderedGroup_3(), 3);
					}
								({true}?=>(otherlv_8='['
								{
									newLeafNode(otherlv_8, grammarAccess.getNumericFieldAccess().getLeftSquareBracketKeyword_3_3_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getNumericFieldAccess().getMinValueFloatingPointConstParserRuleCall_3_3_1_0());
										}
										lv_minValue_9_0=ruleFloatingPointConst
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getNumericFieldRule());
											}
											set(
												$current,
												"minValue",
												lv_minValue_9_0,
												"io.yaktor.Domain.FloatingPointConst");
											afterParserOrEnumRuleCall();
										}
									)
								)?
								otherlv_10='..'
								{
									newLeafNode(otherlv_10, grammarAccess.getNumericFieldAccess().getFullStopFullStopKeyword_3_3_2());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getNumericFieldAccess().getMaxValueFloatingPointConstParserRuleCall_3_3_3_0());
										}
										lv_maxValue_11_0=ruleFloatingPointConst
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getNumericFieldRule());
											}
											set(
												$current,
												"maxValue",
												lv_maxValue_11_0,
												"io.yaktor.Domain.FloatingPointConst");
											afterParserOrEnumRuleCall();
										}
									)
								)?
								otherlv_12=']'
								{
									newLeafNode(otherlv_12, grammarAccess.getNumericFieldAccess().getRightSquareBracketKeyword_3_3_4());
								}
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNumericFieldAccess().getUnorderedGroup_3());
					}
				)
			)
					)*
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getNumericFieldAccess().getUnorderedGroup_3());
				}
		)
	)
;

// Entry rule entryRuleBooleanField
entryRuleBooleanField returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanFieldRule()); }
	iv_ruleBooleanField=ruleBooleanField
	{ $current=$iv_ruleBooleanField.current; }
	EOF;

// Rule BooleanField
ruleBooleanField returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Boolean'
		{
			newLeafNode(otherlv_0, grammarAccess.getBooleanFieldAccess().getBooleanKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getBooleanFieldAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBooleanFieldRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getBooleanFieldAccess().getCardinalityCardinalityEnumRuleCall_2_0());
				}
				lv_cardinality_2_0=ruleCardinality
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBooleanFieldRule());
					}
					set(
						$current,
						"cardinality",
						lv_cardinality_2_0,
						"io.yaktor.Domain.Cardinality");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getBooleanFieldAccess().getUnorderedGroup_3());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getBooleanFieldAccess().getUnorderedGroup_3(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getBooleanFieldAccess().getUnorderedGroup_3(), 0);
					}
								({true}?=>((
									lv_unique_4_0='unique'
									{
										newLeafNode(lv_unique_4_0, grammarAccess.getBooleanFieldAccess().getUniqueUniqueKeyword_3_0_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getBooleanFieldRule());
										}
										setWithLastConsumed($current, "unique", lv_unique_4_0 != null, "unique");
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getBooleanFieldAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getBooleanFieldAccess().getUnorderedGroup_3(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getBooleanFieldAccess().getUnorderedGroup_3(), 1);
					}
								({true}?=>((
									lv_indexed_5_0='indexed'
									{
										newLeafNode(lv_indexed_5_0, grammarAccess.getBooleanFieldAccess().getIndexedIndexedKeyword_3_1_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getBooleanFieldRule());
										}
										setWithLastConsumed($current, "indexed", lv_indexed_5_0 != null, "indexed");
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getBooleanFieldAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getBooleanFieldAccess().getUnorderedGroup_3(), 2)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getBooleanFieldAccess().getUnorderedGroup_3(), 2);
					}
								({true}?=>(otherlv_6='='
								{
									newLeafNode(otherlv_6, grammarAccess.getBooleanFieldAccess().getEqualsSignKeyword_3_2_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getBooleanFieldAccess().getDefaultValueBooleanConstParserRuleCall_3_2_1_0());
										}
										lv_defaultValue_7_0=ruleBooleanConst
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getBooleanFieldRule());
											}
											set(
												$current,
												"defaultValue",
												lv_defaultValue_7_0,
												"io.yaktor.Domain.BooleanConst");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getBooleanFieldAccess().getUnorderedGroup_3());
					}
				)
			)
					)+
					{getUnorderedGroupHelper().canLeave(grammarAccess.getBooleanFieldAccess().getUnorderedGroup_3())}?
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getBooleanFieldAccess().getUnorderedGroup_3());
				}
		)?
	)
;

// Entry rule entryRulePriceField
entryRulePriceField returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPriceFieldRule()); }
	iv_rulePriceField=rulePriceField
	{ $current=$iv_rulePriceField.current; }
	EOF;

// Rule PriceField
rulePriceField returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Price'
		{
			newLeafNode(otherlv_0, grammarAccess.getPriceFieldAccess().getPriceKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getPriceFieldAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPriceFieldRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getPriceFieldAccess().getCardinalityCardinalityEnumRuleCall_2_0());
				}
				lv_cardinality_2_0=ruleCardinality
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPriceFieldRule());
					}
					set(
						$current,
						"cardinality",
						lv_cardinality_2_0,
						"io.yaktor.Domain.Cardinality");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getPriceFieldAccess().getUnorderedGroup_3());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getPriceFieldAccess().getUnorderedGroup_3(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getPriceFieldAccess().getUnorderedGroup_3(), 0);
					}
								({true}?=>((
									lv_indexed_4_0='indexed'
									{
										newLeafNode(lv_indexed_4_0, grammarAccess.getPriceFieldAccess().getIndexedIndexedKeyword_3_0_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getPriceFieldRule());
										}
										setWithLastConsumed($current, "indexed", lv_indexed_4_0 != null, "indexed");
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPriceFieldAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getPriceFieldAccess().getUnorderedGroup_3(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getPriceFieldAccess().getUnorderedGroup_3(), 1);
					}
								({true}?=>((
									lv_unique_5_0='unique'
									{
										newLeafNode(lv_unique_5_0, grammarAccess.getPriceFieldAccess().getUniqueUniqueKeyword_3_1_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getPriceFieldRule());
										}
										setWithLastConsumed($current, "unique", lv_unique_5_0 != null, "unique");
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPriceFieldAccess().getUnorderedGroup_3());
					}
				)
			)
					)*
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getPriceFieldAccess().getUnorderedGroup_3());
				}
		)
	)
;

// Entry rule entryRuleAmountField
entryRuleAmountField returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAmountFieldRule()); }
	iv_ruleAmountField=ruleAmountField
	{ $current=$iv_ruleAmountField.current; }
	EOF;

// Rule AmountField
ruleAmountField returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Amount'
		{
			newLeafNode(otherlv_0, grammarAccess.getAmountFieldAccess().getAmountKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getAmountFieldAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAmountFieldRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getAmountFieldAccess().getCardinalityCardinalityEnumRuleCall_2_0());
				}
				lv_cardinality_2_0=ruleCardinality
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAmountFieldRule());
					}
					set(
						$current,
						"cardinality",
						lv_cardinality_2_0,
						"io.yaktor.Domain.Cardinality");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getAmountFieldAccess().getUnorderedGroup_3());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getAmountFieldAccess().getUnorderedGroup_3(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getAmountFieldAccess().getUnorderedGroup_3(), 0);
					}
								({true}?=>((
									lv_indexed_4_0='indexed'
									{
										newLeafNode(lv_indexed_4_0, grammarAccess.getAmountFieldAccess().getIndexedIndexedKeyword_3_0_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getAmountFieldRule());
										}
										setWithLastConsumed($current, "indexed", lv_indexed_4_0 != null, "indexed");
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAmountFieldAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getAmountFieldAccess().getUnorderedGroup_3(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getAmountFieldAccess().getUnorderedGroup_3(), 1);
					}
								({true}?=>((
									lv_unique_5_0='unique'
									{
										newLeafNode(lv_unique_5_0, grammarAccess.getAmountFieldAccess().getUniqueUniqueKeyword_3_1_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getAmountFieldRule());
										}
										setWithLastConsumed($current, "unique", lv_unique_5_0 != null, "unique");
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAmountFieldAccess().getUnorderedGroup_3());
					}
				)
			)
					)*
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getAmountFieldAccess().getUnorderedGroup_3());
				}
		)
	)
;

// Entry rule entryRuleCountField
entryRuleCountField returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCountFieldRule()); }
	iv_ruleCountField=ruleCountField
	{ $current=$iv_ruleCountField.current; }
	EOF;

// Rule CountField
ruleCountField returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Count'
		{
			newLeafNode(otherlv_0, grammarAccess.getCountFieldAccess().getCountKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getCountFieldAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCountFieldRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getCountFieldAccess().getCardinalityCardinalityEnumRuleCall_2_0());
				}
				lv_cardinality_2_0=ruleCardinality
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCountFieldRule());
					}
					set(
						$current,
						"cardinality",
						lv_cardinality_2_0,
						"io.yaktor.Domain.Cardinality");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getCountFieldAccess().getUnorderedGroup_3());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getCountFieldAccess().getUnorderedGroup_3(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getCountFieldAccess().getUnorderedGroup_3(), 0);
					}
								({true}?=>((
									lv_indexed_4_0='indexed'
									{
										newLeafNode(lv_indexed_4_0, grammarAccess.getCountFieldAccess().getIndexedIndexedKeyword_3_0_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getCountFieldRule());
										}
										setWithLastConsumed($current, "indexed", lv_indexed_4_0 != null, "indexed");
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getCountFieldAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getCountFieldAccess().getUnorderedGroup_3(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getCountFieldAccess().getUnorderedGroup_3(), 1);
					}
								({true}?=>((
									lv_unique_5_0='unique'
									{
										newLeafNode(lv_unique_5_0, grammarAccess.getCountFieldAccess().getUniqueUniqueKeyword_3_1_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getCountFieldRule());
										}
										setWithLastConsumed($current, "unique", lv_unique_5_0 != null, "unique");
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getCountFieldAccess().getUnorderedGroup_3());
					}
				)
			)
					)*
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getCountFieldAccess().getUnorderedGroup_3());
				}
		)
	)
;

// Entry rule entryRuleEnumField
entryRuleEnumField returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnumFieldRule()); }
	iv_ruleEnumField=ruleEnumField
	{ $current=$iv_ruleEnumField.current; }
	EOF;

// Rule EnumField
ruleEnumField returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='enum'
		{
			newLeafNode(otherlv_0, grammarAccess.getEnumFieldAccess().getEnumKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEnumFieldRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getEnumFieldAccess().getIsTypeEnumTypeCrossReference_1_0());
				}
				rulePossiblyQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getEnumFieldAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEnumFieldRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getEnumFieldAccess().getCardinalityCardinalityEnumRuleCall_3_0());
				}
				lv_cardinality_3_0=ruleCardinality
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEnumFieldRule());
					}
					set(
						$current,
						"cardinality",
						lv_cardinality_3_0,
						"io.yaktor.Domain.Cardinality");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			otherlv_4='jpa-enum-type'
			{
				newLeafNode(otherlv_4, grammarAccess.getEnumFieldAccess().getJpaEnumTypeKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEnumFieldAccess().getIsJpaEnumTypeJpaEnumTypeEnumRuleCall_4_1_0());
					}
					lv_isJpaEnumType_5_0=ruleJpaEnumType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEnumFieldRule());
						}
						set(
							$current,
							"isJpaEnumType",
							lv_isJpaEnumType_5_0,
							"io.yaktor.Domain.JpaEnumType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleTypeField
entryRuleTypeField returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeFieldRule()); }
	iv_ruleTypeField=ruleTypeField
	{ $current=$iv_ruleTypeField.current; }
	EOF;

// Rule TypeField
ruleTypeField returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTypeFieldRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getTypeFieldAccess().getIsTypeTypeCrossReference_0_0());
				}
				rulePossiblyQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getTypeFieldAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTypeFieldRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeFieldAccess().getCardinalityCardinalityEnumRuleCall_2_0());
				}
				lv_cardinality_2_0=ruleCardinality
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeFieldRule());
					}
					set(
						$current,
						"cardinality",
						lv_cardinality_2_0,
						"io.yaktor.Domain.Cardinality");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleAnyField
entryRuleAnyField returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAnyFieldRule()); }
	iv_ruleAnyField=ruleAnyField
	{ $current=$iv_ruleAnyField.current; }
	EOF;

// Rule AnyField
ruleAnyField returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Any'
		{
			newLeafNode(otherlv_0, grammarAccess.getAnyFieldAccess().getAnyKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getAnyFieldAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAnyFieldRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getAnyFieldAccess().getCardinalityCardinalityEnumRuleCall_2_0());
				}
				lv_cardinality_2_0=ruleCardinality
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAnyFieldRule());
					}
					set(
						$current,
						"cardinality",
						lv_cardinality_2_0,
						"io.yaktor.Domain.Cardinality");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleEntityReferenceField
entryRuleEntityReferenceField returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEntityReferenceFieldRule()); }
	iv_ruleEntityReferenceField=ruleEntityReferenceField
	{ $current=$iv_ruleEntityReferenceField.current; }
	EOF;

// Rule EntityReferenceField
ruleEntityReferenceField returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ref'
		{
			newLeafNode(otherlv_0, grammarAccess.getEntityReferenceFieldAccess().getRefKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEntityReferenceFieldRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getEntityReferenceFieldAccess().getRefTypeEntityCrossReference_1_0());
				}
				rulePossiblyQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getEntityReferenceFieldAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEntityReferenceFieldRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getEntityReferenceFieldAccess().getCardinalityCardinalityEnumRuleCall_3_0());
				}
				lv_cardinality_3_0=ruleCardinality
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEntityReferenceFieldRule());
					}
					set(
						$current,
						"cardinality",
						lv_cardinality_3_0,
						"io.yaktor.Domain.Cardinality");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleFloatingPointConst
entryRuleFloatingPointConst returns [String current=null]:
	{ newCompositeNode(grammarAccess.getFloatingPointConstRule()); }
	iv_ruleFloatingPointConst=ruleFloatingPointConst
	{ $current=$iv_ruleFloatingPointConst.current.getText(); }
	EOF;

// Rule FloatingPointConst
ruleFloatingPointConst returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getFloatingPointConstAccess().getHyphenMinusKeyword_0());
			}
		)?
		(
			this_INT_1=RULE_INT
			{
				$current.merge(this_INT_1);
			}
			{
				newLeafNode(this_INT_1, grammarAccess.getFloatingPointConstAccess().getINTTerminalRuleCall_1());
			}
		)?
		kw='.'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getFloatingPointConstAccess().getFullStopKeyword_2());
		}
		this_INT_3=RULE_INT
		{
			$current.merge(this_INT_3);
		}
		{
			newLeafNode(this_INT_3, grammarAccess.getFloatingPointConstAccess().getINTTerminalRuleCall_3());
		}
		(
			(
				kw='E'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getFloatingPointConstAccess().getEKeyword_4_0_0());
				}
				    |
				kw='e'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getFloatingPointConstAccess().getEKeyword_4_0_1());
				}
			)
			(
				kw='-'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getFloatingPointConstAccess().getHyphenMinusKeyword_4_1());
				}
			)?
			this_INT_7=RULE_INT
			{
				$current.merge(this_INT_7);
			}
			{
				newLeafNode(this_INT_7, grammarAccess.getFloatingPointConstAccess().getINTTerminalRuleCall_4_2());
			}
		)?
	)
;

// Entry rule entryRuleIntegerConst
entryRuleIntegerConst returns [String current=null]:
	{ newCompositeNode(grammarAccess.getIntegerConstRule()); }
	iv_ruleIntegerConst=ruleIntegerConst
	{ $current=$iv_ruleIntegerConst.current.getText(); }
	EOF;

// Rule IntegerConst
ruleIntegerConst returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getIntegerConstAccess().getHyphenMinusKeyword_0());
			}
		)?
		this_INT_1=RULE_INT
		{
			$current.merge(this_INT_1);
		}
		{
			newLeafNode(this_INT_1, grammarAccess.getIntegerConstAccess().getINTTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleBooleanConst
entryRuleBooleanConst returns [String current=null]:
	{ newCompositeNode(grammarAccess.getBooleanConstRule()); }
	iv_ruleBooleanConst=ruleBooleanConst
	{ $current=$iv_ruleBooleanConst.current.getText(); }
	EOF;

// Rule BooleanConst
ruleBooleanConst returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='true'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBooleanConstAccess().getTrueKeyword_0());
		}
		    |
		kw='false'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBooleanConstAccess().getFalseKeyword_1());
		}
	)
;

// Entry rule entryRuleGenOptions
entryRuleGenOptions returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGenOptionsRule()); }
	iv_ruleGenOptions=ruleGenOptions
	{ $current=$iv_ruleGenOptions.current; }
	EOF;

// Rule GenOptions
ruleGenOptions returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getGenOptionsAccess().getJpaGenOptionsParserRuleCall_0());
		}
		this_JpaGenOptions_0=ruleJpaGenOptions
		{
			$current = $this_JpaGenOptions_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getGenOptionsAccess().getMongoNodeGenOptionsParserRuleCall_1());
		}
		this_MongoNodeGenOptions_1=ruleMongoNodeGenOptions
		{
			$current = $this_MongoNodeGenOptions_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleJpaGenOptions
entryRuleJpaGenOptions returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJpaGenOptionsRule()); }
	iv_ruleJpaGenOptions=ruleJpaGenOptions
	{ $current=$iv_ruleJpaGenOptions.current; }
	EOF;

// Rule JpaGenOptions
ruleJpaGenOptions returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='jpa-gen-options'
		{
			newLeafNode(otherlv_0, grammarAccess.getJpaGenOptionsAccess().getJpaGenOptionsKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getJpaGenOptionsAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getJpaGenOptionsAccess().getProjectProjectOptionsParserRuleCall_2_0());
				}
				lv_project_2_0=ruleProjectOptions
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getJpaGenOptionsRule());
					}
					set(
						$current,
						"project",
						lv_project_2_0,
						"io.yaktor.Domain.ProjectOptions");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getJpaGenOptionsAccess().getPersistencePersistenceOptionsParserRuleCall_3_0());
				}
				lv_persistence_3_0=rulePersistenceOptions
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getJpaGenOptionsRule());
					}
					set(
						$current,
						"persistence",
						lv_persistence_3_0,
						"io.yaktor.Domain.PersistenceOptions");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getJpaGenOptionsAccess().getGenerationInclusionGenerationInclusionParserRuleCall_4_0());
				}
				lv_generationInclusion_4_0=ruleGenerationInclusion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getJpaGenOptionsRule());
					}
					set(
						$current,
						"generationInclusion",
						lv_generationInclusion_4_0,
						"io.yaktor.Domain.GenerationInclusion");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				lv_useAspects_5_0='use-aspects'
				{
					newLeafNode(lv_useAspects_5_0, grammarAccess.getJpaGenOptionsAccess().getUseAspectsUseAspectsKeyword_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getJpaGenOptionsRule());
					}
					setWithLastConsumed($current, "useAspects", lv_useAspects_5_0 != null, "use-aspects");
				}
			)
		)?
		(
			(
				lv_metaData_6_0='auditable'
				{
					newLeafNode(lv_metaData_6_0, grammarAccess.getJpaGenOptionsAccess().getMetaDataAuditableKeyword_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getJpaGenOptionsRule());
					}
					setWithLastConsumed($current, "metaData", lv_metaData_6_0 != null, "auditable");
				}
			)
		)?
		(
			otherlv_7='extensions'
			{
				newLeafNode(otherlv_7, grammarAccess.getJpaGenOptionsAccess().getExtensionsKeyword_7_0());
			}
			otherlv_8='{'
			{
				newLeafNode(otherlv_8, grammarAccess.getJpaGenOptionsAccess().getLeftCurlyBracketKeyword_7_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getJpaGenOptionsAccess().getTableOptionsJpaTableOptionsParserRuleCall_7_2_0());
					}
					lv_tableOptions_9_0=ruleJpaTableOptions
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getJpaGenOptionsRule());
						}
						add(
							$current,
							"tableOptions",
							lv_tableOptions_9_0,
							"io.yaktor.Domain.JpaTableOptions");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_10='}'
			{
				newLeafNode(otherlv_10, grammarAccess.getJpaGenOptionsAccess().getRightCurlyBracketKeyword_7_3());
			}
		)?
		otherlv_11='}'
		{
			newLeafNode(otherlv_11, grammarAccess.getJpaGenOptionsAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleProjectOptions
entryRuleProjectOptions returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProjectOptionsRule()); }
	iv_ruleProjectOptions=ruleProjectOptions
	{ $current=$iv_ruleProjectOptions.current; }
	EOF;

// Rule ProjectOptions
ruleProjectOptions returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='project-options'
		{
			newLeafNode(otherlv_0, grammarAccess.getProjectOptionsAccess().getProjectOptionsKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getProjectOptionsAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getProjectOptionsAccess().getUnorderedGroup_2());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getProjectOptionsAccess().getUnorderedGroup_2(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getProjectOptionsAccess().getUnorderedGroup_2(), 0);
					}
								({true}?=>(otherlv_3='project-name'
								{
									newLeafNode(otherlv_3, grammarAccess.getProjectOptionsAccess().getProjectNameKeyword_2_0_0());
								}
								(
									(
										lv_name_4_0=RULE_ID
										{
											newLeafNode(lv_name_4_0, grammarAccess.getProjectOptionsAccess().getNameIDTerminalRuleCall_2_0_1_0());
										}
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getProjectOptionsRule());
											}
											setWithLastConsumed(
												$current,
												"name",
												lv_name_4_0,
												"org.eclipse.xtext.common.Terminals.ID");
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getProjectOptionsAccess().getUnorderedGroup_2());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getProjectOptionsAccess().getUnorderedGroup_2(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getProjectOptionsAccess().getUnorderedGroup_2(), 1);
					}
								({true}?=>(otherlv_5='root-package'
								{
									newLeafNode(otherlv_5, grammarAccess.getProjectOptionsAccess().getRootPackageKeyword_2_1_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getProjectOptionsAccess().getRootPackageQualifiedNameParserRuleCall_2_1_1_0());
										}
										lv_rootPackage_6_0=ruleQualifiedName
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getProjectOptionsRule());
											}
											set(
												$current,
												"rootPackage",
												lv_rootPackage_6_0,
												"io.yaktor.Domain.QualifiedName");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getProjectOptionsAccess().getUnorderedGroup_2());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getProjectOptionsAccess().getUnorderedGroup_2(), 2)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getProjectOptionsAccess().getUnorderedGroup_2(), 2);
					}
								({true}?=>(otherlv_7='domain-subpackage'
								{
									newLeafNode(otherlv_7, grammarAccess.getProjectOptionsAccess().getDomainSubpackageKeyword_2_2_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getProjectOptionsAccess().getDomainSubpackageQualifiedNameParserRuleCall_2_2_1_0());
										}
										lv_domainSubpackage_8_0=ruleQualifiedName
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getProjectOptionsRule());
											}
											set(
												$current,
												"domainSubpackage",
												lv_domainSubpackage_8_0,
												"io.yaktor.Domain.QualifiedName");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getProjectOptionsAccess().getUnorderedGroup_2());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getProjectOptionsAccess().getUnorderedGroup_2(), 3)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getProjectOptionsAccess().getUnorderedGroup_2(), 3);
					}
								({true}?=>(otherlv_9='controller-subpackage'
								{
									newLeafNode(otherlv_9, grammarAccess.getProjectOptionsAccess().getControllerSubpackageKeyword_2_3_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getProjectOptionsAccess().getControllerSubpackageQualifiedNameParserRuleCall_2_3_1_0());
										}
										lv_controllerSubpackage_10_0=ruleQualifiedName
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getProjectOptionsRule());
											}
											set(
												$current,
												"controllerSubpackage",
												lv_controllerSubpackage_10_0,
												"io.yaktor.Domain.QualifiedName");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getProjectOptionsAccess().getUnorderedGroup_2());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getProjectOptionsAccess().getUnorderedGroup_2(), 4)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getProjectOptionsAccess().getUnorderedGroup_2(), 4);
					}
								({true}?=>((
									lv_jsonSupport_11_0='json-support'
									{
										newLeafNode(lv_jsonSupport_11_0, grammarAccess.getProjectOptionsAccess().getJsonSupportJsonSupportKeyword_2_4_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getProjectOptionsRule());
										}
										setWithLastConsumed($current, "jsonSupport", lv_jsonSupport_11_0 != null, "json-support");
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getProjectOptionsAccess().getUnorderedGroup_2());
					}
				)
			)
					)+
					{getUnorderedGroupHelper().canLeave(grammarAccess.getProjectOptionsAccess().getUnorderedGroup_2())}?
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getProjectOptionsAccess().getUnorderedGroup_2());
				}
		)
		otherlv_12='}'
		{
			newLeafNode(otherlv_12, grammarAccess.getProjectOptionsAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleGenerationInclusion
entryRuleGenerationInclusion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGenerationInclusionRule()); }
	iv_ruleGenerationInclusion=ruleGenerationInclusion
	{ $current=$iv_ruleGenerationInclusion.current; }
	EOF;

// Rule GenerationInclusion
ruleGenerationInclusion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='generation-inclusion'
		{
			newLeafNode(otherlv_0, grammarAccess.getGenerationInclusionAccess().getGenerationInclusionKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getGenerationInclusionAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getGenerationInclusionAccess().getUnorderedGroup_2());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getGenerationInclusionAccess().getUnorderedGroup_2(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getGenerationInclusionAccess().getUnorderedGroup_2(), 0);
					}
								({true}?=>(otherlv_3='types'
								{
									newLeafNode(otherlv_3, grammarAccess.getGenerationInclusionAccess().getTypesKeyword_2_0_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getGenerationInclusionAccess().getTypesInclusionTypeEnumRuleCall_2_0_1_0());
										}
										lv_types_4_0=ruleInclusionType
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getGenerationInclusionRule());
											}
											set(
												$current,
												"types",
												lv_types_4_0,
												"io.yaktor.Domain.InclusionType");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGenerationInclusionAccess().getUnorderedGroup_2());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getGenerationInclusionAccess().getUnorderedGroup_2(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getGenerationInclusionAccess().getUnorderedGroup_2(), 1);
					}
								({true}?=>(otherlv_5='controller'
								{
									newLeafNode(otherlv_5, grammarAccess.getGenerationInclusionAccess().getControllerKeyword_2_1_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getGenerationInclusionAccess().getControllerInclusionTypeEnumRuleCall_2_1_1_0());
										}
										lv_controller_6_0=ruleInclusionType
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getGenerationInclusionRule());
											}
											set(
												$current,
												"controller",
												lv_controller_6_0,
												"io.yaktor.Domain.InclusionType");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGenerationInclusionAccess().getUnorderedGroup_2());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getGenerationInclusionAccess().getUnorderedGroup_2(), 2)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getGenerationInclusionAccess().getUnorderedGroup_2(), 2);
					}
								({true}?=>(otherlv_7='resources'
								{
									newLeafNode(otherlv_7, grammarAccess.getGenerationInclusionAccess().getResourcesKeyword_2_2_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getGenerationInclusionAccess().getResourcesInclusionTypeEnumRuleCall_2_2_1_0());
										}
										lv_resources_8_0=ruleInclusionType
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getGenerationInclusionRule());
											}
											set(
												$current,
												"resources",
												lv_resources_8_0,
												"io.yaktor.Domain.InclusionType");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGenerationInclusionAccess().getUnorderedGroup_2());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getGenerationInclusionAccess().getUnorderedGroup_2(), 3)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getGenerationInclusionAccess().getUnorderedGroup_2(), 3);
					}
								({true}?=>(otherlv_9='properties'
								{
									newLeafNode(otherlv_9, grammarAccess.getGenerationInclusionAccess().getPropertiesKeyword_2_3_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getGenerationInclusionAccess().getPropertiesInclusionTypeEnumRuleCall_2_3_1_0());
										}
										lv_properties_10_0=ruleInclusionType
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getGenerationInclusionRule());
											}
											set(
												$current,
												"properties",
												lv_properties_10_0,
												"io.yaktor.Domain.InclusionType");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGenerationInclusionAccess().getUnorderedGroup_2());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getGenerationInclusionAccess().getUnorderedGroup_2(), 4)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getGenerationInclusionAccess().getUnorderedGroup_2(), 4);
					}
								({true}?=>(otherlv_11='views'
								{
									newLeafNode(otherlv_11, grammarAccess.getGenerationInclusionAccess().getViewsKeyword_2_4_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getGenerationInclusionAccess().getViewsInclusionTypeEnumRuleCall_2_4_1_0());
										}
										lv_views_12_0=ruleInclusionType
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getGenerationInclusionRule());
											}
											set(
												$current,
												"views",
												lv_views_12_0,
												"io.yaktor.Domain.InclusionType");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGenerationInclusionAccess().getUnorderedGroup_2());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getGenerationInclusionAccess().getUnorderedGroup_2(), 5)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getGenerationInclusionAccess().getUnorderedGroup_2(), 5);
					}
								({true}?=>(otherlv_13='web-xml'
								{
									newLeafNode(otherlv_13, grammarAccess.getGenerationInclusionAccess().getWebXmlKeyword_2_5_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getGenerationInclusionAccess().getWebxmlInclusionTypeEnumRuleCall_2_5_1_0());
										}
										lv_webxml_14_0=ruleInclusionType
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getGenerationInclusionRule());
											}
											set(
												$current,
												"webxml",
												lv_webxml_14_0,
												"io.yaktor.Domain.InclusionType");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGenerationInclusionAccess().getUnorderedGroup_2());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getGenerationInclusionAccess().getUnorderedGroup_2(), 6)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getGenerationInclusionAccess().getUnorderedGroup_2(), 6);
					}
								({true}?=>(otherlv_15='pom'
								{
									newLeafNode(otherlv_15, grammarAccess.getGenerationInclusionAccess().getPomKeyword_2_6_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getGenerationInclusionAccess().getPomInclusionTypeEnumRuleCall_2_6_1_0());
										}
										lv_pom_16_0=ruleInclusionType
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getGenerationInclusionRule());
											}
											set(
												$current,
												"pom",
												lv_pom_16_0,
												"io.yaktor.Domain.InclusionType");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGenerationInclusionAccess().getUnorderedGroup_2());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getGenerationInclusionAccess().getUnorderedGroup_2(), 7)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getGenerationInclusionAccess().getUnorderedGroup_2(), 7);
					}
								({true}?=>(otherlv_17='styles'
								{
									newLeafNode(otherlv_17, grammarAccess.getGenerationInclusionAccess().getStylesKeyword_2_7_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getGenerationInclusionAccess().getStylesInclusionTypeEnumRuleCall_2_7_1_0());
										}
										lv_styles_18_0=ruleInclusionType
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getGenerationInclusionRule());
											}
											set(
												$current,
												"styles",
												lv_styles_18_0,
												"io.yaktor.Domain.InclusionType");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGenerationInclusionAccess().getUnorderedGroup_2());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getGenerationInclusionAccess().getUnorderedGroup_2(), 8)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getGenerationInclusionAccess().getUnorderedGroup_2(), 8);
					}
								({true}?=>(otherlv_19='classes'
								{
									newLeafNode(otherlv_19, grammarAccess.getGenerationInclusionAccess().getClassesKeyword_2_8_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getGenerationInclusionAccess().getClassesInclusionTypeEnumRuleCall_2_8_1_0());
										}
										lv_classes_20_0=ruleInclusionType
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getGenerationInclusionRule());
											}
											set(
												$current,
												"classes",
												lv_classes_20_0,
												"io.yaktor.Domain.InclusionType");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGenerationInclusionAccess().getUnorderedGroup_2());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getGenerationInclusionAccess().getUnorderedGroup_2(), 9)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getGenerationInclusionAccess().getUnorderedGroup_2(), 9);
					}
								({true}?=>(otherlv_21='layouts'
								{
									newLeafNode(otherlv_21, grammarAccess.getGenerationInclusionAccess().getLayoutsKeyword_2_9_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getGenerationInclusionAccess().getLayoutsInclusionTypeEnumRuleCall_2_9_1_0());
										}
										lv_layouts_22_0=ruleInclusionType
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getGenerationInclusionRule());
											}
											set(
												$current,
												"layouts",
												lv_layouts_22_0,
												"io.yaktor.Domain.InclusionType");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGenerationInclusionAccess().getUnorderedGroup_2());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getGenerationInclusionAccess().getUnorderedGroup_2(), 10)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getGenerationInclusionAccess().getUnorderedGroup_2(), 10);
					}
								({true}?=>(otherlv_23='web-mvc'
								{
									newLeafNode(otherlv_23, grammarAccess.getGenerationInclusionAccess().getWebMvcKeyword_2_10_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getGenerationInclusionAccess().getWebmvcInclusionTypeEnumRuleCall_2_10_1_0());
										}
										lv_webmvc_24_0=ruleInclusionType
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getGenerationInclusionRule());
											}
											set(
												$current,
												"webmvc",
												lv_webmvc_24_0,
												"io.yaktor.Domain.InclusionType");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGenerationInclusionAccess().getUnorderedGroup_2());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getGenerationInclusionAccess().getUnorderedGroup_2(), 11)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getGenerationInclusionAccess().getUnorderedGroup_2(), 11);
					}
								({true}?=>(otherlv_25='tags'
								{
									newLeafNode(otherlv_25, grammarAccess.getGenerationInclusionAccess().getTagsKeyword_2_11_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getGenerationInclusionAccess().getTagsInclusionTypeEnumRuleCall_2_11_1_0());
										}
										lv_tags_26_0=ruleInclusionType
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getGenerationInclusionRule());
											}
											set(
												$current,
												"tags",
												lv_tags_26_0,
												"io.yaktor.Domain.InclusionType");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGenerationInclusionAccess().getUnorderedGroup_2());
					}
				)
			)
					)+
					{getUnorderedGroupHelper().canLeave(grammarAccess.getGenerationInclusionAccess().getUnorderedGroup_2())}?
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getGenerationInclusionAccess().getUnorderedGroup_2());
				}
		)
		otherlv_27='}'
		{
			newLeafNode(otherlv_27, grammarAccess.getGenerationInclusionAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleTtl
entryRuleTtl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTtlRule()); }
	iv_ruleTtl=ruleTtl
	{ $current=$iv_ruleTtl.current; }
	EOF;

// Rule Ttl
ruleTtl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ttl'
		{
			newLeafNode(otherlv_0, grammarAccess.getTtlAccess().getTtlKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTtlRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getTtlAccess().getFieldDateFieldCrossReference_1_0());
				}
				rulePossiblyQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_expireAfterSeconds_2_0=RULE_INT
				{
					newLeafNode(lv_expireAfterSeconds_2_0, grammarAccess.getTtlAccess().getExpireAfterSecondsINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTtlRule());
					}
					setWithLastConsumed(
						$current,
						"expireAfterSeconds",
						lv_expireAfterSeconds_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleMongoNodeGenOptions
entryRuleMongoNodeGenOptions returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMongoNodeGenOptionsRule()); }
	iv_ruleMongoNodeGenOptions=ruleMongoNodeGenOptions
	{ $current=$iv_ruleMongoNodeGenOptions.current; }
	EOF;

// Rule MongoNodeGenOptions
ruleMongoNodeGenOptions returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getMongoNodeGenOptionsAccess().getMongoNodeGenOptionsAction_0(),
					$current);
			}
		)
		otherlv_1='node-mongo-options'
		{
			newLeafNode(otherlv_1, grammarAccess.getMongoNodeGenOptionsAccess().getNodeMongoOptionsKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getMongoNodeGenOptionsAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				lv_useLogger_3_0='use-logger'
				{
					newLeafNode(lv_useLogger_3_0, grammarAccess.getMongoNodeGenOptionsAccess().getUseLoggerUseLoggerKeyword_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMongoNodeGenOptionsRule());
					}
					setWithLastConsumed($current, "useLogger", lv_useLogger_3_0 != null, "use-logger");
				}
			)
		)?
		(
			otherlv_4='model-path'
			{
				newLeafNode(otherlv_4, grammarAccess.getMongoNodeGenOptionsAccess().getModelPathKeyword_4_0());
			}
			(
				(
					lv_modelPath_5_0=RULE_STRING
					{
						newLeafNode(lv_modelPath_5_0, grammarAccess.getMongoNodeGenOptionsAccess().getModelPathSTRINGTerminalRuleCall_4_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMongoNodeGenOptionsRule());
						}
						setWithLastConsumed(
							$current,
							"modelPath",
							lv_modelPath_5_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		(
			otherlv_6='test-path'
			{
				newLeafNode(otherlv_6, grammarAccess.getMongoNodeGenOptionsAccess().getTestPathKeyword_5_0());
			}
			(
				(
					lv_testPath_7_0=RULE_STRING
					{
						newLeafNode(lv_testPath_7_0, grammarAccess.getMongoNodeGenOptionsAccess().getTestPathSTRINGTerminalRuleCall_5_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMongoNodeGenOptionsRule());
						}
						setWithLastConsumed(
							$current,
							"testPath",
							lv_testPath_7_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		(
			(
				lv_generateTest_8_0='gen-test'
				{
					newLeafNode(lv_generateTest_8_0, grammarAccess.getMongoNodeGenOptionsAccess().getGenerateTestGenTestKeyword_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMongoNodeGenOptionsRule());
					}
					setWithLastConsumed($current, "generateTest", lv_generateTest_8_0 != null, "gen-test");
				}
			)
		)?
		(
			otherlv_9='extensions'
			{
				newLeafNode(otherlv_9, grammarAccess.getMongoNodeGenOptionsAccess().getExtensionsKeyword_7_0());
			}
			otherlv_10='{'
			{
				newLeafNode(otherlv_10, grammarAccess.getMongoNodeGenOptionsAccess().getLeftCurlyBracketKeyword_7_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMongoNodeGenOptionsAccess().getTableOptionsMongoNodeTableOptionsParserRuleCall_7_2_0());
					}
					lv_tableOptions_11_0=ruleMongoNodeTableOptions
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMongoNodeGenOptionsRule());
						}
						add(
							$current,
							"tableOptions",
							lv_tableOptions_11_0,
							"io.yaktor.Domain.MongoNodeTableOptions");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_12='}'
			{
				newLeafNode(otherlv_12, grammarAccess.getMongoNodeGenOptionsAccess().getRightCurlyBracketKeyword_7_3());
			}
		)?
		otherlv_13='}'
		{
			newLeafNode(otherlv_13, grammarAccess.getMongoNodeGenOptionsAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleJpaTableOptions
entryRuleJpaTableOptions returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJpaTableOptionsRule()); }
	iv_ruleJpaTableOptions=ruleJpaTableOptions
	{ $current=$iv_ruleJpaTableOptions.current; }
	EOF;

// Rule JpaTableOptions
ruleJpaTableOptions returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getJpaTableOptionsRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getJpaTableOptionsAccess().getTypeEntityCrossReference_0_0());
				}
			)
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getJpaTableOptionsAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				lv_singleTableRoot_2_0='single-table-root'
				{
					newLeafNode(lv_singleTableRoot_2_0, grammarAccess.getJpaTableOptionsAccess().getSingleTableRootSingleTableRootKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getJpaTableOptionsRule());
					}
					setWithLastConsumed($current, "singleTableRoot", lv_singleTableRoot_2_0 != null, "single-table-root");
				}
			)
		)?
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getJpaTableOptionsAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleMongoNodeTableOptions
entryRuleMongoNodeTableOptions returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMongoNodeTableOptionsRule()); }
	iv_ruleMongoNodeTableOptions=ruleMongoNodeTableOptions
	{ $current=$iv_ruleMongoNodeTableOptions.current; }
	EOF;

// Rule MongoNodeTableOptions
ruleMongoNodeTableOptions returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMongoNodeTableOptionsRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getMongoNodeTableOptionsAccess().getTypeEntityCrossReference_0_0());
				}
			)
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getMongoNodeTableOptionsAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMongoNodeTableOptionsAccess().getTtlTtlParserRuleCall_2_0());
				}
				lv_ttl_2_0=ruleTtl
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMongoNodeTableOptionsRule());
					}
					set(
						$current,
						"ttl",
						lv_ttl_2_0,
						"io.yaktor.Domain.Ttl");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				lv_singleTableRoot_3_0='single-table-root'
				{
					newLeafNode(lv_singleTableRoot_3_0, grammarAccess.getMongoNodeTableOptionsAccess().getSingleTableRootSingleTableRootKeyword_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMongoNodeTableOptionsRule());
					}
					setWithLastConsumed($current, "singleTableRoot", lv_singleTableRoot_3_0 != null, "single-table-root");
				}
			)
		)?
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getMongoNodeTableOptionsAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); }
	iv_ruleQualifiedName=ruleQualifiedName
	{ $current=$iv_ruleQualifiedName.current.getText(); }
	EOF;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0());
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0());
			}
			this_ID_2=RULE_ID
			{
				$current.merge(this_ID_2);
			}
			{
				newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1());
			}
		)*
	)
;

// Entry rule entryRulePossiblyQualifiedName
entryRulePossiblyQualifiedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getPossiblyQualifiedNameRule()); }
	iv_rulePossiblyQualifiedName=rulePossiblyQualifiedName
	{ $current=$iv_rulePossiblyQualifiedName.current.getText(); }
	EOF;

// Rule PossiblyQualifiedName
rulePossiblyQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getPossiblyQualifiedNameAccess().getIDTerminalRuleCall_0());
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getPossiblyQualifiedNameAccess().getFullStopKeyword_1_0());
			}
			this_ID_2=RULE_ID
			{
				$current.merge(this_ID_2);
			}
			{
				newLeafNode(this_ID_2, grammarAccess.getPossiblyQualifiedNameAccess().getIDTerminalRuleCall_1_1());
			}
		)*
	)
;

// Entry rule entryRulePersistenceOptions
entryRulePersistenceOptions returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPersistenceOptionsRule()); }
	iv_rulePersistenceOptions=rulePersistenceOptions
	{ $current=$iv_rulePersistenceOptions.current; }
	EOF;

// Rule PersistenceOptions
rulePersistenceOptions returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='persistence-options'
		{
			newLeafNode(otherlv_0, grammarAccess.getPersistenceOptionsAccess().getPersistenceOptionsKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getPersistenceOptionsAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getPersistenceOptionsAccess().getUnorderedGroup_2());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getPersistenceOptionsAccess().getUnorderedGroup_2(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getPersistenceOptionsAccess().getUnorderedGroup_2(), 0);
					}
								({true}?=>(otherlv_3='database'
								{
									newLeafNode(otherlv_3, grammarAccess.getPersistenceOptionsAccess().getDatabaseKeyword_2_0_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getPersistenceOptionsAccess().getDbTypeDbTypeEnumRuleCall_2_0_1_0());
										}
										lv_dbType_4_0=ruleDbType
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getPersistenceOptionsRule());
											}
											set(
												$current,
												"dbType",
												lv_dbType_4_0,
												"io.yaktor.Domain.DbType");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPersistenceOptionsAccess().getUnorderedGroup_2());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getPersistenceOptionsAccess().getUnorderedGroup_2(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getPersistenceOptionsAccess().getUnorderedGroup_2(), 1);
					}
								({true}?=>(otherlv_5='provider'
								{
									newLeafNode(otherlv_5, grammarAccess.getPersistenceOptionsAccess().getProviderKeyword_2_1_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getPersistenceOptionsAccess().getDbProviderDbProviderEnumRuleCall_2_1_1_0());
										}
										lv_dbProvider_6_0=ruleDbProvider
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getPersistenceOptionsRule());
											}
											set(
												$current,
												"dbProvider",
												lv_dbProvider_6_0,
												"io.yaktor.Domain.DbProvider");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPersistenceOptionsAccess().getUnorderedGroup_2());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getPersistenceOptionsAccess().getUnorderedGroup_2(), 2)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getPersistenceOptionsAccess().getUnorderedGroup_2(), 2);
					}
								({true}?=>(otherlv_7='user'
								{
									newLeafNode(otherlv_7, grammarAccess.getPersistenceOptionsAccess().getUserKeyword_2_2_0());
								}
								(
									(
										lv_userName_8_0=RULE_ID
										{
											newLeafNode(lv_userName_8_0, grammarAccess.getPersistenceOptionsAccess().getUserNameIDTerminalRuleCall_2_2_1_0());
										}
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getPersistenceOptionsRule());
											}
											setWithLastConsumed(
												$current,
												"userName",
												lv_userName_8_0,
												"org.eclipse.xtext.common.Terminals.ID");
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPersistenceOptionsAccess().getUnorderedGroup_2());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getPersistenceOptionsAccess().getUnorderedGroup_2(), 3)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getPersistenceOptionsAccess().getUnorderedGroup_2(), 3);
					}
								({true}?=>(otherlv_9='password'
								{
									newLeafNode(otherlv_9, grammarAccess.getPersistenceOptionsAccess().getPasswordKeyword_2_3_0());
								}
								(
									(
										(
											lv_password_10_1=RULE_ID
											{
												newLeafNode(lv_password_10_1, grammarAccess.getPersistenceOptionsAccess().getPasswordIDTerminalRuleCall_2_3_1_0_0());
											}
											{
												if ($current==null) {
													$current = createModelElement(grammarAccess.getPersistenceOptionsRule());
												}
												setWithLastConsumed(
													$current,
													"password",
													lv_password_10_1,
													"org.eclipse.xtext.common.Terminals.ID");
											}
											    |
											lv_password_10_2=RULE_STRING
											{
												newLeafNode(lv_password_10_2, grammarAccess.getPersistenceOptionsAccess().getPasswordSTRINGTerminalRuleCall_2_3_1_0_1());
											}
											{
												if ($current==null) {
													$current = createModelElement(grammarAccess.getPersistenceOptionsRule());
												}
												setWithLastConsumed(
													$current,
													"password",
													lv_password_10_2,
													"org.eclipse.xtext.common.Terminals.STRING");
											}
										)
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPersistenceOptionsAccess().getUnorderedGroup_2());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getPersistenceOptionsAccess().getUnorderedGroup_2(), 4)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getPersistenceOptionsAccess().getUnorderedGroup_2(), 4);
					}
								({true}?=>(otherlv_11='url'
								{
									newLeafNode(otherlv_11, grammarAccess.getPersistenceOptionsAccess().getUrlKeyword_2_4_0());
								}
								(
									(
										lv_url_12_0=RULE_STRING
										{
											newLeafNode(lv_url_12_0, grammarAccess.getPersistenceOptionsAccess().getUrlSTRINGTerminalRuleCall_2_4_1_0());
										}
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getPersistenceOptionsRule());
											}
											setWithLastConsumed(
												$current,
												"url",
												lv_url_12_0,
												"org.eclipse.xtext.common.Terminals.STRING");
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPersistenceOptionsAccess().getUnorderedGroup_2());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getPersistenceOptionsAccess().getUnorderedGroup_2(), 5)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getPersistenceOptionsAccess().getUnorderedGroup_2(), 5);
					}
								({true}?=>(otherlv_13='db-name'
								{
									newLeafNode(otherlv_13, grammarAccess.getPersistenceOptionsAccess().getDbNameKeyword_2_5_0());
								}
								(
									(
										lv_dbName_14_0=RULE_ID
										{
											newLeafNode(lv_dbName_14_0, grammarAccess.getPersistenceOptionsAccess().getDbNameIDTerminalRuleCall_2_5_1_0());
										}
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getPersistenceOptionsRule());
											}
											setWithLastConsumed(
												$current,
												"dbName",
												lv_dbName_14_0,
												"org.eclipse.xtext.common.Terminals.ID");
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPersistenceOptionsAccess().getUnorderedGroup_2());
					}
				)
			)
					)+
					{getUnorderedGroupHelper().canLeave(grammarAccess.getPersistenceOptionsAccess().getUnorderedGroup_2())}?
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getPersistenceOptionsAccess().getUnorderedGroup_2());
				}
		)
		otherlv_15='}'
		{
			newLeafNode(otherlv_15, grammarAccess.getPersistenceOptionsAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Rule Cardinality
ruleCardinality returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='!'
			{
				$current = grammarAccess.getCardinalityAccess().getRequiredEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getCardinalityAccess().getRequiredEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='?'
			{
				$current = grammarAccess.getCardinalityAccess().getOptionalEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getCardinalityAccess().getOptionalEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='+'
			{
				$current = grammarAccess.getCardinalityAccess().getOneOrMoreEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getCardinalityAccess().getOneOrMoreEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='*'
			{
				$current = grammarAccess.getCardinalityAccess().getManyEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getCardinalityAccess().getManyEnumLiteralDeclaration_3());
			}
		)
	)
;

// Rule SinglularCardinality
ruleSinglularCardinality returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='!'
			{
				$current = grammarAccess.getSinglularCardinalityAccess().getRequiredEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getSinglularCardinalityAccess().getRequiredEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='?'
			{
				$current = grammarAccess.getSinglularCardinalityAccess().getOptionalEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getSinglularCardinalityAccess().getOptionalEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule InclusionType
ruleInclusionType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='OVERWRITE'
			{
				$current = grammarAccess.getInclusionTypeAccess().getOverwriteEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getInclusionTypeAccess().getOverwriteEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='PROTECTED'
			{
				$current = grammarAccess.getInclusionTypeAccess().getProtectedEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getInclusionTypeAccess().getProtectedEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='NONE'
			{
				$current = grammarAccess.getInclusionTypeAccess().getNoneEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getInclusionTypeAccess().getNoneEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule DbType
ruleDbType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='MYSQL'
			{
				$current = grammarAccess.getDbTypeAccess().getMySqlEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getDbTypeAccess().getMySqlEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='ORACLE'
			{
				$current = grammarAccess.getDbTypeAccess().getOracleEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getDbTypeAccess().getOracleEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='DATABASE_DOT_COM'
			{
				$current = grammarAccess.getDbTypeAccess().getDatabaseDotComEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getDbTypeAccess().getDatabaseDotComEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='DB2_400'
			{
				$current = grammarAccess.getDbTypeAccess().getDb2400EnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getDbTypeAccess().getDb2400EnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='DB2_EXPRESS_C'
			{
				$current = grammarAccess.getDbTypeAccess().getDb2ExpressCEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getDbTypeAccess().getDb2ExpressCEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='DERBY_CLIENT'
			{
				$current = grammarAccess.getDbTypeAccess().getDerbyClientEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getDbTypeAccess().getDerbyClientEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='DERBY_EMBEDDED'
			{
				$current = grammarAccess.getDbTypeAccess().getDerbyEmbeddedEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getDbTypeAccess().getDerbyEmbeddedEnumLiteralDeclaration_6());
			}
		)
		    |
		(
			enumLiteral_7='FIREBIRD'
			{
				$current = grammarAccess.getDbTypeAccess().getFirebirdEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_7, grammarAccess.getDbTypeAccess().getFirebirdEnumLiteralDeclaration_7());
			}
		)
		    |
		(
			enumLiteral_8='GOOGLE_APP_ENGINE'
			{
				$current = grammarAccess.getDbTypeAccess().getGoogleAppEngineEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_8, grammarAccess.getDbTypeAccess().getGoogleAppEngineEnumLiteralDeclaration_8());
			}
		)
		    |
		(
			enumLiteral_9='H2_IN_MEMORY'
			{
				$current = grammarAccess.getDbTypeAccess().getH2InMemoryEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_9, grammarAccess.getDbTypeAccess().getH2InMemoryEnumLiteralDeclaration_9());
			}
		)
		    |
		(
			enumLiteral_10='HYPERSONIC_IN_MEMORY'
			{
				$current = grammarAccess.getDbTypeAccess().getHypersonicInMemoryEnumLiteralDeclaration_10().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_10, grammarAccess.getDbTypeAccess().getHypersonicInMemoryEnumLiteralDeclaration_10());
			}
		)
		    |
		(
			enumLiteral_11='HYPERSONIC_PERSISTENT'
			{
				$current = grammarAccess.getDbTypeAccess().getHypersonicPersistentEnumLiteralDeclaration_11().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_11, grammarAccess.getDbTypeAccess().getHypersonicPersistentEnumLiteralDeclaration_11());
			}
		)
		    |
		(
			enumLiteral_12='MSSQL'
			{
				$current = grammarAccess.getDbTypeAccess().getMsSqlEnumLiteralDeclaration_12().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_12, grammarAccess.getDbTypeAccess().getMsSqlEnumLiteralDeclaration_12());
			}
		)
		    |
		(
			enumLiteral_13='POSTGRES'
			{
				$current = grammarAccess.getDbTypeAccess().getPostgresEnumLiteralDeclaration_13().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_13, grammarAccess.getDbTypeAccess().getPostgresEnumLiteralDeclaration_13());
			}
		)
		    |
		(
			enumLiteral_14='SYBASE'
			{
				$current = grammarAccess.getDbTypeAccess().getSybaseEnumLiteralDeclaration_14().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_14, grammarAccess.getDbTypeAccess().getSybaseEnumLiteralDeclaration_14());
			}
		)
	)
;

// Rule DbProvider
ruleDbProvider returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='HIBERNATE'
			{
				$current = grammarAccess.getDbProviderAccess().getHibernateEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getDbProviderAccess().getHibernateEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='DATANUCLEUS'
			{
				$current = grammarAccess.getDbProviderAccess().getDataNucleusEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getDbProviderAccess().getDataNucleusEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='ECLIPSELINK'
			{
				$current = grammarAccess.getDbProviderAccess().getEclipseLinkEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getDbProviderAccess().getEclipseLinkEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='OPENJPA'
			{
				$current = grammarAccess.getDbProviderAccess().getOpenJPAEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getDbProviderAccess().getOpenJPAEnumLiteralDeclaration_3());
			}
		)
	)
;

// Rule JpaEnumType
ruleJpaEnumType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='ORDINAL'
			{
				$current = grammarAccess.getJpaEnumTypeAccess().getOrdinalEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getJpaEnumTypeAccess().getOrdinalEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='STRING'
			{
				$current = grammarAccess.getJpaEnumTypeAccess().getStringEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getJpaEnumTypeAccess().getStringEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='NONE'
			{
				$current = grammarAccess.getJpaEnumTypeAccess().getNoneEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getJpaEnumTypeAccess().getNoneEnumLiteralDeclaration_2());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
