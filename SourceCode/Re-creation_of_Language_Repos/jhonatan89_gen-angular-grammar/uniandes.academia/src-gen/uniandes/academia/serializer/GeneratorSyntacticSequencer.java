/*
 * generated by Xtext 2.35.0
 */
package uniandes.academia.serializer;

import com.google.inject.Inject;
import java.util.List;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.IGrammarAccess;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.nodemodel.INode;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.AbstractElementAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.AlternativeAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.GroupAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.TokenAlias;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynNavigable;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynTransition;
import org.eclipse.xtext.serializer.sequencer.AbstractSyntacticSequencer;
import uniandes.academia.services.GeneratorGrammarAccess;

@SuppressWarnings("all")
public class GeneratorSyntacticSequencer extends AbstractSyntacticSequencer {

	protected GeneratorGrammarAccess grammarAccess;
	protected AbstractElementAlias match_Attribute_COMATerminalRuleCall_10_3_q;
	protected AbstractElementAlias match_Attribute_COMATerminalRuleCall_8_q;
	protected AbstractElementAlias match_Child_COMATerminalRuleCall_13_q;
	protected AbstractElementAlias match_Children_Components_Models_Modules___ChildrenKeyword_0_LEFTCURLYTerminalRuleCall_1_RIGTHCURLYTerminalRuleCall_3___or___ComponentsKeyword_0_LEFTCURLYTerminalRuleCall_1_RIGTHCURLYTerminalRuleCall_3___or___ModelsKeyword_0_LEFTCURLYTerminalRuleCall_1_RIGTHCURLYTerminalRuleCall_3___or___ModulesKeyword_0_LEFTCURLYTerminalRuleCall_1_RIGTHCURLYTerminalRuleCall_3__;
	protected AbstractElementAlias match_ContainerModule_COMATerminalRuleCall_10_1_q;
	protected AbstractElementAlias match_ContainerModule_COMATerminalRuleCall_16_1_q;
	protected AbstractElementAlias match_ContainerModule_COMATerminalRuleCall_22_1_q;
	protected AbstractElementAlias match_Model_COMATerminalRuleCall_6_1_q;
	protected AbstractElementAlias match_Model_COMATerminalRuleCall_9_3_1_q;
	protected AbstractElementAlias match_Model___ChildrenKeyword_9_0_COLONTerminalRuleCall_9_1_LEFTBRACKETTerminalRuleCall_9_2_RIGHTBRACKETTerminalRuleCall_9_4_SEMICOLONTerminalRuleCall_9_5__q;
	protected AbstractElementAlias match_Service_COMATerminalRuleCall_10_q;
	protected AbstractElementAlias match_Service_COMATerminalRuleCall_11_3_q;
	protected AbstractElementAlias match_VisualModule_COMATerminalRuleCall_13_1_q;
	protected AbstractElementAlias match_VisualModule_COMATerminalRuleCall_19_1_q;
	protected AbstractElementAlias match_VisualModule_COMATerminalRuleCall_25_1_q;
	protected AbstractElementAlias match_VisualModule_COMATerminalRuleCall_36_1_q;
	protected AbstractElementAlias match_VisualModule_COMATerminalRuleCall_7_1_q;
	
	@Inject
	protected void init(IGrammarAccess access) {
		grammarAccess = (GeneratorGrammarAccess) access;
		match_Attribute_COMATerminalRuleCall_10_3_q = new TokenAlias(false, true, grammarAccess.getAttributeAccess().getCOMATerminalRuleCall_10_3());
		match_Attribute_COMATerminalRuleCall_8_q = new TokenAlias(false, true, grammarAccess.getAttributeAccess().getCOMATerminalRuleCall_8());
		match_Child_COMATerminalRuleCall_13_q = new TokenAlias(false, true, grammarAccess.getChildAccess().getCOMATerminalRuleCall_13());
		match_Children_Components_Models_Modules___ChildrenKeyword_0_LEFTCURLYTerminalRuleCall_1_RIGTHCURLYTerminalRuleCall_3___or___ComponentsKeyword_0_LEFTCURLYTerminalRuleCall_1_RIGTHCURLYTerminalRuleCall_3___or___ModelsKeyword_0_LEFTCURLYTerminalRuleCall_1_RIGTHCURLYTerminalRuleCall_3___or___ModulesKeyword_0_LEFTCURLYTerminalRuleCall_1_RIGTHCURLYTerminalRuleCall_3__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getChildrenAccess().getChildrenKeyword_0()), new TokenAlias(false, false, grammarAccess.getChildrenAccess().getLEFTCURLYTerminalRuleCall_1()), new TokenAlias(false, false, grammarAccess.getChildrenAccess().getRIGTHCURLYTerminalRuleCall_3())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getComponentsAccess().getComponentsKeyword_0()), new TokenAlias(false, false, grammarAccess.getComponentsAccess().getLEFTCURLYTerminalRuleCall_1()), new TokenAlias(false, false, grammarAccess.getComponentsAccess().getRIGTHCURLYTerminalRuleCall_3())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getModelsAccess().getModelsKeyword_0()), new TokenAlias(false, false, grammarAccess.getModelsAccess().getLEFTCURLYTerminalRuleCall_1()), new TokenAlias(false, false, grammarAccess.getModelsAccess().getRIGTHCURLYTerminalRuleCall_3())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getModulesAccess().getModulesKeyword_0()), new TokenAlias(false, false, grammarAccess.getModulesAccess().getLEFTCURLYTerminalRuleCall_1()), new TokenAlias(false, false, grammarAccess.getModulesAccess().getRIGTHCURLYTerminalRuleCall_3())));
		match_ContainerModule_COMATerminalRuleCall_10_1_q = new TokenAlias(false, true, grammarAccess.getContainerModuleAccess().getCOMATerminalRuleCall_10_1());
		match_ContainerModule_COMATerminalRuleCall_16_1_q = new TokenAlias(false, true, grammarAccess.getContainerModuleAccess().getCOMATerminalRuleCall_16_1());
		match_ContainerModule_COMATerminalRuleCall_22_1_q = new TokenAlias(false, true, grammarAccess.getContainerModuleAccess().getCOMATerminalRuleCall_22_1());
		match_Model_COMATerminalRuleCall_6_1_q = new TokenAlias(false, true, grammarAccess.getModelAccess().getCOMATerminalRuleCall_6_1());
		match_Model_COMATerminalRuleCall_9_3_1_q = new TokenAlias(false, true, grammarAccess.getModelAccess().getCOMATerminalRuleCall_9_3_1());
		match_Model___ChildrenKeyword_9_0_COLONTerminalRuleCall_9_1_LEFTBRACKETTerminalRuleCall_9_2_RIGHTBRACKETTerminalRuleCall_9_4_SEMICOLONTerminalRuleCall_9_5__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getModelAccess().getChildrenKeyword_9_0()), new TokenAlias(false, false, grammarAccess.getModelAccess().getCOLONTerminalRuleCall_9_1()), new TokenAlias(false, false, grammarAccess.getModelAccess().getLEFTBRACKETTerminalRuleCall_9_2()), new TokenAlias(false, false, grammarAccess.getModelAccess().getRIGHTBRACKETTerminalRuleCall_9_4()), new TokenAlias(false, false, grammarAccess.getModelAccess().getSEMICOLONTerminalRuleCall_9_5()));
		match_Service_COMATerminalRuleCall_10_q = new TokenAlias(false, true, grammarAccess.getServiceAccess().getCOMATerminalRuleCall_10());
		match_Service_COMATerminalRuleCall_11_3_q = new TokenAlias(false, true, grammarAccess.getServiceAccess().getCOMATerminalRuleCall_11_3());
		match_VisualModule_COMATerminalRuleCall_13_1_q = new TokenAlias(false, true, grammarAccess.getVisualModuleAccess().getCOMATerminalRuleCall_13_1());
		match_VisualModule_COMATerminalRuleCall_19_1_q = new TokenAlias(false, true, grammarAccess.getVisualModuleAccess().getCOMATerminalRuleCall_19_1());
		match_VisualModule_COMATerminalRuleCall_25_1_q = new TokenAlias(false, true, grammarAccess.getVisualModuleAccess().getCOMATerminalRuleCall_25_1());
		match_VisualModule_COMATerminalRuleCall_36_1_q = new TokenAlias(false, true, grammarAccess.getVisualModuleAccess().getCOMATerminalRuleCall_36_1());
		match_VisualModule_COMATerminalRuleCall_7_1_q = new TokenAlias(false, true, grammarAccess.getVisualModuleAccess().getCOMATerminalRuleCall_7_1());
	}
	
	@Override
	protected String getUnassignedRuleCallToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (ruleCall.getRule() == grammarAccess.getCOLONRule())
			return getCOLONToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getCOMARule())
			return getCOMAToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getLEFTBRACKETRule())
			return getLEFTBRACKETToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getLEFTCURLYRule())
			return getLEFTCURLYToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getRIGHTBRACKETRule())
			return getRIGHTBRACKETToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getRIGTHCURLYRule())
			return getRIGTHCURLYToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getSEMICOLONRule())
			return getSEMICOLONToken(semanticObject, ruleCall, node);
		return "";
	}
	
	/**
	 * terminal COLON :
	 * 	':'
	 * ;
	 */
	protected String getCOLONToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return ":";
	}
	
	/**
	 * terminal COMA :
	 * 	','
	 * ;
	 */
	protected String getCOMAToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return ",";
	}
	
	/**
	 * terminal LEFTBRACKET :
	 * 	'['
	 * ;
	 */
	protected String getLEFTBRACKETToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "[";
	}
	
	/**
	 * terminal LEFTCURLY :
	 * 	'{';
	 */
	protected String getLEFTCURLYToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "{";
	}
	
	/**
	 * terminal RIGHTBRACKET :
	 * 	']'
	 * ;
	 */
	protected String getRIGHTBRACKETToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "]";
	}
	
	/**
	 * terminal RIGTHCURLY:
	 * 	'}'
	 * ;
	 */
	protected String getRIGTHCURLYToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "}";
	}
	
	/**
	 * terminal SEMICOLON :
	 * 	';'
	 * ;
	 */
	protected String getSEMICOLONToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return ";";
	}
	
	@Override
	protected void emitUnassignedTokens(EObject semanticObject, ISynTransition transition, INode fromNode, INode toNode) {
		if (transition.getAmbiguousSyntaxes().isEmpty()) return;
		List<INode> transitionNodes = collectNodes(fromNode, toNode);
		for (AbstractElementAlias syntax : transition.getAmbiguousSyntaxes()) {
			List<INode> syntaxNodes = getNodesFor(transitionNodes, syntax);
			if (match_Attribute_COMATerminalRuleCall_10_3_q.equals(syntax))
				emit_Attribute_COMATerminalRuleCall_10_3_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Attribute_COMATerminalRuleCall_8_q.equals(syntax))
				emit_Attribute_COMATerminalRuleCall_8_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Child_COMATerminalRuleCall_13_q.equals(syntax))
				emit_Child_COMATerminalRuleCall_13_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Children_Components_Models_Modules___ChildrenKeyword_0_LEFTCURLYTerminalRuleCall_1_RIGTHCURLYTerminalRuleCall_3___or___ComponentsKeyword_0_LEFTCURLYTerminalRuleCall_1_RIGTHCURLYTerminalRuleCall_3___or___ModelsKeyword_0_LEFTCURLYTerminalRuleCall_1_RIGTHCURLYTerminalRuleCall_3___or___ModulesKeyword_0_LEFTCURLYTerminalRuleCall_1_RIGTHCURLYTerminalRuleCall_3__.equals(syntax))
				emit_Children_Components_Models_Modules___ChildrenKeyword_0_LEFTCURLYTerminalRuleCall_1_RIGTHCURLYTerminalRuleCall_3___or___ComponentsKeyword_0_LEFTCURLYTerminalRuleCall_1_RIGTHCURLYTerminalRuleCall_3___or___ModelsKeyword_0_LEFTCURLYTerminalRuleCall_1_RIGTHCURLYTerminalRuleCall_3___or___ModulesKeyword_0_LEFTCURLYTerminalRuleCall_1_RIGTHCURLYTerminalRuleCall_3__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ContainerModule_COMATerminalRuleCall_10_1_q.equals(syntax))
				emit_ContainerModule_COMATerminalRuleCall_10_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ContainerModule_COMATerminalRuleCall_16_1_q.equals(syntax))
				emit_ContainerModule_COMATerminalRuleCall_16_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ContainerModule_COMATerminalRuleCall_22_1_q.equals(syntax))
				emit_ContainerModule_COMATerminalRuleCall_22_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Model_COMATerminalRuleCall_6_1_q.equals(syntax))
				emit_Model_COMATerminalRuleCall_6_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Model_COMATerminalRuleCall_9_3_1_q.equals(syntax))
				emit_Model_COMATerminalRuleCall_9_3_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Model___ChildrenKeyword_9_0_COLONTerminalRuleCall_9_1_LEFTBRACKETTerminalRuleCall_9_2_RIGHTBRACKETTerminalRuleCall_9_4_SEMICOLONTerminalRuleCall_9_5__q.equals(syntax))
				emit_Model___ChildrenKeyword_9_0_COLONTerminalRuleCall_9_1_LEFTBRACKETTerminalRuleCall_9_2_RIGHTBRACKETTerminalRuleCall_9_4_SEMICOLONTerminalRuleCall_9_5__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Service_COMATerminalRuleCall_10_q.equals(syntax))
				emit_Service_COMATerminalRuleCall_10_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Service_COMATerminalRuleCall_11_3_q.equals(syntax))
				emit_Service_COMATerminalRuleCall_11_3_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_VisualModule_COMATerminalRuleCall_13_1_q.equals(syntax))
				emit_VisualModule_COMATerminalRuleCall_13_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_VisualModule_COMATerminalRuleCall_19_1_q.equals(syntax))
				emit_VisualModule_COMATerminalRuleCall_19_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_VisualModule_COMATerminalRuleCall_25_1_q.equals(syntax))
				emit_VisualModule_COMATerminalRuleCall_25_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_VisualModule_COMATerminalRuleCall_36_1_q.equals(syntax))
				emit_VisualModule_COMATerminalRuleCall_36_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_VisualModule_COMATerminalRuleCall_7_1_q.equals(syntax))
				emit_VisualModule_COMATerminalRuleCall_7_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else acceptNodes(getLastNavigableState(), syntaxNodes);
		}
	}

	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     COMA?
	 *
	 * This ambiguous syntax occurs at:
	 *     isRequired=BOOLEAN (ambiguity) 'mockType' COLON mockType=EString
	 *     isRequired=BOOLEAN (ambiguity) RIGTHCURLY (rule end)
	 
	 * </pre>
	 */
	protected void emit_Attribute_COMATerminalRuleCall_10_3_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     COMA?
	 *
	 * This ambiguous syntax occurs at:
	 *     type=EnumType (ambiguity) 'component' COLON component=[ComponentBasic|ID]
	 *     type=EnumType (ambiguity) 'isRequired' COLON isRequired=BOOLEAN
	 *     type=EnumType (ambiguity) 'mockType' COLON mockType=EString
	 *     type=EnumType (ambiguity) RIGTHCURLY (rule end)
	 
	 * </pre>
	 */
	protected void emit_Attribute_COMATerminalRuleCall_8_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     COMA?
	 *
	 * This ambiguous syntax occurs at:
	 *     type=EnumRealtionshipType (ambiguity) RIGTHCURLY (rule end)
	 
	 * </pre>
	 */
	protected void emit_Child_COMATerminalRuleCall_13_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     ('Modules' LEFTCURLY RIGTHCURLY) | ('Components' LEFTCURLY RIGTHCURLY) | ('Models' LEFTCURLY RIGTHCURLY) | ('Children' LEFTCURLY RIGTHCURLY)
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) (rule start)
	 
	 * </pre>
	 */
	protected void emit_Children_Components_Models_Modules___ChildrenKeyword_0_LEFTCURLYTerminalRuleCall_1_RIGTHCURLYTerminalRuleCall_3___or___ComponentsKeyword_0_LEFTCURLYTerminalRuleCall_1_RIGTHCURLYTerminalRuleCall_3___or___ModelsKeyword_0_LEFTCURLYTerminalRuleCall_1_RIGTHCURLYTerminalRuleCall_3___or___ModulesKeyword_0_LEFTCURLYTerminalRuleCall_1_RIGTHCURLYTerminalRuleCall_3__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     COMA?
	 *
	 * This ambiguous syntax occurs at:
	 *     imports+=[Module|ID] (ambiguity) RIGHTBRACKET SEMICOLON 'exports' COLON LEFTBRACKET RIGHTBRACKET SEMICOLON 'components' COLON LEFTBRACKET RIGHTBRACKET SEMICOLON RIGTHCURLY (rule end)
	 *     imports+=[Module|ID] (ambiguity) RIGHTBRACKET SEMICOLON 'exports' COLON LEFTBRACKET RIGHTBRACKET SEMICOLON 'components' COLON LEFTBRACKET components+=[Component|ID]
	 *     imports+=[Module|ID] (ambiguity) RIGHTBRACKET SEMICOLON 'exports' COLON LEFTBRACKET exports+=[Component|ID]
	 *     imports+=[Module|ID] (ambiguity) imports+=[Module|ID]
	 
	 * </pre>
	 */
	protected void emit_ContainerModule_COMATerminalRuleCall_10_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     COMA?
	 *
	 * This ambiguous syntax occurs at:
	 *     exports+=[Component|ID] (ambiguity) RIGHTBRACKET SEMICOLON 'components' COLON LEFTBRACKET RIGHTBRACKET SEMICOLON RIGTHCURLY (rule end)
	 *     exports+=[Component|ID] (ambiguity) RIGHTBRACKET SEMICOLON 'components' COLON LEFTBRACKET components+=[Component|ID]
	 *     exports+=[Component|ID] (ambiguity) exports+=[Component|ID]
	 
	 * </pre>
	 */
	protected void emit_ContainerModule_COMATerminalRuleCall_16_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     COMA?
	 *
	 * This ambiguous syntax occurs at:
	 *     components+=[Component|ID] (ambiguity) RIGHTBRACKET SEMICOLON RIGTHCURLY (rule end)
	 *     components+=[Component|ID] (ambiguity) components+=[Component|ID]
	 
	 * </pre>
	 */
	protected void emit_ContainerModule_COMATerminalRuleCall_22_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     COMA?
	 *
	 * This ambiguous syntax occurs at:
	 *     attributes+=Attribute (ambiguity) RIGHTBRACKET SEMICOLON 'children' COLON LEFTBRACKET children+=Child
	 *     attributes+=Attribute (ambiguity) RIGHTBRACKET SEMICOLON ('children' COLON LEFTBRACKET RIGHTBRACKET SEMICOLON)? 'idAtribute' COLON idAtribute=EString
	 *     attributes+=Attribute (ambiguity) attributes+=Attribute
	 
	 * </pre>
	 */
	protected void emit_Model_COMATerminalRuleCall_6_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     COMA?
	 *
	 * This ambiguous syntax occurs at:
	 *     children+=Child (ambiguity) RIGHTBRACKET SEMICOLON 'idAtribute' COLON idAtribute=EString
	 *     children+=Child (ambiguity) children+=Child
	 
	 * </pre>
	 */
	protected void emit_Model_COMATerminalRuleCall_9_3_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     ('children' COLON LEFTBRACKET RIGHTBRACKET SEMICOLON)?
	 *
	 * This ambiguous syntax occurs at:
	 *     attributes+=Attribute COMA? RIGHTBRACKET SEMICOLON (ambiguity) 'idAtribute' COLON idAtribute=EString
	 *     name=Name LEFTCURLY 'attributes' COLON LEFTBRACKET RIGHTBRACKET SEMICOLON (ambiguity) 'idAtribute' COLON idAtribute=EString
	 
	 * </pre>
	 */
	protected void emit_Model___ChildrenKeyword_9_0_COLONTerminalRuleCall_9_1_LEFTBRACKETTerminalRuleCall_9_2_RIGHTBRACKETTerminalRuleCall_9_4_SEMICOLONTerminalRuleCall_9_5__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     COMA?
	 *
	 * This ambiguous syntax occurs at:
	 *     type=EnumMethodType (ambiguity) 'collectionName' COLON collectionName=EString
	 *     type=EnumMethodType (ambiguity) RIGTHCURLY (rule end)
	 
	 * </pre>
	 */
	protected void emit_Service_COMATerminalRuleCall_10_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     COMA?
	 *
	 * This ambiguous syntax occurs at:
	 *     collectionName=EString (ambiguity) RIGTHCURLY (rule end)
	 
	 * </pre>
	 */
	protected void emit_Service_COMATerminalRuleCall_11_3_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     COMA?
	 *
	 * This ambiguous syntax occurs at:
	 *     exports+=[Module|ID] (ambiguity) RIGHTBRACKET SEMICOLON 'route' COLON LEFTBRACKET RIGHTBRACKET SEMICOLON 'show' COLON LEFTBRACKET RIGHTBRACKET SEMICOLON 'defaultRoute' COLON defaultRoute=EString
	 *     exports+=[Module|ID] (ambiguity) RIGHTBRACKET SEMICOLON 'route' COLON LEFTBRACKET RIGHTBRACKET SEMICOLON 'show' COLON LEFTBRACKET show+=EString
	 *     exports+=[Module|ID] (ambiguity) RIGHTBRACKET SEMICOLON 'route' COLON LEFTBRACKET routes+=EString
	 *     exports+=[Module|ID] (ambiguity) exports+=[Module|ID]
	 
	 * </pre>
	 */
	protected void emit_VisualModule_COMATerminalRuleCall_13_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     COMA?
	 *
	 * This ambiguous syntax occurs at:
	 *     routes+=EString (ambiguity) RIGHTBRACKET SEMICOLON 'show' COLON LEFTBRACKET RIGHTBRACKET SEMICOLON 'defaultRoute' COLON defaultRoute=EString
	 *     routes+=EString (ambiguity) RIGHTBRACKET SEMICOLON 'show' COLON LEFTBRACKET show+=EString
	 *     routes+=EString (ambiguity) routes+=EString
	 
	 * </pre>
	 */
	protected void emit_VisualModule_COMATerminalRuleCall_19_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     COMA?
	 *
	 * This ambiguous syntax occurs at:
	 *     show+=EString (ambiguity) RIGHTBRACKET SEMICOLON 'defaultRoute' COLON defaultRoute=EString
	 *     show+=EString (ambiguity) show+=EString
	 
	 * </pre>
	 */
	protected void emit_VisualModule_COMATerminalRuleCall_25_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     COMA?
	 *
	 * This ambiguous syntax occurs at:
	 *     components+=[Component|ID] (ambiguity) RIGHTBRACKET SEMICOLON RIGTHCURLY (rule end)
	 *     components+=[Component|ID] (ambiguity) components+=[Component|ID]
	 
	 * </pre>
	 */
	protected void emit_VisualModule_COMATerminalRuleCall_36_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     COMA?
	 *
	 * This ambiguous syntax occurs at:
	 *     (
	 *         imports+=[Module|ID] 
	 *         (ambiguity) 
	 *         RIGHTBRACKET 
	 *         SEMICOLON 
	 *         'exports' 
	 *         COLON 
	 *         LEFTBRACKET 
	 *         RIGHTBRACKET 
	 *         SEMICOLON 
	 *         'route' 
	 *         COLON 
	 *         LEFTBRACKET 
	 *         RIGHTBRACKET 
	 *         SEMICOLON 
	 *         'show' 
	 *         COLON 
	 *         LEFTBRACKET 
	 *         RIGHTBRACKET 
	 *         SEMICOLON 
	 *         'defaultRoute' 
	 *         COLON 
	 *         defaultRoute=EString
	 *     )
	 *     imports+=[Module|ID] (ambiguity) RIGHTBRACKET SEMICOLON 'exports' COLON LEFTBRACKET RIGHTBRACKET SEMICOLON 'route' COLON LEFTBRACKET RIGHTBRACKET SEMICOLON 'show' COLON LEFTBRACKET show+=EString
	 *     imports+=[Module|ID] (ambiguity) RIGHTBRACKET SEMICOLON 'exports' COLON LEFTBRACKET RIGHTBRACKET SEMICOLON 'route' COLON LEFTBRACKET routes+=EString
	 *     imports+=[Module|ID] (ambiguity) RIGHTBRACKET SEMICOLON 'exports' COLON LEFTBRACKET exports+=[Module|ID]
	 *     imports+=[Module|ID] (ambiguity) imports+=[Module|ID]
	 
	 * </pre>
	 */
	protected void emit_VisualModule_COMATerminalRuleCall_7_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
}
