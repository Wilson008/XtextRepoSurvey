/**
 * generated by Xtext 2.35.0
 */
package uniandes.academia.generator.util;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.common.notify.impl.AdapterFactoryImpl;

import org.eclipse.emf.ecore.EObject;

import uniandes.academia.generator.AbstractElement;
import uniandes.academia.generator.Application;
import uniandes.academia.generator.Attribute;
import uniandes.academia.generator.Child;
import uniandes.academia.generator.Children;
import uniandes.academia.generator.Component;
import uniandes.academia.generator.ComponentBasic;
import uniandes.academia.generator.ComponentContainer;
import uniandes.academia.generator.Components;
import uniandes.academia.generator.Configuration;
import uniandes.academia.generator.ContainerModule;
import uniandes.academia.generator.Crud;
import uniandes.academia.generator.GeneratorPackage;
import uniandes.academia.generator.Import;
import uniandes.academia.generator.Model;
import uniandes.academia.generator.Models;
import uniandes.academia.generator.Modules;
import uniandes.academia.generator.PackageDeclaration;
import uniandes.academia.generator.Root;
import uniandes.academia.generator.SearchComboBox;
import uniandes.academia.generator.Service;
import uniandes.academia.generator.Services;
import uniandes.academia.generator.VisualModule;

/**
 * <!-- begin-user-doc -->
 * The <b>Adapter Factory</b> for the model.
 * It provides an adapter <code>createXXX</code> method for each class of the model.
 * <!-- end-user-doc -->
 * @see uniandes.academia.generator.GeneratorPackage
 * @generated
 */
public class GeneratorAdapterFactory extends AdapterFactoryImpl
{
  /**
   * The cached model package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static GeneratorPackage modelPackage;

  /**
   * Creates an instance of the adapter factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public GeneratorAdapterFactory()
  {
    if (modelPackage == null)
    {
      modelPackage = GeneratorPackage.eINSTANCE;
    }
  }

  /**
   * Returns whether this factory is applicable for the type of the object.
   * <!-- begin-user-doc -->
   * This implementation returns <code>true</code> if the object is either the model's package or is an instance object of the model.
   * <!-- end-user-doc -->
   * @return whether this factory is applicable for the type of the object.
   * @generated
   */
  @Override
  public boolean isFactoryForType(Object object)
  {
    if (object == modelPackage)
    {
      return true;
    }
    if (object instanceof EObject)
    {
      return ((EObject)object).eClass().getEPackage() == modelPackage;
    }
    return false;
  }

  /**
   * The switch that delegates to the <code>createXXX</code> methods.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected GeneratorSwitch<Adapter> modelSwitch =
    new GeneratorSwitch<Adapter>()
    {
      @Override
      public Adapter caseRoot(Root object)
      {
        return createRootAdapter();
      }
      @Override
      public Adapter caseAbstractElement(AbstractElement object)
      {
        return createAbstractElementAdapter();
      }
      @Override
      public Adapter casePackageDeclaration(PackageDeclaration object)
      {
        return createPackageDeclarationAdapter();
      }
      @Override
      public Adapter caseApplication(Application object)
      {
        return createApplicationAdapter();
      }
      @Override
      public Adapter caseImport(Import object)
      {
        return createImportAdapter();
      }
      @Override
      public Adapter caseModules(Modules object)
      {
        return createModulesAdapter();
      }
      @Override
      public Adapter caseServices(Services object)
      {
        return createServicesAdapter();
      }
      @Override
      public Adapter caseComponents(Components object)
      {
        return createComponentsAdapter();
      }
      @Override
      public Adapter caseModels(Models object)
      {
        return createModelsAdapter();
      }
      @Override
      public Adapter caseChildren(Children object)
      {
        return createChildrenAdapter();
      }
      @Override
      public Adapter caseConfiguration(Configuration object)
      {
        return createConfigurationAdapter();
      }
      @Override
      public Adapter caseModule(uniandes.academia.generator.Module object)
      {
        return createModuleAdapter();
      }
      @Override
      public Adapter caseModel(Model object)
      {
        return createModelAdapter();
      }
      @Override
      public Adapter caseAttribute(Attribute object)
      {
        return createAttributeAdapter();
      }
      @Override
      public Adapter caseChild(Child object)
      {
        return createChildAdapter();
      }
      @Override
      public Adapter caseVisualModule(VisualModule object)
      {
        return createVisualModuleAdapter();
      }
      @Override
      public Adapter caseContainerModule(ContainerModule object)
      {
        return createContainerModuleAdapter();
      }
      @Override
      public Adapter caseComponent(Component object)
      {
        return createComponentAdapter();
      }
      @Override
      public Adapter caseComponentContainer(ComponentContainer object)
      {
        return createComponentContainerAdapter();
      }
      @Override
      public Adapter caseComponentBasic(ComponentBasic object)
      {
        return createComponentBasicAdapter();
      }
      @Override
      public Adapter caseCrud(Crud object)
      {
        return createCrudAdapter();
      }
      @Override
      public Adapter caseSearchComboBox(SearchComboBox object)
      {
        return createSearchComboBoxAdapter();
      }
      @Override
      public Adapter caseService(Service object)
      {
        return createServiceAdapter();
      }
      @Override
      public Adapter defaultCase(EObject object)
      {
        return createEObjectAdapter();
      }
    };

  /**
   * Creates an adapter for the <code>target</code>.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param target the object to adapt.
   * @return the adapter for the <code>target</code>.
   * @generated
   */
  @Override
  public Adapter createAdapter(Notifier target)
  {
    return modelSwitch.doSwitch((EObject)target);
  }


  /**
   * Creates a new adapter for an object of class '{@link uniandes.academia.generator.Root <em>Root</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uniandes.academia.generator.Root
   * @generated
   */
  public Adapter createRootAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uniandes.academia.generator.AbstractElement <em>Abstract Element</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uniandes.academia.generator.AbstractElement
   * @generated
   */
  public Adapter createAbstractElementAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uniandes.academia.generator.PackageDeclaration <em>Package Declaration</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uniandes.academia.generator.PackageDeclaration
   * @generated
   */
  public Adapter createPackageDeclarationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uniandes.academia.generator.Application <em>Application</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uniandes.academia.generator.Application
   * @generated
   */
  public Adapter createApplicationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uniandes.academia.generator.Import <em>Import</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uniandes.academia.generator.Import
   * @generated
   */
  public Adapter createImportAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uniandes.academia.generator.Modules <em>Modules</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uniandes.academia.generator.Modules
   * @generated
   */
  public Adapter createModulesAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uniandes.academia.generator.Services <em>Services</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uniandes.academia.generator.Services
   * @generated
   */
  public Adapter createServicesAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uniandes.academia.generator.Components <em>Components</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uniandes.academia.generator.Components
   * @generated
   */
  public Adapter createComponentsAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uniandes.academia.generator.Models <em>Models</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uniandes.academia.generator.Models
   * @generated
   */
  public Adapter createModelsAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uniandes.academia.generator.Children <em>Children</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uniandes.academia.generator.Children
   * @generated
   */
  public Adapter createChildrenAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uniandes.academia.generator.Configuration <em>Configuration</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uniandes.academia.generator.Configuration
   * @generated
   */
  public Adapter createConfigurationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uniandes.academia.generator.Module <em>Module</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uniandes.academia.generator.Module
   * @generated
   */
  public Adapter createModuleAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uniandes.academia.generator.Model <em>Model</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uniandes.academia.generator.Model
   * @generated
   */
  public Adapter createModelAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uniandes.academia.generator.Attribute <em>Attribute</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uniandes.academia.generator.Attribute
   * @generated
   */
  public Adapter createAttributeAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uniandes.academia.generator.Child <em>Child</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uniandes.academia.generator.Child
   * @generated
   */
  public Adapter createChildAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uniandes.academia.generator.VisualModule <em>Visual Module</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uniandes.academia.generator.VisualModule
   * @generated
   */
  public Adapter createVisualModuleAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uniandes.academia.generator.ContainerModule <em>Container Module</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uniandes.academia.generator.ContainerModule
   * @generated
   */
  public Adapter createContainerModuleAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uniandes.academia.generator.Component <em>Component</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uniandes.academia.generator.Component
   * @generated
   */
  public Adapter createComponentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uniandes.academia.generator.ComponentContainer <em>Component Container</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uniandes.academia.generator.ComponentContainer
   * @generated
   */
  public Adapter createComponentContainerAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uniandes.academia.generator.ComponentBasic <em>Component Basic</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uniandes.academia.generator.ComponentBasic
   * @generated
   */
  public Adapter createComponentBasicAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uniandes.academia.generator.Crud <em>Crud</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uniandes.academia.generator.Crud
   * @generated
   */
  public Adapter createCrudAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uniandes.academia.generator.SearchComboBox <em>Search Combo Box</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uniandes.academia.generator.SearchComboBox
   * @generated
   */
  public Adapter createSearchComboBoxAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uniandes.academia.generator.Service <em>Service</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uniandes.academia.generator.Service
   * @generated
   */
  public Adapter createServiceAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for the default case.
   * <!-- begin-user-doc -->
   * This default implementation returns null.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @generated
   */
  public Adapter createEObjectAdapter()
  {
    return null;
  }

} //GeneratorAdapterFactory
