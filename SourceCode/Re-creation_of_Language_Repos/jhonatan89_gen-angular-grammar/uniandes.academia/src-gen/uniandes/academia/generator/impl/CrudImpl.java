/**
 * generated by Xtext 2.35.0
 */
package uniandes.academia.generator.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import uniandes.academia.generator.Crud;
import uniandes.academia.generator.GeneratorPackage;
import uniandes.academia.generator.Model;
import uniandes.academia.generator.Service;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Crud</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link uniandes.academia.generator.impl.CrudImpl#getName <em>Name</em>}</li>
 *   <li>{@link uniandes.academia.generator.impl.CrudImpl#getModelData <em>Model Data</em>}</li>
 *   <li>{@link uniandes.academia.generator.impl.CrudImpl#isShowAsGallery <em>Show As Gallery</em>}</li>
 *   <li>{@link uniandes.academia.generator.impl.CrudImpl#isEnableMock <em>Enable Mock</em>}</li>
 *   <li>{@link uniandes.academia.generator.impl.CrudImpl#getCreate <em>Create</em>}</li>
 *   <li>{@link uniandes.academia.generator.impl.CrudImpl#getUpdate <em>Update</em>}</li>
 *   <li>{@link uniandes.academia.generator.impl.CrudImpl#getList <em>List</em>}</li>
 *   <li>{@link uniandes.academia.generator.impl.CrudImpl#getListNum <em>List Num</em>}</li>
 *   <li>{@link uniandes.academia.generator.impl.CrudImpl#getDeleteItem <em>Delete Item</em>}</li>
 *   <li>{@link uniandes.academia.generator.impl.CrudImpl#getGet <em>Get</em>}</li>
 * </ul>
 *
 * @generated
 */
public class CrudImpl extends ComponentBasicImpl implements Crud
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getModelData() <em>Model Data</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getModelData()
   * @generated
   * @ordered
   */
  protected Model modelData;

  /**
   * The default value of the '{@link #isShowAsGallery() <em>Show As Gallery</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isShowAsGallery()
   * @generated
   * @ordered
   */
  protected static final boolean SHOW_AS_GALLERY_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isShowAsGallery() <em>Show As Gallery</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isShowAsGallery()
   * @generated
   * @ordered
   */
  protected boolean showAsGallery = SHOW_AS_GALLERY_EDEFAULT;

  /**
   * The default value of the '{@link #isEnableMock() <em>Enable Mock</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isEnableMock()
   * @generated
   * @ordered
   */
  protected static final boolean ENABLE_MOCK_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isEnableMock() <em>Enable Mock</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isEnableMock()
   * @generated
   * @ordered
   */
  protected boolean enableMock = ENABLE_MOCK_EDEFAULT;

  /**
   * The cached value of the '{@link #getCreate() <em>Create</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCreate()
   * @generated
   * @ordered
   */
  protected Service create;

  /**
   * The cached value of the '{@link #getUpdate() <em>Update</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUpdate()
   * @generated
   * @ordered
   */
  protected Service update;

  /**
   * The cached value of the '{@link #getList() <em>List</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getList()
   * @generated
   * @ordered
   */
  protected Service list;

  /**
   * The cached value of the '{@link #getListNum() <em>List Num</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getListNum()
   * @generated
   * @ordered
   */
  protected Service listNum;

  /**
   * The cached value of the '{@link #getDeleteItem() <em>Delete Item</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDeleteItem()
   * @generated
   * @ordered
   */
  protected Service deleteItem;

  /**
   * The cached value of the '{@link #getGet() <em>Get</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getGet()
   * @generated
   * @ordered
   */
  protected Service get;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected CrudImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return GeneratorPackage.Literals.CRUD;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GeneratorPackage.CRUD__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Model getModelData()
  {
    if (modelData != null && modelData.eIsProxy())
    {
      InternalEObject oldModelData = (InternalEObject)modelData;
      modelData = (Model)eResolveProxy(oldModelData);
      if (modelData != oldModelData)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, GeneratorPackage.CRUD__MODEL_DATA, oldModelData, modelData));
      }
    }
    return modelData;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Model basicGetModelData()
  {
    return modelData;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setModelData(Model newModelData)
  {
    Model oldModelData = modelData;
    modelData = newModelData;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GeneratorPackage.CRUD__MODEL_DATA, oldModelData, modelData));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isShowAsGallery()
  {
    return showAsGallery;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setShowAsGallery(boolean newShowAsGallery)
  {
    boolean oldShowAsGallery = showAsGallery;
    showAsGallery = newShowAsGallery;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GeneratorPackage.CRUD__SHOW_AS_GALLERY, oldShowAsGallery, showAsGallery));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isEnableMock()
  {
    return enableMock;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setEnableMock(boolean newEnableMock)
  {
    boolean oldEnableMock = enableMock;
    enableMock = newEnableMock;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GeneratorPackage.CRUD__ENABLE_MOCK, oldEnableMock, enableMock));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Service getCreate()
  {
    if (create != null && create.eIsProxy())
    {
      InternalEObject oldCreate = (InternalEObject)create;
      create = (Service)eResolveProxy(oldCreate);
      if (create != oldCreate)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, GeneratorPackage.CRUD__CREATE, oldCreate, create));
      }
    }
    return create;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Service basicGetCreate()
  {
    return create;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCreate(Service newCreate)
  {
    Service oldCreate = create;
    create = newCreate;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GeneratorPackage.CRUD__CREATE, oldCreate, create));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Service getUpdate()
  {
    if (update != null && update.eIsProxy())
    {
      InternalEObject oldUpdate = (InternalEObject)update;
      update = (Service)eResolveProxy(oldUpdate);
      if (update != oldUpdate)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, GeneratorPackage.CRUD__UPDATE, oldUpdate, update));
      }
    }
    return update;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Service basicGetUpdate()
  {
    return update;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setUpdate(Service newUpdate)
  {
    Service oldUpdate = update;
    update = newUpdate;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GeneratorPackage.CRUD__UPDATE, oldUpdate, update));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Service getList()
  {
    if (list != null && list.eIsProxy())
    {
      InternalEObject oldList = (InternalEObject)list;
      list = (Service)eResolveProxy(oldList);
      if (list != oldList)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, GeneratorPackage.CRUD__LIST, oldList, list));
      }
    }
    return list;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Service basicGetList()
  {
    return list;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setList(Service newList)
  {
    Service oldList = list;
    list = newList;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GeneratorPackage.CRUD__LIST, oldList, list));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Service getListNum()
  {
    if (listNum != null && listNum.eIsProxy())
    {
      InternalEObject oldListNum = (InternalEObject)listNum;
      listNum = (Service)eResolveProxy(oldListNum);
      if (listNum != oldListNum)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, GeneratorPackage.CRUD__LIST_NUM, oldListNum, listNum));
      }
    }
    return listNum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Service basicGetListNum()
  {
    return listNum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setListNum(Service newListNum)
  {
    Service oldListNum = listNum;
    listNum = newListNum;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GeneratorPackage.CRUD__LIST_NUM, oldListNum, listNum));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Service getDeleteItem()
  {
    if (deleteItem != null && deleteItem.eIsProxy())
    {
      InternalEObject oldDeleteItem = (InternalEObject)deleteItem;
      deleteItem = (Service)eResolveProxy(oldDeleteItem);
      if (deleteItem != oldDeleteItem)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, GeneratorPackage.CRUD__DELETE_ITEM, oldDeleteItem, deleteItem));
      }
    }
    return deleteItem;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Service basicGetDeleteItem()
  {
    return deleteItem;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDeleteItem(Service newDeleteItem)
  {
    Service oldDeleteItem = deleteItem;
    deleteItem = newDeleteItem;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GeneratorPackage.CRUD__DELETE_ITEM, oldDeleteItem, deleteItem));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Service getGet()
  {
    if (get != null && get.eIsProxy())
    {
      InternalEObject oldGet = (InternalEObject)get;
      get = (Service)eResolveProxy(oldGet);
      if (get != oldGet)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, GeneratorPackage.CRUD__GET, oldGet, get));
      }
    }
    return get;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Service basicGetGet()
  {
    return get;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setGet(Service newGet)
  {
    Service oldGet = get;
    get = newGet;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GeneratorPackage.CRUD__GET, oldGet, get));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case GeneratorPackage.CRUD__NAME:
        return getName();
      case GeneratorPackage.CRUD__MODEL_DATA:
        if (resolve) return getModelData();
        return basicGetModelData();
      case GeneratorPackage.CRUD__SHOW_AS_GALLERY:
        return isShowAsGallery();
      case GeneratorPackage.CRUD__ENABLE_MOCK:
        return isEnableMock();
      case GeneratorPackage.CRUD__CREATE:
        if (resolve) return getCreate();
        return basicGetCreate();
      case GeneratorPackage.CRUD__UPDATE:
        if (resolve) return getUpdate();
        return basicGetUpdate();
      case GeneratorPackage.CRUD__LIST:
        if (resolve) return getList();
        return basicGetList();
      case GeneratorPackage.CRUD__LIST_NUM:
        if (resolve) return getListNum();
        return basicGetListNum();
      case GeneratorPackage.CRUD__DELETE_ITEM:
        if (resolve) return getDeleteItem();
        return basicGetDeleteItem();
      case GeneratorPackage.CRUD__GET:
        if (resolve) return getGet();
        return basicGetGet();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case GeneratorPackage.CRUD__NAME:
        setName((String)newValue);
        return;
      case GeneratorPackage.CRUD__MODEL_DATA:
        setModelData((Model)newValue);
        return;
      case GeneratorPackage.CRUD__SHOW_AS_GALLERY:
        setShowAsGallery((Boolean)newValue);
        return;
      case GeneratorPackage.CRUD__ENABLE_MOCK:
        setEnableMock((Boolean)newValue);
        return;
      case GeneratorPackage.CRUD__CREATE:
        setCreate((Service)newValue);
        return;
      case GeneratorPackage.CRUD__UPDATE:
        setUpdate((Service)newValue);
        return;
      case GeneratorPackage.CRUD__LIST:
        setList((Service)newValue);
        return;
      case GeneratorPackage.CRUD__LIST_NUM:
        setListNum((Service)newValue);
        return;
      case GeneratorPackage.CRUD__DELETE_ITEM:
        setDeleteItem((Service)newValue);
        return;
      case GeneratorPackage.CRUD__GET:
        setGet((Service)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case GeneratorPackage.CRUD__NAME:
        setName(NAME_EDEFAULT);
        return;
      case GeneratorPackage.CRUD__MODEL_DATA:
        setModelData((Model)null);
        return;
      case GeneratorPackage.CRUD__SHOW_AS_GALLERY:
        setShowAsGallery(SHOW_AS_GALLERY_EDEFAULT);
        return;
      case GeneratorPackage.CRUD__ENABLE_MOCK:
        setEnableMock(ENABLE_MOCK_EDEFAULT);
        return;
      case GeneratorPackage.CRUD__CREATE:
        setCreate((Service)null);
        return;
      case GeneratorPackage.CRUD__UPDATE:
        setUpdate((Service)null);
        return;
      case GeneratorPackage.CRUD__LIST:
        setList((Service)null);
        return;
      case GeneratorPackage.CRUD__LIST_NUM:
        setListNum((Service)null);
        return;
      case GeneratorPackage.CRUD__DELETE_ITEM:
        setDeleteItem((Service)null);
        return;
      case GeneratorPackage.CRUD__GET:
        setGet((Service)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case GeneratorPackage.CRUD__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case GeneratorPackage.CRUD__MODEL_DATA:
        return modelData != null;
      case GeneratorPackage.CRUD__SHOW_AS_GALLERY:
        return showAsGallery != SHOW_AS_GALLERY_EDEFAULT;
      case GeneratorPackage.CRUD__ENABLE_MOCK:
        return enableMock != ENABLE_MOCK_EDEFAULT;
      case GeneratorPackage.CRUD__CREATE:
        return create != null;
      case GeneratorPackage.CRUD__UPDATE:
        return update != null;
      case GeneratorPackage.CRUD__LIST:
        return list != null;
      case GeneratorPackage.CRUD__LIST_NUM:
        return listNum != null;
      case GeneratorPackage.CRUD__DELETE_ITEM:
        return deleteItem != null;
      case GeneratorPackage.CRUD__GET:
        return get != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", showAsGallery: ");
    result.append(showAsGallery);
    result.append(", enableMock: ");
    result.append(enableMock);
    result.append(')');
    return result.toString();
  }

} //CrudImpl
