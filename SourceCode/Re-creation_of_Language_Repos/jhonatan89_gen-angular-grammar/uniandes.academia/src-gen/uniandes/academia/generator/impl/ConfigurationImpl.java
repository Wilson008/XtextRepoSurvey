/**
 * generated by Xtext 2.35.0
 */
package uniandes.academia.generator.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import uniandes.academia.generator.Configuration;
import uniandes.academia.generator.EnumLanguage;
import uniandes.academia.generator.GeneratorPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Configuration</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link uniandes.academia.generator.impl.ConfigurationImpl#getVersion <em>Version</em>}</li>
 *   <li>{@link uniandes.academia.generator.impl.ConfigurationImpl#isOnlyComponents <em>Only Components</em>}</li>
 *   <li>{@link uniandes.academia.generator.impl.ConfigurationImpl#getLanguage <em>Language</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ConfigurationImpl extends MinimalEObjectImpl.Container implements Configuration
{
  /**
   * The default value of the '{@link #getVersion() <em>Version</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVersion()
   * @generated
   * @ordered
   */
  protected static final String VERSION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getVersion() <em>Version</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVersion()
   * @generated
   * @ordered
   */
  protected String version = VERSION_EDEFAULT;

  /**
   * The default value of the '{@link #isOnlyComponents() <em>Only Components</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isOnlyComponents()
   * @generated
   * @ordered
   */
  protected static final boolean ONLY_COMPONENTS_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isOnlyComponents() <em>Only Components</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isOnlyComponents()
   * @generated
   * @ordered
   */
  protected boolean onlyComponents = ONLY_COMPONENTS_EDEFAULT;

  /**
   * The default value of the '{@link #getLanguage() <em>Language</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLanguage()
   * @generated
   * @ordered
   */
  protected static final EnumLanguage LANGUAGE_EDEFAULT = EnumLanguage.ES;

  /**
   * The cached value of the '{@link #getLanguage() <em>Language</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLanguage()
   * @generated
   * @ordered
   */
  protected EnumLanguage language = LANGUAGE_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ConfigurationImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return GeneratorPackage.Literals.CONFIGURATION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getVersion()
  {
    return version;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setVersion(String newVersion)
  {
    String oldVersion = version;
    version = newVersion;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GeneratorPackage.CONFIGURATION__VERSION, oldVersion, version));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isOnlyComponents()
  {
    return onlyComponents;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setOnlyComponents(boolean newOnlyComponents)
  {
    boolean oldOnlyComponents = onlyComponents;
    onlyComponents = newOnlyComponents;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GeneratorPackage.CONFIGURATION__ONLY_COMPONENTS, oldOnlyComponents, onlyComponents));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EnumLanguage getLanguage()
  {
    return language;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setLanguage(EnumLanguage newLanguage)
  {
    EnumLanguage oldLanguage = language;
    language = newLanguage == null ? LANGUAGE_EDEFAULT : newLanguage;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GeneratorPackage.CONFIGURATION__LANGUAGE, oldLanguage, language));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case GeneratorPackage.CONFIGURATION__VERSION:
        return getVersion();
      case GeneratorPackage.CONFIGURATION__ONLY_COMPONENTS:
        return isOnlyComponents();
      case GeneratorPackage.CONFIGURATION__LANGUAGE:
        return getLanguage();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case GeneratorPackage.CONFIGURATION__VERSION:
        setVersion((String)newValue);
        return;
      case GeneratorPackage.CONFIGURATION__ONLY_COMPONENTS:
        setOnlyComponents((Boolean)newValue);
        return;
      case GeneratorPackage.CONFIGURATION__LANGUAGE:
        setLanguage((EnumLanguage)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case GeneratorPackage.CONFIGURATION__VERSION:
        setVersion(VERSION_EDEFAULT);
        return;
      case GeneratorPackage.CONFIGURATION__ONLY_COMPONENTS:
        setOnlyComponents(ONLY_COMPONENTS_EDEFAULT);
        return;
      case GeneratorPackage.CONFIGURATION__LANGUAGE:
        setLanguage(LANGUAGE_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case GeneratorPackage.CONFIGURATION__VERSION:
        return VERSION_EDEFAULT == null ? version != null : !VERSION_EDEFAULT.equals(version);
      case GeneratorPackage.CONFIGURATION__ONLY_COMPONENTS:
        return onlyComponents != ONLY_COMPONENTS_EDEFAULT;
      case GeneratorPackage.CONFIGURATION__LANGUAGE:
        return language != LANGUAGE_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (version: ");
    result.append(version);
    result.append(", onlyComponents: ");
    result.append(onlyComponents);
    result.append(", language: ");
    result.append(language);
    result.append(')');
    return result.toString();
  }

} //ConfigurationImpl
