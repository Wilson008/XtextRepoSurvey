/*
 * generated by Xtext 2.35.0
 */
package org.softlang.megal.language.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.softlang.megal.language.ide.contentassist.antlr.internal.InternalMegalParser;
import org.softlang.megal.language.services.MegalGrammarAccess;

public class MegalParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(MegalGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, MegalGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getMegalFileAccess().getAlternatives_3(), "rule__MegalFile__Alternatives_3");
			builder.put(grammarAccess.getMegalEntityTypeAccess().getAlternatives_2(), "rule__MegalEntityType__Alternatives_2");
			builder.put(grammarAccess.getMegalRelationshipTypeAccess().getAlternatives_5(), "rule__MegalRelationshipType__Alternatives_5");
			builder.put(grammarAccess.getMegalRelationshipTypeAccess().getAlternatives_9(), "rule__MegalRelationshipType__Alternatives_9");
			builder.put(grammarAccess.getQueryDefEntryAccess().getAlternatives(), "rule__QueryDefEntry__Alternatives");
			builder.put(grammarAccess.getQueryRefEntryAccess().getAlternatives(), "rule__QueryRefEntry__Alternatives");
			builder.put(grammarAccess.getMegalFileAccess().getGroup(), "rule__MegalFile__Group__0");
			builder.put(grammarAccess.getMegalFileAccess().getGroup_3_0(), "rule__MegalFile__Group_3_0__0");
			builder.put(grammarAccess.getMegalAnnotationAccess().getGroup(), "rule__MegalAnnotation__Group__0");
			builder.put(grammarAccess.getMegalLinkAccess().getGroup(), "rule__MegalLink__Group__0");
			builder.put(grammarAccess.getMegalLinkAccess().getGroup_2(), "rule__MegalLink__Group_2__0");
			builder.put(grammarAccess.getMegalEntityTypeAccess().getGroup(), "rule__MegalEntityType__Group__0");
			builder.put(grammarAccess.getMegalEntityTypeAccess().getGroup_2_0(), "rule__MegalEntityType__Group_2_0__0");
			builder.put(grammarAccess.getMegalEntityTypeAccess().getGroup_2_1(), "rule__MegalEntityType__Group_2_1__0");
			builder.put(grammarAccess.getMegalRelationshipTypeAccess().getGroup(), "rule__MegalRelationshipType__Group__0");
			builder.put(grammarAccess.getMegalRelationshipTypeAccess().getGroup_4(), "rule__MegalRelationshipType__Group_4__0");
			builder.put(grammarAccess.getMegalRelationshipTypeAccess().getGroup_4_2(), "rule__MegalRelationshipType__Group_4_2__0");
			builder.put(grammarAccess.getMegalRelationshipTypeAccess().getGroup_8(), "rule__MegalRelationshipType__Group_8__0");
			builder.put(grammarAccess.getMegalRelationshipTypeAccess().getGroup_8_2(), "rule__MegalRelationshipType__Group_8_2__0");
			builder.put(grammarAccess.getMegalEntityAccess().getGroup(), "rule__MegalEntity__Group__0");
			builder.put(grammarAccess.getMegalEntityAccess().getGroup_4(), "rule__MegalEntity__Group_4__0");
			builder.put(grammarAccess.getMegalEntityAccess().getGroup_4_2(), "rule__MegalEntity__Group_4_2__0");
			builder.put(grammarAccess.getMegalRelationshipAccess().getGroup(), "rule__MegalRelationship__Group__0");
			builder.put(grammarAccess.getMegalPairAccess().getGroup(), "rule__MegalPair__Group__0");
			builder.put(grammarAccess.getSelectionAccess().getGroup(), "rule__Selection__Group__0");
			builder.put(grammarAccess.getSelectionAccess().getGroup_1(), "rule__Selection__Group_1__0");
			builder.put(grammarAccess.getSelectionAccess().getGroup_2(), "rule__Selection__Group_2__0");
			builder.put(grammarAccess.getQueryStatementAccess().getGroup(), "rule__QueryStatement__Group__0");
			builder.put(grammarAccess.getQueryParamAccess().getGroup(), "rule__QueryParam__Group__0");
			builder.put(grammarAccess.getQueryParamAccess().getGroup_1(), "rule__QueryParam__Group_1__0");
			builder.put(grammarAccess.getQueryPosAccess().getGroup(), "rule__QueryPos__Group__0");
			builder.put(grammarAccess.getMegalFileAccess().getAnnotationsAssignment_0(), "rule__MegalFile__AnnotationsAssignment_0");
			builder.put(grammarAccess.getMegalFileAccess().getNameAssignment_2(), "rule__MegalFile__NameAssignment_2");
			builder.put(grammarAccess.getMegalFileAccess().getImportsAssignment_3_0_1(), "rule__MegalFile__ImportsAssignment_3_0_1");
			builder.put(grammarAccess.getMegalFileAccess().getDeclarationsAssignment_3_1(), "rule__MegalFile__DeclarationsAssignment_3_1");
			builder.put(grammarAccess.getMegalFileAccess().getDeclarationsAssignment_3_2(), "rule__MegalFile__DeclarationsAssignment_3_2");
			builder.put(grammarAccess.getMegalFileAccess().getDeclarationsAssignment_3_3(), "rule__MegalFile__DeclarationsAssignment_3_3");
			builder.put(grammarAccess.getMegalFileAccess().getDeclarationsAssignment_3_4(), "rule__MegalFile__DeclarationsAssignment_3_4");
			builder.put(grammarAccess.getMegalFileAccess().getDeclarationsAssignment_3_5(), "rule__MegalFile__DeclarationsAssignment_3_5");
			builder.put(grammarAccess.getMegalFileAccess().getBindingsAssignment_3_6(), "rule__MegalFile__BindingsAssignment_3_6");
			builder.put(grammarAccess.getMegalAnnotationAccess().getKeyAssignment_0(), "rule__MegalAnnotation__KeyAssignment_0");
			builder.put(grammarAccess.getMegalAnnotationAccess().getSelectionAssignment_1(), "rule__MegalAnnotation__SelectionAssignment_1");
			builder.put(grammarAccess.getMegalLinkAccess().getAnnotationsAssignment_0(), "rule__MegalLink__AnnotationsAssignment_0");
			builder.put(grammarAccess.getMegalLinkAccess().getLinkAssignment_1(), "rule__MegalLink__LinkAssignment_1");
			builder.put(grammarAccess.getMegalLinkAccess().getFirstAssignment_2_1(), "rule__MegalLink__FirstAssignment_2_1");
			builder.put(grammarAccess.getMegalLinkAccess().getSecondAssignment_2_4(), "rule__MegalLink__SecondAssignment_2_4");
			builder.put(grammarAccess.getMegalLinkAccess().getToAssignment_4(), "rule__MegalLink__ToAssignment_4");
			builder.put(grammarAccess.getMegalEntityTypeAccess().getAnnotationsAssignment_0(), "rule__MegalEntityType__AnnotationsAssignment_0");
			builder.put(grammarAccess.getMegalEntityTypeAccess().getNameAssignment_1(), "rule__MegalEntityType__NameAssignment_1");
			builder.put(grammarAccess.getMegalEntityTypeAccess().getSupertypeAssignment_2_0_1(), "rule__MegalEntityType__SupertypeAssignment_2_0_1");
			builder.put(grammarAccess.getMegalRelationshipTypeAccess().getAnnotationsAssignment_0(), "rule__MegalRelationshipType__AnnotationsAssignment_0");
			builder.put(grammarAccess.getMegalRelationshipTypeAccess().getNameAssignment_1(), "rule__MegalRelationshipType__NameAssignment_1");
			builder.put(grammarAccess.getMegalRelationshipTypeAccess().getLeftAssignment_3(), "rule__MegalRelationshipType__LeftAssignment_3");
			builder.put(grammarAccess.getMegalRelationshipTypeAccess().getLeftParamsAssignment_4_1(), "rule__MegalRelationshipType__LeftParamsAssignment_4_1");
			builder.put(grammarAccess.getMegalRelationshipTypeAccess().getLeftParamsAssignment_4_2_1(), "rule__MegalRelationshipType__LeftParamsAssignment_4_2_1");
			builder.put(grammarAccess.getMegalRelationshipTypeAccess().getLeftBothAssignment_5_0(), "rule__MegalRelationshipType__LeftBothAssignment_5_0");
			builder.put(grammarAccess.getMegalRelationshipTypeAccess().getLeftManyAssignment_5_1(), "rule__MegalRelationshipType__LeftManyAssignment_5_1");
			builder.put(grammarAccess.getMegalRelationshipTypeAccess().getRightAssignment_7(), "rule__MegalRelationshipType__RightAssignment_7");
			builder.put(grammarAccess.getMegalRelationshipTypeAccess().getRightParamsAssignment_8_1(), "rule__MegalRelationshipType__RightParamsAssignment_8_1");
			builder.put(grammarAccess.getMegalRelationshipTypeAccess().getRightParamsAssignment_8_2_1(), "rule__MegalRelationshipType__RightParamsAssignment_8_2_1");
			builder.put(grammarAccess.getMegalRelationshipTypeAccess().getRightBothAssignment_9_0(), "rule__MegalRelationshipType__RightBothAssignment_9_0");
			builder.put(grammarAccess.getMegalRelationshipTypeAccess().getRightManyAssignment_9_1(), "rule__MegalRelationshipType__RightManyAssignment_9_1");
			builder.put(grammarAccess.getMegalEntityAccess().getAnnotationsAssignment_0(), "rule__MegalEntity__AnnotationsAssignment_0");
			builder.put(grammarAccess.getMegalEntityAccess().getNameAssignment_1(), "rule__MegalEntity__NameAssignment_1");
			builder.put(grammarAccess.getMegalEntityAccess().getTypeAssignment_3(), "rule__MegalEntity__TypeAssignment_3");
			builder.put(grammarAccess.getMegalEntityAccess().getParamsAssignment_4_1(), "rule__MegalEntity__ParamsAssignment_4_1");
			builder.put(grammarAccess.getMegalEntityAccess().getParamsAssignment_4_2_1(), "rule__MegalEntity__ParamsAssignment_4_2_1");
			builder.put(grammarAccess.getMegalEntityAccess().getManyAssignment_5(), "rule__MegalEntity__ManyAssignment_5");
			builder.put(grammarAccess.getMegalRelationshipAccess().getAnnotationsAssignment_0(), "rule__MegalRelationship__AnnotationsAssignment_0");
			builder.put(grammarAccess.getMegalRelationshipAccess().getLeftAssignment_1(), "rule__MegalRelationship__LeftAssignment_1");
			builder.put(grammarAccess.getMegalRelationshipAccess().getTypeAssignment_2(), "rule__MegalRelationship__TypeAssignment_2");
			builder.put(grammarAccess.getMegalRelationshipAccess().getRightAssignment_3(), "rule__MegalRelationship__RightAssignment_3");
			builder.put(grammarAccess.getMegalPairAccess().getAnnotationsAssignment_0(), "rule__MegalPair__AnnotationsAssignment_0");
			builder.put(grammarAccess.getMegalPairAccess().getSetAssignment_1(), "rule__MegalPair__SetAssignment_1");
			builder.put(grammarAccess.getMegalPairAccess().getFirstAssignment_3(), "rule__MegalPair__FirstAssignment_3");
			builder.put(grammarAccess.getMegalPairAccess().getSecondAssignment_6(), "rule__MegalPair__SecondAssignment_6");
			builder.put(grammarAccess.getSelectionAccess().getSelectAssignment_0(), "rule__Selection__SelectAssignment_0");
			builder.put(grammarAccess.getSelectionAccess().getSelectAssignment_1_1(), "rule__Selection__SelectAssignment_1_1");
			builder.put(grammarAccess.getSelectionAccess().getQueryAssignment_2_2(), "rule__Selection__QueryAssignment_2_2");
			builder.put(grammarAccess.getQueryStatementAccess().getSubjectAssignment_0(), "rule__QueryStatement__SubjectAssignment_0");
			builder.put(grammarAccess.getQueryStatementAccess().getPredicateAssignment_1(), "rule__QueryStatement__PredicateAssignment_1");
			builder.put(grammarAccess.getQueryStatementAccess().getObjectAssignment_2(), "rule__QueryStatement__ObjectAssignment_2");
			builder.put(grammarAccess.getQueryParamAccess().getNameAssignment_0(), "rule__QueryParam__NameAssignment_0");
			builder.put(grammarAccess.getQueryParamAccess().getTypeAssignment_1_1(), "rule__QueryParam__TypeAssignment_1_1");
			builder.put(grammarAccess.getQueryReferenceAccess().getRefAssignment(), "rule__QueryReference__RefAssignment");
			builder.put(grammarAccess.getQueryStringAccess().getValueAssignment(), "rule__QueryString__ValueAssignment");
			builder.put(grammarAccess.getQueryEntityAccess().getEntityAssignment(), "rule__QueryEntity__EntityAssignment");
			builder.put(grammarAccess.getQueryPosAccess().getValueAssignment_1(), "rule__QueryPos__ValueAssignment_1");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private MegalGrammarAccess grammarAccess;

	@Override
	protected InternalMegalParser createParser() {
		InternalMegalParser result = new InternalMegalParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_COMMENT" };
	}

	public MegalGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(MegalGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
