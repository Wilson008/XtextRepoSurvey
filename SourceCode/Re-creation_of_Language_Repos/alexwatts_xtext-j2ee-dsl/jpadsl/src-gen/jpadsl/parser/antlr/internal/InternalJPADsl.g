/*
 * generated by Xtext 2.35.0
 */
grammar InternalJPADsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package jpadsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package jpadsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import jpadsl.services.JPADslGrammarAccess;

}

@parser::members {

 	private JPADslGrammarAccess grammarAccess;

    public InternalJPADslParser(TokenStream input, JPADslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected JPADslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getModelAccess().getElementsAbstractElementParserRuleCall_0());
			}
			lv_elements_0_0=ruleAbstractElement
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getModelRule());
				}
				add(
					$current,
					"elements",
					lv_elements_0_0,
					"jpadsl.JPADsl.AbstractElement");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleAbstractElement
entryRuleAbstractElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAbstractElementRule()); }
	iv_ruleAbstractElement=ruleAbstractElement
	{ $current=$iv_ruleAbstractElement.current; }
	EOF;

// Rule AbstractElement
ruleAbstractElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAbstractElementAccess().getPackageDeclarationParserRuleCall_0());
		}
		this_PackageDeclaration_0=rulePackageDeclaration
		{
			$current = $this_PackageDeclaration_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAbstractElementAccess().getTypeParserRuleCall_1());
		}
		this_Type_1=ruleType
		{
			$current = $this_Type_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAbstractElementAccess().getImportParserRuleCall_2());
		}
		this_Import_2=ruleImport
		{
			$current = $this_Import_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAbstractElementAccess().getRelationshipAttributeParserRuleCall_3());
		}
		this_RelationshipAttribute_3=ruleRelationshipAttribute
		{
			$current = $this_RelationshipAttribute_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleImport
entryRuleImport returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImportRule()); }
	iv_ruleImport=ruleImport
	{ $current=$iv_ruleImport.current; }
	EOF;

// Rule Import
ruleImport returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='import'
		{
			newLeafNode(otherlv_0, grammarAccess.getImportAccess().getImportKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildCardParserRuleCall_1_0());
				}
				lv_importedNamespace_1_0=ruleQualifiedNameWithWildCard
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImportRule());
					}
					set(
						$current,
						"importedNamespace",
						lv_importedNamespace_1_0,
						"jpadsl.JPADsl.QualifiedNameWithWildCard");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulePackageDeclaration
entryRulePackageDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPackageDeclarationRule()); }
	iv_rulePackageDeclaration=rulePackageDeclaration
	{ $current=$iv_rulePackageDeclaration.current; }
	EOF;

// Rule PackageDeclaration
rulePackageDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='package'
		{
			newLeafNode(otherlv_0, grammarAccess.getPackageDeclarationAccess().getPackageKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPackageDeclarationAccess().getNameQualifiedNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPackageDeclarationRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"jpadsl.JPADsl.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getPackageDeclarationAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPackageDeclarationAccess().getDatabaseModesDatabaseModeParserRuleCall_3_0());
				}
				lv_databaseModes_3_0=ruleDatabaseMode
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPackageDeclarationRule());
					}
					add(
						$current,
						"databaseModes",
						lv_databaseModes_3_0,
						"jpadsl.JPADsl.DatabaseMode");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getPackageDeclarationAccess().getElementsAbstractElementParserRuleCall_4_0());
				}
				lv_elements_4_0=ruleAbstractElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPackageDeclarationRule());
					}
					add(
						$current,
						"elements",
						lv_elements_4_0,
						"jpadsl.JPADsl.AbstractElement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getPackageDeclarationAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleType
entryRuleType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeRule()); }
	iv_ruleType=ruleType
	{ $current=$iv_ruleType.current; }
	EOF;

// Rule Type
ruleType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTypeAccess().getEntityParserRuleCall_0());
		}
		this_Entity_0=ruleEntity
		{
			$current = $this_Entity_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeAccess().getDataTypeParserRuleCall_1());
		}
		this_DataType_1=ruleDataType
		{
			$current = $this_DataType_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleDataType
entryRuleDataType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataTypeRule()); }
	iv_ruleDataType=ruleDataType
	{ $current=$iv_ruleDataType.current; }
	EOF;

// Rule DataType
ruleDataType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='datatype'
		{
			newLeafNode(otherlv_0, grammarAccess.getDataTypeAccess().getDatatypeKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDataTypeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDataTypeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleDatabaseMode
entryRuleDatabaseMode returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDatabaseModeRule()); }
	iv_ruleDatabaseMode=ruleDatabaseMode
	{ $current=$iv_ruleDatabaseMode.current; }
	EOF;

// Rule DatabaseMode
ruleDatabaseMode returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='databaseMode'
		{
			newLeafNode(otherlv_0, grammarAccess.getDatabaseModeAccess().getDatabaseModeKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDatabaseModeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDatabaseModeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleEntity
entryRuleEntity returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEntityRule()); }
	iv_ruleEntity=ruleEntity
	{ $current=$iv_ruleEntity.current; }
	EOF;

// Rule Entity
ruleEntity returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='entity'
		{
			newLeafNode(otherlv_0, grammarAccess.getEntityAccess().getEntityKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEntityRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEntityRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getEntityAccess().getDatabaseVendorDatabaseModeCrossReference_2_0());
				}
			)
		)?
		(
			otherlv_3='extends'
			{
				newLeafNode(otherlv_3, grammarAccess.getEntityAccess().getExtendsKeyword_3_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEntityRule());
						}
					}
					otherlv_4=RULE_ID
					{
						newLeafNode(otherlv_4, grammarAccess.getEntityAccess().getSuperTypeEntityCrossReference_3_1_0());
					}
				)
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getEntityAccess().getReadOnlyReadOnlyParserRuleCall_4_0());
				}
				lv_readOnly_5_0=ruleReadOnly
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEntityRule());
					}
					set(
						$current,
						"readOnly",
						lv_readOnly_5_0,
						"jpadsl.JPADsl.ReadOnly");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getEntityAccess().getCacheableCacheableParserRuleCall_5_0());
				}
				lv_cacheable_6_0=ruleCacheable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEntityRule());
					}
					set(
						$current,
						"cacheable",
						lv_cacheable_6_0,
						"jpadsl.JPADsl.Cacheable");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_7='{'
		{
			newLeafNode(otherlv_7, grammarAccess.getEntityAccess().getLeftCurlyBracketKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEntityAccess().getIdentifierIdentifierParserRuleCall_7_0());
				}
				lv_identifier_8_0=ruleIdentifier
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEntityRule());
					}
					set(
						$current,
						"identifier",
						lv_identifier_8_0,
						"jpadsl.JPADsl.Identifier");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getEntityAccess().getImportsImportParserRuleCall_8_0());
				}
				lv_imports_9_0=ruleImport
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEntityRule());
					}
					add(
						$current,
						"imports",
						lv_imports_9_0,
						"jpadsl.JPADsl.Import");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getEntityAccess().getFeaturesFeatureParserRuleCall_9_0());
				}
				lv_features_10_0=ruleFeature
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEntityRule());
					}
					add(
						$current,
						"features",
						lv_features_10_0,
						"jpadsl.JPADsl.Feature");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_11='}'
		{
			newLeafNode(otherlv_11, grammarAccess.getEntityAccess().getRightCurlyBracketKeyword_10());
		}
	)
;

// Entry rule entryRuleReadOnly
entryRuleReadOnly returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReadOnlyRule()); }
	iv_ruleReadOnly=ruleReadOnly
	{ $current=$iv_ruleReadOnly.current; }
	EOF;

// Rule ReadOnly
ruleReadOnly returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='read only'
		{
			newLeafNode(otherlv_0, grammarAccess.getReadOnlyAccess().getReadOnlyKeyword_0());
		}
		(
			(
				lv_tableName_1_0=RULE_STRING
				{
					newLeafNode(lv_tableName_1_0, grammarAccess.getReadOnlyAccess().getTableNameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReadOnlyRule());
					}
					setWithLastConsumed(
						$current,
						"tableName",
						lv_tableName_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			(
				lv_idColumn_2_0=RULE_STRING
				{
					newLeafNode(lv_idColumn_2_0, grammarAccess.getReadOnlyAccess().getIdColumnSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReadOnlyRule());
					}
					setWithLastConsumed(
						$current,
						"idColumn",
						lv_idColumn_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleCacheable
entryRuleCacheable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCacheableRule()); }
	iv_ruleCacheable=ruleCacheable
	{ $current=$iv_ruleCacheable.current; }
	EOF;

// Rule Cacheable
ruleCacheable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='cacheable'
		{
			newLeafNode(otherlv_0, grammarAccess.getCacheableAccess().getCacheableKeyword_0());
		}
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getCacheableAccess().getCacheableAction_1(),
					$current);
			}
		)
	)
;

// Entry rule entryRuleIdentifier
entryRuleIdentifier returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIdentifierRule()); }
	iv_ruleIdentifier=ruleIdentifier
	{ $current=$iv_ruleIdentifier.current; }
	EOF;

// Rule Identifier
ruleIdentifier returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getIdentifierAccess().getUniqueIdentiferColumnParserRuleCall_0());
		}
		this_UniqueIdentiferColumn_0=ruleUniqueIdentiferColumn
		{
			$current = $this_UniqueIdentiferColumn_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getIdentifierAccess().getEmbeddedUniqueIdentiferParserRuleCall_1());
		}
		this_EmbeddedUniqueIdentifer_1=ruleEmbeddedUniqueIdentifer
		{
			$current = $this_EmbeddedUniqueIdentifer_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleUniqueIdentiferColumn
entryRuleUniqueIdentiferColumn returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUniqueIdentiferColumnRule()); }
	iv_ruleUniqueIdentiferColumn=ruleUniqueIdentiferColumn
	{ $current=$iv_ruleUniqueIdentiferColumn.current; }
	EOF;

// Rule UniqueIdentiferColumn
ruleUniqueIdentiferColumn returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='unique id'
		{
			newLeafNode(otherlv_0, grammarAccess.getUniqueIdentiferColumnAccess().getUniqueIdKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getUniqueIdentiferColumnAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUniqueIdentiferColumnRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleEmbeddedUniqueIdentifer
entryRuleEmbeddedUniqueIdentifer returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEmbeddedUniqueIdentiferRule()); }
	iv_ruleEmbeddedUniqueIdentifer=ruleEmbeddedUniqueIdentifer
	{ $current=$iv_ruleEmbeddedUniqueIdentifer.current; }
	EOF;

// Rule EmbeddedUniqueIdentifer
ruleEmbeddedUniqueIdentifer returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='embedded id'
		{
			newLeafNode(otherlv_0, grammarAccess.getEmbeddedUniqueIdentiferAccess().getEmbeddedIdKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getEmbeddedUniqueIdentiferAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEmbeddedUniqueIdentiferRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleFeature
entryRuleFeature returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFeatureRule()); }
	iv_ruleFeature=ruleFeature
	{ $current=$iv_ruleFeature.current; }
	EOF;

// Rule Feature
ruleFeature returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getFeatureAccess().getStructuralFeatureParserRuleCall_0());
		}
		this_StructuralFeature_0=ruleStructuralFeature
		{
			$current = $this_StructuralFeature_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFeatureAccess().getOperationParserRuleCall_1());
		}
		this_Operation_1=ruleOperation
		{
			$current = $this_Operation_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleStructuralFeature
entryRuleStructuralFeature returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStructuralFeatureRule()); }
	iv_ruleStructuralFeature=ruleStructuralFeature
	{ $current=$iv_ruleStructuralFeature.current; }
	EOF;

// Rule StructuralFeature
ruleStructuralFeature returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getStructuralFeatureAccess().getAttributeParserRuleCall_0());
		}
		this_Attribute_0=ruleAttribute
		{
			$current = $this_Attribute_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStructuralFeatureAccess().getReferenceParserRuleCall_1());
		}
		this_Reference_1=ruleReference
		{
			$current = $this_Reference_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleAttribute
entryRuleAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAttributeRule()); }
	iv_ruleAttribute=ruleAttribute
	{ $current=$iv_ruleAttribute.current; }
	EOF;

// Rule Attribute
ruleAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAttributeAccess().getInternalAttributeParserRuleCall_0());
		}
		this_InternalAttribute_0=ruleInternalAttribute
		{
			$current = $this_InternalAttribute_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAttributeAccess().getRelationshipAttributeParserRuleCall_1());
		}
		this_RelationshipAttribute_1=ruleRelationshipAttribute
		{
			$current = $this_RelationshipAttribute_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAttributeAccess().getStaticAttributeParserRuleCall_2());
		}
		this_StaticAttribute_2=ruleStaticAttribute
		{
			$current = $this_StaticAttribute_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleStaticAttribute
entryRuleStaticAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStaticAttributeRule()); }
	iv_ruleStaticAttribute=ruleStaticAttribute
	{ $current=$iv_ruleStaticAttribute.current; }
	EOF;

// Rule StaticAttribute
ruleStaticAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='staticAttribute'
		{
			newLeafNode(otherlv_0, grammarAccess.getStaticAttributeAccess().getStaticAttributeKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getStaticAttributeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStaticAttributeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getStaticAttributeAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStaticAttributeAccess().getTypeTypeRefParserRuleCall_3_0());
				}
				lv_type_3_0=ruleTypeRef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStaticAttributeRule());
					}
					set(
						$current,
						"type",
						lv_type_3_0,
						"jpadsl.JPADsl.TypeRef");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleInternalAttribute
entryRuleInternalAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInternalAttributeRule()); }
	iv_ruleInternalAttribute=ruleInternalAttribute
	{ $current=$iv_ruleInternalAttribute.current; }
	EOF;

// Rule InternalAttribute
ruleInternalAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getInternalAttributeAccess().getReadOnlyInternalAttributeParserRuleCall_0());
		}
		this_ReadOnlyInternalAttribute_0=ruleReadOnlyInternalAttribute
		{
			$current = $this_ReadOnlyInternalAttribute_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInternalAttributeAccess().getUpdatableInternalAttributeParserRuleCall_1());
		}
		this_UpdatableInternalAttribute_1=ruleUpdatableInternalAttribute
		{
			$current = $this_UpdatableInternalAttribute_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInternalAttributeAccess().getTransientAttributeParserRuleCall_2());
		}
		this_TransientAttribute_2=ruleTransientAttribute
		{
			$current = $this_TransientAttribute_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInternalAttributeAccess().getIdAttributeParserRuleCall_3());
		}
		this_IdAttribute_3=ruleIdAttribute
		{
			$current = $this_IdAttribute_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleRelationshipAttribute
entryRuleRelationshipAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRelationshipAttributeRule()); }
	iv_ruleRelationshipAttribute=ruleRelationshipAttribute
	{ $current=$iv_ruleRelationshipAttribute.current; }
	EOF;

// Rule RelationshipAttribute
ruleRelationshipAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getRelationshipAttributeAccess().getSingularRelationshipAttributeParserRuleCall_0());
		}
		this_SingularRelationshipAttribute_0=ruleSingularRelationshipAttribute
		{
			$current = $this_SingularRelationshipAttribute_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getRelationshipAttributeAccess().getMultipleRelationshipAttributeParserRuleCall_1());
		}
		this_MultipleRelationshipAttribute_1=ruleMultipleRelationshipAttribute
		{
			$current = $this_MultipleRelationshipAttribute_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSingularRelationshipAttribute
entryRuleSingularRelationshipAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSingularRelationshipAttributeRule()); }
	iv_ruleSingularRelationshipAttribute=ruleSingularRelationshipAttribute
	{ $current=$iv_ruleSingularRelationshipAttribute.current; }
	EOF;

// Rule SingularRelationshipAttribute
ruleSingularRelationshipAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getSingularRelationshipAttributeAccess().getOneToOneRelationshipAttributeParserRuleCall_0());
		}
		this_OneToOneRelationshipAttribute_0=ruleOneToOneRelationshipAttribute
		{
			$current = $this_OneToOneRelationshipAttribute_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSingularRelationshipAttributeAccess().getOneToOneMappedByRelationshipAttributeParserRuleCall_1());
		}
		this_OneToOneMappedByRelationshipAttribute_1=ruleOneToOneMappedByRelationshipAttribute
		{
			$current = $this_OneToOneMappedByRelationshipAttribute_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSingularRelationshipAttributeAccess().getManyToOneJoinColumnRelationShipAttributeParserRuleCall_2());
		}
		this_ManyToOneJoinColumnRelationShipAttribute_2=ruleManyToOneJoinColumnRelationShipAttribute
		{
			$current = $this_ManyToOneJoinColumnRelationShipAttribute_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSingularRelationshipAttributeAccess().getManyToOneJoinTableRelationShipAttributeParserRuleCall_3());
		}
		this_ManyToOneJoinTableRelationShipAttribute_3=ruleManyToOneJoinTableRelationShipAttribute
		{
			$current = $this_ManyToOneJoinTableRelationShipAttribute_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSingularRelationshipAttributeAccess().getManyToOneMappedByRelationShipAttributeParserRuleCall_4());
		}
		this_ManyToOneMappedByRelationShipAttribute_4=ruleManyToOneMappedByRelationShipAttribute
		{
			$current = $this_ManyToOneMappedByRelationShipAttribute_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleMultipleRelationshipAttribute
entryRuleMultipleRelationshipAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMultipleRelationshipAttributeRule()); }
	iv_ruleMultipleRelationshipAttribute=ruleMultipleRelationshipAttribute
	{ $current=$iv_ruleMultipleRelationshipAttribute.current; }
	EOF;

// Rule MultipleRelationshipAttribute
ruleMultipleRelationshipAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getMultipleRelationshipAttributeAccess().getOneToManyJoinTableRelationshipAttributeParserRuleCall_0());
		}
		this_OneToManyJoinTableRelationshipAttribute_0=ruleOneToManyJoinTableRelationshipAttribute
		{
			$current = $this_OneToManyJoinTableRelationshipAttribute_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getMultipleRelationshipAttributeAccess().getOneToManyMappedByRelationshipAttributeParserRuleCall_1());
		}
		this_OneToManyMappedByRelationshipAttribute_1=ruleOneToManyMappedByRelationshipAttribute
		{
			$current = $this_OneToManyMappedByRelationshipAttribute_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getMultipleRelationshipAttributeAccess().getManyToManyRelationshipAttributeParserRuleCall_2());
		}
		this_ManyToManyRelationshipAttribute_2=ruleManyToManyRelationshipAttribute
		{
			$current = $this_ManyToManyRelationshipAttribute_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getMultipleRelationshipAttributeAccess().getManyToManyMappedByRelationshipAttributeParserRuleCall_3());
		}
		this_ManyToManyMappedByRelationshipAttribute_3=ruleManyToManyMappedByRelationshipAttribute
		{
			$current = $this_ManyToManyMappedByRelationshipAttribute_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getMultipleRelationshipAttributeAccess().getOneToManyJoinColumnRelationshipAttributeParserRuleCall_4());
		}
		this_OneToManyJoinColumnRelationshipAttribute_4=ruleOneToManyJoinColumnRelationshipAttribute
		{
			$current = $this_OneToManyJoinColumnRelationshipAttribute_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleReadOnlyInternalAttribute
entryRuleReadOnlyInternalAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReadOnlyInternalAttributeRule()); }
	iv_ruleReadOnlyInternalAttribute=ruleReadOnlyInternalAttribute
	{ $current=$iv_ruleReadOnlyInternalAttribute.current; }
	EOF;

// Rule ReadOnlyInternalAttribute
ruleReadOnlyInternalAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getReadOnlyInternalAttributeAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReadOnlyInternalAttributeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getReadOnlyInternalAttributeAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getReadOnlyInternalAttributeAccess().getTypeTypeRefParserRuleCall_2_0());
				}
				lv_type_2_0=ruleTypeRef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReadOnlyInternalAttributeRule());
					}
					set(
						$current,
						"type",
						lv_type_2_0,
						"jpadsl.JPADsl.TypeRef");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleUpdatableInternalAttribute
entryRuleUpdatableInternalAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUpdatableInternalAttributeRule()); }
	iv_ruleUpdatableInternalAttribute=ruleUpdatableInternalAttribute
	{ $current=$iv_ruleUpdatableInternalAttribute.current; }
	EOF;

// Rule UpdatableInternalAttribute
ruleUpdatableInternalAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='attribute'
		{
			newLeafNode(otherlv_0, grammarAccess.getUpdatableInternalAttributeAccess().getAttributeKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getUpdatableInternalAttributeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUpdatableInternalAttributeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getUpdatableInternalAttributeAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getUpdatableInternalAttributeAccess().getTypeTypeRefParserRuleCall_3_0());
				}
				lv_type_3_0=ruleTypeRef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUpdatableInternalAttributeRule());
					}
					set(
						$current,
						"type",
						lv_type_3_0,
						"jpadsl.JPADsl.TypeRef");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleTransientAttribute
entryRuleTransientAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTransientAttributeRule()); }
	iv_ruleTransientAttribute=ruleTransientAttribute
	{ $current=$iv_ruleTransientAttribute.current; }
	EOF;

// Rule TransientAttribute
ruleTransientAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='transient'
		{
			newLeafNode(otherlv_0, grammarAccess.getTransientAttributeAccess().getTransientKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getTransientAttributeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTransientAttributeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getTransientAttributeAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTransientAttributeAccess().getTypeTypeRefParserRuleCall_3_0());
				}
				lv_type_3_0=ruleTypeRef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTransientAttributeRule());
					}
					set(
						$current,
						"type",
						lv_type_3_0,
						"jpadsl.JPADsl.TypeRef");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleIdAttribute
entryRuleIdAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIdAttributeRule()); }
	iv_ruleIdAttribute=ruleIdAttribute
	{ $current=$iv_ruleIdAttribute.current; }
	EOF;

// Rule IdAttribute
ruleIdAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='id attribute'
		{
			newLeafNode(otherlv_0, grammarAccess.getIdAttributeAccess().getIdAttributeKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getIdAttributeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIdAttributeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getIdAttributeAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIdAttributeAccess().getTypeTypeRefParserRuleCall_3_0());
				}
				lv_type_3_0=ruleTypeRef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIdAttributeRule());
					}
					set(
						$current,
						"type",
						lv_type_3_0,
						"jpadsl.JPADsl.TypeRef");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleOneToOneRelationshipAttribute
entryRuleOneToOneRelationshipAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOneToOneRelationshipAttributeRule()); }
	iv_ruleOneToOneRelationshipAttribute=ruleOneToOneRelationshipAttribute
	{ $current=$iv_ruleOneToOneRelationshipAttribute.current; }
	EOF;

// Rule OneToOneRelationshipAttribute
ruleOneToOneRelationshipAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='one to one join column'
		{
			newLeafNode(otherlv_0, grammarAccess.getOneToOneRelationshipAttributeAccess().getOneToOneJoinColumnKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getOneToOneRelationshipAttributeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOneToOneRelationshipAttributeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getOneToOneRelationshipAttributeAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOneToOneRelationshipAttributeAccess().getTypeTypeRefParserRuleCall_3_0());
				}
				lv_type_3_0=ruleTypeRef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOneToOneRelationshipAttributeRule());
					}
					set(
						$current,
						"type",
						lv_type_3_0,
						"jpadsl.JPADsl.TypeRef");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_joinColumnOverride_4_0=RULE_STRING
				{
					newLeafNode(lv_joinColumnOverride_4_0, grammarAccess.getOneToOneRelationshipAttributeAccess().getJoinColumnOverrideSTRINGTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOneToOneRelationshipAttributeRule());
					}
					setWithLastConsumed(
						$current,
						"joinColumnOverride",
						lv_joinColumnOverride_4_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)?
	)
;

// Entry rule entryRuleOneToOneMappedByRelationshipAttribute
entryRuleOneToOneMappedByRelationshipAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOneToOneMappedByRelationshipAttributeRule()); }
	iv_ruleOneToOneMappedByRelationshipAttribute=ruleOneToOneMappedByRelationshipAttribute
	{ $current=$iv_ruleOneToOneMappedByRelationshipAttribute.current; }
	EOF;

// Rule OneToOneMappedByRelationshipAttribute
ruleOneToOneMappedByRelationshipAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='one to one mapped by'
		{
			newLeafNode(otherlv_0, grammarAccess.getOneToOneMappedByRelationshipAttributeAccess().getOneToOneMappedByKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getOneToOneMappedByRelationshipAttributeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOneToOneMappedByRelationshipAttributeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getOneToOneMappedByRelationshipAttributeAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOneToOneMappedByRelationshipAttributeAccess().getTypeTypeRefParserRuleCall_3_0());
				}
				lv_type_3_0=ruleTypeRef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOneToOneMappedByRelationshipAttributeRule());
					}
					set(
						$current,
						"type",
						lv_type_3_0,
						"jpadsl.JPADsl.TypeRef");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleOneToManyJoinTableRelationshipAttribute
entryRuleOneToManyJoinTableRelationshipAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOneToManyJoinTableRelationshipAttributeRule()); }
	iv_ruleOneToManyJoinTableRelationshipAttribute=ruleOneToManyJoinTableRelationshipAttribute
	{ $current=$iv_ruleOneToManyJoinTableRelationshipAttribute.current; }
	EOF;

// Rule OneToManyJoinTableRelationshipAttribute
ruleOneToManyJoinTableRelationshipAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='one to many using join table'
		{
			newLeafNode(otherlv_0, grammarAccess.getOneToManyJoinTableRelationshipAttributeAccess().getOneToManyUsingJoinTableKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getOneToManyJoinTableRelationshipAttributeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOneToManyJoinTableRelationshipAttributeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getOneToManyJoinTableRelationshipAttributeAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOneToManyJoinTableRelationshipAttributeAccess().getTypeTypeRefParserRuleCall_3_0());
				}
				lv_type_3_0=ruleTypeRef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOneToManyJoinTableRelationshipAttributeRule());
					}
					set(
						$current,
						"type",
						lv_type_3_0,
						"jpadsl.JPADsl.TypeRef");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleOneToManyJoinColumnRelationshipAttribute
entryRuleOneToManyJoinColumnRelationshipAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOneToManyJoinColumnRelationshipAttributeRule()); }
	iv_ruleOneToManyJoinColumnRelationshipAttribute=ruleOneToManyJoinColumnRelationshipAttribute
	{ $current=$iv_ruleOneToManyJoinColumnRelationshipAttribute.current; }
	EOF;

// Rule OneToManyJoinColumnRelationshipAttribute
ruleOneToManyJoinColumnRelationshipAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='one to many using join column'
		{
			newLeafNode(otherlv_0, grammarAccess.getOneToManyJoinColumnRelationshipAttributeAccess().getOneToManyUsingJoinColumnKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getOneToManyJoinColumnRelationshipAttributeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOneToManyJoinColumnRelationshipAttributeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getOneToManyJoinColumnRelationshipAttributeAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOneToManyJoinColumnRelationshipAttributeAccess().getTypeTypeRefParserRuleCall_3_0());
				}
				lv_type_3_0=ruleTypeRef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOneToManyJoinColumnRelationshipAttributeRule());
					}
					set(
						$current,
						"type",
						lv_type_3_0,
						"jpadsl.JPADsl.TypeRef");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleOneToManyMappedByRelationshipAttribute
entryRuleOneToManyMappedByRelationshipAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOneToManyMappedByRelationshipAttributeRule()); }
	iv_ruleOneToManyMappedByRelationshipAttribute=ruleOneToManyMappedByRelationshipAttribute
	{ $current=$iv_ruleOneToManyMappedByRelationshipAttribute.current; }
	EOF;

// Rule OneToManyMappedByRelationshipAttribute
ruleOneToManyMappedByRelationshipAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='one to many mapped by'
		{
			newLeafNode(otherlv_0, grammarAccess.getOneToManyMappedByRelationshipAttributeAccess().getOneToManyMappedByKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getOneToManyMappedByRelationshipAttributeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOneToManyMappedByRelationshipAttributeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getOneToManyMappedByRelationshipAttributeAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOneToManyMappedByRelationshipAttributeAccess().getTypeTypeRefParserRuleCall_3_0());
				}
				lv_type_3_0=ruleTypeRef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOneToManyMappedByRelationshipAttributeRule());
					}
					set(
						$current,
						"type",
						lv_type_3_0,
						"jpadsl.JPADsl.TypeRef");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleManyToOneJoinColumnRelationShipAttribute
entryRuleManyToOneJoinColumnRelationShipAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getManyToOneJoinColumnRelationShipAttributeRule()); }
	iv_ruleManyToOneJoinColumnRelationShipAttribute=ruleManyToOneJoinColumnRelationShipAttribute
	{ $current=$iv_ruleManyToOneJoinColumnRelationShipAttribute.current; }
	EOF;

// Rule ManyToOneJoinColumnRelationShipAttribute
ruleManyToOneJoinColumnRelationShipAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='many to one using join column'
		{
			newLeafNode(otherlv_0, grammarAccess.getManyToOneJoinColumnRelationShipAttributeAccess().getManyToOneUsingJoinColumnKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getManyToOneJoinColumnRelationShipAttributeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getManyToOneJoinColumnRelationShipAttributeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getManyToOneJoinColumnRelationShipAttributeAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getManyToOneJoinColumnRelationShipAttributeAccess().getTypeTypeRefParserRuleCall_3_0());
				}
				lv_type_3_0=ruleTypeRef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getManyToOneJoinColumnRelationShipAttributeRule());
					}
					set(
						$current,
						"type",
						lv_type_3_0,
						"jpadsl.JPADsl.TypeRef");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_joinColumnOverride_4_0=RULE_STRING
				{
					newLeafNode(lv_joinColumnOverride_4_0, grammarAccess.getManyToOneJoinColumnRelationShipAttributeAccess().getJoinColumnOverrideSTRINGTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getManyToOneJoinColumnRelationShipAttributeRule());
					}
					setWithLastConsumed(
						$current,
						"joinColumnOverride",
						lv_joinColumnOverride_4_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)?
	)
;

// Entry rule entryRuleManyToOneJoinTableRelationShipAttribute
entryRuleManyToOneJoinTableRelationShipAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getManyToOneJoinTableRelationShipAttributeRule()); }
	iv_ruleManyToOneJoinTableRelationShipAttribute=ruleManyToOneJoinTableRelationShipAttribute
	{ $current=$iv_ruleManyToOneJoinTableRelationShipAttribute.current; }
	EOF;

// Rule ManyToOneJoinTableRelationShipAttribute
ruleManyToOneJoinTableRelationShipAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='many to one using join table'
		{
			newLeafNode(otherlv_0, grammarAccess.getManyToOneJoinTableRelationShipAttributeAccess().getManyToOneUsingJoinTableKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getManyToOneJoinTableRelationShipAttributeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getManyToOneJoinTableRelationShipAttributeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getManyToOneJoinTableRelationShipAttributeAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getManyToOneJoinTableRelationShipAttributeAccess().getTypeTypeRefParserRuleCall_3_0());
				}
				lv_type_3_0=ruleTypeRef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getManyToOneJoinTableRelationShipAttributeRule());
					}
					set(
						$current,
						"type",
						lv_type_3_0,
						"jpadsl.JPADsl.TypeRef");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleManyToOneMappedByRelationShipAttribute
entryRuleManyToOneMappedByRelationShipAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getManyToOneMappedByRelationShipAttributeRule()); }
	iv_ruleManyToOneMappedByRelationShipAttribute=ruleManyToOneMappedByRelationShipAttribute
	{ $current=$iv_ruleManyToOneMappedByRelationShipAttribute.current; }
	EOF;

// Rule ManyToOneMappedByRelationShipAttribute
ruleManyToOneMappedByRelationShipAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='many to one mapped by'
		{
			newLeafNode(otherlv_0, grammarAccess.getManyToOneMappedByRelationShipAttributeAccess().getManyToOneMappedByKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getManyToOneMappedByRelationShipAttributeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getManyToOneMappedByRelationShipAttributeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getManyToOneMappedByRelationShipAttributeAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getManyToOneMappedByRelationShipAttributeAccess().getTypeTypeRefParserRuleCall_3_0());
				}
				lv_type_3_0=ruleTypeRef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getManyToOneMappedByRelationShipAttributeRule());
					}
					set(
						$current,
						"type",
						lv_type_3_0,
						"jpadsl.JPADsl.TypeRef");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleManyToManyRelationshipAttribute
entryRuleManyToManyRelationshipAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getManyToManyRelationshipAttributeRule()); }
	iv_ruleManyToManyRelationshipAttribute=ruleManyToManyRelationshipAttribute
	{ $current=$iv_ruleManyToManyRelationshipAttribute.current; }
	EOF;

// Rule ManyToManyRelationshipAttribute
ruleManyToManyRelationshipAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='many to many join table'
		{
			newLeafNode(otherlv_0, grammarAccess.getManyToManyRelationshipAttributeAccess().getManyToManyJoinTableKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getManyToManyRelationshipAttributeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getManyToManyRelationshipAttributeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getManyToManyRelationshipAttributeAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getManyToManyRelationshipAttributeAccess().getTypeTypeRefParserRuleCall_3_0());
				}
				lv_type_3_0=ruleTypeRef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getManyToManyRelationshipAttributeRule());
					}
					set(
						$current,
						"type",
						lv_type_3_0,
						"jpadsl.JPADsl.TypeRef");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleManyToManyMappedByRelationshipAttribute
entryRuleManyToManyMappedByRelationshipAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getManyToManyMappedByRelationshipAttributeRule()); }
	iv_ruleManyToManyMappedByRelationshipAttribute=ruleManyToManyMappedByRelationshipAttribute
	{ $current=$iv_ruleManyToManyMappedByRelationshipAttribute.current; }
	EOF;

// Rule ManyToManyMappedByRelationshipAttribute
ruleManyToManyMappedByRelationshipAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='many to many mapped by'
		{
			newLeafNode(otherlv_0, grammarAccess.getManyToManyMappedByRelationshipAttributeAccess().getManyToManyMappedByKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getManyToManyMappedByRelationshipAttributeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getManyToManyMappedByRelationshipAttributeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getManyToManyMappedByRelationshipAttributeAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getManyToManyMappedByRelationshipAttributeAccess().getTypeTypeRefParserRuleCall_3_0());
				}
				lv_type_3_0=ruleTypeRef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getManyToManyMappedByRelationshipAttributeRule());
					}
					set(
						$current,
						"type",
						lv_type_3_0,
						"jpadsl.JPADsl.TypeRef");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleReference
entryRuleReference returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReferenceRule()); }
	iv_ruleReference=ruleReference
	{ $current=$iv_ruleReference.current; }
	EOF;

// Rule Reference
ruleReference returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ref'
		{
			newLeafNode(otherlv_0, grammarAccess.getReferenceAccess().getRefKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getReferenceAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReferenceRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getReferenceAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getReferenceAccess().getTypeTypeRefParserRuleCall_3_0());
				}
				lv_type_3_0=ruleTypeRef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReferenceRule());
					}
					set(
						$current,
						"type",
						lv_type_3_0,
						"jpadsl.JPADsl.TypeRef");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4='opposite'
			{
				newLeafNode(otherlv_4, grammarAccess.getReferenceAccess().getOppositeKeyword_4_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getReferenceRule());
						}
					}
					otherlv_5=RULE_ID
					{
						newLeafNode(otherlv_5, grammarAccess.getReferenceAccess().getOppositeReferenceCrossReference_4_1_0());
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleOperation
entryRuleOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperationRule()); }
	iv_ruleOperation=ruleOperation
	{ $current=$iv_ruleOperation.current; }
	EOF;

// Rule Operation
ruleOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getOperationAccess().getVisibilityVisibilityEnumRuleCall_0_0());
				}
				lv_visibility_0_0=ruleVisibility
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperationRule());
					}
					set(
						$current,
						"visibility",
						lv_visibility_0_0,
						"jpadsl.JPADsl.Visibility");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_1='op'
		{
			newLeafNode(otherlv_1, grammarAccess.getOperationAccess().getOpKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getOperationAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOperationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3='('
		{
			newLeafNode(otherlv_3, grammarAccess.getOperationAccess().getLeftParenthesisKeyword_3());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getOperationAccess().getParamsParameterParserRuleCall_4_0_0());
					}
					lv_params_4_0=ruleParameter
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOperationRule());
						}
						add(
							$current,
							"params",
							lv_params_4_0,
							"jpadsl.JPADsl.Parameter");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_5=','
				{
					newLeafNode(otherlv_5, grammarAccess.getOperationAccess().getCommaKeyword_4_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getOperationAccess().getParamsParameterParserRuleCall_4_1_1_0());
						}
						lv_params_6_0=ruleParameter
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getOperationRule());
							}
							add(
								$current,
								"params",
								lv_params_6_0,
								"jpadsl.JPADsl.Parameter");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_7=')'
		{
			newLeafNode(otherlv_7, grammarAccess.getOperationAccess().getRightParenthesisKeyword_5());
		}
		otherlv_8=':'
		{
			newLeafNode(otherlv_8, grammarAccess.getOperationAccess().getColonKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOperationAccess().getTypeTypeRefParserRuleCall_7_0());
				}
				lv_type_9_0=ruleTypeRef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperationRule());
					}
					set(
						$current,
						"type",
						lv_type_9_0,
						"jpadsl.JPADsl.TypeRef");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleParameter
entryRuleParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterRule()); }
	iv_ruleParameter=ruleParameter
	{ $current=$iv_ruleParameter.current; }
	EOF;

// Rule Parameter
ruleParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParameterRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getParameterAccess().getTypeTypeRefParserRuleCall_1_0());
				}
				lv_type_1_0=ruleTypeRef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParameterRule());
					}
					set(
						$current,
						"type",
						lv_type_1_0,
						"jpadsl.JPADsl.TypeRef");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleTypeRef
entryRuleTypeRef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeRefRule()); }
	iv_ruleTypeRef=ruleTypeRef
	{ $current=$iv_ruleTypeRef.current; }
	EOF;

// Rule TypeRef
ruleTypeRef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTypeRefRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getTypeRefAccess().getReferencedTypeCrossReference_0_0());
				}
			)
		)
		(
			(
				lv_multi_1_0='*'
				{
					newLeafNode(lv_multi_1_0, grammarAccess.getTypeRefAccess().getMultiAsteriskKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTypeRefRule());
					}
					setWithLastConsumed($current, "multi", lv_multi_1_0 != null, "*");
				}
			)
		)?
	)
;

// Entry rule entryRuleQualifiedNameWithWildCard
entryRuleQualifiedNameWithWildCard returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameWithWildCardRule()); }
	iv_ruleQualifiedNameWithWildCard=ruleQualifiedNameWithWildCard
	{ $current=$iv_ruleQualifiedNameWithWildCard.current.getText(); }
	EOF;

// Rule QualifiedNameWithWildCard
ruleQualifiedNameWithWildCard returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getQualifiedNameWithWildCardAccess().getQualifiedNameParserRuleCall_0());
		}
		this_QualifiedName_0=ruleQualifiedName
		{
			$current.merge(this_QualifiedName_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		(
			kw='.*'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getQualifiedNameWithWildCardAccess().getFullStopAsteriskKeyword_1());
			}
		)?
	)
;

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); }
	iv_ruleQualifiedName=ruleQualifiedName
	{ $current=$iv_ruleQualifiedName.current.getText(); }
	EOF;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0());
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0());
			}
			this_ID_2=RULE_ID
			{
				$current.merge(this_ID_2);
			}
			{
				newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1());
			}
		)*
	)
;

// Rule Visibility
ruleVisibility returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='public'
			{
				$current = grammarAccess.getVisibilityAccess().getPublicEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getVisibilityAccess().getPublicEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='private'
			{
				$current = grammarAccess.getVisibilityAccess().getPrivateEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getVisibilityAccess().getPrivateEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='protected'
			{
				$current = grammarAccess.getVisibilityAccess().getProtectedEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getVisibilityAccess().getProtectedEnumLiteralDeclaration_2());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
