/**
 * generated by Xtext 2.35.0
 */
package jpadsl.jPADsl.impl;

import jpadsl.jPADsl.JPADslPackage;
import jpadsl.jPADsl.ReadOnly;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Read Only</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link jpadsl.jPADsl.impl.ReadOnlyImpl#getTableName <em>Table Name</em>}</li>
 *   <li>{@link jpadsl.jPADsl.impl.ReadOnlyImpl#getIdColumn <em>Id Column</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ReadOnlyImpl extends MinimalEObjectImpl.Container implements ReadOnly
{
  /**
   * The default value of the '{@link #getTableName() <em>Table Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTableName()
   * @generated
   * @ordered
   */
  protected static final String TABLE_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getTableName() <em>Table Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTableName()
   * @generated
   * @ordered
   */
  protected String tableName = TABLE_NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getIdColumn() <em>Id Column</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIdColumn()
   * @generated
   * @ordered
   */
  protected static final String ID_COLUMN_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getIdColumn() <em>Id Column</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIdColumn()
   * @generated
   * @ordered
   */
  protected String idColumn = ID_COLUMN_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ReadOnlyImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return JPADslPackage.Literals.READ_ONLY;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getTableName()
  {
    return tableName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setTableName(String newTableName)
  {
    String oldTableName = tableName;
    tableName = newTableName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, JPADslPackage.READ_ONLY__TABLE_NAME, oldTableName, tableName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getIdColumn()
  {
    return idColumn;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setIdColumn(String newIdColumn)
  {
    String oldIdColumn = idColumn;
    idColumn = newIdColumn;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, JPADslPackage.READ_ONLY__ID_COLUMN, oldIdColumn, idColumn));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case JPADslPackage.READ_ONLY__TABLE_NAME:
        return getTableName();
      case JPADslPackage.READ_ONLY__ID_COLUMN:
        return getIdColumn();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case JPADslPackage.READ_ONLY__TABLE_NAME:
        setTableName((String)newValue);
        return;
      case JPADslPackage.READ_ONLY__ID_COLUMN:
        setIdColumn((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case JPADslPackage.READ_ONLY__TABLE_NAME:
        setTableName(TABLE_NAME_EDEFAULT);
        return;
      case JPADslPackage.READ_ONLY__ID_COLUMN:
        setIdColumn(ID_COLUMN_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case JPADslPackage.READ_ONLY__TABLE_NAME:
        return TABLE_NAME_EDEFAULT == null ? tableName != null : !TABLE_NAME_EDEFAULT.equals(tableName);
      case JPADslPackage.READ_ONLY__ID_COLUMN:
        return ID_COLUMN_EDEFAULT == null ? idColumn != null : !ID_COLUMN_EDEFAULT.equals(idColumn);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (tableName: ");
    result.append(tableName);
    result.append(", idColumn: ");
    result.append(idColumn);
    result.append(')');
    return result.toString();
  }

} //ReadOnlyImpl
