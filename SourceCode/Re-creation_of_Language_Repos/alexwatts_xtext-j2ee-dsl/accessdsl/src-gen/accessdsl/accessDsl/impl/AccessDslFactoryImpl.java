/**
 * generated by Xtext 2.35.0
 */
package accessdsl.accessDsl.impl;

import accessdsl.accessDsl.*;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class AccessDslFactoryImpl extends EFactoryImpl implements AccessDslFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static AccessDslFactory init()
  {
    try
    {
      AccessDslFactory theAccessDslFactory = (AccessDslFactory)EPackage.Registry.INSTANCE.getEFactory(AccessDslPackage.eNS_URI);
      if (theAccessDslFactory != null)
      {
        return theAccessDslFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new AccessDslFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AccessDslFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case AccessDslPackage.MODEL: return createModel();
      case AccessDslPackage.IMPORT: return createImport();
      case AccessDslPackage.UNIT: return createUnit();
      case AccessDslPackage.PACKAGE_NAME: return createPackageName();
      case AccessDslPackage.CONTAINER: return createContainer();
      case AccessDslPackage.CONTAINER_ELEMENT: return createContainerElement();
      case AccessDslPackage.CONTAINED_ENTITY: return createContainedEntity();
      case AccessDslPackage.QUERY_AND_TYPE_MAPPING: return createQueryAndTypeMapping();
      case AccessDslPackage.QUERY_MAPPING: return createQueryMapping();
      case AccessDslPackage.SINGLE_RESULT_QUERY_MAPPING: return createSingleResultQueryMapping();
      case AccessDslPackage.MULTIPLE_RESULT_QUERY_MAPPING: return createMultipleResultQueryMapping();
      case AccessDslPackage.STATE_ADJUSTMENT: return createStateAdjustment();
      case AccessDslPackage.STATE_OPERATION: return createStateOperation();
      case AccessDslPackage.PERSIST_OPERATION: return createPersistOperation();
      case AccessDslPackage.PERSIST_AND_ASSOCIATE_OPERATION: return createPersistAndAssociateOperation();
      case AccessDslPackage.ASSOCIATE_OPERATION: return createAssociateOperation();
      case AccessDslPackage.UPDATE_OPERATION: return createUpdateOperation();
      case AccessDslPackage.DELETE_OPERATION: return createDeleteOperation();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Model createModel()
  {
    ModelImpl model = new ModelImpl();
    return model;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Import createImport()
  {
    ImportImpl import_ = new ImportImpl();
    return import_;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Unit createUnit()
  {
    UnitImpl unit = new UnitImpl();
    return unit;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PackageName createPackageName()
  {
    PackageNameImpl packageName = new PackageNameImpl();
    return packageName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public accessdsl.accessDsl.Container createContainer()
  {
    ContainerImpl container = new ContainerImpl();
    return container;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ContainerElement createContainerElement()
  {
    ContainerElementImpl containerElement = new ContainerElementImpl();
    return containerElement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ContainedEntity createContainedEntity()
  {
    ContainedEntityImpl containedEntity = new ContainedEntityImpl();
    return containedEntity;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public QueryAndTypeMapping createQueryAndTypeMapping()
  {
    QueryAndTypeMappingImpl queryAndTypeMapping = new QueryAndTypeMappingImpl();
    return queryAndTypeMapping;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public QueryMapping createQueryMapping()
  {
    QueryMappingImpl queryMapping = new QueryMappingImpl();
    return queryMapping;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SingleResultQueryMapping createSingleResultQueryMapping()
  {
    SingleResultQueryMappingImpl singleResultQueryMapping = new SingleResultQueryMappingImpl();
    return singleResultQueryMapping;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MultipleResultQueryMapping createMultipleResultQueryMapping()
  {
    MultipleResultQueryMappingImpl multipleResultQueryMapping = new MultipleResultQueryMappingImpl();
    return multipleResultQueryMapping;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public StateAdjustment createStateAdjustment()
  {
    StateAdjustmentImpl stateAdjustment = new StateAdjustmentImpl();
    return stateAdjustment;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public StateOperation createStateOperation()
  {
    StateOperationImpl stateOperation = new StateOperationImpl();
    return stateOperation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PersistOperation createPersistOperation()
  {
    PersistOperationImpl persistOperation = new PersistOperationImpl();
    return persistOperation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PersistAndAssociateOperation createPersistAndAssociateOperation()
  {
    PersistAndAssociateOperationImpl persistAndAssociateOperation = new PersistAndAssociateOperationImpl();
    return persistAndAssociateOperation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AssociateOperation createAssociateOperation()
  {
    AssociateOperationImpl associateOperation = new AssociateOperationImpl();
    return associateOperation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public UpdateOperation createUpdateOperation()
  {
    UpdateOperationImpl updateOperation = new UpdateOperationImpl();
    return updateOperation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DeleteOperation createDeleteOperation()
  {
    DeleteOperationImpl deleteOperation = new DeleteOperationImpl();
    return deleteOperation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AccessDslPackage getAccessDslPackage()
  {
    return (AccessDslPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static AccessDslPackage getPackage()
  {
    return AccessDslPackage.eINSTANCE;
  }

} //AccessDslFactoryImpl
