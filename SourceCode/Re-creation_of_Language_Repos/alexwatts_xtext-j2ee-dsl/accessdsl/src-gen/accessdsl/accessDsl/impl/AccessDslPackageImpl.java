/**
 * generated by Xtext 2.35.0
 */
package accessdsl.accessDsl.impl;

import accessdsl.accessDsl.AccessDslFactory;
import accessdsl.accessDsl.AccessDslPackage;
import accessdsl.accessDsl.AssociateOperation;
import accessdsl.accessDsl.ContainedEntity;
import accessdsl.accessDsl.ContainerElement;
import accessdsl.accessDsl.DeleteOperation;
import accessdsl.accessDsl.Import;
import accessdsl.accessDsl.Model;
import accessdsl.accessDsl.MultipleResultQueryMapping;
import accessdsl.accessDsl.PackageName;
import accessdsl.accessDsl.PersistAndAssociateOperation;
import accessdsl.accessDsl.PersistOperation;
import accessdsl.accessDsl.QueryAndTypeMapping;
import accessdsl.accessDsl.QueryMapping;
import accessdsl.accessDsl.SingleResultQueryMapping;
import accessdsl.accessDsl.StateAdjustment;
import accessdsl.accessDsl.StateOperation;
import accessdsl.accessDsl.Unit;
import accessdsl.accessDsl.UpdateOperation;

import jpadsl.jPADsl.JPADslPackage;

import jpaqldsl.jPAQLDsl.JPAQLDslPackage;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

import org.eclipse.xtext.common.types.TypesPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class AccessDslPackageImpl extends EPackageImpl implements AccessDslPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass modelEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass importEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass unitEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass packageNameEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass containerEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass containerElementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass containedEntityEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass queryAndTypeMappingEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass queryMappingEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass singleResultQueryMappingEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass multipleResultQueryMappingEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass stateAdjustmentEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass stateOperationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass persistOperationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass persistAndAssociateOperationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass associateOperationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass updateOperationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass deleteOperationEClass = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see accessdsl.accessDsl.AccessDslPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private AccessDslPackageImpl()
  {
    super(eNS_URI, AccessDslFactory.eINSTANCE);
  }
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   *
   * <p>This method is used to initialize {@link AccessDslPackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static AccessDslPackage init()
  {
    if (isInited) return (AccessDslPackage)EPackage.Registry.INSTANCE.getEPackage(AccessDslPackage.eNS_URI);

    // Obtain or create and register package
    Object registeredAccessDslPackage = EPackage.Registry.INSTANCE.get(eNS_URI);
    AccessDslPackageImpl theAccessDslPackage = registeredAccessDslPackage instanceof AccessDslPackageImpl ? (AccessDslPackageImpl)registeredAccessDslPackage : new AccessDslPackageImpl();

    isInited = true;

    // Initialize simple dependencies
    JPADslPackage.eINSTANCE.eClass();
    JPAQLDslPackage.eINSTANCE.eClass();
    TypesPackage.eINSTANCE.eClass();

    // Create package meta-data objects
    theAccessDslPackage.createPackageContents();

    // Initialize created meta-data
    theAccessDslPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theAccessDslPackage.freeze();

    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(AccessDslPackage.eNS_URI, theAccessDslPackage);
    return theAccessDslPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getModel()
  {
    return modelEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getModel_Imports()
  {
    return (EReference)modelEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getModel_Unit()
  {
    return (EReference)modelEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getImport()
  {
    return importEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getImport_ImportedNamespace()
  {
    return (EAttribute)importEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getUnit()
  {
    return unitEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getUnit_Name()
  {
    return (EAttribute)unitEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getUnit_Package()
  {
    return (EReference)unitEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getUnit_Containers()
  {
    return (EReference)unitEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getUnit_Querymapping()
  {
    return (EReference)unitEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getUnit_StateAdjustment()
  {
    return (EReference)unitEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPackageName()
  {
    return packageNameEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getPackageName_Name()
  {
    return (EAttribute)packageNameEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getContainer()
  {
    return containerEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getContainer_Name()
  {
    return (EAttribute)containerEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getContainer_ContainerElements()
  {
    return (EReference)containerEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getContainerElement()
  {
    return containerElementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getContainerElement_Entity()
  {
    return (EReference)containerElementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getContainerElement_Alias()
  {
    return (EAttribute)containerElementEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getContainedEntity()
  {
    return containedEntityEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getContainedEntity_Contained()
  {
    return (EReference)containedEntityEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getQueryAndTypeMapping()
  {
    return queryAndTypeMappingEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getQueryAndTypeMapping_Name()
  {
    return (EAttribute)queryAndTypeMappingEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getQueryAndTypeMapping_Imports()
  {
    return (EReference)queryAndTypeMappingEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getQueryAndTypeMapping_Query()
  {
    return (EReference)queryAndTypeMappingEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getQueryAndTypeMapping_TypeMapping()
  {
    return (EReference)queryAndTypeMappingEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getQueryAndTypeMapping_QueryParameters()
  {
    return (EReference)queryAndTypeMappingEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getQueryMapping()
  {
    return queryMappingEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getQueryMapping_NamedQuery()
  {
    return (EReference)queryMappingEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSingleResultQueryMapping()
  {
    return singleResultQueryMappingEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getMultipleResultQueryMapping()
  {
    return multipleResultQueryMappingEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getStateAdjustment()
  {
    return stateAdjustmentEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getStateAdjustment_Name()
  {
    return (EAttribute)stateAdjustmentEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getStateAdjustment_Imports()
  {
    return (EReference)stateAdjustmentEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getStateAdjustment_StateOperation()
  {
    return (EReference)stateAdjustmentEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getStateOperation()
  {
    return stateOperationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPersistOperation()
  {
    return persistOperationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPersistOperation_This()
  {
    return (EReference)persistOperationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPersistAndAssociateOperation()
  {
    return persistAndAssociateOperationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPersistAndAssociateOperation_NewEntity()
  {
    return (EReference)persistAndAssociateOperationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPersistAndAssociateOperation_Associaltion()
  {
    return (EReference)persistAndAssociateOperationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPersistAndAssociateOperation_ExistingEntity()
  {
    return (EReference)persistAndAssociateOperationEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getAssociateOperation()
  {
    return associateOperationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getAssociateOperation_This()
  {
    return (EReference)associateOperationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getAssociateOperation_Associaltion()
  {
    return (EReference)associateOperationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getAssociateOperation_That()
  {
    return (EReference)associateOperationEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getUpdateOperation()
  {
    return updateOperationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getUpdateOperation_This()
  {
    return (EReference)updateOperationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getDeleteOperation()
  {
    return deleteOperationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getDeleteOperation_This()
  {
    return (EReference)deleteOperationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AccessDslFactory getAccessDslFactory()
  {
    return (AccessDslFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    modelEClass = createEClass(MODEL);
    createEReference(modelEClass, MODEL__IMPORTS);
    createEReference(modelEClass, MODEL__UNIT);

    importEClass = createEClass(IMPORT);
    createEAttribute(importEClass, IMPORT__IMPORTED_NAMESPACE);

    unitEClass = createEClass(UNIT);
    createEAttribute(unitEClass, UNIT__NAME);
    createEReference(unitEClass, UNIT__PACKAGE);
    createEReference(unitEClass, UNIT__CONTAINERS);
    createEReference(unitEClass, UNIT__QUERYMAPPING);
    createEReference(unitEClass, UNIT__STATE_ADJUSTMENT);

    packageNameEClass = createEClass(PACKAGE_NAME);
    createEAttribute(packageNameEClass, PACKAGE_NAME__NAME);

    containerEClass = createEClass(CONTAINER);
    createEAttribute(containerEClass, CONTAINER__NAME);
    createEReference(containerEClass, CONTAINER__CONTAINER_ELEMENTS);

    containerElementEClass = createEClass(CONTAINER_ELEMENT);
    createEReference(containerElementEClass, CONTAINER_ELEMENT__ENTITY);
    createEAttribute(containerElementEClass, CONTAINER_ELEMENT__ALIAS);

    containedEntityEClass = createEClass(CONTAINED_ENTITY);
    createEReference(containedEntityEClass, CONTAINED_ENTITY__CONTAINED);

    queryAndTypeMappingEClass = createEClass(QUERY_AND_TYPE_MAPPING);
    createEAttribute(queryAndTypeMappingEClass, QUERY_AND_TYPE_MAPPING__NAME);
    createEReference(queryAndTypeMappingEClass, QUERY_AND_TYPE_MAPPING__IMPORTS);
    createEReference(queryAndTypeMappingEClass, QUERY_AND_TYPE_MAPPING__QUERY);
    createEReference(queryAndTypeMappingEClass, QUERY_AND_TYPE_MAPPING__TYPE_MAPPING);
    createEReference(queryAndTypeMappingEClass, QUERY_AND_TYPE_MAPPING__QUERY_PARAMETERS);

    queryMappingEClass = createEClass(QUERY_MAPPING);
    createEReference(queryMappingEClass, QUERY_MAPPING__NAMED_QUERY);

    singleResultQueryMappingEClass = createEClass(SINGLE_RESULT_QUERY_MAPPING);

    multipleResultQueryMappingEClass = createEClass(MULTIPLE_RESULT_QUERY_MAPPING);

    stateAdjustmentEClass = createEClass(STATE_ADJUSTMENT);
    createEAttribute(stateAdjustmentEClass, STATE_ADJUSTMENT__NAME);
    createEReference(stateAdjustmentEClass, STATE_ADJUSTMENT__IMPORTS);
    createEReference(stateAdjustmentEClass, STATE_ADJUSTMENT__STATE_OPERATION);

    stateOperationEClass = createEClass(STATE_OPERATION);

    persistOperationEClass = createEClass(PERSIST_OPERATION);
    createEReference(persistOperationEClass, PERSIST_OPERATION__THIS);

    persistAndAssociateOperationEClass = createEClass(PERSIST_AND_ASSOCIATE_OPERATION);
    createEReference(persistAndAssociateOperationEClass, PERSIST_AND_ASSOCIATE_OPERATION__NEW_ENTITY);
    createEReference(persistAndAssociateOperationEClass, PERSIST_AND_ASSOCIATE_OPERATION__ASSOCIALTION);
    createEReference(persistAndAssociateOperationEClass, PERSIST_AND_ASSOCIATE_OPERATION__EXISTING_ENTITY);

    associateOperationEClass = createEClass(ASSOCIATE_OPERATION);
    createEReference(associateOperationEClass, ASSOCIATE_OPERATION__THIS);
    createEReference(associateOperationEClass, ASSOCIATE_OPERATION__ASSOCIALTION);
    createEReference(associateOperationEClass, ASSOCIATE_OPERATION__THAT);

    updateOperationEClass = createEClass(UPDATE_OPERATION);
    createEReference(updateOperationEClass, UPDATE_OPERATION__THIS);

    deleteOperationEClass = createEClass(DELETE_OPERATION);
    createEReference(deleteOperationEClass, DELETE_OPERATION__THIS);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Obtain other dependent packages
    JPADslPackage theJPADslPackage = (JPADslPackage)EPackage.Registry.INSTANCE.getEPackage(JPADslPackage.eNS_URI);
    TypesPackage theTypesPackage = (TypesPackage)EPackage.Registry.INSTANCE.getEPackage(TypesPackage.eNS_URI);
    JPAQLDslPackage theJPAQLDslPackage = (JPAQLDslPackage)EPackage.Registry.INSTANCE.getEPackage(JPAQLDslPackage.eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes
    singleResultQueryMappingEClass.getESuperTypes().add(this.getQueryMapping());
    multipleResultQueryMappingEClass.getESuperTypes().add(this.getQueryMapping());
    persistOperationEClass.getESuperTypes().add(this.getStateOperation());
    persistAndAssociateOperationEClass.getESuperTypes().add(this.getStateOperation());
    associateOperationEClass.getESuperTypes().add(this.getStateOperation());
    updateOperationEClass.getESuperTypes().add(this.getStateOperation());
    deleteOperationEClass.getESuperTypes().add(this.getStateOperation());

    // Initialize classes and features; add operations and parameters
    initEClass(modelEClass, Model.class, "Model", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getModel_Imports(), this.getImport(), null, "imports", null, 0, -1, Model.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getModel_Unit(), this.getUnit(), null, "unit", null, 0, 1, Model.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(importEClass, Import.class, "Import", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getImport_ImportedNamespace(), ecorePackage.getEString(), "importedNamespace", null, 0, 1, Import.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(unitEClass, Unit.class, "Unit", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getUnit_Name(), ecorePackage.getEString(), "name", null, 0, 1, Unit.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getUnit_Package(), this.getPackageName(), null, "package", null, 0, 1, Unit.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getUnit_Containers(), this.getContainer(), null, "containers", null, 0, -1, Unit.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getUnit_Querymapping(), this.getQueryAndTypeMapping(), null, "querymapping", null, 0, -1, Unit.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getUnit_StateAdjustment(), this.getStateAdjustment(), null, "stateAdjustment", null, 0, -1, Unit.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(packageNameEClass, PackageName.class, "PackageName", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getPackageName_Name(), ecorePackage.getEString(), "name", null, 0, 1, PackageName.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(containerEClass, accessdsl.accessDsl.Container.class, "Container", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getContainer_Name(), ecorePackage.getEString(), "name", null, 0, 1, accessdsl.accessDsl.Container.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getContainer_ContainerElements(), this.getContainerElement(), null, "containerElements", null, 0, -1, accessdsl.accessDsl.Container.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(containerElementEClass, ContainerElement.class, "ContainerElement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getContainerElement_Entity(), this.getContainedEntity(), null, "entity", null, 0, 1, ContainerElement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getContainerElement_Alias(), ecorePackage.getEString(), "alias", null, 0, 1, ContainerElement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(containedEntityEClass, ContainedEntity.class, "ContainedEntity", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getContainedEntity_Contained(), theJPADslPackage.getEntity(), null, "contained", null, 0, 1, ContainedEntity.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(queryAndTypeMappingEClass, QueryAndTypeMapping.class, "QueryAndTypeMapping", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getQueryAndTypeMapping_Name(), ecorePackage.getEString(), "name", null, 0, 1, QueryAndTypeMapping.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getQueryAndTypeMapping_Imports(), this.getImport(), null, "imports", null, 0, -1, QueryAndTypeMapping.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getQueryAndTypeMapping_Query(), this.getQueryMapping(), null, "query", null, 0, 1, QueryAndTypeMapping.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getQueryAndTypeMapping_TypeMapping(), this.getContainer(), null, "typeMapping", null, 0, 1, QueryAndTypeMapping.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getQueryAndTypeMapping_QueryParameters(), theTypesPackage.getJvmFormalParameter(), null, "queryParameters", null, 0, -1, QueryAndTypeMapping.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(queryMappingEClass, QueryMapping.class, "QueryMapping", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getQueryMapping_NamedQuery(), theJPAQLDslPackage.getNamedQuery(), null, "namedQuery", null, 0, 1, QueryMapping.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(singleResultQueryMappingEClass, SingleResultQueryMapping.class, "SingleResultQueryMapping", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(multipleResultQueryMappingEClass, MultipleResultQueryMapping.class, "MultipleResultQueryMapping", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(stateAdjustmentEClass, StateAdjustment.class, "StateAdjustment", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getStateAdjustment_Name(), ecorePackage.getEString(), "name", null, 0, 1, StateAdjustment.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getStateAdjustment_Imports(), this.getImport(), null, "imports", null, 0, -1, StateAdjustment.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getStateAdjustment_StateOperation(), this.getStateOperation(), null, "stateOperation", null, 0, 1, StateAdjustment.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(stateOperationEClass, StateOperation.class, "StateOperation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(persistOperationEClass, PersistOperation.class, "PersistOperation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getPersistOperation_This(), theJPADslPackage.getEntity(), null, "this", null, 0, 1, PersistOperation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(persistAndAssociateOperationEClass, PersistAndAssociateOperation.class, "PersistAndAssociateOperation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getPersistAndAssociateOperation_NewEntity(), theJPADslPackage.getEntity(), null, "newEntity", null, 0, 1, PersistAndAssociateOperation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getPersistAndAssociateOperation_Associaltion(), theJPADslPackage.getRelationshipAttribute(), null, "associaltion", null, 0, 1, PersistAndAssociateOperation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getPersistAndAssociateOperation_ExistingEntity(), theJPADslPackage.getEntity(), null, "existingEntity", null, 0, 1, PersistAndAssociateOperation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(associateOperationEClass, AssociateOperation.class, "AssociateOperation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getAssociateOperation_This(), theJPADslPackage.getEntity(), null, "this", null, 0, 1, AssociateOperation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getAssociateOperation_Associaltion(), theJPADslPackage.getRelationshipAttribute(), null, "associaltion", null, 0, 1, AssociateOperation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getAssociateOperation_That(), theJPADslPackage.getEntity(), null, "that", null, 0, 1, AssociateOperation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(updateOperationEClass, UpdateOperation.class, "UpdateOperation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getUpdateOperation_This(), theJPADslPackage.getEntity(), null, "this", null, 0, 1, UpdateOperation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(deleteOperationEClass, DeleteOperation.class, "DeleteOperation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getDeleteOperation_This(), theJPADslPackage.getEntity(), null, "this", null, 0, 1, DeleteOperation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Create resource
    createResource(eNS_URI);
  }

} //AccessDslPackageImpl
