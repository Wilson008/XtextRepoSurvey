/**
 * generated by Xtext 2.35.0
 */
package accessdsl.accessDsl.impl;

import accessdsl.accessDsl.AccessDslPackage;
import accessdsl.accessDsl.PersistAndAssociateOperation;

import jpadsl.jPADsl.Entity;
import jpadsl.jPADsl.RelationshipAttribute;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Persist And Associate Operation</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link accessdsl.accessDsl.impl.PersistAndAssociateOperationImpl#getNewEntity <em>New Entity</em>}</li>
 *   <li>{@link accessdsl.accessDsl.impl.PersistAndAssociateOperationImpl#getAssocialtion <em>Associaltion</em>}</li>
 *   <li>{@link accessdsl.accessDsl.impl.PersistAndAssociateOperationImpl#getExistingEntity <em>Existing Entity</em>}</li>
 * </ul>
 *
 * @generated
 */
public class PersistAndAssociateOperationImpl extends StateOperationImpl implements PersistAndAssociateOperation
{
  /**
   * The cached value of the '{@link #getNewEntity() <em>New Entity</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNewEntity()
   * @generated
   * @ordered
   */
  protected Entity newEntity;

  /**
   * The cached value of the '{@link #getAssocialtion() <em>Associaltion</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAssocialtion()
   * @generated
   * @ordered
   */
  protected RelationshipAttribute associaltion;

  /**
   * The cached value of the '{@link #getExistingEntity() <em>Existing Entity</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExistingEntity()
   * @generated
   * @ordered
   */
  protected Entity existingEntity;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected PersistAndAssociateOperationImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return AccessDslPackage.Literals.PERSIST_AND_ASSOCIATE_OPERATION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Entity getNewEntity()
  {
    if (newEntity != null && newEntity.eIsProxy())
    {
      InternalEObject oldNewEntity = (InternalEObject)newEntity;
      newEntity = (Entity)eResolveProxy(oldNewEntity);
      if (newEntity != oldNewEntity)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, AccessDslPackage.PERSIST_AND_ASSOCIATE_OPERATION__NEW_ENTITY, oldNewEntity, newEntity));
      }
    }
    return newEntity;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Entity basicGetNewEntity()
  {
    return newEntity;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setNewEntity(Entity newNewEntity)
  {
    Entity oldNewEntity = newEntity;
    newEntity = newNewEntity;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AccessDslPackage.PERSIST_AND_ASSOCIATE_OPERATION__NEW_ENTITY, oldNewEntity, newEntity));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public RelationshipAttribute getAssocialtion()
  {
    if (associaltion != null && associaltion.eIsProxy())
    {
      InternalEObject oldAssocialtion = (InternalEObject)associaltion;
      associaltion = (RelationshipAttribute)eResolveProxy(oldAssocialtion);
      if (associaltion != oldAssocialtion)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, AccessDslPackage.PERSIST_AND_ASSOCIATE_OPERATION__ASSOCIALTION, oldAssocialtion, associaltion));
      }
    }
    return associaltion;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RelationshipAttribute basicGetAssocialtion()
  {
    return associaltion;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAssocialtion(RelationshipAttribute newAssocialtion)
  {
    RelationshipAttribute oldAssocialtion = associaltion;
    associaltion = newAssocialtion;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AccessDslPackage.PERSIST_AND_ASSOCIATE_OPERATION__ASSOCIALTION, oldAssocialtion, associaltion));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Entity getExistingEntity()
  {
    if (existingEntity != null && existingEntity.eIsProxy())
    {
      InternalEObject oldExistingEntity = (InternalEObject)existingEntity;
      existingEntity = (Entity)eResolveProxy(oldExistingEntity);
      if (existingEntity != oldExistingEntity)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, AccessDslPackage.PERSIST_AND_ASSOCIATE_OPERATION__EXISTING_ENTITY, oldExistingEntity, existingEntity));
      }
    }
    return existingEntity;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Entity basicGetExistingEntity()
  {
    return existingEntity;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setExistingEntity(Entity newExistingEntity)
  {
    Entity oldExistingEntity = existingEntity;
    existingEntity = newExistingEntity;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AccessDslPackage.PERSIST_AND_ASSOCIATE_OPERATION__EXISTING_ENTITY, oldExistingEntity, existingEntity));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case AccessDslPackage.PERSIST_AND_ASSOCIATE_OPERATION__NEW_ENTITY:
        if (resolve) return getNewEntity();
        return basicGetNewEntity();
      case AccessDslPackage.PERSIST_AND_ASSOCIATE_OPERATION__ASSOCIALTION:
        if (resolve) return getAssocialtion();
        return basicGetAssocialtion();
      case AccessDslPackage.PERSIST_AND_ASSOCIATE_OPERATION__EXISTING_ENTITY:
        if (resolve) return getExistingEntity();
        return basicGetExistingEntity();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case AccessDslPackage.PERSIST_AND_ASSOCIATE_OPERATION__NEW_ENTITY:
        setNewEntity((Entity)newValue);
        return;
      case AccessDslPackage.PERSIST_AND_ASSOCIATE_OPERATION__ASSOCIALTION:
        setAssocialtion((RelationshipAttribute)newValue);
        return;
      case AccessDslPackage.PERSIST_AND_ASSOCIATE_OPERATION__EXISTING_ENTITY:
        setExistingEntity((Entity)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case AccessDslPackage.PERSIST_AND_ASSOCIATE_OPERATION__NEW_ENTITY:
        setNewEntity((Entity)null);
        return;
      case AccessDslPackage.PERSIST_AND_ASSOCIATE_OPERATION__ASSOCIALTION:
        setAssocialtion((RelationshipAttribute)null);
        return;
      case AccessDslPackage.PERSIST_AND_ASSOCIATE_OPERATION__EXISTING_ENTITY:
        setExistingEntity((Entity)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case AccessDslPackage.PERSIST_AND_ASSOCIATE_OPERATION__NEW_ENTITY:
        return newEntity != null;
      case AccessDslPackage.PERSIST_AND_ASSOCIATE_OPERATION__ASSOCIALTION:
        return associaltion != null;
      case AccessDslPackage.PERSIST_AND_ASSOCIATE_OPERATION__EXISTING_ENTITY:
        return existingEntity != null;
    }
    return super.eIsSet(featureID);
  }

} //PersistAndAssociateOperationImpl
