/*
 * generated by Xtext 2.35.0
 */
grammar InternalJPAQLDsl;

options {
	superClass=AbstractInternalAntlrParser;
	backtrack=true;
}

@lexer::header {
package jpaqldsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package jpaqldsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import jpaqldsl.services.JPAQLDslGrammarAccess;

}

@parser::members {

/*
  This grammar contains a lot of empty actions to work around a bug in ANTLR.
  Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
*/

 	private JPAQLDslGrammarAccess grammarAccess;

    public InternalJPAQLDslParser(TokenStream input, JPAQLDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected JPAQLDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getXmlDescriptorXMLDescriptorParserRuleCall_0_0());
				}
				lv_xmlDescriptor_0_0=ruleXMLDescriptor
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					set(
						$current,
						"xmlDescriptor",
						lv_xmlDescriptor_0_0,
						"jpaqldsl.JPAQLDsl.XMLDescriptor");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			this_ORM_UNMANAGED_CONTENT_1=RULE_ORM_UNMANAGED_CONTENT
			{
				newLeafNode(this_ORM_UNMANAGED_CONTENT_1, grammarAccess.getModelAccess().getORM_UNMANAGED_CONTENTTerminalRuleCall_1());
			}
		)?
		otherlv_2='<!-- Imports and Package Declaration Here.'
		{
			newLeafNode(otherlv_2, grammarAccess.getModelAccess().getImportsAndPackageDeclarationHereKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getImportsImportParserRuleCall_3_0());
				}
				lv_imports_3_0=ruleImport
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"imports",
						lv_imports_3_0,
						"jpaqldsl.JPAQLDsl.Import");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='package'
		{
			newLeafNode(otherlv_4, grammarAccess.getModelAccess().getPackageKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getNameQualifiedNameParserRuleCall_5_0());
				}
				lv_name_5_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					set(
						$current,
						"name",
						lv_name_5_0,
						"org.eclipse.xtext.xbase.Xbase.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='-->'
		{
			newLeafNode(otherlv_6, grammarAccess.getModelAccess().getHyphenMinusHyphenMinusGreaterThanSignKeyword_6());
		}
		(
			this_ORM_UNMANAGED_CONTENT_7=RULE_ORM_UNMANAGED_CONTENT
			{
				newLeafNode(this_ORM_UNMANAGED_CONTENT_7, grammarAccess.getModelAccess().getORM_UNMANAGED_CONTENTTerminalRuleCall_7());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getNamedQueriesNamedQueryParserRuleCall_8_0());
				}
				lv_namedQueries_8_0=ruleNamedQuery
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"namedQueries",
						lv_namedQueries_8_0,
						"jpaqldsl.JPAQLDsl.NamedQuery");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			this_ORM_UNMANAGED_CONTENT_9=RULE_ORM_UNMANAGED_CONTENT
			{
				newLeafNode(this_ORM_UNMANAGED_CONTENT_9, grammarAccess.getModelAccess().getORM_UNMANAGED_CONTENTTerminalRuleCall_9());
			}
		)?
	)
;

// Entry rule entryRuleNamedQuery
entryRuleNamedQuery returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNamedQueryRule()); }
	iv_ruleNamedQuery=ruleNamedQuery
	{ $current=$iv_ruleNamedQuery.current; }
	EOF;

// Rule NamedQuery
ruleNamedQuery returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='<named-query name="'
		{
			newLeafNode(otherlv_0, grammarAccess.getNamedQueryAccess().getNamedQueryNameKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getNamedQueryAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNamedQueryRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.xbase.Xtype.ID");
				}
			)
		)
		otherlv_2='">'
		{
			newLeafNode(otherlv_2, grammarAccess.getNamedQueryAccess().getQuotationMarkGreaterThanSignKeyword_2());
		}
		otherlv_3='<query>'
		{
			newLeafNode(otherlv_3, grammarAccess.getNamedQueryAccess().getQueryKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNamedQueryAccess().getQlStatementQLStatementParserRuleCall_4_0());
				}
				lv_qlStatement_4_0=ruleQLStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNamedQueryRule());
					}
					set(
						$current,
						"qlStatement",
						lv_qlStatement_4_0,
						"jpaqldsl.JPAQLDsl.QLStatement");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='</query>'
		{
			newLeafNode(otherlv_5, grammarAccess.getNamedQueryAccess().getQueryKeyword_5());
		}
		otherlv_6='</named-query>'
		{
			newLeafNode(otherlv_6, grammarAccess.getNamedQueryAccess().getNamedQueryKeyword_6());
		}
	)
;

// Entry rule entryRuleXMLDescriptor
entryRuleXMLDescriptor returns [String current=null]:
	{ newCompositeNode(grammarAccess.getXMLDescriptorRule()); }
	iv_ruleXMLDescriptor=ruleXMLDescriptor
	{ $current=$iv_ruleXMLDescriptor.current.getText(); }
	EOF;

// Rule XMLDescriptor
ruleXMLDescriptor returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='<?xml version="1.0" encoding="UTF-8" ?>'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getXMLDescriptorAccess().getXmlVersion10EncodingUTF8Keyword());
	}
;

// Entry rule entryRuleQLStatement
entryRuleQLStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getQLStatementRule()); }
	iv_ruleQLStatement=ruleQLStatement
	{ $current=$iv_ruleQLStatement.current; }
	EOF;

// Rule QLStatement
ruleQLStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getQLStatementAccess().getSelectStatementsSelectStatementParserRuleCall_0());
			}
			lv_selectStatements_0_0=ruleSelectStatement
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getQLStatementRule());
				}
				add(
					$current,
					"selectStatements",
					lv_selectStatements_0_0,
					"jpaqldsl.JPAQLDsl.SelectStatement");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleSelectStatement
entryRuleSelectStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSelectStatementRule()); }
	iv_ruleSelectStatement=ruleSelectStatement
	{ $current=$iv_ruleSelectStatement.current; }
	EOF;

// Rule SelectStatement
ruleSelectStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSelectStatementAccess().getSelectClauseSelectClauseParserRuleCall_0_0());
				}
				lv_selectClause_0_0=ruleSelectClause
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSelectStatementRule());
					}
					set(
						$current,
						"selectClause",
						lv_selectClause_0_0,
						"jpaqldsl.JPAQLDsl.SelectClause");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSelectStatementAccess().getFromClauseFromClauseParserRuleCall_1_0());
				}
				lv_fromClause_1_0=ruleFromClause
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSelectStatementRule());
					}
					set(
						$current,
						"fromClause",
						lv_fromClause_1_0,
						"jpaqldsl.JPAQLDsl.FromClause");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSelectStatementAccess().getWhereClauseWhereClauseParserRuleCall_2_0());
				}
				lv_whereClause_2_0=ruleWhereClause
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSelectStatementRule());
					}
					set(
						$current,
						"whereClause",
						lv_whereClause_2_0,
						"jpaqldsl.JPAQLDsl.WhereClause");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleFromClause
entryRuleFromClause returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFromClauseRule()); }
	iv_ruleFromClause=ruleFromClause
	{ $current=$iv_ruleFromClause.current; }
	EOF;

// Rule FromClause
ruleFromClause returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='FROM'
		{
			newLeafNode(otherlv_0, grammarAccess.getFromClauseAccess().getFROMKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFromClauseAccess().getIdentificationVariableDeclarationsIdentificationVariableDeclarationParserRuleCall_1_0());
				}
				lv_identificationVariableDeclarations_1_0=ruleIdentificationVariableDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFromClauseRule());
					}
					add(
						$current,
						"identificationVariableDeclarations",
						lv_identificationVariableDeclarations_1_0,
						"jpaqldsl.JPAQLDsl.IdentificationVariableDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getFromClauseAccess().getCommaKeyword_2_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getFromClauseAccess().getIdentificationVariableDeclarationsIdentificationVariableDeclarationParserRuleCall_2_1_0_0());
						}
						lv_identificationVariableDeclarations_3_1=ruleIdentificationVariableDeclaration
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFromClauseRule());
							}
							add(
								$current,
								"identificationVariableDeclarations",
								lv_identificationVariableDeclarations_3_1,
								"jpaqldsl.JPAQLDsl.IdentificationVariableDeclaration");
							afterParserOrEnumRuleCall();
						}
						    |
						{
							newCompositeNode(grammarAccess.getFromClauseAccess().getIdentificationVariableDeclarationsCollectionMemberDeclarationParserRuleCall_2_1_0_1());
						}
						lv_identificationVariableDeclarations_3_2=ruleCollectionMemberDeclaration
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFromClauseRule());
							}
							add(
								$current,
								"identificationVariableDeclarations",
								lv_identificationVariableDeclarations_3_2,
								"jpaqldsl.JPAQLDsl.CollectionMemberDeclaration");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)*
	)
;

// Entry rule entryRuleIdentificationVariableDeclaration
entryRuleIdentificationVariableDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIdentificationVariableDeclarationRule()); }
	iv_ruleIdentificationVariableDeclaration=ruleIdentificationVariableDeclaration
	{ $current=$iv_ruleIdentificationVariableDeclaration.current; }
	EOF;

// Rule IdentificationVariableDeclaration
ruleIdentificationVariableDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getIdentificationVariableDeclarationAccess().getRangeVariableDeclarationRangeVariableDeclarationParserRuleCall_0_0());
				}
				lv_rangeVariableDeclaration_0_0=ruleRangeVariableDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIdentificationVariableDeclarationRule());
					}
					set(
						$current,
						"rangeVariableDeclaration",
						lv_rangeVariableDeclaration_0_0,
						"jpaqldsl.JPAQLDsl.RangeVariableDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getIdentificationVariableDeclarationAccess().getJoinsJoinParserRuleCall_1_0_0());
					}
					lv_joins_1_1=ruleJoin
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIdentificationVariableDeclarationRule());
						}
						add(
							$current,
							"joins",
							lv_joins_1_1,
							"jpaqldsl.JPAQLDsl.Join");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getIdentificationVariableDeclarationAccess().getJoinsFetchJoinParserRuleCall_1_0_1());
					}
					lv_joins_1_2=ruleFetchJoin
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIdentificationVariableDeclarationRule());
						}
						add(
							$current,
							"joins",
							lv_joins_1_2,
							"jpaqldsl.JPAQLDsl.FetchJoin");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleRangeVariableDeclaration
entryRuleRangeVariableDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRangeVariableDeclarationRule()); }
	iv_ruleRangeVariableDeclaration=ruleRangeVariableDeclaration
	{ $current=$iv_ruleRangeVariableDeclaration.current; }
	EOF;

// Rule RangeVariableDeclaration
ruleRangeVariableDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRangeVariableDeclarationRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getRangeVariableDeclarationAccess().getAbstractSchemaNameEntityCrossReference_0_0());
				}
			)
		)
		(
			otherlv_1='AS'
			{
				newLeafNode(otherlv_1, grammarAccess.getRangeVariableDeclarationAccess().getASKeyword_1());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getRangeVariableDeclarationAccess().getIdentificationVariableIdentificationVariableParserRuleCall_2_0());
				}
				lv_identificationVariable_2_0=ruleIdentificationVariable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRangeVariableDeclarationRule());
					}
					set(
						$current,
						"identificationVariable",
						lv_identificationVariable_2_0,
						"jpaqldsl.JPAQLDsl.IdentificationVariable");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleJoin
entryRuleJoin returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJoinRule()); }
	iv_ruleJoin=ruleJoin
	{ $current=$iv_ruleJoin.current; }
	EOF;

// Rule Join
ruleJoin returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getJoinAccess().getJoinSpecJoinSpecParserRuleCall_0_0());
				}
				lv_joinSpec_0_0=ruleJoinSpec
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getJoinRule());
					}
					set(
						$current,
						"joinSpec",
						lv_joinSpec_0_0,
						"jpaqldsl.JPAQLDsl.JoinSpec");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getJoinAccess().getJoinAssociationPathExpressionJPAPathExpressionParserRuleCall_1_0());
				}
				lv_joinAssociationPathExpression_1_0=ruleJPAPathExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getJoinRule());
					}
					set(
						$current,
						"joinAssociationPathExpression",
						lv_joinAssociationPathExpression_1_0,
						"jpaqldsl.JPAQLDsl.JPAPathExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2='AS'
			{
				newLeafNode(otherlv_2, grammarAccess.getJoinAccess().getASKeyword_2());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getJoinAccess().getIdentificationVariableIdentificationVariableParserRuleCall_3_0());
				}
				lv_identificationVariable_3_0=ruleIdentificationVariable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getJoinRule());
					}
					set(
						$current,
						"identificationVariable",
						lv_identificationVariable_3_0,
						"jpaqldsl.JPAQLDsl.IdentificationVariable");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFetchJoin
entryRuleFetchJoin returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFetchJoinRule()); }
	iv_ruleFetchJoin=ruleFetchJoin
	{ $current=$iv_ruleFetchJoin.current; }
	EOF;

// Rule FetchJoin
ruleFetchJoin returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getFetchJoinAccess().getJoinSpecJoinSpecParserRuleCall_0_0());
				}
				lv_joinSpec_0_0=ruleJoinSpec
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFetchJoinRule());
					}
					set(
						$current,
						"joinSpec",
						lv_joinSpec_0_0,
						"jpaqldsl.JPAQLDsl.JoinSpec");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='FETCH'
		{
			newLeafNode(otherlv_1, grammarAccess.getFetchJoinAccess().getFETCHKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFetchJoinAccess().getJoinAssociationPathExpressionJPAPathExpressionParserRuleCall_2_0());
				}
				lv_joinAssociationPathExpression_2_0=ruleJPAPathExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFetchJoinRule());
					}
					set(
						$current,
						"joinAssociationPathExpression",
						lv_joinAssociationPathExpression_2_0,
						"jpaqldsl.JPAQLDsl.JPAPathExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3='AS'
			{
				newLeafNode(otherlv_3, grammarAccess.getFetchJoinAccess().getASKeyword_3());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getFetchJoinAccess().getIdentificationVariableIdentificationVariableParserRuleCall_4_0());
				}
				lv_identificationVariable_4_0=ruleIdentificationVariable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFetchJoinRule());
					}
					set(
						$current,
						"identificationVariable",
						lv_identificationVariable_4_0,
						"jpaqldsl.JPAQLDsl.IdentificationVariable");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleJoinSpec
entryRuleJoinSpec returns [String current=null]:
	{ newCompositeNode(grammarAccess.getJoinSpecRule()); }
	iv_ruleJoinSpec=ruleJoinSpec
	{ $current=$iv_ruleJoinSpec.current.getText(); }
	EOF;

// Rule JoinSpec
ruleJoinSpec returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='LEFT'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getJoinSpecAccess().getLEFTKeyword_0_0());
			}
			    |
			kw='OUTER'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getJoinSpecAccess().getOUTERKeyword_0_1());
			}
			    |
			kw='INNER'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getJoinSpecAccess().getINNERKeyword_0_2());
			}
		)?
		kw='JOIN'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getJoinSpecAccess().getJOINKeyword_1());
		}
	)
;

// Entry rule entryRuleJPAPathExpression
entryRuleJPAPathExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJPAPathExpressionRule()); }
	iv_ruleJPAPathExpression=ruleJPAPathExpression
	{ $current=$iv_ruleJPAPathExpression.current; }
	EOF;

// Rule JPAPathExpression
ruleJPAPathExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getJPAPathExpressionRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getJPAPathExpressionAccess().getRootIdentificationVariableCrossReference_0_0());
				}
			)
		)
		(
			otherlv_1='.'
			{
				newLeafNode(otherlv_1, grammarAccess.getJPAPathExpressionAccess().getFullStopKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getJPAPathExpressionAccess().getJpaAttributesJpaAttributeParserRuleCall_1_1_0());
					}
					lv_jpaAttributes_2_0=ruleJpaAttribute
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getJPAPathExpressionRule());
						}
						add(
							$current,
							"jpaAttributes",
							lv_jpaAttributes_2_0,
							"jpaqldsl.JPAQLDsl.JpaAttribute");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleJpaAttribute
entryRuleJpaAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJpaAttributeRule()); }
	iv_ruleJpaAttribute=ruleJpaAttribute
	{ $current=$iv_ruleJpaAttribute.current; }
	EOF;

// Rule JpaAttribute
ruleJpaAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getJpaAttributeRule());
				}
			}
			otherlv_0=RULE_ID
			{
				newLeafNode(otherlv_0, grammarAccess.getJpaAttributeAccess().getAttributeAttributeCrossReference_0());
			}
		)
	)
;

// Entry rule entryRuleCollectionMemberDeclaration
entryRuleCollectionMemberDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCollectionMemberDeclarationRule()); }
	iv_ruleCollectionMemberDeclaration=ruleCollectionMemberDeclaration
	{ $current=$iv_ruleCollectionMemberDeclaration.current; }
	EOF;

// Rule CollectionMemberDeclaration
ruleCollectionMemberDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='IN'
		{
			newLeafNode(otherlv_0, grammarAccess.getCollectionMemberDeclarationAccess().getINKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCollectionMemberDeclarationAccess().getCollectionValuedPathExpressionJPAPathExpressionParserRuleCall_1_0());
				}
				lv_collectionValuedPathExpression_1_0=ruleJPAPathExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCollectionMemberDeclarationRule());
					}
					set(
						$current,
						"collectionValuedPathExpression",
						lv_collectionValuedPathExpression_1_0,
						"jpaqldsl.JPAQLDsl.JPAPathExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2='AS'
			{
				newLeafNode(otherlv_2, grammarAccess.getCollectionMemberDeclarationAccess().getASKeyword_2());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getCollectionMemberDeclarationAccess().getIdentificationVariableIdentificationVariableParserRuleCall_3_0());
				}
				lv_identificationVariable_3_0=ruleIdentificationVariable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCollectionMemberDeclarationRule());
					}
					set(
						$current,
						"identificationVariable",
						lv_identificationVariable_3_0,
						"jpaqldsl.JPAQLDsl.IdentificationVariable");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSelectClause
entryRuleSelectClause returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSelectClauseRule()); }
	iv_ruleSelectClause=ruleSelectClause
	{ $current=$iv_ruleSelectClause.current; }
	EOF;

// Rule SelectClause
ruleSelectClause returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='SELECT'
		{
			newLeafNode(otherlv_0, grammarAccess.getSelectClauseAccess().getSELECTKeyword_0());
		}
		(
			otherlv_1='DISTINCT'
			{
				newLeafNode(otherlv_1, grammarAccess.getSelectClauseAccess().getDISTINCTKeyword_1());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getSelectClauseAccess().getSelectExpressionsSelectExpressionParserRuleCall_2_0());
				}
				lv_selectExpressions_2_0=ruleSelectExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSelectClauseRule());
					}
					add(
						$current,
						"selectExpressions",
						lv_selectExpressions_2_0,
						"jpaqldsl.JPAQLDsl.SelectExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getSelectClauseAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSelectClauseAccess().getSelectExpressionsSelectExpressionParserRuleCall_3_1_0());
					}
					lv_selectExpressions_4_0=ruleSelectExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSelectClauseRule());
						}
						add(
							$current,
							"selectExpressions",
							lv_selectExpressions_4_0,
							"jpaqldsl.JPAQLDsl.SelectExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleSelectExpression
entryRuleSelectExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSelectExpressionRule()); }
	iv_ruleSelectExpression=ruleSelectExpression
	{ $current=$iv_ruleSelectExpression.current; }
	EOF;

// Rule SelectExpression
ruleSelectExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSelectExpressionAccess().getJpaPathExpressionJPAPathExpressionParserRuleCall_0_0());
				}
				lv_jpaPathExpression_0_0=ruleJPAPathExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
					}
					set(
						$current,
						"jpaPathExpression",
						lv_jpaPathExpression_0_0,
						"jpaqldsl.JPAQLDsl.JPAPathExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getSelectExpressionAccess().getAggregateExpressionAggregateExpressionParserRuleCall_1_0());
				}
				lv_aggregateExpression_1_0=ruleAggregateExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
					}
					set(
						$current,
						"aggregateExpression",
						lv_aggregateExpression_1_0,
						"jpaqldsl.JPAQLDsl.AggregateExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getSelectExpressionAccess().getConstructorExpressionConstructorExpressionParserRuleCall_2_0());
				}
				lv_constructorExpression_2_0=ruleConstructorExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
					}
					set(
						$current,
						"constructorExpression",
						lv_constructorExpression_2_0,
						"jpaqldsl.JPAQLDsl.ConstructorExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleConstructorExpression
entryRuleConstructorExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConstructorExpressionRule()); }
	iv_ruleConstructorExpression=ruleConstructorExpression
	{ $current=$iv_ruleConstructorExpression.current; }
	EOF;

// Rule ConstructorExpression
ruleConstructorExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='NEW'
		{
			newLeafNode(otherlv_0, grammarAccess.getConstructorExpressionAccess().getNEWKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConstructorExpressionAccess().getConstructorNameConstructorNameParserRuleCall_1_0());
				}
				lv_constructorName_1_0=ruleConstructorName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConstructorExpressionRule());
					}
					set(
						$current,
						"constructorName",
						lv_constructorName_1_0,
						"jpaqldsl.JPAQLDsl.ConstructorName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getConstructorExpressionAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConstructorExpressionAccess().getConstructorItemsConstructorItemParserRuleCall_3_0());
				}
				lv_constructorItems_3_0=ruleConstructorItem
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConstructorExpressionRule());
					}
					add(
						$current,
						"constructorItems",
						lv_constructorItems_3_0,
						"jpaqldsl.JPAQLDsl.ConstructorItem");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getConstructorExpressionAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConstructorExpressionAccess().getConstructorItemsConstructorItemParserRuleCall_4_1_0());
					}
					lv_constructorItems_5_0=ruleConstructorItem
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConstructorExpressionRule());
						}
						add(
							$current,
							"constructorItems",
							lv_constructorItems_5_0,
							"jpaqldsl.JPAQLDsl.ConstructorItem");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_6=')'
		{
			newLeafNode(otherlv_6, grammarAccess.getConstructorExpressionAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRuleConstructorItem
entryRuleConstructorItem returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConstructorItemRule()); }
	iv_ruleConstructorItem=ruleConstructorItem
	{ $current=$iv_ruleConstructorItem.current; }
	EOF;

// Rule ConstructorItem
ruleConstructorItem returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getConstructorItemAccess().getJPAPathExpressionParserRuleCall_0());
		}
		this_JPAPathExpression_0=ruleJPAPathExpression
		{
			$current = $this_JPAPathExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getConstructorItemAccess().getAggregateExpressionParserRuleCall_1());
		}
		this_AggregateExpression_1=ruleAggregateExpression
		{
			$current = $this_AggregateExpression_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleAggregateExpression
entryRuleAggregateExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAggregateExpressionRule()); }
	iv_ruleAggregateExpression=ruleAggregateExpression
	{ $current=$iv_ruleAggregateExpression.current; }
	EOF;

// Rule AggregateExpression
ruleAggregateExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='AVG'
			{
				newLeafNode(otherlv_0, grammarAccess.getAggregateExpressionAccess().getAVGKeyword_0_0());
			}
			    |
			otherlv_1='MAX'
			{
				newLeafNode(otherlv_1, grammarAccess.getAggregateExpressionAccess().getMAXKeyword_0_1());
			}
			    |
			otherlv_2='MIN'
			{
				newLeafNode(otherlv_2, grammarAccess.getAggregateExpressionAccess().getMINKeyword_0_2());
			}
			    |
			otherlv_3='SUM'
			{
				newLeafNode(otherlv_3, grammarAccess.getAggregateExpressionAccess().getSUMKeyword_0_3());
			}
			    |
			otherlv_4='COUNT'
			{
				newLeafNode(otherlv_4, grammarAccess.getAggregateExpressionAccess().getCOUNTKeyword_0_4());
			}
		)
		(
			otherlv_5='DISTINCT'
			{
				newLeafNode(otherlv_5, grammarAccess.getAggregateExpressionAccess().getDISTINCTKeyword_1());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getAggregateExpressionAccess().getStateFieldPathExpressionJPAPathExpressionParserRuleCall_2_0());
				}
				lv_stateFieldPathExpression_6_0=ruleJPAPathExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAggregateExpressionRule());
					}
					set(
						$current,
						"stateFieldPathExpression",
						lv_stateFieldPathExpression_6_0,
						"jpaqldsl.JPAQLDsl.JPAPathExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleIdentificationVariable
entryRuleIdentificationVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIdentificationVariableRule()); }
	iv_ruleIdentificationVariable=ruleIdentificationVariable
	{ $current=$iv_ruleIdentificationVariable.current; }
	EOF;

// Rule IdentificationVariable
ruleIdentificationVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getIdentificationVariableAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getIdentificationVariableRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.xbase.Xtype.ID");
			}
		)
	)
;

// Entry rule entryRuleConstructorName
entryRuleConstructorName returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConstructorNameRule()); }
	iv_ruleConstructorName=ruleConstructorName
	{ $current=$iv_ruleConstructorName.current; }
	EOF;

// Rule ConstructorName
ruleConstructorName returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getConstructorNameAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getConstructorNameRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.xbase.Xtype.ID");
			}
		)
	)
;

// Entry rule entryRuleWhereClause
entryRuleWhereClause returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWhereClauseRule()); }
	iv_ruleWhereClause=ruleWhereClause
	{ $current=$iv_ruleWhereClause.current; }
	EOF;

// Rule WhereClause
ruleWhereClause returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='WHERE'
		{
			newLeafNode(otherlv_0, grammarAccess.getWhereClauseAccess().getWHEREKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getWhereClauseAccess().getConditionalExpressionConditionalExpressionParserRuleCall_1_0());
				}
				lv_conditionalExpression_1_0=ruleConditionalExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWhereClauseRule());
					}
					set(
						$current,
						"conditionalExpression",
						lv_conditionalExpression_1_0,
						"jpaqldsl.JPAQLDsl.ConditionalExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleConditionalExpression
entryRuleConditionalExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConditionalExpressionRule()); }
	iv_ruleConditionalExpression=ruleConditionalExpression
	{ $current=$iv_ruleConditionalExpression.current; }
	EOF;

// Rule ConditionalExpression
ruleConditionalExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getConditionalExpressionAccess().getConditionalTermParserRuleCall_0());
		}
		this_ConditionalTerm_0=ruleConditionalTerm
		{
			$current = $this_ConditionalTerm_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getConditionalExpressionAccess().getConditionalExpressionLeftAction_1_0(),
						$current);
				}
			)
			otherlv_2='AND'
			{
				newLeafNode(otherlv_2, grammarAccess.getConditionalExpressionAccess().getANDKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConditionalExpressionAccess().getRightConditionalTermParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleConditionalTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConditionalExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"jpaqldsl.JPAQLDsl.ConditionalTerm");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleConditionalTerm
entryRuleConditionalTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConditionalTermRule()); }
	iv_ruleConditionalTerm=ruleConditionalTerm
	{ $current=$iv_ruleConditionalTerm.current; }
	EOF;

// Rule ConditionalTerm
ruleConditionalTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getConditionalTermAccess().getConditionalFactorParserRuleCall_0());
		}
		this_ConditionalFactor_0=ruleConditionalFactor
		{
			$current = $this_ConditionalFactor_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getConditionalTermAccess().getConditionalTermLeftAction_1_0(),
						$current);
				}
			)
			otherlv_2='OR'
			{
				newLeafNode(otherlv_2, grammarAccess.getConditionalTermAccess().getORKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConditionalTermAccess().getRightConditionalFactorParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleConditionalFactor
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConditionalTermRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"jpaqldsl.JPAQLDsl.ConditionalFactor");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleConditionalFactor
entryRuleConditionalFactor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConditionalFactorRule()); }
	iv_ruleConditionalFactor=ruleConditionalFactor
	{ $current=$iv_ruleConditionalFactor.current; }
	EOF;

// Rule ConditionalFactor
ruleConditionalFactor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				otherlv_0='NOT'
				{
					newLeafNode(otherlv_0, grammarAccess.getConditionalFactorAccess().getNOTKeyword_0_0());
				}
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getConditionalFactorAccess().getConditionalPrimarySimpleConditionalExpressionParserRuleCall_0_1_0());
					}
					lv_conditionalPrimary_1_0=ruleSimpleConditionalExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConditionalFactorRule());
						}
						set(
							$current,
							"conditionalPrimary",
							lv_conditionalPrimary_1_0,
							"jpaqldsl.JPAQLDsl.SimpleConditionalExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			otherlv_2='('
			{
				newLeafNode(otherlv_2, grammarAccess.getConditionalFactorAccess().getLeftParenthesisKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConditionalFactorAccess().getConditionalExpressionConditionalExpressionParserRuleCall_1_1_0());
					}
					lv_conditionalExpression_3_0=ruleConditionalExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConditionalFactorRule());
						}
						set(
							$current,
							"conditionalExpression",
							lv_conditionalExpression_3_0,
							"jpaqldsl.JPAQLDsl.ConditionalExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_4=')'
			{
				newLeafNode(otherlv_4, grammarAccess.getConditionalFactorAccess().getRightParenthesisKeyword_1_2());
			}
		)
	)
;

// Entry rule entryRuleSimpleConditionalExpression
entryRuleSimpleConditionalExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimpleConditionalExpressionRule()); }
	iv_ruleSimpleConditionalExpression=ruleSimpleConditionalExpression
	{ $current=$iv_ruleSimpleConditionalExpression.current; }
	EOF;

// Rule SimpleConditionalExpression
ruleSimpleConditionalExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSimpleConditionalExpressionAccess().getComparisionExpressionComparisonExpressionParserRuleCall_0_0());
				}
				lv_comparisionExpression_0_0=ruleComparisonExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimpleConditionalExpressionRule());
					}
					set(
						$current,
						"comparisionExpression",
						lv_comparisionExpression_0_0,
						"jpaqldsl.JPAQLDsl.ComparisonExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getSimpleConditionalExpressionAccess().getBetweenExpressionBetweenExpressionParserRuleCall_1_0());
				}
				lv_betweenExpression_1_0=ruleBetweenExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimpleConditionalExpressionRule());
					}
					set(
						$current,
						"betweenExpression",
						lv_betweenExpression_1_0,
						"jpaqldsl.JPAQLDsl.BetweenExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getSimpleConditionalExpressionAccess().getLikeExpressionLikeExpressionParserRuleCall_2_0());
				}
				lv_likeExpression_2_0=ruleLikeExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimpleConditionalExpressionRule());
					}
					set(
						$current,
						"likeExpression",
						lv_likeExpression_2_0,
						"jpaqldsl.JPAQLDsl.LikeExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getSimpleConditionalExpressionAccess().getInExpressionInExpressionParserRuleCall_3_0());
				}
				lv_inExpression_3_0=ruleInExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimpleConditionalExpressionRule());
					}
					set(
						$current,
						"inExpression",
						lv_inExpression_3_0,
						"jpaqldsl.JPAQLDsl.InExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getSimpleConditionalExpressionAccess().getNullComparisionExpressionNullComparisonExpressionParserRuleCall_4_0());
				}
				lv_nullComparisionExpression_4_0=ruleNullComparisonExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimpleConditionalExpressionRule());
					}
					set(
						$current,
						"nullComparisionExpression",
						lv_nullComparisionExpression_4_0,
						"jpaqldsl.JPAQLDsl.NullComparisonExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getSimpleConditionalExpressionAccess().getEmptyCollectionComparisonExpressionEmptyCollectionComparisonExpressionParserRuleCall_5_0());
				}
				lv_emptyCollectionComparisonExpression_5_0=ruleEmptyCollectionComparisonExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimpleConditionalExpressionRule());
					}
					set(
						$current,
						"emptyCollectionComparisonExpression",
						lv_emptyCollectionComparisonExpression_5_0,
						"jpaqldsl.JPAQLDsl.EmptyCollectionComparisonExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getSimpleConditionalExpressionAccess().getCollectionMemberExpressionCollectionMemberExpressionParserRuleCall_6_0());
				}
				lv_collectionMemberExpression_6_0=ruleCollectionMemberExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimpleConditionalExpressionRule());
					}
					set(
						$current,
						"collectionMemberExpression",
						lv_collectionMemberExpression_6_0,
						"jpaqldsl.JPAQLDsl.CollectionMemberExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getSimpleConditionalExpressionAccess().getExistsExpressionExistsExpressionParserRuleCall_7_0());
				}
				lv_existsExpression_7_0=ruleExistsExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimpleConditionalExpressionRule());
					}
					set(
						$current,
						"existsExpression",
						lv_existsExpression_7_0,
						"jpaqldsl.JPAQLDsl.ExistsExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleBetweenExpression
entryRuleBetweenExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBetweenExpressionRule()); }
	iv_ruleBetweenExpression=ruleBetweenExpression
	{ $current=$iv_ruleBetweenExpression.current; }
	EOF;

// Rule BetweenExpression
ruleBetweenExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getBetweenExpressionAccess().getPrimaryArithmeticExpressionArithmeticExpressionParserRuleCall_0_0_0());
					}
					lv_primaryArithmeticExpression_0_0=ruleArithmeticExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBetweenExpressionRule());
						}
						set(
							$current,
							"primaryArithmeticExpression",
							lv_primaryArithmeticExpression_0_0,
							"jpaqldsl.JPAQLDsl.ArithmeticExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_1='NOT'
				{
					newLeafNode(otherlv_1, grammarAccess.getBetweenExpressionAccess().getNOTKeyword_0_1());
				}
			)?
			otherlv_2='BETWEEN'
			{
				newLeafNode(otherlv_2, grammarAccess.getBetweenExpressionAccess().getBETWEENKeyword_0_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBetweenExpressionAccess().getLowerArithmeticExpressionArithmeticExpressionParserRuleCall_0_3_0());
					}
					lv_lowerArithmeticExpression_3_0=ruleArithmeticExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBetweenExpressionRule());
						}
						set(
							$current,
							"lowerArithmeticExpression",
							lv_lowerArithmeticExpression_3_0,
							"jpaqldsl.JPAQLDsl.ArithmeticExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_4='AND'
			{
				newLeafNode(otherlv_4, grammarAccess.getBetweenExpressionAccess().getANDKeyword_0_4());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBetweenExpressionAccess().getUpperArithmeticExpressionArithmeticExpressionParserRuleCall_0_5_0());
					}
					lv_upperArithmeticExpression_5_0=ruleArithmeticExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBetweenExpressionRule());
						}
						set(
							$current,
							"upperArithmeticExpression",
							lv_upperArithmeticExpression_5_0,
							"jpaqldsl.JPAQLDsl.ArithmeticExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getBetweenExpressionAccess().getPrimaryStringExpressionStringExpressionParserRuleCall_1_0_0());
					}
					lv_primaryStringExpression_6_0=ruleStringExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBetweenExpressionRule());
						}
						set(
							$current,
							"primaryStringExpression",
							lv_primaryStringExpression_6_0,
							"jpaqldsl.JPAQLDsl.StringExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_7='NOT'
				{
					newLeafNode(otherlv_7, grammarAccess.getBetweenExpressionAccess().getNOTKeyword_1_1());
				}
			)?
			otherlv_8='BETWEEN'
			{
				newLeafNode(otherlv_8, grammarAccess.getBetweenExpressionAccess().getBETWEENKeyword_1_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBetweenExpressionAccess().getLowerStringExpressionStringExpressionParserRuleCall_1_3_0());
					}
					lv_lowerStringExpression_9_0=ruleStringExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBetweenExpressionRule());
						}
						set(
							$current,
							"lowerStringExpression",
							lv_lowerStringExpression_9_0,
							"jpaqldsl.JPAQLDsl.StringExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_10='AND'
			{
				newLeafNode(otherlv_10, grammarAccess.getBetweenExpressionAccess().getANDKeyword_1_4());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBetweenExpressionAccess().getUpperStringExpressionStringExpressionParserRuleCall_1_5_0());
					}
					lv_upperStringExpression_11_0=ruleStringExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBetweenExpressionRule());
						}
						set(
							$current,
							"upperStringExpression",
							lv_upperStringExpression_11_0,
							"jpaqldsl.JPAQLDsl.StringExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getBetweenExpressionAccess().getPrimaryDateTimeExpressionDateTimeExpressionParserRuleCall_2_0_0());
					}
					lv_primaryDateTimeExpression_12_0=ruleDateTimeExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBetweenExpressionRule());
						}
						set(
							$current,
							"primaryDateTimeExpression",
							lv_primaryDateTimeExpression_12_0,
							"jpaqldsl.JPAQLDsl.DateTimeExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_13='NOT'
				{
					newLeafNode(otherlv_13, grammarAccess.getBetweenExpressionAccess().getNOTKeyword_2_1());
				}
			)?
			otherlv_14='BETWEEN'
			{
				newLeafNode(otherlv_14, grammarAccess.getBetweenExpressionAccess().getBETWEENKeyword_2_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBetweenExpressionAccess().getLowerDateTimeExpressionDateTimeExpressionParserRuleCall_2_3_0());
					}
					lv_lowerDateTimeExpression_15_0=ruleDateTimeExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBetweenExpressionRule());
						}
						set(
							$current,
							"lowerDateTimeExpression",
							lv_lowerDateTimeExpression_15_0,
							"jpaqldsl.JPAQLDsl.DateTimeExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_16='AND'
			{
				newLeafNode(otherlv_16, grammarAccess.getBetweenExpressionAccess().getANDKeyword_2_4());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBetweenExpressionAccess().getUpperDateTimeExpressionDateTimeExpressionParserRuleCall_2_5_0());
					}
					lv_upperDateTimeExpression_17_0=ruleDateTimeExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBetweenExpressionRule());
						}
						set(
							$current,
							"upperDateTimeExpression",
							lv_upperDateTimeExpression_17_0,
							"jpaqldsl.JPAQLDsl.DateTimeExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleInExpression
entryRuleInExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInExpressionRule()); }
	iv_ruleInExpression=ruleInExpression
	{ $current=$iv_ruleInExpression.current; }
	EOF;

// Rule InExpression
ruleInExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getInExpressionAccess().getPathExpressionJPAPathExpressionParserRuleCall_0_0_0());
					}
					lv_pathExpression_0_0=ruleJPAPathExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInExpressionRule());
						}
						set(
							$current,
							"pathExpression",
							lv_pathExpression_0_0,
							"jpaqldsl.JPAQLDsl.JPAPathExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_1='NOT'
				{
					newLeafNode(otherlv_1, grammarAccess.getInExpressionAccess().getNOTKeyword_0_1());
				}
			)?
			otherlv_2='IN'
			{
				newLeafNode(otherlv_2, grammarAccess.getInExpressionAccess().getINKeyword_0_2());
			}
			otherlv_3='('
			{
				newLeafNode(otherlv_3, grammarAccess.getInExpressionAccess().getLeftParenthesisKeyword_0_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInExpressionAccess().getInItemsInItemParserRuleCall_0_4_0());
					}
					lv_inItems_4_0=ruleInItem
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInExpressionRule());
						}
						add(
							$current,
							"inItems",
							lv_inItems_4_0,
							"jpaqldsl.JPAQLDsl.InItem");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_5=','
				{
					newLeafNode(otherlv_5, grammarAccess.getInExpressionAccess().getCommaKeyword_0_5_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getInExpressionAccess().getInItemsInItemParserRuleCall_0_5_1_0());
						}
						lv_inItems_6_0=ruleInItem
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getInExpressionRule());
							}
							add(
								$current,
								"inItems",
								lv_inItems_6_0,
								"jpaqldsl.JPAQLDsl.InItem");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getInExpressionAccess().getSubQuerySubQueryParserRuleCall_1_0_0());
					}
					lv_subQuery_7_0=ruleSubQuery
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInExpressionRule());
						}
						set(
							$current,
							"subQuery",
							lv_subQuery_7_0,
							"jpaqldsl.JPAQLDsl.SubQuery");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_8=')'
			{
				newLeafNode(otherlv_8, grammarAccess.getInExpressionAccess().getRightParenthesisKeyword_1_1());
			}
		)
	)
;

// Entry rule entryRuleInItem
entryRuleInItem returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInItemRule()); }
	iv_ruleInItem=ruleInItem
	{ $current=$iv_ruleInItem.current; }
	EOF;

// Rule InItem
ruleInItem returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getInItemAccess().getLiteralLiteralParserRuleCall_0_0());
				}
				lv_literal_0_0=ruleLiteral
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInItemRule());
					}
					set(
						$current,
						"literal",
						lv_literal_0_0,
						"jpaqldsl.JPAQLDsl.Literal");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getInItemAccess().getInputParameterInputParameterParserRuleCall_1_0());
				}
				lv_inputParameter_1_0=ruleInputParameter
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInItemRule());
					}
					set(
						$current,
						"inputParameter",
						lv_inputParameter_1_0,
						"jpaqldsl.JPAQLDsl.InputParameter");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleLikeExpression
entryRuleLikeExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLikeExpressionRule()); }
	iv_ruleLikeExpression=ruleLikeExpression
	{ $current=$iv_ruleLikeExpression.current; }
	EOF;

// Rule LikeExpression
ruleLikeExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getLikeExpressionAccess().getStringExpressionStringExpressionParserRuleCall_0_0());
				}
				lv_stringExpression_0_0=ruleStringExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLikeExpressionRule());
					}
					set(
						$current,
						"stringExpression",
						lv_stringExpression_0_0,
						"jpaqldsl.JPAQLDsl.StringExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1='NOT'
			{
				newLeafNode(otherlv_1, grammarAccess.getLikeExpressionAccess().getNOTKeyword_1());
			}
		)?
		otherlv_2='LIKE'
		{
			newLeafNode(otherlv_2, grammarAccess.getLikeExpressionAccess().getLIKEKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLikeExpressionAccess().getPatternValuePatternValueParserRuleCall_3_0());
				}
				lv_patternValue_3_0=rulePatternValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLikeExpressionRule());
					}
					set(
						$current,
						"patternValue",
						lv_patternValue_3_0,
						"jpaqldsl.JPAQLDsl.PatternValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4='ESCAPE'
			{
				newLeafNode(otherlv_4, grammarAccess.getLikeExpressionAccess().getESCAPEKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLikeExpressionAccess().getEscapeCharacterEscapeCharacterParserRuleCall_4_1_0());
					}
					lv_escapeCharacter_5_0=ruleEscapeCharacter
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLikeExpressionRule());
						}
						set(
							$current,
							"escapeCharacter",
							lv_escapeCharacter_5_0,
							"jpaqldsl.JPAQLDsl.EscapeCharacter");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleNullComparisonExpression
entryRuleNullComparisonExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNullComparisonExpressionRule()); }
	iv_ruleNullComparisonExpression=ruleNullComparisonExpression
	{ $current=$iv_ruleNullComparisonExpression.current; }
	EOF;

// Rule NullComparisonExpression
ruleNullComparisonExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getNullComparisonExpressionAccess().getPathExpressionJPAPathExpressionParserRuleCall_0_0());
				}
				lv_pathExpression_0_0=ruleJPAPathExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNullComparisonExpressionRule());
					}
					set(
						$current,
						"pathExpression",
						lv_pathExpression_0_0,
						"jpaqldsl.JPAQLDsl.JPAPathExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getNullComparisonExpressionAccess().getInputParameterInputParameterParserRuleCall_1_0_0());
					}
					lv_inputParameter_1_0=ruleInputParameter
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNullComparisonExpressionRule());
						}
						set(
							$current,
							"inputParameter",
							lv_inputParameter_1_0,
							"jpaqldsl.JPAQLDsl.InputParameter");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_2='IS'
			{
				newLeafNode(otherlv_2, grammarAccess.getNullComparisonExpressionAccess().getISKeyword_1_1());
			}
			(
				otherlv_3='NOT'
				{
					newLeafNode(otherlv_3, grammarAccess.getNullComparisonExpressionAccess().getNOTKeyword_1_2());
				}
			)?
			otherlv_4='NULL'
			{
				newLeafNode(otherlv_4, grammarAccess.getNullComparisonExpressionAccess().getNULLKeyword_1_3());
			}
		)
	)
;

// Entry rule entryRuleEmptyCollectionComparisonExpression
entryRuleEmptyCollectionComparisonExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEmptyCollectionComparisonExpressionRule()); }
	iv_ruleEmptyCollectionComparisonExpression=ruleEmptyCollectionComparisonExpression
	{ $current=$iv_ruleEmptyCollectionComparisonExpression.current; }
	EOF;

// Rule EmptyCollectionComparisonExpression
ruleEmptyCollectionComparisonExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getEmptyCollectionComparisonExpressionAccess().getPathExpressionJPAPathExpressionParserRuleCall_0_0());
				}
				lv_pathExpression_0_0=ruleJPAPathExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEmptyCollectionComparisonExpressionRule());
					}
					set(
						$current,
						"pathExpression",
						lv_pathExpression_0_0,
						"jpaqldsl.JPAQLDsl.JPAPathExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='IS'
		{
			newLeafNode(otherlv_1, grammarAccess.getEmptyCollectionComparisonExpressionAccess().getISKeyword_1());
		}
		(
			otherlv_2='NOT'
			{
				newLeafNode(otherlv_2, grammarAccess.getEmptyCollectionComparisonExpressionAccess().getNOTKeyword_2());
			}
		)?
		otherlv_3='EMPTY'
		{
			newLeafNode(otherlv_3, grammarAccess.getEmptyCollectionComparisonExpressionAccess().getEMPTYKeyword_3());
		}
	)
;

// Entry rule entryRuleCollectionMemberExpression
entryRuleCollectionMemberExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCollectionMemberExpressionRule()); }
	iv_ruleCollectionMemberExpression=ruleCollectionMemberExpression
	{ $current=$iv_ruleCollectionMemberExpression.current; }
	EOF;

// Rule CollectionMemberExpression
ruleCollectionMemberExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getCollectionMemberExpressionAccess().getEntityExpressionEntityExpressionParserRuleCall_0_0());
				}
				lv_entityExpression_0_0=ruleEntityExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCollectionMemberExpressionRule());
					}
					set(
						$current,
						"entityExpression",
						lv_entityExpression_0_0,
						"jpaqldsl.JPAQLDsl.EntityExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1='NOT'
			{
				newLeafNode(otherlv_1, grammarAccess.getCollectionMemberExpressionAccess().getNOTKeyword_1());
			}
		)?
		otherlv_2='MEMBER'
		{
			newLeafNode(otherlv_2, grammarAccess.getCollectionMemberExpressionAccess().getMEMBERKeyword_2());
		}
		(
			otherlv_3='OF'
			{
				newLeafNode(otherlv_3, grammarAccess.getCollectionMemberExpressionAccess().getOFKeyword_3());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getCollectionMemberExpressionAccess().getPathExpressionJPAPathExpressionParserRuleCall_4_0());
				}
				lv_pathExpression_4_0=ruleJPAPathExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCollectionMemberExpressionRule());
					}
					set(
						$current,
						"pathExpression",
						lv_pathExpression_4_0,
						"jpaqldsl.JPAQLDsl.JPAPathExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleExistsExpression
entryRuleExistsExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExistsExpressionRule()); }
	iv_ruleExistsExpression=ruleExistsExpression
	{ $current=$iv_ruleExistsExpression.current; }
	EOF;

// Rule ExistsExpression
ruleExistsExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='NOT'
			{
				newLeafNode(otherlv_0, grammarAccess.getExistsExpressionAccess().getNOTKeyword_0());
			}
		)?
		otherlv_1='EXISTS'
		{
			newLeafNode(otherlv_1, grammarAccess.getExistsExpressionAccess().getEXISTSKeyword_1());
		}
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getExistsExpressionAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExistsExpressionAccess().getSubQuerySubQueryParserRuleCall_3_0());
				}
				lv_subQuery_3_0=ruleSubQuery
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExistsExpressionRule());
					}
					set(
						$current,
						"subQuery",
						lv_subQuery_3_0,
						"jpaqldsl.JPAQLDsl.SubQuery");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getExistsExpressionAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleAllOrAnyExpression
entryRuleAllOrAnyExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAllOrAnyExpressionRule()); }
	iv_ruleAllOrAnyExpression=ruleAllOrAnyExpression
	{ $current=$iv_ruleAllOrAnyExpression.current; }
	EOF;

// Rule AllOrAnyExpression
ruleAllOrAnyExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='ALL'
			{
				newLeafNode(otherlv_0, grammarAccess.getAllOrAnyExpressionAccess().getALLKeyword_0_0());
			}
			    |
			otherlv_1='ANY'
			{
				newLeafNode(otherlv_1, grammarAccess.getAllOrAnyExpressionAccess().getANYKeyword_0_1());
			}
			    |
			otherlv_2='SOME'
			{
				newLeafNode(otherlv_2, grammarAccess.getAllOrAnyExpressionAccess().getSOMEKeyword_0_2());
			}
		)
		otherlv_3='('
		{
			newLeafNode(otherlv_3, grammarAccess.getAllOrAnyExpressionAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAllOrAnyExpressionAccess().getSubQuerySubQueryParserRuleCall_2_0());
				}
				lv_subQuery_4_0=ruleSubQuery
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAllOrAnyExpressionRule());
					}
					set(
						$current,
						"subQuery",
						lv_subQuery_4_0,
						"jpaqldsl.JPAQLDsl.SubQuery");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getAllOrAnyExpressionAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleComparisonExpression
entryRuleComparisonExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComparisonExpressionRule()); }
	iv_ruleComparisonExpression=ruleComparisonExpression
	{ $current=$iv_ruleComparisonExpression.current; }
	EOF;

// Rule ComparisonExpression
ruleComparisonExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getComparisonExpressionAccess().getPrimaryStringExpressionStringExpressionParserRuleCall_0_0_0());
					}
					lv_primaryStringExpression_0_0=ruleStringExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getComparisonExpressionRule());
						}
						set(
							$current,
							"primaryStringExpression",
							lv_primaryStringExpression_0_0,
							"jpaqldsl.JPAQLDsl.StringExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getComparisonExpressionAccess().getComparisonOperatorComparisonOperatorParserRuleCall_0_1_0());
					}
					lv_comparisonOperator_1_0=ruleComparisonOperator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getComparisonExpressionRule());
						}
						set(
							$current,
							"comparisonOperator",
							lv_comparisonOperator_1_0,
							"jpaqldsl.JPAQLDsl.ComparisonOperator");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getComparisonExpressionAccess().getSecondaryStringExpressionStringExpressionParserRuleCall_0_2_0_0());
						}
						lv_secondaryStringExpression_2_0=ruleStringExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getComparisonExpressionRule());
							}
							set(
								$current,
								"secondaryStringExpression",
								lv_secondaryStringExpression_2_0,
								"jpaqldsl.JPAQLDsl.StringExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getComparisonExpressionAccess().getAllOrAnyExpressionAllOrAnyExpressionParserRuleCall_0_2_1_0());
						}
						lv_allOrAnyExpression_3_0=ruleAllOrAnyExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getComparisonExpressionRule());
							}
							set(
								$current,
								"allOrAnyExpression",
								lv_allOrAnyExpression_3_0,
								"jpaqldsl.JPAQLDsl.AllOrAnyExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getComparisonExpressionAccess().getPrimaryBooleanExpressionBooleanExpressionParserRuleCall_1_0_0());
					}
					lv_primaryBooleanExpression_4_0=ruleBooleanExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getComparisonExpressionRule());
						}
						set(
							$current,
							"primaryBooleanExpression",
							lv_primaryBooleanExpression_4_0,
							"jpaqldsl.JPAQLDsl.BooleanExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_5='='
				{
					newLeafNode(otherlv_5, grammarAccess.getComparisonExpressionAccess().getEqualsSignKeyword_1_1_0());
				}
				    |
				otherlv_6='<>'
				{
					newLeafNode(otherlv_6, grammarAccess.getComparisonExpressionAccess().getLessThanSignGreaterThanSignKeyword_1_1_1());
				}
			)
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getComparisonExpressionAccess().getSecondaryBooleanExpressionBooleanExpressionParserRuleCall_1_2_0_0());
						}
						lv_secondaryBooleanExpression_7_0=ruleBooleanExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getComparisonExpressionRule());
							}
							set(
								$current,
								"secondaryBooleanExpression",
								lv_secondaryBooleanExpression_7_0,
								"jpaqldsl.JPAQLDsl.BooleanExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getComparisonExpressionAccess().getAllOrAnyExpressionAllOrAnyExpressionParserRuleCall_1_2_1_0());
						}
						lv_allOrAnyExpression_8_0=ruleAllOrAnyExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getComparisonExpressionRule());
							}
							set(
								$current,
								"allOrAnyExpression",
								lv_allOrAnyExpression_8_0,
								"jpaqldsl.JPAQLDsl.AllOrAnyExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getComparisonExpressionAccess().getPrimaryEnumExpressionEnumExpressionParserRuleCall_2_0_0());
					}
					lv_primaryEnumExpression_9_0=ruleEnumExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getComparisonExpressionRule());
						}
						set(
							$current,
							"primaryEnumExpression",
							lv_primaryEnumExpression_9_0,
							"jpaqldsl.JPAQLDsl.EnumExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_10='='
				{
					newLeafNode(otherlv_10, grammarAccess.getComparisonExpressionAccess().getEqualsSignKeyword_2_1_0());
				}
				    |
				otherlv_11='<>'
				{
					newLeafNode(otherlv_11, grammarAccess.getComparisonExpressionAccess().getLessThanSignGreaterThanSignKeyword_2_1_1());
				}
			)
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getComparisonExpressionAccess().getSecondaryEnumExpressionEnumExpressionParserRuleCall_2_2_0_0());
						}
						lv_secondaryEnumExpression_12_0=ruleEnumExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getComparisonExpressionRule());
							}
							set(
								$current,
								"secondaryEnumExpression",
								lv_secondaryEnumExpression_12_0,
								"jpaqldsl.JPAQLDsl.EnumExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getComparisonExpressionAccess().getAllOrAnyExpressionAllOrAnyExpressionParserRuleCall_2_2_1_0());
						}
						lv_allOrAnyExpression_13_0=ruleAllOrAnyExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getComparisonExpressionRule());
							}
							set(
								$current,
								"allOrAnyExpression",
								lv_allOrAnyExpression_13_0,
								"jpaqldsl.JPAQLDsl.AllOrAnyExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getComparisonExpressionAccess().getPrimaryDatetimeExpressionDateTimeExpressionParserRuleCall_3_0_0());
					}
					lv_primaryDatetimeExpression_14_0=ruleDateTimeExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getComparisonExpressionRule());
						}
						set(
							$current,
							"primaryDatetimeExpression",
							lv_primaryDatetimeExpression_14_0,
							"jpaqldsl.JPAQLDsl.DateTimeExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getComparisonExpressionAccess().getComparisonOperatorComparisonOperatorParserRuleCall_3_1_0());
					}
					lv_comparisonOperator_15_0=ruleComparisonOperator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getComparisonExpressionRule());
						}
						set(
							$current,
							"comparisonOperator",
							lv_comparisonOperator_15_0,
							"jpaqldsl.JPAQLDsl.ComparisonOperator");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getComparisonExpressionAccess().getSecondaryDatetimeExpressionDateTimeExpressionParserRuleCall_3_2_0_0());
						}
						lv_secondaryDatetimeExpression_16_0=ruleDateTimeExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getComparisonExpressionRule());
							}
							set(
								$current,
								"secondaryDatetimeExpression",
								lv_secondaryDatetimeExpression_16_0,
								"jpaqldsl.JPAQLDsl.DateTimeExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getComparisonExpressionAccess().getAllOrAnyExpressionAllOrAnyExpressionParserRuleCall_3_2_1_0());
						}
						lv_allOrAnyExpression_17_0=ruleAllOrAnyExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getComparisonExpressionRule());
							}
							set(
								$current,
								"allOrAnyExpression",
								lv_allOrAnyExpression_17_0,
								"jpaqldsl.JPAQLDsl.AllOrAnyExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getComparisonExpressionAccess().getPrimaryEntityExpressionEntityExpressionParserRuleCall_4_0_0());
					}
					lv_primaryEntityExpression_18_0=ruleEntityExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getComparisonExpressionRule());
						}
						set(
							$current,
							"primaryEntityExpression",
							lv_primaryEntityExpression_18_0,
							"jpaqldsl.JPAQLDsl.EntityExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_19='='
				{
					newLeafNode(otherlv_19, grammarAccess.getComparisonExpressionAccess().getEqualsSignKeyword_4_1_0());
				}
				    |
				otherlv_20='<>'
				{
					newLeafNode(otherlv_20, grammarAccess.getComparisonExpressionAccess().getLessThanSignGreaterThanSignKeyword_4_1_1());
				}
			)
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getComparisonExpressionAccess().getSecondaryEntityExpressionEntityExpressionParserRuleCall_4_2_0_0());
						}
						lv_secondaryEntityExpression_21_0=ruleEntityExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getComparisonExpressionRule());
							}
							set(
								$current,
								"secondaryEntityExpression",
								lv_secondaryEntityExpression_21_0,
								"jpaqldsl.JPAQLDsl.EntityExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getComparisonExpressionAccess().getAllOrAnyExpressionAllOrAnyExpressionParserRuleCall_4_2_1_0());
						}
						lv_allOrAnyExpression_22_0=ruleAllOrAnyExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getComparisonExpressionRule());
							}
							set(
								$current,
								"allOrAnyExpression",
								lv_allOrAnyExpression_22_0,
								"jpaqldsl.JPAQLDsl.AllOrAnyExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getComparisonExpressionAccess().getPrimaryArithmeticExpressionArithmeticExpressionParserRuleCall_5_0_0());
					}
					lv_primaryArithmeticExpression_23_0=ruleArithmeticExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getComparisonExpressionRule());
						}
						set(
							$current,
							"primaryArithmeticExpression",
							lv_primaryArithmeticExpression_23_0,
							"jpaqldsl.JPAQLDsl.ArithmeticExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getComparisonExpressionAccess().getComparisonOperatorComparisonOperatorParserRuleCall_5_1_0());
					}
					lv_comparisonOperator_24_0=ruleComparisonOperator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getComparisonExpressionRule());
						}
						set(
							$current,
							"comparisonOperator",
							lv_comparisonOperator_24_0,
							"jpaqldsl.JPAQLDsl.ComparisonOperator");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getComparisonExpressionAccess().getSecondaryArithmeticExpressionArithmeticExpressionParserRuleCall_5_2_0_0());
						}
						lv_secondaryArithmeticExpression_25_0=ruleArithmeticExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getComparisonExpressionRule());
							}
							set(
								$current,
								"secondaryArithmeticExpression",
								lv_secondaryArithmeticExpression_25_0,
								"jpaqldsl.JPAQLDsl.ArithmeticExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getComparisonExpressionAccess().getAllOrAnyExpressionAllOrAnyExpressionParserRuleCall_5_2_1_0());
						}
						lv_allOrAnyExpression_26_0=ruleAllOrAnyExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getComparisonExpressionRule());
							}
							set(
								$current,
								"allOrAnyExpression",
								lv_allOrAnyExpression_26_0,
								"jpaqldsl.JPAQLDsl.AllOrAnyExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)
	)
;

// Entry rule entryRuleComparisonOperator
entryRuleComparisonOperator returns [String current=null]:
	{ newCompositeNode(grammarAccess.getComparisonOperatorRule()); }
	iv_ruleComparisonOperator=ruleComparisonOperator
	{ $current=$iv_ruleComparisonOperator.current.getText(); }
	EOF;

// Rule ComparisonOperator
ruleComparisonOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getComparisonOperatorAccess().getEqualsSignKeyword_0());
		}
		    |
		kw='>'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getComparisonOperatorAccess().getGreaterThanSignKeyword_1());
		}
		    |
		kw='>='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getComparisonOperatorAccess().getGreaterThanSignEqualsSignKeyword_2());
		}
		    |
		kw='<'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getComparisonOperatorAccess().getLessThanSignKeyword_3());
		}
		    |
		kw='<='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getComparisonOperatorAccess().getLessThanSignEqualsSignKeyword_4());
		}
		    |
		kw='<>'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getComparisonOperatorAccess().getLessThanSignGreaterThanSignKeyword_5());
		}
	)
;

// Entry rule entryRuleArithmeticExpression
entryRuleArithmeticExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArithmeticExpressionRule()); }
	iv_ruleArithmeticExpression=ruleArithmeticExpression
	{ $current=$iv_ruleArithmeticExpression.current; }
	EOF;

// Rule ArithmeticExpression
ruleArithmeticExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getArithmeticExpressionAccess().getSimpleArithmeticExpressionSimpleArithmeticExpressionParserRuleCall_0_0());
				}
				lv_simpleArithmeticExpression_0_0=ruleSimpleArithmeticExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArithmeticExpressionRule());
					}
					set(
						$current,
						"simpleArithmeticExpression",
						lv_simpleArithmeticExpression_0_0,
						"jpaqldsl.JPAQLDsl.SimpleArithmeticExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			otherlv_1='('
			{
				newLeafNode(otherlv_1, grammarAccess.getArithmeticExpressionAccess().getLeftParenthesisKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getArithmeticExpressionAccess().getSubQuerySubQueryParserRuleCall_1_1_0());
					}
					lv_subQuery_2_0=ruleSubQuery
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getArithmeticExpressionRule());
						}
						set(
							$current,
							"subQuery",
							lv_subQuery_2_0,
							"jpaqldsl.JPAQLDsl.SubQuery");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_3=')'
			{
				newLeafNode(otherlv_3, grammarAccess.getArithmeticExpressionAccess().getRightParenthesisKeyword_1_2());
			}
		)
	)
;

// Entry rule entryRuleSimpleArithmeticExpression
entryRuleSimpleArithmeticExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimpleArithmeticExpressionRule()); }
	iv_ruleSimpleArithmeticExpression=ruleSimpleArithmeticExpression
	{ $current=$iv_ruleSimpleArithmeticExpression.current; }
	EOF;

// Rule SimpleArithmeticExpression
ruleSimpleArithmeticExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSimpleArithmeticExpressionAccess().getArithmeticTermArithmeticTermParserRuleCall_0_0());
				}
				lv_arithmeticTerm_0_0=ruleArithmeticTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimpleArithmeticExpressionRule());
					}
					set(
						$current,
						"arithmeticTerm",
						lv_arithmeticTerm_0_0,
						"jpaqldsl.JPAQLDsl.ArithmeticTerm");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			{
				/* */
			}
			{
				newCompositeNode(grammarAccess.getSimpleArithmeticExpressionAccess().getArithmeticTermParserRuleCall_1_0());
			}
			this_ArithmeticTerm_1=ruleArithmeticTerm
			{
				$current = $this_ArithmeticTerm_1.current;
				afterParserOrEnumRuleCall();
			}
			(
				(
					{
						/* */
					}
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getSimpleArithmeticExpressionAccess().getSimpleArithmeticExpressionLeftAction_1_1_0(),
							$current);
					}
				)
				(
					otherlv_3='+'
					{
						newLeafNode(otherlv_3, grammarAccess.getSimpleArithmeticExpressionAccess().getPlusSignKeyword_1_1_1_0());
					}
					    |
					otherlv_4='-'
					{
						newLeafNode(otherlv_4, grammarAccess.getSimpleArithmeticExpressionAccess().getHyphenMinusKeyword_1_1_1_1());
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getSimpleArithmeticExpressionAccess().getRightArithmeticTermParserRuleCall_1_1_2_0());
						}
						lv_right_5_0=ruleArithmeticTerm
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSimpleArithmeticExpressionRule());
							}
							set(
								$current,
								"right",
								lv_right_5_0,
								"jpaqldsl.JPAQLDsl.ArithmeticTerm");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)
	)
;

// Entry rule entryRuleArithmeticTerm
entryRuleArithmeticTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArithmeticTermRule()); }
	iv_ruleArithmeticTerm=ruleArithmeticTerm
	{ $current=$iv_ruleArithmeticTerm.current; }
	EOF;

// Rule ArithmeticTerm
ruleArithmeticTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getArithmeticTermAccess().getArithmeticFactorArithmeticFactorParserRuleCall_0_0());
				}
				lv_arithmeticFactor_0_0=ruleArithmeticFactor
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArithmeticTermRule());
					}
					set(
						$current,
						"arithmeticFactor",
						lv_arithmeticFactor_0_0,
						"jpaqldsl.JPAQLDsl.ArithmeticFactor");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			{
				/* */
			}
			{
				newCompositeNode(grammarAccess.getArithmeticTermAccess().getArithmeticFactorParserRuleCall_1_0());
			}
			this_ArithmeticFactor_1=ruleArithmeticFactor
			{
				$current = $this_ArithmeticFactor_1.current;
				afterParserOrEnumRuleCall();
			}
			(
				(
					{
						/* */
					}
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getArithmeticTermAccess().getArithmeticTermLeftAction_1_1_0(),
							$current);
					}
				)
				(
					otherlv_3='*'
					{
						newLeafNode(otherlv_3, grammarAccess.getArithmeticTermAccess().getAsteriskKeyword_1_1_1_0());
					}
					    |
					otherlv_4='/'
					{
						newLeafNode(otherlv_4, grammarAccess.getArithmeticTermAccess().getSolidusKeyword_1_1_1_1());
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getArithmeticTermAccess().getRightArithmeticFactorParserRuleCall_1_1_2_0());
						}
						lv_right_5_0=ruleArithmeticFactor
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getArithmeticTermRule());
							}
							set(
								$current,
								"right",
								lv_right_5_0,
								"jpaqldsl.JPAQLDsl.ArithmeticFactor");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)
	)
;

// Entry rule entryRuleArithmeticFactor
entryRuleArithmeticFactor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArithmeticFactorRule()); }
	iv_ruleArithmeticFactor=ruleArithmeticFactor
	{ $current=$iv_ruleArithmeticFactor.current; }
	EOF;

// Rule ArithmeticFactor
ruleArithmeticFactor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='+'
			{
				newLeafNode(otherlv_0, grammarAccess.getArithmeticFactorAccess().getPlusSignKeyword_0_0());
			}
			    |
			otherlv_1='-'
			{
				newLeafNode(otherlv_1, grammarAccess.getArithmeticFactorAccess().getHyphenMinusKeyword_0_1());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getArithmeticFactorAccess().getArithmeticPrimaryArithmeticPrimaryParserRuleCall_1_0());
				}
				lv_arithmeticPrimary_2_0=ruleArithmeticPrimary
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArithmeticFactorRule());
					}
					set(
						$current,
						"arithmeticPrimary",
						lv_arithmeticPrimary_2_0,
						"jpaqldsl.JPAQLDsl.ArithmeticPrimary");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleArithmeticPrimary
entryRuleArithmeticPrimary returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArithmeticPrimaryRule()); }
	iv_ruleArithmeticPrimary=ruleArithmeticPrimary
	{ $current=$iv_ruleArithmeticPrimary.current; }
	EOF;

// Rule ArithmeticPrimary
ruleArithmeticPrimary returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getArithmeticPrimaryAccess().getPathExpressionJPAPathExpressionParserRuleCall_0_0());
				}
				lv_pathExpression_0_0=ruleJPAPathExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArithmeticPrimaryRule());
					}
					set(
						$current,
						"pathExpression",
						lv_pathExpression_0_0,
						"jpaqldsl.JPAQLDsl.JPAPathExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getArithmeticPrimaryAccess().getNumericLiteralNumericLiteralParserRuleCall_1_0());
				}
				lv_numericLiteral_1_0=ruleNumericLiteral
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArithmeticPrimaryRule());
					}
					set(
						$current,
						"numericLiteral",
						lv_numericLiteral_1_0,
						"jpaqldsl.JPAQLDsl.NumericLiteral");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			otherlv_2='('
			{
				newLeafNode(otherlv_2, grammarAccess.getArithmeticPrimaryAccess().getLeftParenthesisKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getArithmeticPrimaryAccess().getSimpleArithmeticExpressionSimpleArithmeticExpressionParserRuleCall_2_1_0());
					}
					lv_simpleArithmeticExpression_3_0=ruleSimpleArithmeticExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getArithmeticPrimaryRule());
						}
						set(
							$current,
							"simpleArithmeticExpression",
							lv_simpleArithmeticExpression_3_0,
							"jpaqldsl.JPAQLDsl.SimpleArithmeticExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_4=')'
			{
				newLeafNode(otherlv_4, grammarAccess.getArithmeticPrimaryAccess().getRightParenthesisKeyword_2_2());
			}
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getArithmeticPrimaryAccess().getInputParameterInputParameterParserRuleCall_3_0());
				}
				lv_inputParameter_5_0=ruleInputParameter
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArithmeticPrimaryRule());
					}
					set(
						$current,
						"inputParameter",
						lv_inputParameter_5_0,
						"jpaqldsl.JPAQLDsl.InputParameter");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getArithmeticPrimaryAccess().getFunctionsReturningNumericsFunctionsReturningNumericsParserRuleCall_4_0());
				}
				lv_functionsReturningNumerics_6_0=ruleFunctionsReturningNumerics
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArithmeticPrimaryRule());
					}
					set(
						$current,
						"functionsReturningNumerics",
						lv_functionsReturningNumerics_6_0,
						"jpaqldsl.JPAQLDsl.FunctionsReturningNumerics");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getArithmeticPrimaryAccess().getAggregateExpressionAggregateExpressionParserRuleCall_5_0());
				}
				lv_aggregateExpression_7_0=ruleAggregateExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArithmeticPrimaryRule());
					}
					set(
						$current,
						"aggregateExpression",
						lv_aggregateExpression_7_0,
						"jpaqldsl.JPAQLDsl.AggregateExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleStringExpression
entryRuleStringExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStringExpressionRule()); }
	iv_ruleStringExpression=ruleStringExpression
	{ $current=$iv_ruleStringExpression.current; }
	EOF;

// Rule StringExpression
ruleStringExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getStringExpressionAccess().getStringPrimaryStringPrimaryParserRuleCall_0_0());
				}
				lv_stringPrimary_0_0=ruleStringPrimary
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStringExpressionRule());
					}
					set(
						$current,
						"stringPrimary",
						lv_stringPrimary_0_0,
						"jpaqldsl.JPAQLDsl.StringPrimary");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			otherlv_1='('
			{
				newLeafNode(otherlv_1, grammarAccess.getStringExpressionAccess().getLeftParenthesisKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getStringExpressionAccess().getSubQuerySubQueryParserRuleCall_1_1_0());
					}
					lv_subQuery_2_0=ruleSubQuery
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStringExpressionRule());
						}
						set(
							$current,
							"subQuery",
							lv_subQuery_2_0,
							"jpaqldsl.JPAQLDsl.SubQuery");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_3=')'
			{
				newLeafNode(otherlv_3, grammarAccess.getStringExpressionAccess().getRightParenthesisKeyword_1_2());
			}
		)
	)
;

// Entry rule entryRuleStringPrimary
entryRuleStringPrimary returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStringPrimaryRule()); }
	iv_ruleStringPrimary=ruleStringPrimary
	{ $current=$iv_ruleStringPrimary.current; }
	EOF;

// Rule StringPrimary
ruleStringPrimary returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getStringPrimaryAccess().getPathExpressionJPAPathExpressionParserRuleCall_0_0());
				}
				lv_pathExpression_0_0=ruleJPAPathExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStringPrimaryRule());
					}
					set(
						$current,
						"pathExpression",
						lv_pathExpression_0_0,
						"jpaqldsl.JPAQLDsl.JPAPathExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getStringPrimaryAccess().getStringLiteralStringLiteralParserRuleCall_1_0());
				}
				lv_stringLiteral_1_0=ruleStringLiteral
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStringPrimaryRule());
					}
					set(
						$current,
						"stringLiteral",
						lv_stringLiteral_1_0,
						"jpaqldsl.JPAQLDsl.StringLiteral");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getStringPrimaryAccess().getInputParamaterInputParameterParserRuleCall_2_0());
				}
				lv_inputParamater_2_0=ruleInputParameter
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStringPrimaryRule());
					}
					set(
						$current,
						"inputParamater",
						lv_inputParamater_2_0,
						"jpaqldsl.JPAQLDsl.InputParameter");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getStringPrimaryAccess().getFunctionsReturningStringsFunctionsReturningStringsParserRuleCall_3_0());
				}
				lv_functionsReturningStrings_3_0=ruleFunctionsReturningStrings
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStringPrimaryRule());
					}
					set(
						$current,
						"functionsReturningStrings",
						lv_functionsReturningStrings_3_0,
						"jpaqldsl.JPAQLDsl.FunctionsReturningStrings");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getStringPrimaryAccess().getAggregateExpressionAggregateExpressionParserRuleCall_4_0());
				}
				lv_aggregateExpression_4_0=ruleAggregateExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStringPrimaryRule());
					}
					set(
						$current,
						"aggregateExpression",
						lv_aggregateExpression_4_0,
						"jpaqldsl.JPAQLDsl.AggregateExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleDateTimeExpression
entryRuleDateTimeExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDateTimeExpressionRule()); }
	iv_ruleDateTimeExpression=ruleDateTimeExpression
	{ $current=$iv_ruleDateTimeExpression.current; }
	EOF;

// Rule DateTimeExpression
ruleDateTimeExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getDateTimeExpressionAccess().getDateTimePrimaryDateTimePrimaryParserRuleCall_0_0());
				}
				lv_dateTimePrimary_0_0=ruleDateTimePrimary
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDateTimeExpressionRule());
					}
					set(
						$current,
						"dateTimePrimary",
						lv_dateTimePrimary_0_0,
						"jpaqldsl.JPAQLDsl.DateTimePrimary");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			otherlv_1='('
			{
				newLeafNode(otherlv_1, grammarAccess.getDateTimeExpressionAccess().getLeftParenthesisKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDateTimeExpressionAccess().getSubQuerySubQueryParserRuleCall_1_1_0());
					}
					lv_subQuery_2_0=ruleSubQuery
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDateTimeExpressionRule());
						}
						set(
							$current,
							"subQuery",
							lv_subQuery_2_0,
							"jpaqldsl.JPAQLDsl.SubQuery");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_3=')'
			{
				newLeafNode(otherlv_3, grammarAccess.getDateTimeExpressionAccess().getRightParenthesisKeyword_1_2());
			}
		)
	)
;

// Entry rule entryRuleDateTimePrimary
entryRuleDateTimePrimary returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDateTimePrimaryRule()); }
	iv_ruleDateTimePrimary=ruleDateTimePrimary
	{ $current=$iv_ruleDateTimePrimary.current; }
	EOF;

// Rule DateTimePrimary
ruleDateTimePrimary returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getDateTimePrimaryAccess().getPathExpressionJPAPathExpressionParserRuleCall_0_0());
				}
				lv_pathExpression_0_0=ruleJPAPathExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDateTimePrimaryRule());
					}
					set(
						$current,
						"pathExpression",
						lv_pathExpression_0_0,
						"jpaqldsl.JPAQLDsl.JPAPathExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getDateTimePrimaryAccess().getInputParameterInputParameterParserRuleCall_1_0());
				}
				lv_inputParameter_1_0=ruleInputParameter
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDateTimePrimaryRule());
					}
					set(
						$current,
						"inputParameter",
						lv_inputParameter_1_0,
						"jpaqldsl.JPAQLDsl.InputParameter");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getDateTimePrimaryAccess().getFunctionsReturningDateTimeFunctionsReturningDateTimeParserRuleCall_2_0());
				}
				lv_functionsReturningDateTime_2_0=ruleFunctionsReturningDateTime
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDateTimePrimaryRule());
					}
					set(
						$current,
						"functionsReturningDateTime",
						lv_functionsReturningDateTime_2_0,
						"jpaqldsl.JPAQLDsl.FunctionsReturningDateTime");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getDateTimePrimaryAccess().getAggregateExpressionAggregateExpressionParserRuleCall_3_0());
				}
				lv_aggregateExpression_3_0=ruleAggregateExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDateTimePrimaryRule());
					}
					set(
						$current,
						"aggregateExpression",
						lv_aggregateExpression_3_0,
						"jpaqldsl.JPAQLDsl.AggregateExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleBooleanExpression
entryRuleBooleanExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanExpressionRule()); }
	iv_ruleBooleanExpression=ruleBooleanExpression
	{ $current=$iv_ruleBooleanExpression.current; }
	EOF;

// Rule BooleanExpression
ruleBooleanExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getBooleanExpressionAccess().getBooleanPrimaryBooleanPrimaryParserRuleCall_0_0());
				}
				lv_booleanPrimary_0_0=ruleBooleanPrimary
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBooleanExpressionRule());
					}
					set(
						$current,
						"booleanPrimary",
						lv_booleanPrimary_0_0,
						"jpaqldsl.JPAQLDsl.BooleanPrimary");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			otherlv_1='('
			{
				newLeafNode(otherlv_1, grammarAccess.getBooleanExpressionAccess().getLeftParenthesisKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBooleanExpressionAccess().getSubQuerySubQueryParserRuleCall_1_1_0());
					}
					lv_subQuery_2_0=ruleSubQuery
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBooleanExpressionRule());
						}
						set(
							$current,
							"subQuery",
							lv_subQuery_2_0,
							"jpaqldsl.JPAQLDsl.SubQuery");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_3=')'
			{
				newLeafNode(otherlv_3, grammarAccess.getBooleanExpressionAccess().getRightParenthesisKeyword_1_2());
			}
		)
	)
;

// Entry rule entryRuleBooleanPrimary
entryRuleBooleanPrimary returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanPrimaryRule()); }
	iv_ruleBooleanPrimary=ruleBooleanPrimary
	{ $current=$iv_ruleBooleanPrimary.current; }
	EOF;

// Rule BooleanPrimary
ruleBooleanPrimary returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getBooleanPrimaryAccess().getPathExpressionJPAPathExpressionParserRuleCall_0_0());
				}
				lv_pathExpression_0_0=ruleJPAPathExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBooleanPrimaryRule());
					}
					set(
						$current,
						"pathExpression",
						lv_pathExpression_0_0,
						"jpaqldsl.JPAQLDsl.JPAPathExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getBooleanPrimaryAccess().getBooleanLiteralBooleanLiteralParserRuleCall_1_0());
				}
				lv_booleanLiteral_1_0=ruleBooleanLiteral
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBooleanPrimaryRule());
					}
					set(
						$current,
						"booleanLiteral",
						lv_booleanLiteral_1_0,
						"jpaqldsl.JPAQLDsl.BooleanLiteral");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getBooleanPrimaryAccess().getInputParameterInputParameterParserRuleCall_2_0());
				}
				lv_inputParameter_2_0=ruleInputParameter
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBooleanPrimaryRule());
					}
					set(
						$current,
						"inputParameter",
						lv_inputParameter_2_0,
						"jpaqldsl.JPAQLDsl.InputParameter");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleEnumExpression
entryRuleEnumExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnumExpressionRule()); }
	iv_ruleEnumExpression=ruleEnumExpression
	{ $current=$iv_ruleEnumExpression.current; }
	EOF;

// Rule EnumExpression
ruleEnumExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getEnumExpressionAccess().getEnumPrimaryEnumPrimaryParserRuleCall_0_0());
				}
				lv_enumPrimary_0_0=ruleEnumPrimary
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEnumExpressionRule());
					}
					set(
						$current,
						"enumPrimary",
						lv_enumPrimary_0_0,
						"jpaqldsl.JPAQLDsl.EnumPrimary");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			otherlv_1='('
			{
				newLeafNode(otherlv_1, grammarAccess.getEnumExpressionAccess().getLeftParenthesisKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEnumExpressionAccess().getSubQuerySubQueryParserRuleCall_1_1_0());
					}
					lv_subQuery_2_0=ruleSubQuery
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEnumExpressionRule());
						}
						set(
							$current,
							"subQuery",
							lv_subQuery_2_0,
							"jpaqldsl.JPAQLDsl.SubQuery");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_3=')'
			{
				newLeafNode(otherlv_3, grammarAccess.getEnumExpressionAccess().getRightParenthesisKeyword_1_2());
			}
		)
	)
;

// Entry rule entryRuleEnumPrimary
entryRuleEnumPrimary returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnumPrimaryRule()); }
	iv_ruleEnumPrimary=ruleEnumPrimary
	{ $current=$iv_ruleEnumPrimary.current; }
	EOF;

// Rule EnumPrimary
ruleEnumPrimary returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getEnumPrimaryAccess().getPathExpressionJPAPathExpressionParserRuleCall_0_0());
				}
				lv_pathExpression_0_0=ruleJPAPathExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEnumPrimaryRule());
					}
					set(
						$current,
						"pathExpression",
						lv_pathExpression_0_0,
						"jpaqldsl.JPAQLDsl.JPAPathExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getEnumPrimaryAccess().getEnumLiteralEnumLiteralParserRuleCall_1_0());
				}
				lv_enumLiteral_1_0=ruleEnumLiteral
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEnumPrimaryRule());
					}
					set(
						$current,
						"enumLiteral",
						lv_enumLiteral_1_0,
						"jpaqldsl.JPAQLDsl.EnumLiteral");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getEnumPrimaryAccess().getInputParameterInputParameterParserRuleCall_2_0());
				}
				lv_inputParameter_2_0=ruleInputParameter
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEnumPrimaryRule());
					}
					set(
						$current,
						"inputParameter",
						lv_inputParameter_2_0,
						"jpaqldsl.JPAQLDsl.InputParameter");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleEntityExpression
entryRuleEntityExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEntityExpressionRule()); }
	iv_ruleEntityExpression=ruleEntityExpression
	{ $current=$iv_ruleEntityExpression.current; }
	EOF;

// Rule EntityExpression
ruleEntityExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getEntityExpressionAccess().getPathExpressionJPAPathExpressionParserRuleCall_0_0());
				}
				lv_pathExpression_0_0=ruleJPAPathExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEntityExpressionRule());
					}
					set(
						$current,
						"pathExpression",
						lv_pathExpression_0_0,
						"jpaqldsl.JPAQLDsl.JPAPathExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getEntityExpressionAccess().getSimpleEntityExpressionSimpleEntityExpressionParserRuleCall_1_0());
				}
				lv_simpleEntityExpression_1_0=ruleSimpleEntityExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEntityExpressionRule());
					}
					set(
						$current,
						"simpleEntityExpression",
						lv_simpleEntityExpression_1_0,
						"jpaqldsl.JPAQLDsl.SimpleEntityExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSimpleEntityExpression
entryRuleSimpleEntityExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimpleEntityExpressionRule()); }
	iv_ruleSimpleEntityExpression=ruleSimpleEntityExpression
	{ $current=$iv_ruleSimpleEntityExpression.current; }
	EOF;

// Rule SimpleEntityExpression
ruleSimpleEntityExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSimpleEntityExpressionAccess().getIdentificationVariableIdentificationVariableParserRuleCall_0_0());
				}
				lv_identificationVariable_0_0=ruleIdentificationVariable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimpleEntityExpressionRule());
					}
					set(
						$current,
						"identificationVariable",
						lv_identificationVariable_0_0,
						"jpaqldsl.JPAQLDsl.IdentificationVariable");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getSimpleEntityExpressionAccess().getInputParameterInputParameterParserRuleCall_1_0());
				}
				lv_inputParameter_1_0=ruleInputParameter
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimpleEntityExpressionRule());
					}
					set(
						$current,
						"inputParameter",
						lv_inputParameter_1_0,
						"jpaqldsl.JPAQLDsl.InputParameter");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFunctionsReturningNumerics
entryRuleFunctionsReturningNumerics returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionsReturningNumericsRule()); }
	iv_ruleFunctionsReturningNumerics=ruleFunctionsReturningNumerics
	{ $current=$iv_ruleFunctionsReturningNumerics.current; }
	EOF;

// Rule FunctionsReturningNumerics
ruleFunctionsReturningNumerics returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='LENGTH'
			{
				newLeafNode(otherlv_0, grammarAccess.getFunctionsReturningNumericsAccess().getLENGTHKeyword_0_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFunctionsReturningNumericsAccess().getStringPrimaryStringPrimaryParserRuleCall_0_1_0());
					}
					lv_stringPrimary_1_0=ruleStringPrimary
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFunctionsReturningNumericsRule());
						}
						set(
							$current,
							"stringPrimary",
							lv_stringPrimary_1_0,
							"jpaqldsl.JPAQLDsl.StringPrimary");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			otherlv_2='LOCATE'
			{
				newLeafNode(otherlv_2, grammarAccess.getFunctionsReturningNumericsAccess().getLOCATEKeyword_1_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getFunctionsReturningNumericsAccess().getStringPrimaryStringPrimaryParserRuleCall_1_1_0_0());
						}
						lv_stringPrimary_3_0=ruleStringPrimary
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFunctionsReturningNumericsRule());
							}
							set(
								$current,
								"stringPrimary",
								lv_stringPrimary_3_0,
								"jpaqldsl.JPAQLDsl.StringPrimary");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getFunctionsReturningNumericsAccess().getCommaKeyword_1_1_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getFunctionsReturningNumericsAccess().getStringSecondaryStringPrimaryParserRuleCall_1_1_2_0());
						}
						lv_stringSecondary_5_0=ruleStringPrimary
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFunctionsReturningNumericsRule());
							}
							set(
								$current,
								"stringSecondary",
								lv_stringSecondary_5_0,
								"jpaqldsl.JPAQLDsl.StringPrimary");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_6=','
					{
						newLeafNode(otherlv_6, grammarAccess.getFunctionsReturningNumericsAccess().getCommaKeyword_1_1_3_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getFunctionsReturningNumericsAccess().getSimpleArithmeticExpressionSimpleArithmeticExpressionParserRuleCall_1_1_3_1_0());
							}
							lv_simpleArithmeticExpression_7_0=ruleSimpleArithmeticExpression
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getFunctionsReturningNumericsRule());
								}
								set(
									$current,
									"simpleArithmeticExpression",
									lv_simpleArithmeticExpression_7_0,
									"jpaqldsl.JPAQLDsl.SimpleArithmeticExpression");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)?
			)
		)
		    |
		(
			otherlv_8='ABS'
			{
				newLeafNode(otherlv_8, grammarAccess.getFunctionsReturningNumericsAccess().getABSKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFunctionsReturningNumericsAccess().getSimpleArithmeticExpressionSimpleArithmeticExpressionParserRuleCall_2_1_0());
					}
					lv_simpleArithmeticExpression_9_0=ruleSimpleArithmeticExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFunctionsReturningNumericsRule());
						}
						set(
							$current,
							"simpleArithmeticExpression",
							lv_simpleArithmeticExpression_9_0,
							"jpaqldsl.JPAQLDsl.SimpleArithmeticExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			otherlv_10='SQRT'
			{
				newLeafNode(otherlv_10, grammarAccess.getFunctionsReturningNumericsAccess().getSQRTKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFunctionsReturningNumericsAccess().getSimpleArithmeticExpressionSimpleArithmeticExpressionParserRuleCall_3_1_0());
					}
					lv_simpleArithmeticExpression_11_0=ruleSimpleArithmeticExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFunctionsReturningNumericsRule());
						}
						set(
							$current,
							"simpleArithmeticExpression",
							lv_simpleArithmeticExpression_11_0,
							"jpaqldsl.JPAQLDsl.SimpleArithmeticExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			otherlv_12='MOD'
			{
				newLeafNode(otherlv_12, grammarAccess.getFunctionsReturningNumericsAccess().getMODKeyword_4_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getFunctionsReturningNumericsAccess().getPrimarySimpleArithmeticExpressionSimpleArithmeticExpressionParserRuleCall_4_1_0_0());
						}
						lv_primarySimpleArithmeticExpression_13_0=ruleSimpleArithmeticExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFunctionsReturningNumericsRule());
							}
							set(
								$current,
								"primarySimpleArithmeticExpression",
								lv_primarySimpleArithmeticExpression_13_0,
								"jpaqldsl.JPAQLDsl.SimpleArithmeticExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_14=','
				{
					newLeafNode(otherlv_14, grammarAccess.getFunctionsReturningNumericsAccess().getCommaKeyword_4_1_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getFunctionsReturningNumericsAccess().getSecondarySimpleArithmeticExpressionSimpleArithmeticExpressionParserRuleCall_4_1_2_0());
						}
						lv_secondarySimpleArithmeticExpression_15_0=ruleSimpleArithmeticExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFunctionsReturningNumericsRule());
							}
							set(
								$current,
								"secondarySimpleArithmeticExpression",
								lv_secondarySimpleArithmeticExpression_15_0,
								"jpaqldsl.JPAQLDsl.SimpleArithmeticExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)
		    |
		(
			otherlv_16='SIZE'
			{
				newLeafNode(otherlv_16, grammarAccess.getFunctionsReturningNumericsAccess().getSIZEKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFunctionsReturningNumericsAccess().getPathExpressionJPAPathExpressionParserRuleCall_5_1_0());
					}
					lv_pathExpression_17_0=ruleJPAPathExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFunctionsReturningNumericsRule());
						}
						set(
							$current,
							"pathExpression",
							lv_pathExpression_17_0,
							"jpaqldsl.JPAQLDsl.JPAPathExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleFunctionsReturningDateTime
entryRuleFunctionsReturningDateTime returns [String current=null]:
	{ newCompositeNode(grammarAccess.getFunctionsReturningDateTimeRule()); }
	iv_ruleFunctionsReturningDateTime=ruleFunctionsReturningDateTime
	{ $current=$iv_ruleFunctionsReturningDateTime.current.getText(); }
	EOF;

// Rule FunctionsReturningDateTime
ruleFunctionsReturningDateTime returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='CURRENT_DATE'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getFunctionsReturningDateTimeAccess().getCURRENT_DATEKeyword_0());
		}
		    |
		kw='CURRENT_TIME'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getFunctionsReturningDateTimeAccess().getCURRENT_TIMEKeyword_1());
		}
		    |
		kw='CURRENT_TIMESTAMP'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getFunctionsReturningDateTimeAccess().getCURRENT_TIMESTAMPKeyword_2());
		}
	)
;

// Entry rule entryRuleFunctionsReturningStrings
entryRuleFunctionsReturningStrings returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionsReturningStringsRule()); }
	iv_ruleFunctionsReturningStrings=ruleFunctionsReturningStrings
	{ $current=$iv_ruleFunctionsReturningStrings.current; }
	EOF;

// Rule FunctionsReturningStrings
ruleFunctionsReturningStrings returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='CONCAT'
			{
				newLeafNode(otherlv_0, grammarAccess.getFunctionsReturningStringsAccess().getCONCATKeyword_0_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getFunctionsReturningStringsAccess().getPrimaryStringPrimaryStringPrimaryParserRuleCall_0_1_0_0());
						}
						lv_primaryStringPrimary_1_0=ruleStringPrimary
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFunctionsReturningStringsRule());
							}
							set(
								$current,
								"primaryStringPrimary",
								lv_primaryStringPrimary_1_0,
								"jpaqldsl.JPAQLDsl.StringPrimary");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_2=','
				{
					newLeafNode(otherlv_2, grammarAccess.getFunctionsReturningStringsAccess().getCommaKeyword_0_1_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getFunctionsReturningStringsAccess().getSecondaryStringPrimaryStringPrimaryParserRuleCall_0_1_2_0());
						}
						lv_secondaryStringPrimary_3_0=ruleStringPrimary
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFunctionsReturningStringsRule());
							}
							set(
								$current,
								"secondaryStringPrimary",
								lv_secondaryStringPrimary_3_0,
								"jpaqldsl.JPAQLDsl.StringPrimary");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)
		    |
		(
			otherlv_4='SUBSTRING'
			{
				newLeafNode(otherlv_4, grammarAccess.getFunctionsReturningStringsAccess().getSUBSTRINGKeyword_1_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getFunctionsReturningStringsAccess().getStringPrimaryStringPrimaryParserRuleCall_1_1_0_0());
						}
						lv_stringPrimary_5_0=ruleStringPrimary
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFunctionsReturningStringsRule());
							}
							set(
								$current,
								"stringPrimary",
								lv_stringPrimary_5_0,
								"jpaqldsl.JPAQLDsl.StringPrimary");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getFunctionsReturningStringsAccess().getCommaKeyword_1_1_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getFunctionsReturningStringsAccess().getPrimarySimpleArithmeticExpressionSimpleArithmeticExpressionParserRuleCall_1_1_2_0());
						}
						lv_primarySimpleArithmeticExpression_7_0=ruleSimpleArithmeticExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFunctionsReturningStringsRule());
							}
							set(
								$current,
								"primarySimpleArithmeticExpression",
								lv_primarySimpleArithmeticExpression_7_0,
								"jpaqldsl.JPAQLDsl.SimpleArithmeticExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_8=','
				{
					newLeafNode(otherlv_8, grammarAccess.getFunctionsReturningStringsAccess().getCommaKeyword_1_1_3());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getFunctionsReturningStringsAccess().getSecondarySimpleArithmeticExpressionSimpleArithmeticExpressionParserRuleCall_1_1_4_0());
						}
						lv_secondarySimpleArithmeticExpression_9_0=ruleSimpleArithmeticExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFunctionsReturningStringsRule());
							}
							set(
								$current,
								"secondarySimpleArithmeticExpression",
								lv_secondarySimpleArithmeticExpression_9_0,
								"jpaqldsl.JPAQLDsl.SimpleArithmeticExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)
		    |
		(
			otherlv_10='TRIM'
			{
				newLeafNode(otherlv_10, grammarAccess.getFunctionsReturningStringsAccess().getTRIMKeyword_2_0());
			}
			(
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getFunctionsReturningStringsAccess().getTrimSpecificationTrimSpecificationParserRuleCall_2_1_0_0_0());
							}
							lv_trimSpecification_11_0=ruleTrimSpecification
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getFunctionsReturningStringsRule());
								}
								set(
									$current,
									"trimSpecification",
									lv_trimSpecification_11_0,
									"jpaqldsl.JPAQLDsl.TrimSpecification");
								afterParserOrEnumRuleCall();
							}
						)
					)?
					(
						(
							{
								newCompositeNode(grammarAccess.getFunctionsReturningStringsAccess().getTrimCharacterTrimCharacterParserRuleCall_2_1_0_1_0());
							}
							lv_trimCharacter_12_0=ruleTrimCharacter
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getFunctionsReturningStringsRule());
								}
								set(
									$current,
									"trimCharacter",
									lv_trimCharacter_12_0,
									"jpaqldsl.JPAQLDsl.TrimCharacter");
								afterParserOrEnumRuleCall();
							}
						)
					)?
					otherlv_13='FROM'
					{
						newLeafNode(otherlv_13, grammarAccess.getFunctionsReturningStringsAccess().getFROMKeyword_2_1_0_2());
					}
				)?
				(
					(
						{
							newCompositeNode(grammarAccess.getFunctionsReturningStringsAccess().getStringPrimaryStringPrimaryParserRuleCall_2_1_1_0());
						}
						lv_stringPrimary_14_0=ruleStringPrimary
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFunctionsReturningStringsRule());
							}
							set(
								$current,
								"stringPrimary",
								lv_stringPrimary_14_0,
								"jpaqldsl.JPAQLDsl.StringPrimary");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)
		    |
		(
			otherlv_15='LOWER'
			{
				newLeafNode(otherlv_15, grammarAccess.getFunctionsReturningStringsAccess().getLOWERKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFunctionsReturningStringsAccess().getStringPrimaryStringPrimaryParserRuleCall_3_1_0());
					}
					lv_stringPrimary_16_0=ruleStringPrimary
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFunctionsReturningStringsRule());
						}
						set(
							$current,
							"stringPrimary",
							lv_stringPrimary_16_0,
							"jpaqldsl.JPAQLDsl.StringPrimary");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			otherlv_17='UPPER'
			{
				newLeafNode(otherlv_17, grammarAccess.getFunctionsReturningStringsAccess().getUPPERKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFunctionsReturningStringsAccess().getStringPrimaryStringPrimaryParserRuleCall_4_1_0());
					}
					lv_stringPrimary_18_0=ruleStringPrimary
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFunctionsReturningStringsRule());
						}
						set(
							$current,
							"stringPrimary",
							lv_stringPrimary_18_0,
							"jpaqldsl.JPAQLDsl.StringPrimary");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleTrimSpecification
entryRuleTrimSpecification returns [String current=null]:
	{ newCompositeNode(grammarAccess.getTrimSpecificationRule()); }
	iv_ruleTrimSpecification=ruleTrimSpecification
	{ $current=$iv_ruleTrimSpecification.current.getText(); }
	EOF;

// Rule TrimSpecification
ruleTrimSpecification returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='LEADING'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTrimSpecificationAccess().getLEADINGKeyword_0());
		}
		    |
		kw='TRAILING'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTrimSpecificationAccess().getTRAILINGKeyword_1());
		}
		    |
		kw='BOTH'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTrimSpecificationAccess().getBOTHKeyword_2());
		}
	)
;

// Entry rule entryRuleSubQuery
entryRuleSubQuery returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSubQueryRule()); }
	iv_ruleSubQuery=ruleSubQuery
	{ $current=$iv_ruleSubQuery.current; }
	EOF;

// Rule SubQuery
ruleSubQuery returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSubQueryAccess().getSimpleSelectClauseSimpleSelectClauseParserRuleCall_0_0());
				}
				lv_simpleSelectClause_0_0=ruleSimpleSelectClause
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSubQueryRule());
					}
					set(
						$current,
						"simpleSelectClause",
						lv_simpleSelectClause_0_0,
						"jpaqldsl.JPAQLDsl.SimpleSelectClause");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSubQueryAccess().getSubqueryFromClauseSubqueryFromClauseParserRuleCall_1_0());
				}
				lv_subqueryFromClause_1_0=ruleSubqueryFromClause
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSubQueryRule());
					}
					set(
						$current,
						"subqueryFromClause",
						lv_subqueryFromClause_1_0,
						"jpaqldsl.JPAQLDsl.SubqueryFromClause");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSubQueryAccess().getWhereClauseWhereClauseParserRuleCall_2_0());
				}
				lv_whereClause_2_0=ruleWhereClause
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSubQueryRule());
					}
					set(
						$current,
						"whereClause",
						lv_whereClause_2_0,
						"jpaqldsl.JPAQLDsl.WhereClause");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleSubqueryFromClause
entryRuleSubqueryFromClause returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSubqueryFromClauseRule()); }
	iv_ruleSubqueryFromClause=ruleSubqueryFromClause
	{ $current=$iv_ruleSubqueryFromClause.current; }
	EOF;

// Rule SubqueryFromClause
ruleSubqueryFromClause returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='FROM'
		{
			newLeafNode(otherlv_0, grammarAccess.getSubqueryFromClauseAccess().getFROMKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSubqueryFromClauseAccess().getSubselectIdentificationVariableDeclarationSubselectIdentificationVariableDeclarationParserRuleCall_1_0());
				}
				lv_subselectIdentificationVariableDeclaration_1_0=ruleSubselectIdentificationVariableDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSubqueryFromClauseRule());
					}
					add(
						$current,
						"subselectIdentificationVariableDeclaration",
						lv_subselectIdentificationVariableDeclaration_1_0,
						"jpaqldsl.JPAQLDsl.SubselectIdentificationVariableDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getSubqueryFromClauseAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSubqueryFromClauseAccess().getSubselectIdentificationVariableDeclarationSubselectIdentificationVariableDeclarationParserRuleCall_2_1_0());
					}
					lv_subselectIdentificationVariableDeclaration_3_0=ruleSubselectIdentificationVariableDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSubqueryFromClauseRule());
						}
						add(
							$current,
							"subselectIdentificationVariableDeclaration",
							lv_subselectIdentificationVariableDeclaration_3_0,
							"jpaqldsl.JPAQLDsl.SubselectIdentificationVariableDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleSubselectIdentificationVariableDeclaration
entryRuleSubselectIdentificationVariableDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSubselectIdentificationVariableDeclarationRule()); }
	iv_ruleSubselectIdentificationVariableDeclaration=ruleSubselectIdentificationVariableDeclaration
	{ $current=$iv_ruleSubselectIdentificationVariableDeclaration.current; }
	EOF;

// Rule SubselectIdentificationVariableDeclaration
ruleSubselectIdentificationVariableDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSubselectIdentificationVariableDeclarationAccess().getIdentificationVariableDecalarationIdentificationVariableDeclarationParserRuleCall_0_0());
				}
				lv_identificationVariableDecalaration_0_0=ruleIdentificationVariableDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSubselectIdentificationVariableDeclarationRule());
					}
					set(
						$current,
						"identificationVariableDecalaration",
						lv_identificationVariableDecalaration_0_0,
						"jpaqldsl.JPAQLDsl.IdentificationVariableDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getSubselectIdentificationVariableDeclarationAccess().getAssociationPathExpressionJPAPathExpressionParserRuleCall_1_0_0());
					}
					lv_associationPathExpression_1_0=ruleJPAPathExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSubselectIdentificationVariableDeclarationRule());
						}
						set(
							$current,
							"associationPathExpression",
							lv_associationPathExpression_1_0,
							"jpaqldsl.JPAQLDsl.JPAPathExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_2='AS'
				{
					newLeafNode(otherlv_2, grammarAccess.getSubselectIdentificationVariableDeclarationAccess().getASKeyword_1_1());
				}
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getSubselectIdentificationVariableDeclarationAccess().getIdentificationVariableIdentificationVariableParserRuleCall_1_2_0());
					}
					lv_identificationVariable_3_0=ruleIdentificationVariable
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSubselectIdentificationVariableDeclarationRule());
						}
						set(
							$current,
							"identificationVariable",
							lv_identificationVariable_3_0,
							"jpaqldsl.JPAQLDsl.IdentificationVariable");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getSubselectIdentificationVariableDeclarationAccess().getCollectionMemberDeclarationCollectionMemberDeclarationParserRuleCall_2_0());
				}
				lv_collectionMemberDeclaration_4_0=ruleCollectionMemberDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSubselectIdentificationVariableDeclarationRule());
					}
					set(
						$current,
						"collectionMemberDeclaration",
						lv_collectionMemberDeclaration_4_0,
						"jpaqldsl.JPAQLDsl.CollectionMemberDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSimpleSelectClause
entryRuleSimpleSelectClause returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimpleSelectClauseRule()); }
	iv_ruleSimpleSelectClause=ruleSimpleSelectClause
	{ $current=$iv_ruleSimpleSelectClause.current; }
	EOF;

// Rule SimpleSelectClause
ruleSimpleSelectClause returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='SELECT'
		{
			newLeafNode(otherlv_0, grammarAccess.getSimpleSelectClauseAccess().getSELECTKeyword_0());
		}
		(
			otherlv_1='DISTINCT'
			{
				newLeafNode(otherlv_1, grammarAccess.getSimpleSelectClauseAccess().getDISTINCTKeyword_1());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getSimpleSelectClauseAccess().getSimpleSelectExpressionSimpleSelectExpressionParserRuleCall_2_0());
				}
				lv_simpleSelectExpression_2_0=ruleSimpleSelectExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimpleSelectClauseRule());
					}
					set(
						$current,
						"simpleSelectExpression",
						lv_simpleSelectExpression_2_0,
						"jpaqldsl.JPAQLDsl.SimpleSelectExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSimpleSelectExpression
entryRuleSimpleSelectExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimpleSelectExpressionRule()); }
	iv_ruleSimpleSelectExpression=ruleSimpleSelectExpression
	{ $current=$iv_ruleSimpleSelectExpression.current; }
	EOF;

// Rule SimpleSelectExpression
ruleSimpleSelectExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSimpleSelectExpressionAccess().getPathExpressionJPAPathExpressionParserRuleCall_0_0());
				}
				lv_pathExpression_0_0=ruleJPAPathExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimpleSelectExpressionRule());
					}
					set(
						$current,
						"pathExpression",
						lv_pathExpression_0_0,
						"jpaqldsl.JPAQLDsl.JPAPathExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getSimpleSelectExpressionAccess().getAggregateExpressionAggregateExpressionParserRuleCall_1_0());
				}
				lv_aggregateExpression_1_0=ruleAggregateExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimpleSelectExpressionRule());
					}
					set(
						$current,
						"aggregateExpression",
						lv_aggregateExpression_1_0,
						"jpaqldsl.JPAQLDsl.AggregateExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getSimpleSelectExpressionAccess().getIdentificationVariableIdentificationVariableParserRuleCall_2_0());
				}
				lv_identificationVariable_2_0=ruleIdentificationVariable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimpleSelectExpressionRule());
					}
					set(
						$current,
						"identificationVariable",
						lv_identificationVariable_2_0,
						"jpaqldsl.JPAQLDsl.IdentificationVariable");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleInputParameter
entryRuleInputParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInputParameterRule()); }
	iv_ruleInputParameter=ruleInputParameter
	{ $current=$iv_ruleInputParameter.current; }
	EOF;

// Rule InputParameter
ruleInputParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=':'
		{
			newLeafNode(otherlv_0, grammarAccess.getInputParameterAccess().getColonKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getInputParameterAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInputParameterRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.xbase.Xtype.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleEscapeCharacter
entryRuleEscapeCharacter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEscapeCharacterRule()); }
	iv_ruleEscapeCharacter=ruleEscapeCharacter
	{ $current=$iv_ruleEscapeCharacter.current; }
	EOF;

// Rule EscapeCharacter
ruleEscapeCharacter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getEscapeCharacterAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getEscapeCharacterRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.xbase.Xtype.ID");
			}
		)
	)
;

// Entry rule entryRuleLiteral
entryRuleLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLiteralRule()); }
	iv_ruleLiteral=ruleLiteral
	{ $current=$iv_ruleLiteral.current; }
	EOF;

// Rule Literal
ruleLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getLiteralAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getLiteralRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.xbase.Xtype.ID");
			}
		)
	)
;

// Entry rule entryRulePatternValue
entryRulePatternValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPatternValueRule()); }
	iv_rulePatternValue=rulePatternValue
	{ $current=$iv_rulePatternValue.current; }
	EOF;

// Rule PatternValue
rulePatternValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getPatternValueAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getPatternValueRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.xbase.Xtype.ID");
			}
		)
	)
;

// Entry rule entryRuleStringLiteral
entryRuleStringLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStringLiteralRule()); }
	iv_ruleStringLiteral=ruleStringLiteral
	{ $current=$iv_ruleStringLiteral.current; }
	EOF;

// Rule StringLiteral
ruleStringLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='\''
		{
			newLeafNode(otherlv_0, grammarAccess.getStringLiteralAccess().getApostropheKeyword_0());
		}
		(
			(
				lv_literal_1_0=RULE_ID
				{
					newLeafNode(lv_literal_1_0, grammarAccess.getStringLiteralAccess().getLiteralIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStringLiteralRule());
					}
					setWithLastConsumed(
						$current,
						"literal",
						lv_literal_1_0,
						"org.eclipse.xtext.xbase.Xtype.ID");
				}
			)
		)
		otherlv_2='\''
		{
			newLeafNode(otherlv_2, grammarAccess.getStringLiteralAccess().getApostropheKeyword_2());
		}
	)
;

// Entry rule entryRuleNumericLiteral
entryRuleNumericLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNumericLiteralRule()); }
	iv_ruleNumericLiteral=ruleNumericLiteral
	{ $current=$iv_ruleNumericLiteral.current; }
	EOF;

// Rule NumericLiteral
ruleNumericLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_literal_0_0=RULE_INT
			{
				newLeafNode(lv_literal_0_0, grammarAccess.getNumericLiteralAccess().getLiteralINTTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getNumericLiteralRule());
				}
				setWithLastConsumed(
					$current,
					"literal",
					lv_literal_0_0,
					"org.eclipse.xtext.xbase.Xbase.INT");
			}
		)
	)
;

// Entry rule entryRuleBooleanLiteral
entryRuleBooleanLiteral returns [String current=null]:
	{ newCompositeNode(grammarAccess.getBooleanLiteralRule()); }
	iv_ruleBooleanLiteral=ruleBooleanLiteral
	{ $current=$iv_ruleBooleanLiteral.current.getText(); }
	EOF;

// Rule BooleanLiteral
ruleBooleanLiteral returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='true'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBooleanLiteralAccess().getTrueKeyword_0());
		}
		    |
		kw='false'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBooleanLiteralAccess().getFalseKeyword_1());
		}
	)
;

// Entry rule entryRuleEnumLiteral
entryRuleEnumLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnumLiteralRule()); }
	iv_ruleEnumLiteral=ruleEnumLiteral
	{ $current=$iv_ruleEnumLiteral.current; }
	EOF;

// Rule EnumLiteral
ruleEnumLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getEnumLiteralAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getEnumLiteralRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.xbase.Xtype.ID");
			}
		)
	)
;

// Entry rule entryRuleTrimCharacter
entryRuleTrimCharacter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTrimCharacterRule()); }
	iv_ruleTrimCharacter=ruleTrimCharacter
	{ $current=$iv_ruleTrimCharacter.current; }
	EOF;

// Rule TrimCharacter
ruleTrimCharacter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getTrimCharacterAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getTrimCharacterRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.xbase.Xtype.ID");
			}
		)
	)
;

// Entry rule entryRuleImport
entryRuleImport returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImportRule()); }
	iv_ruleImport=ruleImport
	{ $current=$iv_ruleImport.current; }
	EOF;

// Rule Import
ruleImport returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='import'
		{
			newLeafNode(otherlv_0, grammarAccess.getImportAccess().getImportKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getImportAccess().getImportedNamespaceImportNameSpaceParserRuleCall_1_0());
				}
				lv_importedNamespace_1_0=ruleImportNameSpace
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImportRule());
					}
					set(
						$current,
						"importedNamespace",
						lv_importedNamespace_1_0,
						"jpaqldsl.JPAQLDsl.ImportNameSpace");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleImportNameSpace
entryRuleImportNameSpace returns [String current=null]:
	{ newCompositeNode(grammarAccess.getImportNameSpaceRule()); }
	iv_ruleImportNameSpace=ruleImportNameSpace
	{ $current=$iv_ruleImportNameSpace.current.getText(); }
	EOF;

// Rule ImportNameSpace
ruleImportNameSpace returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getImportNameSpaceAccess().getQualifiedNameParserRuleCall_0());
		}
		this_QualifiedName_0=ruleQualifiedName
		{
			$current.merge(this_QualifiedName_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getImportNameSpaceAccess().getFullStopKeyword_1_0());
			}
			kw='*'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getImportNameSpaceAccess().getAsteriskKeyword_1_1());
			}
		)?
	)
;

// Entry rule entryRuleXExpression
entryRuleXExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXExpressionRule()); }
	iv_ruleXExpression=ruleXExpression
	{ $current=$iv_ruleXExpression.current; }
	EOF;

// Rule XExpression
ruleXExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		/* */
	}
	{
		newCompositeNode(grammarAccess.getXExpressionAccess().getXAssignmentParserRuleCall());
	}
	this_XAssignment_0=ruleXAssignment
	{
		$current = $this_XAssignment_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleXAssignment
entryRuleXAssignment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXAssignmentRule()); }
	iv_ruleXAssignment=ruleXAssignment
	{ $current=$iv_ruleXAssignment.current; }
	EOF;

// Rule XAssignment
ruleXAssignment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getXAssignmentAccess().getXAssignmentAction_0_0(),
						$current);
				}
			)
			(
				(
					{
						/* */
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getXAssignmentRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getXAssignmentAccess().getFeatureJvmIdentifiableElementCrossReference_0_1_0());
					}
					ruleFeatureCallID
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			{
				/* */
			}
			{
				newCompositeNode(grammarAccess.getXAssignmentAccess().getOpSingleAssignParserRuleCall_0_2());
			}
			ruleOpSingleAssign
			{
				afterParserOrEnumRuleCall();
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getXAssignmentAccess().getValueXAssignmentParserRuleCall_0_3_0());
					}
					lv_value_3_0=ruleXAssignment
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getXAssignmentRule());
						}
						set(
							$current,
							"value",
							lv_value_3_0,
							"org.eclipse.xtext.xbase.Xbase.XAssignment");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			{
				/* */
			}
			{
				newCompositeNode(grammarAccess.getXAssignmentAccess().getXOrExpressionParserRuleCall_1_0());
			}
			this_XOrExpression_4=ruleXOrExpression
			{
				$current = $this_XOrExpression_4.current;
				afterParserOrEnumRuleCall();
			}
			(
				(
					((
						(
						)
						(
							(
								ruleOpMultiAssign
							)
						)
					)
					)=>
					(
						(
							{
								/* */
							}
							{
								$current = forceCreateModelElementAndSet(
									grammarAccess.getXAssignmentAccess().getXBinaryOperationLeftOperandAction_1_1_0_0_0(),
									$current);
							}
						)
						(
							(
								{
									/* */
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getXAssignmentRule());
									}
								}
								{
									newCompositeNode(grammarAccess.getXAssignmentAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_0_0_1_0());
								}
								ruleOpMultiAssign
								{
									afterParserOrEnumRuleCall();
								}
							)
						)
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getXAssignmentAccess().getRightOperandXAssignmentParserRuleCall_1_1_1_0());
						}
						lv_rightOperand_7_0=ruleXAssignment
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getXAssignmentRule());
							}
							set(
								$current,
								"rightOperand",
								lv_rightOperand_7_0,
								"org.eclipse.xtext.xbase.Xbase.XAssignment");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)?
		)
	)
;

// Entry rule entryRuleOpSingleAssign
entryRuleOpSingleAssign returns [String current=null]:
	{ newCompositeNode(grammarAccess.getOpSingleAssignRule()); }
	iv_ruleOpSingleAssign=ruleOpSingleAssign
	{ $current=$iv_ruleOpSingleAssign.current.getText(); }
	EOF;

// Rule OpSingleAssign
ruleOpSingleAssign returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='='
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getOpSingleAssignAccess().getEqualsSignKeyword());
	}
;

// Entry rule entryRuleOpMultiAssign
entryRuleOpMultiAssign returns [String current=null]:
	{ newCompositeNode(grammarAccess.getOpMultiAssignRule()); }
	iv_ruleOpMultiAssign=ruleOpMultiAssign
	{ $current=$iv_ruleOpMultiAssign.current.getText(); }
	EOF;

// Rule OpMultiAssign
ruleOpMultiAssign returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='+='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getPlusSignEqualsSignKeyword_0());
		}
		    |
		kw='-='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getHyphenMinusEqualsSignKeyword_1());
		}
		    |
		kw='*='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getAsteriskEqualsSignKeyword_2());
		}
		    |
		kw='/='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getSolidusEqualsSignKeyword_3());
		}
		    |
		kw='%='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getPercentSignEqualsSignKeyword_4());
		}
		    |
		(
			kw='<'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getLessThanSignKeyword_5_0());
			}
			kw='<'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getLessThanSignKeyword_5_1());
			}
			kw='='
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getEqualsSignKeyword_5_2());
			}
		)
		    |
		(
			kw='>'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getGreaterThanSignKeyword_6_0());
			}
			(
				kw='>'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getGreaterThanSignKeyword_6_1());
				}
			)?
			kw='>='
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getGreaterThanSignEqualsSignKeyword_6_2());
			}
		)
	)
;

// Entry rule entryRuleXOrExpression
entryRuleXOrExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXOrExpressionRule()); }
	iv_ruleXOrExpression=ruleXOrExpression
	{ $current=$iv_ruleXOrExpression.current; }
	EOF;

// Rule XOrExpression
ruleXOrExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getXOrExpressionAccess().getXAndExpressionParserRuleCall_0());
		}
		this_XAndExpression_0=ruleXAndExpression
		{
			$current = $this_XAndExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				((
					(
					)
					(
						(
							ruleOpOr
						)
					)
				)
				)=>
				(
					(
						{
							/* */
						}
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getXOrExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
								$current);
						}
					)
					(
						(
							{
								/* */
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getXOrExpressionRule());
								}
							}
							{
								newCompositeNode(grammarAccess.getXOrExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
							}
							ruleOpOr
							{
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getXOrExpressionAccess().getRightOperandXAndExpressionParserRuleCall_1_1_0());
					}
					lv_rightOperand_3_0=ruleXAndExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getXOrExpressionRule());
						}
						set(
							$current,
							"rightOperand",
							lv_rightOperand_3_0,
							"org.eclipse.xtext.xbase.Xbase.XAndExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleOpOr
entryRuleOpOr returns [String current=null]:
	{ newCompositeNode(grammarAccess.getOpOrRule()); }
	iv_ruleOpOr=ruleOpOr
	{ $current=$iv_ruleOpOr.current.getText(); }
	EOF;

// Rule OpOr
ruleOpOr returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='||'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getOpOrAccess().getVerticalLineVerticalLineKeyword());
	}
;

// Entry rule entryRuleXAndExpression
entryRuleXAndExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXAndExpressionRule()); }
	iv_ruleXAndExpression=ruleXAndExpression
	{ $current=$iv_ruleXAndExpression.current; }
	EOF;

// Rule XAndExpression
ruleXAndExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getXAndExpressionAccess().getXEqualityExpressionParserRuleCall_0());
		}
		this_XEqualityExpression_0=ruleXEqualityExpression
		{
			$current = $this_XEqualityExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				((
					(
					)
					(
						(
							ruleOpAnd
						)
					)
				)
				)=>
				(
					(
						{
							/* */
						}
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getXAndExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
								$current);
						}
					)
					(
						(
							{
								/* */
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getXAndExpressionRule());
								}
							}
							{
								newCompositeNode(grammarAccess.getXAndExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
							}
							ruleOpAnd
							{
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getXAndExpressionAccess().getRightOperandXEqualityExpressionParserRuleCall_1_1_0());
					}
					lv_rightOperand_3_0=ruleXEqualityExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getXAndExpressionRule());
						}
						set(
							$current,
							"rightOperand",
							lv_rightOperand_3_0,
							"org.eclipse.xtext.xbase.Xbase.XEqualityExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleOpAnd
entryRuleOpAnd returns [String current=null]:
	{ newCompositeNode(grammarAccess.getOpAndRule()); }
	iv_ruleOpAnd=ruleOpAnd
	{ $current=$iv_ruleOpAnd.current.getText(); }
	EOF;

// Rule OpAnd
ruleOpAnd returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='&&'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getOpAndAccess().getAmpersandAmpersandKeyword());
	}
;

// Entry rule entryRuleXEqualityExpression
entryRuleXEqualityExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXEqualityExpressionRule()); }
	iv_ruleXEqualityExpression=ruleXEqualityExpression
	{ $current=$iv_ruleXEqualityExpression.current; }
	EOF;

// Rule XEqualityExpression
ruleXEqualityExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getXEqualityExpressionAccess().getXRelationalExpressionParserRuleCall_0());
		}
		this_XRelationalExpression_0=ruleXRelationalExpression
		{
			$current = $this_XRelationalExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				((
					(
					)
					(
						(
							ruleOpEquality
						)
					)
				)
				)=>
				(
					(
						{
							/* */
						}
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getXEqualityExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
								$current);
						}
					)
					(
						(
							{
								/* */
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getXEqualityExpressionRule());
								}
							}
							{
								newCompositeNode(grammarAccess.getXEqualityExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
							}
							ruleOpEquality
							{
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getXEqualityExpressionAccess().getRightOperandXRelationalExpressionParserRuleCall_1_1_0());
					}
					lv_rightOperand_3_0=ruleXRelationalExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getXEqualityExpressionRule());
						}
						set(
							$current,
							"rightOperand",
							lv_rightOperand_3_0,
							"org.eclipse.xtext.xbase.Xbase.XRelationalExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleOpEquality
entryRuleOpEquality returns [String current=null]:
	{ newCompositeNode(grammarAccess.getOpEqualityRule()); }
	iv_ruleOpEquality=ruleOpEquality
	{ $current=$iv_ruleOpEquality.current.getText(); }
	EOF;

// Rule OpEquality
ruleOpEquality returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='=='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpEqualityAccess().getEqualsSignEqualsSignKeyword_0());
		}
		    |
		kw='!='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpEqualityAccess().getExclamationMarkEqualsSignKeyword_1());
		}
		    |
		kw='==='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpEqualityAccess().getEqualsSignEqualsSignEqualsSignKeyword_2());
		}
		    |
		kw='!=='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpEqualityAccess().getExclamationMarkEqualsSignEqualsSignKeyword_3());
		}
	)
;

// Entry rule entryRuleXRelationalExpression
entryRuleXRelationalExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXRelationalExpressionRule()); }
	iv_ruleXRelationalExpression=ruleXRelationalExpression
	{ $current=$iv_ruleXRelationalExpression.current; }
	EOF;

// Rule XRelationalExpression
ruleXRelationalExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getXOtherOperatorExpressionParserRuleCall_0());
		}
		this_XOtherOperatorExpression_0=ruleXOtherOperatorExpression
		{
			$current = $this_XOtherOperatorExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					((
						(
						)
						'instanceof'
					)
					)=>
					(
						(
							{
								/* */
							}
							{
								$current = forceCreateModelElementAndSet(
									grammarAccess.getXRelationalExpressionAccess().getXInstanceOfExpressionExpressionAction_1_0_0_0_0(),
									$current);
							}
						)
						otherlv_2='instanceof'
						{
							newLeafNode(otherlv_2, grammarAccess.getXRelationalExpressionAccess().getInstanceofKeyword_1_0_0_0_1());
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getTypeJvmTypeReferenceParserRuleCall_1_0_1_0());
						}
						lv_type_3_0=ruleJvmTypeReference
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getXRelationalExpressionRule());
							}
							set(
								$current,
								"type",
								lv_type_3_0,
								"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					((
						(
						)
						(
							(
								ruleOpCompare
							)
						)
					)
					)=>
					(
						(
							{
								/* */
							}
							{
								$current = forceCreateModelElementAndSet(
									grammarAccess.getXRelationalExpressionAccess().getXBinaryOperationLeftOperandAction_1_1_0_0_0(),
									$current);
							}
						)
						(
							(
								{
									/* */
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getXRelationalExpressionRule());
									}
								}
								{
									newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_0_0_1_0());
								}
								ruleOpCompare
								{
									afterParserOrEnumRuleCall();
								}
							)
						)
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getRightOperandXOtherOperatorExpressionParserRuleCall_1_1_1_0());
						}
						lv_rightOperand_6_0=ruleXOtherOperatorExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getXRelationalExpressionRule());
							}
							set(
								$current,
								"rightOperand",
								lv_rightOperand_6_0,
								"org.eclipse.xtext.xbase.Xbase.XOtherOperatorExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)*
	)
;

// Entry rule entryRuleOpCompare
entryRuleOpCompare returns [String current=null]:
	{ newCompositeNode(grammarAccess.getOpCompareRule()); }
	iv_ruleOpCompare=ruleOpCompare
	{ $current=$iv_ruleOpCompare.current.getText(); }
	EOF;

// Rule OpCompare
ruleOpCompare returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='>='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpCompareAccess().getGreaterThanSignEqualsSignKeyword_0());
		}
		    |
		(
			kw='<'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getOpCompareAccess().getLessThanSignKeyword_1_0());
			}
			kw='='
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getOpCompareAccess().getEqualsSignKeyword_1_1());
			}
		)
		    |
		kw='>'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpCompareAccess().getGreaterThanSignKeyword_2());
		}
		    |
		kw='<'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpCompareAccess().getLessThanSignKeyword_3());
		}
	)
;

// Entry rule entryRuleXOtherOperatorExpression
entryRuleXOtherOperatorExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXOtherOperatorExpressionRule()); }
	iv_ruleXOtherOperatorExpression=ruleXOtherOperatorExpression
	{ $current=$iv_ruleXOtherOperatorExpression.current; }
	EOF;

// Rule XOtherOperatorExpression
ruleXOtherOperatorExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getXOtherOperatorExpressionAccess().getXAdditiveExpressionParserRuleCall_0());
		}
		this_XAdditiveExpression_0=ruleXAdditiveExpression
		{
			$current = $this_XAdditiveExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				((
					(
					)
					(
						(
							ruleOpOther
						)
					)
				)
				)=>
				(
					(
						{
							/* */
						}
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getXOtherOperatorExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
								$current);
						}
					)
					(
						(
							{
								/* */
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getXOtherOperatorExpressionRule());
								}
							}
							{
								newCompositeNode(grammarAccess.getXOtherOperatorExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
							}
							ruleOpOther
							{
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getXOtherOperatorExpressionAccess().getRightOperandXAdditiveExpressionParserRuleCall_1_1_0());
					}
					lv_rightOperand_3_0=ruleXAdditiveExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getXOtherOperatorExpressionRule());
						}
						set(
							$current,
							"rightOperand",
							lv_rightOperand_3_0,
							"org.eclipse.xtext.xbase.Xbase.XAdditiveExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleOpOther
entryRuleOpOther returns [String current=null]:
	{ newCompositeNode(grammarAccess.getOpOtherRule()); }
	iv_ruleOpOther=ruleOpOther
	{ $current=$iv_ruleOpOther.current.getText(); }
	EOF;

// Rule OpOther
ruleOpOther returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='->'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpOtherAccess().getHyphenMinusGreaterThanSignKeyword_0());
		}
		    |
		kw='..<'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpOtherAccess().getFullStopFullStopLessThanSignKeyword_1());
		}
		    |
		(
			kw='>'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_2_0());
			}
			kw='..'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getOpOtherAccess().getFullStopFullStopKeyword_2_1());
			}
		)
		    |
		kw='..'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpOtherAccess().getFullStopFullStopKeyword_3());
		}
		    |
		kw='=>'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpOtherAccess().getEqualsSignGreaterThanSignKeyword_4());
		}
		    |
		(
			kw='>'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_0());
			}
			(
				(
					((
						'>'
						'>'
					)
					)=>
					(
						kw='>'
						{
							$current.merge(kw);
							newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_1_0_0_0());
						}
						kw='>'
						{
							$current.merge(kw);
							newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_1_0_0_1());
						}
					)
				)
				    |
				kw='>'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_1_1());
				}
			)
		)
		    |
		(
			kw='<'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_0());
			}
			(
				(
					((
						'<'
						'<'
					)
					)=>
					(
						kw='<'
						{
							$current.merge(kw);
							newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_1_0_0_0());
						}
						kw='<'
						{
							$current.merge(kw);
							newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_1_0_0_1());
						}
					)
				)
				    |
				kw='<'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_1_1());
				}
				    |
				kw='=>'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getOpOtherAccess().getEqualsSignGreaterThanSignKeyword_6_1_2());
				}
			)
		)
		    |
		kw='<>'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignGreaterThanSignKeyword_7());
		}
		    |
		kw='?:'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpOtherAccess().getQuestionMarkColonKeyword_8());
		}
	)
;

// Entry rule entryRuleXAdditiveExpression
entryRuleXAdditiveExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXAdditiveExpressionRule()); }
	iv_ruleXAdditiveExpression=ruleXAdditiveExpression
	{ $current=$iv_ruleXAdditiveExpression.current; }
	EOF;

// Rule XAdditiveExpression
ruleXAdditiveExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getXAdditiveExpressionAccess().getXMultiplicativeExpressionParserRuleCall_0());
		}
		this_XMultiplicativeExpression_0=ruleXMultiplicativeExpression
		{
			$current = $this_XMultiplicativeExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				((
					(
					)
					(
						(
							ruleOpAdd
						)
					)
				)
				)=>
				(
					(
						{
							/* */
						}
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getXAdditiveExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
								$current);
						}
					)
					(
						(
							{
								/* */
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getXAdditiveExpressionRule());
								}
							}
							{
								newCompositeNode(grammarAccess.getXAdditiveExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
							}
							ruleOpAdd
							{
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getXAdditiveExpressionAccess().getRightOperandXMultiplicativeExpressionParserRuleCall_1_1_0());
					}
					lv_rightOperand_3_0=ruleXMultiplicativeExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getXAdditiveExpressionRule());
						}
						set(
							$current,
							"rightOperand",
							lv_rightOperand_3_0,
							"org.eclipse.xtext.xbase.Xbase.XMultiplicativeExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleOpAdd
entryRuleOpAdd returns [String current=null]:
	{ newCompositeNode(grammarAccess.getOpAddRule()); }
	iv_ruleOpAdd=ruleOpAdd
	{ $current=$iv_ruleOpAdd.current.getText(); }
	EOF;

// Rule OpAdd
ruleOpAdd returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='+'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpAddAccess().getPlusSignKeyword_0());
		}
		    |
		kw='-'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpAddAccess().getHyphenMinusKeyword_1());
		}
	)
;

// Entry rule entryRuleXMultiplicativeExpression
entryRuleXMultiplicativeExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXMultiplicativeExpressionRule()); }
	iv_ruleXMultiplicativeExpression=ruleXMultiplicativeExpression
	{ $current=$iv_ruleXMultiplicativeExpression.current; }
	EOF;

// Rule XMultiplicativeExpression
ruleXMultiplicativeExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getXMultiplicativeExpressionAccess().getXUnaryOperationParserRuleCall_0());
		}
		this_XUnaryOperation_0=ruleXUnaryOperation
		{
			$current = $this_XUnaryOperation_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				((
					(
					)
					(
						(
							ruleOpMulti
						)
					)
				)
				)=>
				(
					(
						{
							/* */
						}
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getXMultiplicativeExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
								$current);
						}
					)
					(
						(
							{
								/* */
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getXMultiplicativeExpressionRule());
								}
							}
							{
								newCompositeNode(grammarAccess.getXMultiplicativeExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
							}
							ruleOpMulti
							{
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getXMultiplicativeExpressionAccess().getRightOperandXUnaryOperationParserRuleCall_1_1_0());
					}
					lv_rightOperand_3_0=ruleXUnaryOperation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getXMultiplicativeExpressionRule());
						}
						set(
							$current,
							"rightOperand",
							lv_rightOperand_3_0,
							"org.eclipse.xtext.xbase.Xbase.XUnaryOperation");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleOpMulti
entryRuleOpMulti returns [String current=null]:
	{ newCompositeNode(grammarAccess.getOpMultiRule()); }
	iv_ruleOpMulti=ruleOpMulti
	{ $current=$iv_ruleOpMulti.current.getText(); }
	EOF;

// Rule OpMulti
ruleOpMulti returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='*'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpMultiAccess().getAsteriskKeyword_0());
		}
		    |
		kw='**'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpMultiAccess().getAsteriskAsteriskKeyword_1());
		}
		    |
		kw='/'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpMultiAccess().getSolidusKeyword_2());
		}
		    |
		kw='%'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpMultiAccess().getPercentSignKeyword_3());
		}
	)
;

// Entry rule entryRuleXUnaryOperation
entryRuleXUnaryOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXUnaryOperationRule()); }
	iv_ruleXUnaryOperation=ruleXUnaryOperation
	{ $current=$iv_ruleXUnaryOperation.current; }
	EOF;

// Rule XUnaryOperation
ruleXUnaryOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getXUnaryOperationAccess().getXUnaryOperationAction_0_0(),
						$current);
				}
			)
			(
				(
					{
						/* */
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getXUnaryOperationRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getXUnaryOperationAccess().getFeatureJvmIdentifiableElementCrossReference_0_1_0());
					}
					ruleOpUnary
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getXUnaryOperationAccess().getOperandXUnaryOperationParserRuleCall_0_2_0());
					}
					lv_operand_2_0=ruleXUnaryOperation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getXUnaryOperationRule());
						}
						set(
							$current,
							"operand",
							lv_operand_2_0,
							"org.eclipse.xtext.xbase.Xbase.XUnaryOperation");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getXUnaryOperationAccess().getXCastedExpressionParserRuleCall_1());
		}
		this_XCastedExpression_3=ruleXCastedExpression
		{
			$current = $this_XCastedExpression_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleOpUnary
entryRuleOpUnary returns [String current=null]:
	{ newCompositeNode(grammarAccess.getOpUnaryRule()); }
	iv_ruleOpUnary=ruleOpUnary
	{ $current=$iv_ruleOpUnary.current.getText(); }
	EOF;

// Rule OpUnary
ruleOpUnary returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='!'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpUnaryAccess().getExclamationMarkKeyword_0());
		}
		    |
		kw='-'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpUnaryAccess().getHyphenMinusKeyword_1());
		}
		    |
		kw='+'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpUnaryAccess().getPlusSignKeyword_2());
		}
	)
;

// Entry rule entryRuleXCastedExpression
entryRuleXCastedExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXCastedExpressionRule()); }
	iv_ruleXCastedExpression=ruleXCastedExpression
	{ $current=$iv_ruleXCastedExpression.current; }
	EOF;

// Rule XCastedExpression
ruleXCastedExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getXCastedExpressionAccess().getXPostfixOperationParserRuleCall_0());
		}
		this_XPostfixOperation_0=ruleXPostfixOperation
		{
			$current = $this_XPostfixOperation_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				((
					(
					)
					'as'
				)
				)=>
				(
					(
						{
							/* */
						}
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getXCastedExpressionAccess().getXCastedExpressionTargetAction_1_0_0_0(),
								$current);
						}
					)
					otherlv_2='as'
					{
						newLeafNode(otherlv_2, grammarAccess.getXCastedExpressionAccess().getAsKeyword_1_0_0_1());
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getXCastedExpressionAccess().getTypeJvmTypeReferenceParserRuleCall_1_1_0());
					}
					lv_type_3_0=ruleJvmTypeReference
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getXCastedExpressionRule());
						}
						set(
							$current,
							"type",
							lv_type_3_0,
							"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleXPostfixOperation
entryRuleXPostfixOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXPostfixOperationRule()); }
	iv_ruleXPostfixOperation=ruleXPostfixOperation
	{ $current=$iv_ruleXPostfixOperation.current; }
	EOF;

// Rule XPostfixOperation
ruleXPostfixOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getXPostfixOperationAccess().getXMemberFeatureCallParserRuleCall_0());
		}
		this_XMemberFeatureCall_0=ruleXMemberFeatureCall
		{
			$current = $this_XMemberFeatureCall_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			((
				(
				)
				(
					(
						ruleOpPostfix
					)
				)
			)
			)=>
			(
				(
					{
						/* */
					}
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getXPostfixOperationAccess().getXPostfixOperationOperandAction_1_0_0(),
							$current);
					}
				)
				(
					(
						{
							/* */
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getXPostfixOperationRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getXPostfixOperationAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_1_0());
						}
						ruleOpPostfix
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)?
	)
;

// Entry rule entryRuleOpPostfix
entryRuleOpPostfix returns [String current=null]:
	{ newCompositeNode(grammarAccess.getOpPostfixRule()); }
	iv_ruleOpPostfix=ruleOpPostfix
	{ $current=$iv_ruleOpPostfix.current.getText(); }
	EOF;

// Rule OpPostfix
ruleOpPostfix returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='++'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpPostfixAccess().getPlusSignPlusSignKeyword_0());
		}
		    |
		kw='--'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpPostfixAccess().getHyphenMinusHyphenMinusKeyword_1());
		}
	)
;

// Entry rule entryRuleXMemberFeatureCall
entryRuleXMemberFeatureCall returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXMemberFeatureCallRule()); }
	iv_ruleXMemberFeatureCall=ruleXMemberFeatureCall
	{ $current=$iv_ruleXMemberFeatureCall.current; }
	EOF;

// Rule XMemberFeatureCall
ruleXMemberFeatureCall returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getXPrimaryExpressionParserRuleCall_0());
		}
		this_XPrimaryExpression_0=ruleXPrimaryExpression
		{
			$current = $this_XPrimaryExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					((
						(
						)
						(
							'.'
							    |
							(
								(
									'::'
								)
							)
						)
						(
							(
								ruleFeatureCallID
							)
						)
						ruleOpSingleAssign
					)
					)=>
					(
						(
							{
								/* */
							}
							{
								$current = forceCreateModelElementAndSet(
									grammarAccess.getXMemberFeatureCallAccess().getXAssignmentAssignableAction_1_0_0_0_0(),
									$current);
							}
						)
						(
							otherlv_2='.'
							{
								newLeafNode(otherlv_2, grammarAccess.getXMemberFeatureCallAccess().getFullStopKeyword_1_0_0_0_1_0());
							}
							    |
							(
								(
									lv_explicitStatic_3_0='::'
									{
										newLeafNode(lv_explicitStatic_3_0, grammarAccess.getXMemberFeatureCallAccess().getExplicitStaticColonColonKeyword_1_0_0_0_1_1_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
										}
										setWithLastConsumed($current, "explicitStatic", lv_explicitStatic_3_0 != null, "::");
									}
								)
							)
						)
						(
							(
								{
									/* */
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
									}
								}
								{
									newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_0_2_0());
								}
								ruleFeatureCallID
								{
									afterParserOrEnumRuleCall();
								}
							)
						)
						{
							/* */
						}
						{
							newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getOpSingleAssignParserRuleCall_1_0_0_0_3());
						}
						ruleOpSingleAssign
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getValueXAssignmentParserRuleCall_1_0_1_0());
						}
						lv_value_6_0=ruleXAssignment
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
							}
							set(
								$current,
								"value",
								lv_value_6_0,
								"org.eclipse.xtext.xbase.Xbase.XAssignment");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					((
						(
						)
						(
							'.'
							    |
							(
								(
									'?.'
								)
							)
							    |
							(
								(
									'::'
								)
							)
						)
					)
					)=>
					(
						(
							{
								/* */
							}
							{
								$current = forceCreateModelElementAndSet(
									grammarAccess.getXMemberFeatureCallAccess().getXMemberFeatureCallMemberCallTargetAction_1_1_0_0_0(),
									$current);
							}
						)
						(
							otherlv_8='.'
							{
								newLeafNode(otherlv_8, grammarAccess.getXMemberFeatureCallAccess().getFullStopKeyword_1_1_0_0_1_0());
							}
							    |
							(
								(
									lv_nullSafe_9_0='?.'
									{
										newLeafNode(lv_nullSafe_9_0, grammarAccess.getXMemberFeatureCallAccess().getNullSafeQuestionMarkFullStopKeyword_1_1_0_0_1_1_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
										}
										setWithLastConsumed($current, "nullSafe", lv_nullSafe_9_0 != null, "?.");
									}
								)
							)
							    |
							(
								(
									lv_explicitStatic_10_0='::'
									{
										newLeafNode(lv_explicitStatic_10_0, grammarAccess.getXMemberFeatureCallAccess().getExplicitStaticColonColonKeyword_1_1_0_0_1_2_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
										}
										setWithLastConsumed($current, "explicitStatic", lv_explicitStatic_10_0 != null, "::");
									}
								)
							)
						)
					)
				)
				(
					otherlv_11='<'
					{
						newLeafNode(otherlv_11, grammarAccess.getXMemberFeatureCallAccess().getLessThanSignKeyword_1_1_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_1_1_0());
							}
							lv_typeArguments_12_0=ruleJvmArgumentTypeReference
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
								}
								add(
									$current,
									"typeArguments",
									lv_typeArguments_12_0,
									"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
								afterParserOrEnumRuleCall();
							}
						)
					)
					(
						otherlv_13=','
						{
							newLeafNode(otherlv_13, grammarAccess.getXMemberFeatureCallAccess().getCommaKeyword_1_1_1_2_0());
						}
						(
							(
								{
									newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_1_2_1_0());
								}
								lv_typeArguments_14_0=ruleJvmArgumentTypeReference
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
									}
									add(
										$current,
										"typeArguments",
										lv_typeArguments_14_0,
										"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)*
					otherlv_15='>'
					{
						newLeafNode(otherlv_15, grammarAccess.getXMemberFeatureCallAccess().getGreaterThanSignKeyword_1_1_1_3());
					}
				)?
				(
					(
						{
							/* */
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_2_0());
						}
						ruleIdOrSuper
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						((
							'('
						)
						)=>
						(
							lv_explicitOperationCall_17_0='('
							{
								newLeafNode(lv_explicitOperationCall_17_0, grammarAccess.getXMemberFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_1_1_3_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
								}
								setWithLastConsumed($current, "explicitOperationCall", lv_explicitOperationCall_17_0 != null, "(");
							}
						)
					)
					(
						(
							((
								(
								)
								(
									(
										(
											ruleJvmFormalParameter
										)
									)
									(
										','
										(
											(
												ruleJvmFormalParameter
											)
										)
									)*
								)?
								(
									(
										'|'
									)
								)
							)
							)=>
							(
								{
									newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXShortClosureParserRuleCall_1_1_3_1_0_0());
								}
								lv_memberCallArguments_18_0=ruleXShortClosure
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
									}
									add(
										$current,
										"memberCallArguments",
										lv_memberCallArguments_18_0,
										"org.eclipse.xtext.xbase.Xbase.XShortClosure");
									afterParserOrEnumRuleCall();
								}
							)
						)
						    |
						(
							(
								(
									{
										newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXExpressionParserRuleCall_1_1_3_1_1_0_0());
									}
									lv_memberCallArguments_19_0=ruleXExpression
									{
										if ($current==null) {
											$current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
										}
										add(
											$current,
											"memberCallArguments",
											lv_memberCallArguments_19_0,
											"org.eclipse.xtext.xbase.Xbase.XExpression");
										afterParserOrEnumRuleCall();
									}
								)
							)
							(
								otherlv_20=','
								{
									newLeafNode(otherlv_20, grammarAccess.getXMemberFeatureCallAccess().getCommaKeyword_1_1_3_1_1_1_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXExpressionParserRuleCall_1_1_3_1_1_1_1_0());
										}
										lv_memberCallArguments_21_0=ruleXExpression
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
											}
											add(
												$current,
												"memberCallArguments",
												lv_memberCallArguments_21_0,
												"org.eclipse.xtext.xbase.Xbase.XExpression");
											afterParserOrEnumRuleCall();
										}
									)
								)
							)*
						)
					)?
					otherlv_22=')'
					{
						newLeafNode(otherlv_22, grammarAccess.getXMemberFeatureCallAccess().getRightParenthesisKeyword_1_1_3_2());
					}
				)?
				(
					((
						(
						)
						'['
					)
					)=>
					(
						{
							newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXClosureParserRuleCall_1_1_4_0());
						}
						lv_memberCallArguments_23_0=ruleXClosure
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
							}
							add(
								$current,
								"memberCallArguments",
								lv_memberCallArguments_23_0,
								"org.eclipse.xtext.xbase.Xbase.XClosure");
							afterParserOrEnumRuleCall();
						}
					)
				)?
			)
		)*
	)
;

// Entry rule entryRuleXPrimaryExpression
entryRuleXPrimaryExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXPrimaryExpressionRule()); }
	iv_ruleXPrimaryExpression=ruleXPrimaryExpression
	{ $current=$iv_ruleXPrimaryExpression.current; }
	EOF;

// Rule XPrimaryExpression
ruleXPrimaryExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXConstructorCallParserRuleCall_0());
		}
		this_XConstructorCall_0=ruleXConstructorCall
		{
			$current = $this_XConstructorCall_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXBlockExpressionParserRuleCall_1());
		}
		this_XBlockExpression_1=ruleXBlockExpression
		{
			$current = $this_XBlockExpression_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXSwitchExpressionParserRuleCall_2());
		}
		this_XSwitchExpression_2=ruleXSwitchExpression
		{
			$current = $this_XSwitchExpression_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			((
				(
				)
				'synchronized'
				'('
			)
			)=>
			{
				/* */
			}
			{
				newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXSynchronizedExpressionParserRuleCall_3());
			}
			this_XSynchronizedExpression_3=ruleXSynchronizedExpression
			{
				$current = $this_XSynchronizedExpression_3.current;
				afterParserOrEnumRuleCall();
			}
		)
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXFeatureCallParserRuleCall_4());
		}
		this_XFeatureCall_4=ruleXFeatureCall
		{
			$current = $this_XFeatureCall_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXLiteralParserRuleCall_5());
		}
		this_XLiteral_5=ruleXLiteral
		{
			$current = $this_XLiteral_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXIfExpressionParserRuleCall_6());
		}
		this_XIfExpression_6=ruleXIfExpression
		{
			$current = $this_XIfExpression_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			((
				(
				)
				'for'
				'('
				(
					(
						ruleJvmFormalParameter
					)
				)
				':'
			)
			)=>
			{
				/* */
			}
			{
				newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXForLoopExpressionParserRuleCall_7());
			}
			this_XForLoopExpression_7=ruleXForLoopExpression
			{
				$current = $this_XForLoopExpression_7.current;
				afterParserOrEnumRuleCall();
			}
		)
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXBasicForLoopExpressionParserRuleCall_8());
		}
		this_XBasicForLoopExpression_8=ruleXBasicForLoopExpression
		{
			$current = $this_XBasicForLoopExpression_8.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXWhileExpressionParserRuleCall_9());
		}
		this_XWhileExpression_9=ruleXWhileExpression
		{
			$current = $this_XWhileExpression_9.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXDoWhileExpressionParserRuleCall_10());
		}
		this_XDoWhileExpression_10=ruleXDoWhileExpression
		{
			$current = $this_XDoWhileExpression_10.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXThrowExpressionParserRuleCall_11());
		}
		this_XThrowExpression_11=ruleXThrowExpression
		{
			$current = $this_XThrowExpression_11.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXReturnExpressionParserRuleCall_12());
		}
		this_XReturnExpression_12=ruleXReturnExpression
		{
			$current = $this_XReturnExpression_12.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXTryCatchFinallyExpressionParserRuleCall_13());
		}
		this_XTryCatchFinallyExpression_13=ruleXTryCatchFinallyExpression
		{
			$current = $this_XTryCatchFinallyExpression_13.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXParenthesizedExpressionParserRuleCall_14());
		}
		this_XParenthesizedExpression_14=ruleXParenthesizedExpression
		{
			$current = $this_XParenthesizedExpression_14.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleXLiteral
entryRuleXLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXLiteralRule()); }
	iv_ruleXLiteral=ruleXLiteral
	{ $current=$iv_ruleXLiteral.current; }
	EOF;

// Rule XLiteral
ruleXLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getXLiteralAccess().getXCollectionLiteralParserRuleCall_0());
		}
		this_XCollectionLiteral_0=ruleXCollectionLiteral
		{
			$current = $this_XCollectionLiteral_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			((
				(
				)
				'['
			)
			)=>
			{
				/* */
			}
			{
				newCompositeNode(grammarAccess.getXLiteralAccess().getXClosureParserRuleCall_1());
			}
			this_XClosure_1=ruleXClosure
			{
				$current = $this_XClosure_1.current;
				afterParserOrEnumRuleCall();
			}
		)
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getXLiteralAccess().getXBooleanLiteralParserRuleCall_2());
		}
		this_XBooleanLiteral_2=ruleXBooleanLiteral
		{
			$current = $this_XBooleanLiteral_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getXLiteralAccess().getXNumberLiteralParserRuleCall_3());
		}
		this_XNumberLiteral_3=ruleXNumberLiteral
		{
			$current = $this_XNumberLiteral_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getXLiteralAccess().getXNullLiteralParserRuleCall_4());
		}
		this_XNullLiteral_4=ruleXNullLiteral
		{
			$current = $this_XNullLiteral_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getXLiteralAccess().getXStringLiteralParserRuleCall_5());
		}
		this_XStringLiteral_5=ruleXStringLiteral
		{
			$current = $this_XStringLiteral_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getXLiteralAccess().getXTypeLiteralParserRuleCall_6());
		}
		this_XTypeLiteral_6=ruleXTypeLiteral
		{
			$current = $this_XTypeLiteral_6.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleXCollectionLiteral
entryRuleXCollectionLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXCollectionLiteralRule()); }
	iv_ruleXCollectionLiteral=ruleXCollectionLiteral
	{ $current=$iv_ruleXCollectionLiteral.current; }
	EOF;

// Rule XCollectionLiteral
ruleXCollectionLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getXCollectionLiteralAccess().getXSetLiteralParserRuleCall_0());
		}
		this_XSetLiteral_0=ruleXSetLiteral
		{
			$current = $this_XSetLiteral_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getXCollectionLiteralAccess().getXListLiteralParserRuleCall_1());
		}
		this_XListLiteral_1=ruleXListLiteral
		{
			$current = $this_XListLiteral_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleXSetLiteral
entryRuleXSetLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXSetLiteralRule()); }
	iv_ruleXSetLiteral=ruleXSetLiteral
	{ $current=$iv_ruleXSetLiteral.current; }
	EOF;

// Rule XSetLiteral
ruleXSetLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getXSetLiteralAccess().getXSetLiteralAction_0(),
					$current);
			}
		)
		otherlv_1='#'
		{
			newLeafNode(otherlv_1, grammarAccess.getXSetLiteralAccess().getNumberSignKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getXSetLiteralAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getXSetLiteralAccess().getElementsXExpressionParserRuleCall_3_0_0());
					}
					lv_elements_3_0=ruleXExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getXSetLiteralRule());
						}
						add(
							$current,
							"elements",
							lv_elements_3_0,
							"org.eclipse.xtext.xbase.Xbase.XExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getXSetLiteralAccess().getCommaKeyword_3_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getXSetLiteralAccess().getElementsXExpressionParserRuleCall_3_1_1_0());
						}
						lv_elements_5_0=ruleXExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getXSetLiteralRule());
							}
							add(
								$current,
								"elements",
								lv_elements_5_0,
								"org.eclipse.xtext.xbase.Xbase.XExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getXSetLiteralAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleXListLiteral
entryRuleXListLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXListLiteralRule()); }
	iv_ruleXListLiteral=ruleXListLiteral
	{ $current=$iv_ruleXListLiteral.current; }
	EOF;

// Rule XListLiteral
ruleXListLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getXListLiteralAccess().getXListLiteralAction_0(),
					$current);
			}
		)
		otherlv_1='#'
		{
			newLeafNode(otherlv_1, grammarAccess.getXListLiteralAccess().getNumberSignKeyword_1());
		}
		otherlv_2='['
		{
			newLeafNode(otherlv_2, grammarAccess.getXListLiteralAccess().getLeftSquareBracketKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getXListLiteralAccess().getElementsXExpressionParserRuleCall_3_0_0());
					}
					lv_elements_3_0=ruleXExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getXListLiteralRule());
						}
						add(
							$current,
							"elements",
							lv_elements_3_0,
							"org.eclipse.xtext.xbase.Xbase.XExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getXListLiteralAccess().getCommaKeyword_3_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getXListLiteralAccess().getElementsXExpressionParserRuleCall_3_1_1_0());
						}
						lv_elements_5_0=ruleXExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getXListLiteralRule());
							}
							add(
								$current,
								"elements",
								lv_elements_5_0,
								"org.eclipse.xtext.xbase.Xbase.XExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_6=']'
		{
			newLeafNode(otherlv_6, grammarAccess.getXListLiteralAccess().getRightSquareBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleXClosure
entryRuleXClosure returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXClosureRule()); }
	iv_ruleXClosure=ruleXClosure
	{ $current=$iv_ruleXClosure.current; }
	EOF;

// Rule XClosure
ruleXClosure returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			((
				(
				)
				'['
			)
			)=>
			(
				(
					{
						/* */
					}
					{
						$current = forceCreateModelElement(
							grammarAccess.getXClosureAccess().getXClosureAction_0_0_0(),
							$current);
					}
				)
				otherlv_1='['
				{
					newLeafNode(otherlv_1, grammarAccess.getXClosureAccess().getLeftSquareBracketKeyword_0_0_1());
				}
			)
		)
		(
			((
				(
					(
						(
							ruleJvmFormalParameter
						)
					)
					(
						','
						(
							(
								ruleJvmFormalParameter
							)
						)
					)*
				)?
				(
					(
						'|'
					)
				)
			)
			)=>
			(
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getXClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_1_0_0_0_0());
							}
							lv_declaredFormalParameters_2_0=ruleJvmFormalParameter
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getXClosureRule());
								}
								add(
									$current,
									"declaredFormalParameters",
									lv_declaredFormalParameters_2_0,
									"org.eclipse.xtext.xbase.Xbase.JvmFormalParameter");
								afterParserOrEnumRuleCall();
							}
						)
					)
					(
						otherlv_3=','
						{
							newLeafNode(otherlv_3, grammarAccess.getXClosureAccess().getCommaKeyword_1_0_0_1_0());
						}
						(
							(
								{
									newCompositeNode(grammarAccess.getXClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_1_0_0_1_1_0());
								}
								lv_declaredFormalParameters_4_0=ruleJvmFormalParameter
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getXClosureRule());
									}
									add(
										$current,
										"declaredFormalParameters",
										lv_declaredFormalParameters_4_0,
										"org.eclipse.xtext.xbase.Xbase.JvmFormalParameter");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)*
				)?
				(
					(
						lv_explicitSyntax_5_0='|'
						{
							newLeafNode(lv_explicitSyntax_5_0, grammarAccess.getXClosureAccess().getExplicitSyntaxVerticalLineKeyword_1_0_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getXClosureRule());
							}
							setWithLastConsumed($current, "explicitSyntax", lv_explicitSyntax_5_0 != null, "|");
						}
					)
				)
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getXClosureAccess().getExpressionXExpressionInClosureParserRuleCall_2_0());
				}
				lv_expression_6_0=ruleXExpressionInClosure
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getXClosureRule());
					}
					set(
						$current,
						"expression",
						lv_expression_6_0,
						"org.eclipse.xtext.xbase.Xbase.XExpressionInClosure");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7=']'
		{
			newLeafNode(otherlv_7, grammarAccess.getXClosureAccess().getRightSquareBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleXExpressionInClosure
entryRuleXExpressionInClosure returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXExpressionInClosureRule()); }
	iv_ruleXExpressionInClosure=ruleXExpressionInClosure
	{ $current=$iv_ruleXExpressionInClosure.current; }
	EOF;

// Rule XExpressionInClosure
ruleXExpressionInClosure returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getXExpressionInClosureAccess().getXBlockExpressionAction_0(),
					$current);
			}
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getXExpressionInClosureAccess().getExpressionsXExpressionOrVarDeclarationParserRuleCall_1_0_0());
					}
					lv_expressions_1_0=ruleXExpressionOrVarDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getXExpressionInClosureRule());
						}
						add(
							$current,
							"expressions",
							lv_expressions_1_0,
							"org.eclipse.xtext.xbase.Xbase.XExpressionOrVarDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_2=';'
				{
					newLeafNode(otherlv_2, grammarAccess.getXExpressionInClosureAccess().getSemicolonKeyword_1_1());
				}
			)?
		)*
	)
;

// Entry rule entryRuleXShortClosure
entryRuleXShortClosure returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXShortClosureRule()); }
	iv_ruleXShortClosure=ruleXShortClosure
	{ $current=$iv_ruleXShortClosure.current; }
	EOF;

// Rule XShortClosure
ruleXShortClosure returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			((
				(
				)
				(
					(
						(
							ruleJvmFormalParameter
						)
					)
					(
						','
						(
							(
								ruleJvmFormalParameter
							)
						)
					)*
				)?
				(
					(
						'|'
					)
				)
			)
			)=>
			(
				(
					{
						/* */
					}
					{
						$current = forceCreateModelElement(
							grammarAccess.getXShortClosureAccess().getXClosureAction_0_0_0(),
							$current);
					}
				)
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getXShortClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_0_0_1_0_0());
							}
							lv_declaredFormalParameters_1_0=ruleJvmFormalParameter
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getXShortClosureRule());
								}
								add(
									$current,
									"declaredFormalParameters",
									lv_declaredFormalParameters_1_0,
									"org.eclipse.xtext.xbase.Xbase.JvmFormalParameter");
								afterParserOrEnumRuleCall();
							}
						)
					)
					(
						otherlv_2=','
						{
							newLeafNode(otherlv_2, grammarAccess.getXShortClosureAccess().getCommaKeyword_0_0_1_1_0());
						}
						(
							(
								{
									newCompositeNode(grammarAccess.getXShortClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_0_0_1_1_1_0());
								}
								lv_declaredFormalParameters_3_0=ruleJvmFormalParameter
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getXShortClosureRule());
									}
									add(
										$current,
										"declaredFormalParameters",
										lv_declaredFormalParameters_3_0,
										"org.eclipse.xtext.xbase.Xbase.JvmFormalParameter");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)*
				)?
				(
					(
						lv_explicitSyntax_4_0='|'
						{
							newLeafNode(lv_explicitSyntax_4_0, grammarAccess.getXShortClosureAccess().getExplicitSyntaxVerticalLineKeyword_0_0_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getXShortClosureRule());
							}
							setWithLastConsumed($current, "explicitSyntax", lv_explicitSyntax_4_0 != null, "|");
						}
					)
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getXShortClosureAccess().getExpressionXExpressionParserRuleCall_1_0());
				}
				lv_expression_5_0=ruleXExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getXShortClosureRule());
					}
					set(
						$current,
						"expression",
						lv_expression_5_0,
						"org.eclipse.xtext.xbase.Xbase.XExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleXParenthesizedExpression
entryRuleXParenthesizedExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXParenthesizedExpressionRule()); }
	iv_ruleXParenthesizedExpression=ruleXParenthesizedExpression
	{ $current=$iv_ruleXParenthesizedExpression.current; }
	EOF;

// Rule XParenthesizedExpression
ruleXParenthesizedExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getXParenthesizedExpressionAccess().getLeftParenthesisKeyword_0());
		}
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getXParenthesizedExpressionAccess().getXExpressionParserRuleCall_1());
		}
		this_XExpression_1=ruleXExpression
		{
			$current = $this_XExpression_1.current;
			afterParserOrEnumRuleCall();
		}
		otherlv_2=')'
		{
			newLeafNode(otherlv_2, grammarAccess.getXParenthesizedExpressionAccess().getRightParenthesisKeyword_2());
		}
	)
;

// Entry rule entryRuleXIfExpression
entryRuleXIfExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXIfExpressionRule()); }
	iv_ruleXIfExpression=ruleXIfExpression
	{ $current=$iv_ruleXIfExpression.current; }
	EOF;

// Rule XIfExpression
ruleXIfExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getXIfExpressionAccess().getXIfExpressionAction_0(),
					$current);
			}
		)
		otherlv_1='if'
		{
			newLeafNode(otherlv_1, grammarAccess.getXIfExpressionAccess().getIfKeyword_1());
		}
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getXIfExpressionAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getXIfExpressionAccess().getIfXExpressionParserRuleCall_3_0());
				}
				lv_if_3_0=ruleXExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getXIfExpressionRule());
					}
					set(
						$current,
						"if",
						lv_if_3_0,
						"org.eclipse.xtext.xbase.Xbase.XExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getXIfExpressionAccess().getRightParenthesisKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getXIfExpressionAccess().getThenXExpressionParserRuleCall_5_0());
				}
				lv_then_5_0=ruleXExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getXIfExpressionRule());
					}
					set(
						$current,
						"then",
						lv_then_5_0,
						"org.eclipse.xtext.xbase.Xbase.XExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				('else')=>
				otherlv_6='else'
				{
					newLeafNode(otherlv_6, grammarAccess.getXIfExpressionAccess().getElseKeyword_6_0());
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getXIfExpressionAccess().getElseXExpressionParserRuleCall_6_1_0());
					}
					lv_else_7_0=ruleXExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getXIfExpressionRule());
						}
						set(
							$current,
							"else",
							lv_else_7_0,
							"org.eclipse.xtext.xbase.Xbase.XExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleXSwitchExpression
entryRuleXSwitchExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXSwitchExpressionRule()); }
	iv_ruleXSwitchExpression=ruleXSwitchExpression
	{ $current=$iv_ruleXSwitchExpression.current; }
	EOF;

// Rule XSwitchExpression
ruleXSwitchExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getXSwitchExpressionAccess().getXSwitchExpressionAction_0(),
					$current);
			}
		)
		otherlv_1='switch'
		{
			newLeafNode(otherlv_1, grammarAccess.getXSwitchExpressionAccess().getSwitchKeyword_1());
		}
		(
			(
				(
					((
						'('
						(
							(
								ruleJvmFormalParameter
							)
						)
						':'
					)
					)=>
					(
						otherlv_2='('
						{
							newLeafNode(otherlv_2, grammarAccess.getXSwitchExpressionAccess().getLeftParenthesisKeyword_2_0_0_0_0());
						}
						(
							(
								{
									newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getDeclaredParamJvmFormalParameterParserRuleCall_2_0_0_0_1_0());
								}
								lv_declaredParam_3_0=ruleJvmFormalParameter
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
									}
									set(
										$current,
										"declaredParam",
										lv_declaredParam_3_0,
										"org.eclipse.xtext.xbase.Xbase.JvmFormalParameter");
									afterParserOrEnumRuleCall();
								}
							)
						)
						otherlv_4=':'
						{
							newLeafNode(otherlv_4, grammarAccess.getXSwitchExpressionAccess().getColonKeyword_2_0_0_0_2());
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getSwitchXExpressionParserRuleCall_2_0_1_0());
						}
						lv_switch_5_0=ruleXExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
							}
							set(
								$current,
								"switch",
								lv_switch_5_0,
								"org.eclipse.xtext.xbase.Xbase.XExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_6=')'
				{
					newLeafNode(otherlv_6, grammarAccess.getXSwitchExpressionAccess().getRightParenthesisKeyword_2_0_2());
				}
			)
			    |
			(
				(
					((
						(
							(
								ruleJvmFormalParameter
							)
						)
						':'
					)
					)=>
					(
						(
							(
								{
									newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getDeclaredParamJvmFormalParameterParserRuleCall_2_1_0_0_0_0());
								}
								lv_declaredParam_7_0=ruleJvmFormalParameter
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
									}
									set(
										$current,
										"declaredParam",
										lv_declaredParam_7_0,
										"org.eclipse.xtext.xbase.Xbase.JvmFormalParameter");
									afterParserOrEnumRuleCall();
								}
							)
						)
						otherlv_8=':'
						{
							newLeafNode(otherlv_8, grammarAccess.getXSwitchExpressionAccess().getColonKeyword_2_1_0_0_1());
						}
					)
				)?
				(
					(
						{
							newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getSwitchXExpressionParserRuleCall_2_1_1_0());
						}
						lv_switch_9_0=ruleXExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
							}
							set(
								$current,
								"switch",
								lv_switch_9_0,
								"org.eclipse.xtext.xbase.Xbase.XExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)
		otherlv_10='{'
		{
			newLeafNode(otherlv_10, grammarAccess.getXSwitchExpressionAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getCasesXCasePartParserRuleCall_4_0());
				}
				lv_cases_11_0=ruleXCasePart
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
					}
					add(
						$current,
						"cases",
						lv_cases_11_0,
						"org.eclipse.xtext.xbase.Xbase.XCasePart");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			otherlv_12='default'
			{
				newLeafNode(otherlv_12, grammarAccess.getXSwitchExpressionAccess().getDefaultKeyword_5_0());
			}
			otherlv_13=':'
			{
				newLeafNode(otherlv_13, grammarAccess.getXSwitchExpressionAccess().getColonKeyword_5_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getDefaultXExpressionParserRuleCall_5_2_0());
					}
					lv_default_14_0=ruleXExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
						}
						set(
							$current,
							"default",
							lv_default_14_0,
							"org.eclipse.xtext.xbase.Xbase.XExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_15='}'
		{
			newLeafNode(otherlv_15, grammarAccess.getXSwitchExpressionAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleXCasePart
entryRuleXCasePart returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXCasePartRule()); }
	iv_ruleXCasePart=ruleXCasePart
	{ $current=$iv_ruleXCasePart.current; }
	EOF;

// Rule XCasePart
ruleXCasePart returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getXCasePartAccess().getXCasePartAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getXCasePartAccess().getTypeGuardJvmTypeReferenceParserRuleCall_1_0());
				}
				lv_typeGuard_1_0=ruleJvmTypeReference
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getXCasePartRule());
					}
					set(
						$current,
						"typeGuard",
						lv_typeGuard_1_0,
						"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			otherlv_2='case'
			{
				newLeafNode(otherlv_2, grammarAccess.getXCasePartAccess().getCaseKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getXCasePartAccess().getCaseXExpressionParserRuleCall_2_1_0());
					}
					lv_case_3_0=ruleXExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getXCasePartRule());
						}
						set(
							$current,
							"case",
							lv_case_3_0,
							"org.eclipse.xtext.xbase.Xbase.XExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			(
				otherlv_4=':'
				{
					newLeafNode(otherlv_4, grammarAccess.getXCasePartAccess().getColonKeyword_3_0_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getXCasePartAccess().getThenXExpressionParserRuleCall_3_0_1_0());
						}
						lv_then_5_0=ruleXExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getXCasePartRule());
							}
							set(
								$current,
								"then",
								lv_then_5_0,
								"org.eclipse.xtext.xbase.Xbase.XExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					lv_fallThrough_6_0=','
					{
						newLeafNode(lv_fallThrough_6_0, grammarAccess.getXCasePartAccess().getFallThroughCommaKeyword_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getXCasePartRule());
						}
						setWithLastConsumed($current, "fallThrough", lv_fallThrough_6_0 != null, ",");
					}
				)
			)
		)
	)
;

// Entry rule entryRuleXForLoopExpression
entryRuleXForLoopExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXForLoopExpressionRule()); }
	iv_ruleXForLoopExpression=ruleXForLoopExpression
	{ $current=$iv_ruleXForLoopExpression.current; }
	EOF;

// Rule XForLoopExpression
ruleXForLoopExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			((
				(
				)
				'for'
				'('
				(
					(
						ruleJvmFormalParameter
					)
				)
				':'
			)
			)=>
			(
				(
					{
						/* */
					}
					{
						$current = forceCreateModelElement(
							grammarAccess.getXForLoopExpressionAccess().getXForLoopExpressionAction_0_0_0(),
							$current);
					}
				)
				otherlv_1='for'
				{
					newLeafNode(otherlv_1, grammarAccess.getXForLoopExpressionAccess().getForKeyword_0_0_1());
				}
				otherlv_2='('
				{
					newLeafNode(otherlv_2, grammarAccess.getXForLoopExpressionAccess().getLeftParenthesisKeyword_0_0_2());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getXForLoopExpressionAccess().getDeclaredParamJvmFormalParameterParserRuleCall_0_0_3_0());
						}
						lv_declaredParam_3_0=ruleJvmFormalParameter
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getXForLoopExpressionRule());
							}
							set(
								$current,
								"declaredParam",
								lv_declaredParam_3_0,
								"org.eclipse.xtext.xbase.Xbase.JvmFormalParameter");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_4=':'
				{
					newLeafNode(otherlv_4, grammarAccess.getXForLoopExpressionAccess().getColonKeyword_0_0_4());
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getXForLoopExpressionAccess().getForExpressionXExpressionParserRuleCall_1_0());
				}
				lv_forExpression_5_0=ruleXExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getXForLoopExpressionRule());
					}
					set(
						$current,
						"forExpression",
						lv_forExpression_5_0,
						"org.eclipse.xtext.xbase.Xbase.XExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6=')'
		{
			newLeafNode(otherlv_6, grammarAccess.getXForLoopExpressionAccess().getRightParenthesisKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getXForLoopExpressionAccess().getEachExpressionXExpressionParserRuleCall_3_0());
				}
				lv_eachExpression_7_0=ruleXExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getXForLoopExpressionRule());
					}
					set(
						$current,
						"eachExpression",
						lv_eachExpression_7_0,
						"org.eclipse.xtext.xbase.Xbase.XExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleXBasicForLoopExpression
entryRuleXBasicForLoopExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXBasicForLoopExpressionRule()); }
	iv_ruleXBasicForLoopExpression=ruleXBasicForLoopExpression
	{ $current=$iv_ruleXBasicForLoopExpression.current; }
	EOF;

// Rule XBasicForLoopExpression
ruleXBasicForLoopExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getXBasicForLoopExpressionAccess().getXBasicForLoopExpressionAction_0(),
					$current);
			}
		)
		otherlv_1='for'
		{
			newLeafNode(otherlv_1, grammarAccess.getXBasicForLoopExpressionAccess().getForKeyword_1());
		}
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getXBasicForLoopExpressionAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getInitExpressionsXExpressionOrVarDeclarationParserRuleCall_3_0_0());
					}
					lv_initExpressions_3_0=ruleXExpressionOrVarDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
						}
						add(
							$current,
							"initExpressions",
							lv_initExpressions_3_0,
							"org.eclipse.xtext.xbase.Xbase.XExpressionOrVarDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getXBasicForLoopExpressionAccess().getCommaKeyword_3_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getInitExpressionsXExpressionOrVarDeclarationParserRuleCall_3_1_1_0());
						}
						lv_initExpressions_5_0=ruleXExpressionOrVarDeclaration
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
							}
							add(
								$current,
								"initExpressions",
								lv_initExpressions_5_0,
								"org.eclipse.xtext.xbase.Xbase.XExpressionOrVarDeclaration");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_6=';'
		{
			newLeafNode(otherlv_6, grammarAccess.getXBasicForLoopExpressionAccess().getSemicolonKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getExpressionXExpressionParserRuleCall_5_0());
				}
				lv_expression_7_0=ruleXExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
					}
					set(
						$current,
						"expression",
						lv_expression_7_0,
						"org.eclipse.xtext.xbase.Xbase.XExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_8=';'
		{
			newLeafNode(otherlv_8, grammarAccess.getXBasicForLoopExpressionAccess().getSemicolonKeyword_6());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getUpdateExpressionsXExpressionParserRuleCall_7_0_0());
					}
					lv_updateExpressions_9_0=ruleXExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
						}
						add(
							$current,
							"updateExpressions",
							lv_updateExpressions_9_0,
							"org.eclipse.xtext.xbase.Xbase.XExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_10=','
				{
					newLeafNode(otherlv_10, grammarAccess.getXBasicForLoopExpressionAccess().getCommaKeyword_7_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getUpdateExpressionsXExpressionParserRuleCall_7_1_1_0());
						}
						lv_updateExpressions_11_0=ruleXExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
							}
							add(
								$current,
								"updateExpressions",
								lv_updateExpressions_11_0,
								"org.eclipse.xtext.xbase.Xbase.XExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_12=')'
		{
			newLeafNode(otherlv_12, grammarAccess.getXBasicForLoopExpressionAccess().getRightParenthesisKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getEachExpressionXExpressionParserRuleCall_9_0());
				}
				lv_eachExpression_13_0=ruleXExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
					}
					set(
						$current,
						"eachExpression",
						lv_eachExpression_13_0,
						"org.eclipse.xtext.xbase.Xbase.XExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleXWhileExpression
entryRuleXWhileExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXWhileExpressionRule()); }
	iv_ruleXWhileExpression=ruleXWhileExpression
	{ $current=$iv_ruleXWhileExpression.current; }
	EOF;

// Rule XWhileExpression
ruleXWhileExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getXWhileExpressionAccess().getXWhileExpressionAction_0(),
					$current);
			}
		)
		otherlv_1='while'
		{
			newLeafNode(otherlv_1, grammarAccess.getXWhileExpressionAccess().getWhileKeyword_1());
		}
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getXWhileExpressionAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getXWhileExpressionAccess().getPredicateXExpressionParserRuleCall_3_0());
				}
				lv_predicate_3_0=ruleXExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getXWhileExpressionRule());
					}
					set(
						$current,
						"predicate",
						lv_predicate_3_0,
						"org.eclipse.xtext.xbase.Xbase.XExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getXWhileExpressionAccess().getRightParenthesisKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getXWhileExpressionAccess().getBodyXExpressionParserRuleCall_5_0());
				}
				lv_body_5_0=ruleXExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getXWhileExpressionRule());
					}
					set(
						$current,
						"body",
						lv_body_5_0,
						"org.eclipse.xtext.xbase.Xbase.XExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleXDoWhileExpression
entryRuleXDoWhileExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXDoWhileExpressionRule()); }
	iv_ruleXDoWhileExpression=ruleXDoWhileExpression
	{ $current=$iv_ruleXDoWhileExpression.current; }
	EOF;

// Rule XDoWhileExpression
ruleXDoWhileExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getXDoWhileExpressionAccess().getXDoWhileExpressionAction_0(),
					$current);
			}
		)
		otherlv_1='do'
		{
			newLeafNode(otherlv_1, grammarAccess.getXDoWhileExpressionAccess().getDoKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getXDoWhileExpressionAccess().getBodyXExpressionParserRuleCall_2_0());
				}
				lv_body_2_0=ruleXExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getXDoWhileExpressionRule());
					}
					set(
						$current,
						"body",
						lv_body_2_0,
						"org.eclipse.xtext.xbase.Xbase.XExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='while'
		{
			newLeafNode(otherlv_3, grammarAccess.getXDoWhileExpressionAccess().getWhileKeyword_3());
		}
		otherlv_4='('
		{
			newLeafNode(otherlv_4, grammarAccess.getXDoWhileExpressionAccess().getLeftParenthesisKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getXDoWhileExpressionAccess().getPredicateXExpressionParserRuleCall_5_0());
				}
				lv_predicate_5_0=ruleXExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getXDoWhileExpressionRule());
					}
					set(
						$current,
						"predicate",
						lv_predicate_5_0,
						"org.eclipse.xtext.xbase.Xbase.XExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6=')'
		{
			newLeafNode(otherlv_6, grammarAccess.getXDoWhileExpressionAccess().getRightParenthesisKeyword_6());
		}
	)
;

// Entry rule entryRuleXBlockExpression
entryRuleXBlockExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXBlockExpressionRule()); }
	iv_ruleXBlockExpression=ruleXBlockExpression
	{ $current=$iv_ruleXBlockExpression.current; }
	EOF;

// Rule XBlockExpression
ruleXBlockExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getXBlockExpressionAccess().getXBlockExpressionAction_0(),
					$current);
			}
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getXBlockExpressionAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getXBlockExpressionAccess().getExpressionsXExpressionOrVarDeclarationParserRuleCall_2_0_0());
					}
					lv_expressions_2_0=ruleXExpressionOrVarDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getXBlockExpressionRule());
						}
						add(
							$current,
							"expressions",
							lv_expressions_2_0,
							"org.eclipse.xtext.xbase.Xbase.XExpressionOrVarDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=';'
				{
					newLeafNode(otherlv_3, grammarAccess.getXBlockExpressionAccess().getSemicolonKeyword_2_1());
				}
			)?
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getXBlockExpressionAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleXExpressionOrVarDeclaration
entryRuleXExpressionOrVarDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXExpressionOrVarDeclarationRule()); }
	iv_ruleXExpressionOrVarDeclaration=ruleXExpressionOrVarDeclaration
	{ $current=$iv_ruleXExpressionOrVarDeclaration.current; }
	EOF;

// Rule XExpressionOrVarDeclaration
ruleXExpressionOrVarDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getXExpressionOrVarDeclarationAccess().getXVariableDeclarationParserRuleCall_0());
		}
		this_XVariableDeclaration_0=ruleXVariableDeclaration
		{
			$current = $this_XVariableDeclaration_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getXExpressionOrVarDeclarationAccess().getXExpressionParserRuleCall_1());
		}
		this_XExpression_1=ruleXExpression
		{
			$current = $this_XExpression_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleXVariableDeclaration
entryRuleXVariableDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXVariableDeclarationRule()); }
	iv_ruleXVariableDeclaration=ruleXVariableDeclaration
	{ $current=$iv_ruleXVariableDeclaration.current; }
	EOF;

// Rule XVariableDeclaration
ruleXVariableDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getXVariableDeclarationAccess().getXVariableDeclarationAction_0(),
					$current);
			}
		)
		(
			(
				(
					lv_writeable_1_0='var'
					{
						newLeafNode(lv_writeable_1_0, grammarAccess.getXVariableDeclarationAccess().getWriteableVarKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getXVariableDeclarationRule());
						}
						setWithLastConsumed($current, "writeable", lv_writeable_1_0 != null, "var");
					}
				)
			)
			    |
			otherlv_2='val'
			{
				newLeafNode(otherlv_2, grammarAccess.getXVariableDeclarationAccess().getValKeyword_1_1());
			}
		)
		(
			(
				((
					(
						(
							ruleJvmTypeReference
						)
					)
					(
						(
							ruleValidID
						)
					)
				)
				)=>
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getTypeJvmTypeReferenceParserRuleCall_2_0_0_0_0());
							}
							lv_type_3_0=ruleJvmTypeReference
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
								}
								set(
									$current,
									"type",
									lv_type_3_0,
									"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
								afterParserOrEnumRuleCall();
							}
						)
					)
					(
						(
							{
								newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getNameValidIDParserRuleCall_2_0_0_1_0());
							}
							lv_name_4_0=ruleValidID
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
								}
								set(
									$current,
									"name",
									lv_name_4_0,
									"org.eclipse.xtext.xbase.Xtype.ValidID");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getNameValidIDParserRuleCall_2_1_0());
					}
					lv_name_5_0=ruleValidID
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
						}
						set(
							$current,
							"name",
							lv_name_5_0,
							"org.eclipse.xtext.xbase.Xtype.ValidID");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			otherlv_6='='
			{
				newLeafNode(otherlv_6, grammarAccess.getXVariableDeclarationAccess().getEqualsSignKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getRightXExpressionParserRuleCall_3_1_0());
					}
					lv_right_7_0=ruleXExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
						}
						set(
							$current,
							"right",
							lv_right_7_0,
							"org.eclipse.xtext.xbase.Xbase.XExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleJvmFormalParameter
entryRuleJvmFormalParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJvmFormalParameterRule()); }
	iv_ruleJvmFormalParameter=ruleJvmFormalParameter
	{ $current=$iv_ruleJvmFormalParameter.current; }
	EOF;

// Rule JvmFormalParameter
ruleJvmFormalParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getJvmFormalParameterAccess().getParameterTypeJvmTypeReferenceParserRuleCall_0_0());
				}
				lv_parameterType_0_0=ruleJvmTypeReference
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getJvmFormalParameterRule());
					}
					set(
						$current,
						"parameterType",
						lv_parameterType_0_0,
						"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getJvmFormalParameterAccess().getNameValidIDParserRuleCall_1_0());
				}
				lv_name_1_0=ruleValidID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getJvmFormalParameterRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.xbase.Xtype.ValidID");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFullJvmFormalParameter
entryRuleFullJvmFormalParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFullJvmFormalParameterRule()); }
	iv_ruleFullJvmFormalParameter=ruleFullJvmFormalParameter
	{ $current=$iv_ruleFullJvmFormalParameter.current; }
	EOF;

// Rule FullJvmFormalParameter
ruleFullJvmFormalParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getFullJvmFormalParameterAccess().getParameterTypeJvmTypeReferenceParserRuleCall_0_0());
				}
				lv_parameterType_0_0=ruleJvmTypeReference
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFullJvmFormalParameterRule());
					}
					set(
						$current,
						"parameterType",
						lv_parameterType_0_0,
						"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFullJvmFormalParameterAccess().getNameValidIDParserRuleCall_1_0());
				}
				lv_name_1_0=ruleValidID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFullJvmFormalParameterRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.xbase.Xtype.ValidID");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleXFeatureCall
entryRuleXFeatureCall returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXFeatureCallRule()); }
	iv_ruleXFeatureCall=ruleXFeatureCall
	{ $current=$iv_ruleXFeatureCall.current; }
	EOF;

// Rule XFeatureCall
ruleXFeatureCall returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getXFeatureCallAccess().getXFeatureCallAction_0(),
					$current);
			}
		)
		(
			otherlv_1='<'
			{
				newLeafNode(otherlv_1, grammarAccess.getXFeatureCallAccess().getLessThanSignKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getXFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_0());
					}
					lv_typeArguments_2_0=ruleJvmArgumentTypeReference
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
						}
						add(
							$current,
							"typeArguments",
							lv_typeArguments_2_0,
							"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getXFeatureCallAccess().getCommaKeyword_1_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getXFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_2_1_0());
						}
						lv_typeArguments_4_0=ruleJvmArgumentTypeReference
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
							}
							add(
								$current,
								"typeArguments",
								lv_typeArguments_4_0,
								"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_5='>'
			{
				newLeafNode(otherlv_5, grammarAccess.getXFeatureCallAccess().getGreaterThanSignKeyword_1_3());
			}
		)?
		(
			(
				{
					/* */
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXFeatureCallRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_2_0());
				}
				ruleIdOrSuper
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				((
					'('
				)
				)=>
				(
					lv_explicitOperationCall_7_0='('
					{
						newLeafNode(lv_explicitOperationCall_7_0, grammarAccess.getXFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_3_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getXFeatureCallRule());
						}
						setWithLastConsumed($current, "explicitOperationCall", lv_explicitOperationCall_7_0 != null, "(");
					}
				)
			)
			(
				(
					((
						(
						)
						(
							(
								(
									ruleJvmFormalParameter
								)
							)
							(
								','
								(
									(
										ruleJvmFormalParameter
									)
								)
							)*
						)?
						(
							(
								'|'
							)
						)
					)
					)=>
					(
						{
							newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXShortClosureParserRuleCall_3_1_0_0());
						}
						lv_featureCallArguments_8_0=ruleXShortClosure
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
							}
							add(
								$current,
								"featureCallArguments",
								lv_featureCallArguments_8_0,
								"org.eclipse.xtext.xbase.Xbase.XShortClosure");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXExpressionParserRuleCall_3_1_1_0_0());
							}
							lv_featureCallArguments_9_0=ruleXExpression
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
								}
								add(
									$current,
									"featureCallArguments",
									lv_featureCallArguments_9_0,
									"org.eclipse.xtext.xbase.Xbase.XExpression");
								afterParserOrEnumRuleCall();
							}
						)
					)
					(
						otherlv_10=','
						{
							newLeafNode(otherlv_10, grammarAccess.getXFeatureCallAccess().getCommaKeyword_3_1_1_1_0());
						}
						(
							(
								{
									newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXExpressionParserRuleCall_3_1_1_1_1_0());
								}
								lv_featureCallArguments_11_0=ruleXExpression
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
									}
									add(
										$current,
										"featureCallArguments",
										lv_featureCallArguments_11_0,
										"org.eclipse.xtext.xbase.Xbase.XExpression");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)*
				)
			)?
			otherlv_12=')'
			{
				newLeafNode(otherlv_12, grammarAccess.getXFeatureCallAccess().getRightParenthesisKeyword_3_2());
			}
		)?
		(
			((
				(
				)
				'['
			)
			)=>
			(
				{
					newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXClosureParserRuleCall_4_0());
				}
				lv_featureCallArguments_13_0=ruleXClosure
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
					}
					add(
						$current,
						"featureCallArguments",
						lv_featureCallArguments_13_0,
						"org.eclipse.xtext.xbase.Xbase.XClosure");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleFeatureCallID
entryRuleFeatureCallID returns [String current=null]:
	{ newCompositeNode(grammarAccess.getFeatureCallIDRule()); }
	iv_ruleFeatureCallID=ruleFeatureCallID
	{ $current=$iv_ruleFeatureCallID.current.getText(); }
	EOF;

// Rule FeatureCallID
ruleFeatureCallID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getFeatureCallIDAccess().getValidIDParserRuleCall_0());
		}
		this_ValidID_0=ruleValidID
		{
			$current.merge(this_ValidID_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		kw='extends'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getExtendsKeyword_1());
		}
		    |
		kw='static'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getStaticKeyword_2());
		}
		    |
		kw='import'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getImportKeyword_3());
		}
		    |
		kw='extension'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getExtensionKeyword_4());
		}
	)
;

// Entry rule entryRuleIdOrSuper
entryRuleIdOrSuper returns [String current=null]:
	{ newCompositeNode(grammarAccess.getIdOrSuperRule()); }
	iv_ruleIdOrSuper=ruleIdOrSuper
	{ $current=$iv_ruleIdOrSuper.current.getText(); }
	EOF;

// Rule IdOrSuper
ruleIdOrSuper returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getIdOrSuperAccess().getFeatureCallIDParserRuleCall_0());
		}
		this_FeatureCallID_0=ruleFeatureCallID
		{
			$current.merge(this_FeatureCallID_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		kw='super'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getIdOrSuperAccess().getSuperKeyword_1());
		}
	)
;

// Entry rule entryRuleXConstructorCall
entryRuleXConstructorCall returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXConstructorCallRule()); }
	iv_ruleXConstructorCall=ruleXConstructorCall
	{ $current=$iv_ruleXConstructorCall.current; }
	EOF;

// Rule XConstructorCall
ruleXConstructorCall returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getXConstructorCallAccess().getXConstructorCallAction_0(),
					$current);
			}
		)
		otherlv_1='new'
		{
			newLeafNode(otherlv_1, grammarAccess.getXConstructorCallAccess().getNewKeyword_1());
		}
		(
			(
				{
					/* */
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXConstructorCallRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getXConstructorCallAccess().getConstructorJvmConstructorCrossReference_2_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				('<')=>
				otherlv_3='<'
				{
					newLeafNode(otherlv_3, grammarAccess.getXConstructorCallAccess().getLessThanSignKeyword_3_0());
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getXConstructorCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_3_1_0());
					}
					lv_typeArguments_4_0=ruleJvmArgumentTypeReference
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
						}
						add(
							$current,
							"typeArguments",
							lv_typeArguments_4_0,
							"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_5=','
				{
					newLeafNode(otherlv_5, grammarAccess.getXConstructorCallAccess().getCommaKeyword_3_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getXConstructorCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_3_2_1_0());
						}
						lv_typeArguments_6_0=ruleJvmArgumentTypeReference
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
							}
							add(
								$current,
								"typeArguments",
								lv_typeArguments_6_0,
								"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_7='>'
			{
				newLeafNode(otherlv_7, grammarAccess.getXConstructorCallAccess().getGreaterThanSignKeyword_3_3());
			}
		)?
		(
			(
				((
					'('
				)
				)=>
				(
					lv_explicitConstructorCall_8_0='('
					{
						newLeafNode(lv_explicitConstructorCall_8_0, grammarAccess.getXConstructorCallAccess().getExplicitConstructorCallLeftParenthesisKeyword_4_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getXConstructorCallRule());
						}
						setWithLastConsumed($current, "explicitConstructorCall", lv_explicitConstructorCall_8_0 != null, "(");
					}
				)
			)
			(
				(
					((
						(
						)
						(
							(
								(
									ruleJvmFormalParameter
								)
							)
							(
								','
								(
									(
										ruleJvmFormalParameter
									)
								)
							)*
						)?
						(
							(
								'|'
							)
						)
					)
					)=>
					(
						{
							newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXShortClosureParserRuleCall_4_1_0_0());
						}
						lv_arguments_9_0=ruleXShortClosure
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
							}
							add(
								$current,
								"arguments",
								lv_arguments_9_0,
								"org.eclipse.xtext.xbase.Xbase.XShortClosure");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXExpressionParserRuleCall_4_1_1_0_0());
							}
							lv_arguments_10_0=ruleXExpression
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
								}
								add(
									$current,
									"arguments",
									lv_arguments_10_0,
									"org.eclipse.xtext.xbase.Xbase.XExpression");
								afterParserOrEnumRuleCall();
							}
						)
					)
					(
						otherlv_11=','
						{
							newLeafNode(otherlv_11, grammarAccess.getXConstructorCallAccess().getCommaKeyword_4_1_1_1_0());
						}
						(
							(
								{
									newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXExpressionParserRuleCall_4_1_1_1_1_0());
								}
								lv_arguments_12_0=ruleXExpression
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
									}
									add(
										$current,
										"arguments",
										lv_arguments_12_0,
										"org.eclipse.xtext.xbase.Xbase.XExpression");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)*
				)
			)?
			otherlv_13=')'
			{
				newLeafNode(otherlv_13, grammarAccess.getXConstructorCallAccess().getRightParenthesisKeyword_4_2());
			}
		)?
		(
			((
				(
				)
				'['
			)
			)=>
			(
				{
					newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXClosureParserRuleCall_5_0());
				}
				lv_arguments_14_0=ruleXClosure
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
					}
					add(
						$current,
						"arguments",
						lv_arguments_14_0,
						"org.eclipse.xtext.xbase.Xbase.XClosure");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleXBooleanLiteral
entryRuleXBooleanLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXBooleanLiteralRule()); }
	iv_ruleXBooleanLiteral=ruleXBooleanLiteral
	{ $current=$iv_ruleXBooleanLiteral.current; }
	EOF;

// Rule XBooleanLiteral
ruleXBooleanLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getXBooleanLiteralAccess().getXBooleanLiteralAction_0(),
					$current);
			}
		)
		(
			otherlv_1='false'
			{
				newLeafNode(otherlv_1, grammarAccess.getXBooleanLiteralAccess().getFalseKeyword_1_0());
			}
			    |
			(
				(
					lv_isTrue_2_0='true'
					{
						newLeafNode(lv_isTrue_2_0, grammarAccess.getXBooleanLiteralAccess().getIsTrueTrueKeyword_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getXBooleanLiteralRule());
						}
						setWithLastConsumed($current, "isTrue", lv_isTrue_2_0 != null, "true");
					}
				)
			)
		)
	)
;

// Entry rule entryRuleXNullLiteral
entryRuleXNullLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXNullLiteralRule()); }
	iv_ruleXNullLiteral=ruleXNullLiteral
	{ $current=$iv_ruleXNullLiteral.current; }
	EOF;

// Rule XNullLiteral
ruleXNullLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getXNullLiteralAccess().getXNullLiteralAction_0(),
					$current);
			}
		)
		otherlv_1='null'
		{
			newLeafNode(otherlv_1, grammarAccess.getXNullLiteralAccess().getNullKeyword_1());
		}
	)
;

// Entry rule entryRuleXNumberLiteral
entryRuleXNumberLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXNumberLiteralRule()); }
	iv_ruleXNumberLiteral=ruleXNumberLiteral
	{ $current=$iv_ruleXNumberLiteral.current; }
	EOF;

// Rule XNumberLiteral
ruleXNumberLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getXNumberLiteralAccess().getXNumberLiteralAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getXNumberLiteralAccess().getValueNumberParserRuleCall_1_0());
				}
				lv_value_1_0=ruleNumber
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getXNumberLiteralRule());
					}
					set(
						$current,
						"value",
						lv_value_1_0,
						"org.eclipse.xtext.xbase.Xbase.Number");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleXStringLiteral
entryRuleXStringLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXStringLiteralRule()); }
	iv_ruleXStringLiteral=ruleXStringLiteral
	{ $current=$iv_ruleXStringLiteral.current; }
	EOF;

// Rule XStringLiteral
ruleXStringLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getXStringLiteralAccess().getXStringLiteralAction_0(),
					$current);
			}
		)
		(
			(
				lv_value_1_0=RULE_STRING
				{
					newLeafNode(lv_value_1_0, grammarAccess.getXStringLiteralAccess().getValueSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXStringLiteralRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_1_0,
						"jpaqldsl.JPAQLDsl.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleXTypeLiteral
entryRuleXTypeLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXTypeLiteralRule()); }
	iv_ruleXTypeLiteral=ruleXTypeLiteral
	{ $current=$iv_ruleXTypeLiteral.current; }
	EOF;

// Rule XTypeLiteral
ruleXTypeLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getXTypeLiteralAccess().getXTypeLiteralAction_0(),
					$current);
			}
		)
		otherlv_1='typeof'
		{
			newLeafNode(otherlv_1, grammarAccess.getXTypeLiteralAccess().getTypeofKeyword_1());
		}
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getXTypeLiteralAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					/* */
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXTypeLiteralRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getXTypeLiteralAccess().getTypeJvmTypeCrossReference_3_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getXTypeLiteralAccess().getArrayDimensionsArrayBracketsParserRuleCall_4_0());
				}
				lv_arrayDimensions_4_0=ruleArrayBrackets
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getXTypeLiteralRule());
					}
					add(
						$current,
						"arrayDimensions",
						lv_arrayDimensions_4_0,
						"org.eclipse.xtext.xbase.Xtype.ArrayBrackets");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getXTypeLiteralAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRuleXThrowExpression
entryRuleXThrowExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXThrowExpressionRule()); }
	iv_ruleXThrowExpression=ruleXThrowExpression
	{ $current=$iv_ruleXThrowExpression.current; }
	EOF;

// Rule XThrowExpression
ruleXThrowExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getXThrowExpressionAccess().getXThrowExpressionAction_0(),
					$current);
			}
		)
		otherlv_1='throw'
		{
			newLeafNode(otherlv_1, grammarAccess.getXThrowExpressionAccess().getThrowKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getXThrowExpressionAccess().getExpressionXExpressionParserRuleCall_2_0());
				}
				lv_expression_2_0=ruleXExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getXThrowExpressionRule());
					}
					set(
						$current,
						"expression",
						lv_expression_2_0,
						"org.eclipse.xtext.xbase.Xbase.XExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleXReturnExpression
entryRuleXReturnExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXReturnExpressionRule()); }
	iv_ruleXReturnExpression=ruleXReturnExpression
	{ $current=$iv_ruleXReturnExpression.current; }
	EOF;

// Rule XReturnExpression
ruleXReturnExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getXReturnExpressionAccess().getXReturnExpressionAction_0(),
					$current);
			}
		)
		otherlv_1='return'
		{
			newLeafNode(otherlv_1, grammarAccess.getXReturnExpressionAccess().getReturnKeyword_1());
		}
		(
			('extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | 'synchronized' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING)=>
			(
				{
					newCompositeNode(grammarAccess.getXReturnExpressionAccess().getExpressionXExpressionParserRuleCall_2_0());
				}
				lv_expression_2_0=ruleXExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getXReturnExpressionRule());
					}
					set(
						$current,
						"expression",
						lv_expression_2_0,
						"org.eclipse.xtext.xbase.Xbase.XExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleXTryCatchFinallyExpression
entryRuleXTryCatchFinallyExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionRule()); }
	iv_ruleXTryCatchFinallyExpression=ruleXTryCatchFinallyExpression
	{ $current=$iv_ruleXTryCatchFinallyExpression.current; }
	EOF;

// Rule XTryCatchFinallyExpression
ruleXTryCatchFinallyExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getXTryCatchFinallyExpressionAccess().getXTryCatchFinallyExpressionAction_0(),
					$current);
			}
		)
		otherlv_1='try'
		{
			newLeafNode(otherlv_1, grammarAccess.getXTryCatchFinallyExpressionAccess().getTryKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getExpressionXExpressionParserRuleCall_2_0());
				}
				lv_expression_2_0=ruleXExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
					}
					set(
						$current,
						"expression",
						lv_expression_2_0,
						"org.eclipse.xtext.xbase.Xbase.XExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					('catch')=>
					(
						{
							newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getCatchClausesXCatchClauseParserRuleCall_3_0_0_0());
						}
						lv_catchClauses_3_0=ruleXCatchClause
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
							}
							add(
								$current,
								"catchClauses",
								lv_catchClauses_3_0,
								"org.eclipse.xtext.xbase.Xbase.XCatchClause");
							afterParserOrEnumRuleCall();
						}
					)
				)+
				(
					(
						('finally')=>
						otherlv_4='finally'
						{
							newLeafNode(otherlv_4, grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyKeyword_3_0_1_0());
						}
					)
					(
						(
							{
								newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyExpressionXExpressionParserRuleCall_3_0_1_1_0());
							}
							lv_finallyExpression_5_0=ruleXExpression
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
								}
								set(
									$current,
									"finallyExpression",
									lv_finallyExpression_5_0,
									"org.eclipse.xtext.xbase.Xbase.XExpression");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)?
			)
			    |
			(
				otherlv_6='finally'
				{
					newLeafNode(otherlv_6, grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyKeyword_3_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyExpressionXExpressionParserRuleCall_3_1_1_0());
						}
						lv_finallyExpression_7_0=ruleXExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
							}
							set(
								$current,
								"finallyExpression",
								lv_finallyExpression_7_0,
								"org.eclipse.xtext.xbase.Xbase.XExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)
	)
;

// Entry rule entryRuleXSynchronizedExpression
entryRuleXSynchronizedExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXSynchronizedExpressionRule()); }
	iv_ruleXSynchronizedExpression=ruleXSynchronizedExpression
	{ $current=$iv_ruleXSynchronizedExpression.current; }
	EOF;

// Rule XSynchronizedExpression
ruleXSynchronizedExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			((
				(
				)
				'synchronized'
				'('
			)
			)=>
			(
				(
					{
						/* */
					}
					{
						$current = forceCreateModelElement(
							grammarAccess.getXSynchronizedExpressionAccess().getXSynchronizedExpressionAction_0_0_0(),
							$current);
					}
				)
				otherlv_1='synchronized'
				{
					newLeafNode(otherlv_1, grammarAccess.getXSynchronizedExpressionAccess().getSynchronizedKeyword_0_0_1());
				}
				otherlv_2='('
				{
					newLeafNode(otherlv_2, grammarAccess.getXSynchronizedExpressionAccess().getLeftParenthesisKeyword_0_0_2());
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getXSynchronizedExpressionAccess().getParamXExpressionParserRuleCall_1_0());
				}
				lv_param_3_0=ruleXExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getXSynchronizedExpressionRule());
					}
					set(
						$current,
						"param",
						lv_param_3_0,
						"org.eclipse.xtext.xbase.Xbase.XExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getXSynchronizedExpressionAccess().getRightParenthesisKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getXSynchronizedExpressionAccess().getExpressionXExpressionParserRuleCall_3_0());
				}
				lv_expression_5_0=ruleXExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getXSynchronizedExpressionRule());
					}
					set(
						$current,
						"expression",
						lv_expression_5_0,
						"org.eclipse.xtext.xbase.Xbase.XExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleXCatchClause
entryRuleXCatchClause returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXCatchClauseRule()); }
	iv_ruleXCatchClause=ruleXCatchClause
	{ $current=$iv_ruleXCatchClause.current; }
	EOF;

// Rule XCatchClause
ruleXCatchClause returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			('catch')=>
			otherlv_0='catch'
			{
				newLeafNode(otherlv_0, grammarAccess.getXCatchClauseAccess().getCatchKeyword_0());
			}
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getXCatchClauseAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getXCatchClauseAccess().getDeclaredParamFullJvmFormalParameterParserRuleCall_2_0());
				}
				lv_declaredParam_2_0=ruleFullJvmFormalParameter
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getXCatchClauseRule());
					}
					set(
						$current,
						"declaredParam",
						lv_declaredParam_2_0,
						"org.eclipse.xtext.xbase.Xbase.FullJvmFormalParameter");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getXCatchClauseAccess().getRightParenthesisKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getXCatchClauseAccess().getExpressionXExpressionParserRuleCall_4_0());
				}
				lv_expression_4_0=ruleXExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getXCatchClauseRule());
					}
					set(
						$current,
						"expression",
						lv_expression_4_0,
						"org.eclipse.xtext.xbase.Xbase.XExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); }
	iv_ruleQualifiedName=ruleQualifiedName
	{ $current=$iv_ruleQualifiedName.current.getText(); }
	EOF;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_0());
		}
		this_ValidID_0=ruleValidID
		{
			$current.merge(this_ValidID_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		(
			(
				('.')=>
				kw='.'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0());
				}
			)
			{
				newCompositeNode(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_1_1());
			}
			this_ValidID_2=ruleValidID
			{
				$current.merge(this_ValidID_2);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)*
	)
;

// Entry rule entryRuleNumber
entryRuleNumber returns [String current=null]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	{ newCompositeNode(grammarAccess.getNumberRule()); }
	iv_ruleNumber=ruleNumber
	{ $current=$iv_ruleNumber.current.getText(); }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule Number
ruleNumber returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
@after {
	leaveRule();
}:
	(
		this_HEX_0=RULE_HEX
		{
			$current.merge(this_HEX_0);
		}
		{
			newLeafNode(this_HEX_0, grammarAccess.getNumberAccess().getHEXTerminalRuleCall_0());
		}
		    |
		(
			(
				this_INT_1=RULE_INT
				{
					$current.merge(this_INT_1);
				}
				{
					newLeafNode(this_INT_1, grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_0_0());
				}
				    |
				this_DECIMAL_2=RULE_DECIMAL
				{
					$current.merge(this_DECIMAL_2);
				}
				{
					newLeafNode(this_DECIMAL_2, grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_0_1());
				}
			)
			(
				kw='.'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getNumberAccess().getFullStopKeyword_1_1_0());
				}
				(
					this_INT_4=RULE_INT
					{
						$current.merge(this_INT_4);
					}
					{
						newLeafNode(this_INT_4, grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_1_1_0());
					}
					    |
					this_DECIMAL_5=RULE_DECIMAL
					{
						$current.merge(this_DECIMAL_5);
					}
					{
						newLeafNode(this_DECIMAL_5, grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_1_1_1());
					}
				)
			)?
		)
	)
;
finally {
	myHiddenTokenState.restore();
}

// Entry rule entryRuleJvmTypeReference
entryRuleJvmTypeReference returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJvmTypeReferenceRule()); }
	iv_ruleJvmTypeReference=ruleJvmTypeReference
	{ $current=$iv_ruleJvmTypeReference.current; }
	EOF;

// Rule JvmTypeReference
ruleJvmTypeReference returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				newCompositeNode(grammarAccess.getJvmTypeReferenceAccess().getJvmParameterizedTypeReferenceParserRuleCall_0_0());
			}
			this_JvmParameterizedTypeReference_0=ruleJvmParameterizedTypeReference
			{
				$current = $this_JvmParameterizedTypeReference_0.current;
				afterParserOrEnumRuleCall();
			}
			(
				((
					(
					)
					ruleArrayBrackets
				)
				)=>
				(
					(
						{
							/* */
						}
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getJvmTypeReferenceAccess().getJvmGenericArrayTypeReferenceComponentTypeAction_0_1_0_0(),
								$current);
						}
					)
					{
						/* */
					}
					{
						newCompositeNode(grammarAccess.getJvmTypeReferenceAccess().getArrayBracketsParserRuleCall_0_1_0_1());
					}
					ruleArrayBrackets
					{
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getJvmTypeReferenceAccess().getXFunctionTypeRefParserRuleCall_1());
		}
		this_XFunctionTypeRef_3=ruleXFunctionTypeRef
		{
			$current = $this_XFunctionTypeRef_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleArrayBrackets
entryRuleArrayBrackets returns [String current=null]:
	{ newCompositeNode(grammarAccess.getArrayBracketsRule()); }
	iv_ruleArrayBrackets=ruleArrayBrackets
	{ $current=$iv_ruleArrayBrackets.current.getText(); }
	EOF;

// Rule ArrayBrackets
ruleArrayBrackets returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='['
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getArrayBracketsAccess().getLeftSquareBracketKeyword_0());
		}
		kw=']'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getArrayBracketsAccess().getRightSquareBracketKeyword_1());
		}
	)
;

// Entry rule entryRuleXFunctionTypeRef
entryRuleXFunctionTypeRef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXFunctionTypeRefRule()); }
	iv_ruleXFunctionTypeRef=ruleXFunctionTypeRef
	{ $current=$iv_ruleXFunctionTypeRef.current; }
	EOF;

// Rule XFunctionTypeRef
ruleXFunctionTypeRef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='('
			{
				newLeafNode(otherlv_0, grammarAccess.getXFunctionTypeRefAccess().getLeftParenthesisKeyword_0_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getXFunctionTypeRefAccess().getParamTypesJvmTypeReferenceParserRuleCall_0_1_0_0());
						}
						lv_paramTypes_1_0=ruleJvmTypeReference
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getXFunctionTypeRefRule());
							}
							add(
								$current,
								"paramTypes",
								lv_paramTypes_1_0,
								"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_2=','
					{
						newLeafNode(otherlv_2, grammarAccess.getXFunctionTypeRefAccess().getCommaKeyword_0_1_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getXFunctionTypeRefAccess().getParamTypesJvmTypeReferenceParserRuleCall_0_1_1_1_0());
							}
							lv_paramTypes_3_0=ruleJvmTypeReference
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getXFunctionTypeRefRule());
								}
								add(
									$current,
									"paramTypes",
									lv_paramTypes_3_0,
									"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)?
			otherlv_4=')'
			{
				newLeafNode(otherlv_4, grammarAccess.getXFunctionTypeRefAccess().getRightParenthesisKeyword_0_2());
			}
		)?
		otherlv_5='=>'
		{
			newLeafNode(otherlv_5, grammarAccess.getXFunctionTypeRefAccess().getEqualsSignGreaterThanSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getXFunctionTypeRefAccess().getReturnTypeJvmTypeReferenceParserRuleCall_2_0());
				}
				lv_returnType_6_0=ruleJvmTypeReference
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getXFunctionTypeRefRule());
					}
					set(
						$current,
						"returnType",
						lv_returnType_6_0,
						"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleJvmParameterizedTypeReference
entryRuleJvmParameterizedTypeReference returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceRule()); }
	iv_ruleJvmParameterizedTypeReference=ruleJvmParameterizedTypeReference
	{ $current=$iv_ruleJvmParameterizedTypeReference.current; }
	EOF;

// Rule JvmParameterizedTypeReference
ruleJvmParameterizedTypeReference returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getJvmParameterizedTypeReferenceRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeJvmTypeCrossReference_0_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				('<')=>
				otherlv_1='<'
				{
					newLeafNode(otherlv_1, grammarAccess.getJvmParameterizedTypeReferenceAccess().getLessThanSignKeyword_1_0());
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_0());
					}
					lv_arguments_2_0=ruleJvmArgumentTypeReference
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
						}
						add(
							$current,
							"arguments",
							lv_arguments_2_0,
							"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getJvmParameterizedTypeReferenceAccess().getCommaKeyword_1_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_2_1_0());
						}
						lv_arguments_4_0=ruleJvmArgumentTypeReference
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
							}
							add(
								$current,
								"arguments",
								lv_arguments_4_0,
								"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_5='>'
			{
				newLeafNode(otherlv_5, grammarAccess.getJvmParameterizedTypeReferenceAccess().getGreaterThanSignKeyword_1_3());
			}
			(
				(
					((
						(
						)
						'.'
					)
					)=>
					(
						(
							{
								/* */
							}
							{
								$current = forceCreateModelElementAndSet(
									grammarAccess.getJvmParameterizedTypeReferenceAccess().getJvmInnerTypeReferenceOuterAction_1_4_0_0_0(),
									$current);
							}
						)
						otherlv_7='.'
						{
							newLeafNode(otherlv_7, grammarAccess.getJvmParameterizedTypeReferenceAccess().getFullStopKeyword_1_4_0_0_1());
						}
					)
				)
				(
					(
						{
							/* */
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getJvmParameterizedTypeReferenceRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeJvmTypeCrossReference_1_4_1_0());
						}
						ruleValidID
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						('<')=>
						otherlv_9='<'
						{
							newLeafNode(otherlv_9, grammarAccess.getJvmParameterizedTypeReferenceAccess().getLessThanSignKeyword_1_4_2_0());
						}
					)
					(
						(
							{
								newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_4_2_1_0());
							}
							lv_arguments_10_0=ruleJvmArgumentTypeReference
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
								}
								add(
									$current,
									"arguments",
									lv_arguments_10_0,
									"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
								afterParserOrEnumRuleCall();
							}
						)
					)
					(
						otherlv_11=','
						{
							newLeafNode(otherlv_11, grammarAccess.getJvmParameterizedTypeReferenceAccess().getCommaKeyword_1_4_2_2_0());
						}
						(
							(
								{
									newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_4_2_2_1_0());
								}
								lv_arguments_12_0=ruleJvmArgumentTypeReference
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
									}
									add(
										$current,
										"arguments",
										lv_arguments_12_0,
										"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)*
					otherlv_13='>'
					{
						newLeafNode(otherlv_13, grammarAccess.getJvmParameterizedTypeReferenceAccess().getGreaterThanSignKeyword_1_4_2_3());
					}
				)?
			)*
		)?
	)
;

// Entry rule entryRuleJvmArgumentTypeReference
entryRuleJvmArgumentTypeReference returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJvmArgumentTypeReferenceRule()); }
	iv_ruleJvmArgumentTypeReference=ruleJvmArgumentTypeReference
	{ $current=$iv_ruleJvmArgumentTypeReference.current; }
	EOF;

// Rule JvmArgumentTypeReference
ruleJvmArgumentTypeReference returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getJvmArgumentTypeReferenceAccess().getJvmTypeReferenceParserRuleCall_0());
		}
		this_JvmTypeReference_0=ruleJvmTypeReference
		{
			$current = $this_JvmTypeReference_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getJvmArgumentTypeReferenceAccess().getJvmWildcardTypeReferenceParserRuleCall_1());
		}
		this_JvmWildcardTypeReference_1=ruleJvmWildcardTypeReference
		{
			$current = $this_JvmWildcardTypeReference_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleJvmWildcardTypeReference
entryRuleJvmWildcardTypeReference returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceRule()); }
	iv_ruleJvmWildcardTypeReference=ruleJvmWildcardTypeReference
	{ $current=$iv_ruleJvmWildcardTypeReference.current; }
	EOF;

// Rule JvmWildcardTypeReference
ruleJvmWildcardTypeReference returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getJvmWildcardTypeReferenceAccess().getJvmWildcardTypeReferenceAction_0(),
					$current);
			}
		)
		otherlv_1='?'
		{
			newLeafNode(otherlv_1, grammarAccess.getJvmWildcardTypeReferenceAccess().getQuestionMarkKeyword_1());
		}
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmUpperBoundParserRuleCall_2_0_0_0());
						}
						lv_constraints_2_0=ruleJvmUpperBound
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
							}
							add(
								$current,
								"constraints",
								lv_constraints_2_0,
								"org.eclipse.xtext.xbase.Xtype.JvmUpperBound");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmUpperBoundAndedParserRuleCall_2_0_1_0());
						}
						lv_constraints_3_0=ruleJvmUpperBoundAnded
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
							}
							add(
								$current,
								"constraints",
								lv_constraints_3_0,
								"org.eclipse.xtext.xbase.Xtype.JvmUpperBoundAnded");
							afterParserOrEnumRuleCall();
						}
					)
				)*
			)
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmLowerBoundParserRuleCall_2_1_0_0());
						}
						lv_constraints_4_0=ruleJvmLowerBound
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
							}
							add(
								$current,
								"constraints",
								lv_constraints_4_0,
								"org.eclipse.xtext.xbase.Xtype.JvmLowerBound");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmLowerBoundAndedParserRuleCall_2_1_1_0());
						}
						lv_constraints_5_0=ruleJvmLowerBoundAnded
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
							}
							add(
								$current,
								"constraints",
								lv_constraints_5_0,
								"org.eclipse.xtext.xbase.Xtype.JvmLowerBoundAnded");
							afterParserOrEnumRuleCall();
						}
					)
				)*
			)
		)?
	)
;

// Entry rule entryRuleJvmUpperBound
entryRuleJvmUpperBound returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJvmUpperBoundRule()); }
	iv_ruleJvmUpperBound=ruleJvmUpperBound
	{ $current=$iv_ruleJvmUpperBound.current; }
	EOF;

// Rule JvmUpperBound
ruleJvmUpperBound returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='extends'
		{
			newLeafNode(otherlv_0, grammarAccess.getJvmUpperBoundAccess().getExtendsKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getJvmUpperBoundAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0());
				}
				lv_typeReference_1_0=ruleJvmTypeReference
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getJvmUpperBoundRule());
					}
					set(
						$current,
						"typeReference",
						lv_typeReference_1_0,
						"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleJvmUpperBoundAnded
entryRuleJvmUpperBoundAnded returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJvmUpperBoundAndedRule()); }
	iv_ruleJvmUpperBoundAnded=ruleJvmUpperBoundAnded
	{ $current=$iv_ruleJvmUpperBoundAnded.current; }
	EOF;

// Rule JvmUpperBoundAnded
ruleJvmUpperBoundAnded returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='&'
		{
			newLeafNode(otherlv_0, grammarAccess.getJvmUpperBoundAndedAccess().getAmpersandKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getJvmUpperBoundAndedAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0());
				}
				lv_typeReference_1_0=ruleJvmTypeReference
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getJvmUpperBoundAndedRule());
					}
					set(
						$current,
						"typeReference",
						lv_typeReference_1_0,
						"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleJvmLowerBound
entryRuleJvmLowerBound returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJvmLowerBoundRule()); }
	iv_ruleJvmLowerBound=ruleJvmLowerBound
	{ $current=$iv_ruleJvmLowerBound.current; }
	EOF;

// Rule JvmLowerBound
ruleJvmLowerBound returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='super'
		{
			newLeafNode(otherlv_0, grammarAccess.getJvmLowerBoundAccess().getSuperKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getJvmLowerBoundAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0());
				}
				lv_typeReference_1_0=ruleJvmTypeReference
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getJvmLowerBoundRule());
					}
					set(
						$current,
						"typeReference",
						lv_typeReference_1_0,
						"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleJvmLowerBoundAnded
entryRuleJvmLowerBoundAnded returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJvmLowerBoundAndedRule()); }
	iv_ruleJvmLowerBoundAnded=ruleJvmLowerBoundAnded
	{ $current=$iv_ruleJvmLowerBoundAnded.current; }
	EOF;

// Rule JvmLowerBoundAnded
ruleJvmLowerBoundAnded returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='&'
		{
			newLeafNode(otherlv_0, grammarAccess.getJvmLowerBoundAndedAccess().getAmpersandKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getJvmLowerBoundAndedAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0());
				}
				lv_typeReference_1_0=ruleJvmTypeReference
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getJvmLowerBoundAndedRule());
					}
					set(
						$current,
						"typeReference",
						lv_typeReference_1_0,
						"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleQualifiedNameWithWildcard
entryRuleQualifiedNameWithWildcard returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameWithWildcardRule()); }
	iv_ruleQualifiedNameWithWildcard=ruleQualifiedNameWithWildcard
	{ $current=$iv_ruleQualifiedNameWithWildcard.current.getText(); }
	EOF;

// Rule QualifiedNameWithWildcard
ruleQualifiedNameWithWildcard returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0());
		}
		this_QualifiedName_0=ruleQualifiedName
		{
			$current.merge(this_QualifiedName_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		kw='.'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopKeyword_1());
		}
		kw='*'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getQualifiedNameWithWildcardAccess().getAsteriskKeyword_2());
		}
	)
;

// Entry rule entryRuleValidID
entryRuleValidID returns [String current=null]:
	{ newCompositeNode(grammarAccess.getValidIDRule()); }
	iv_ruleValidID=ruleValidID
	{ $current=$iv_ruleValidID.current.getText(); }
	EOF;

// Rule ValidID
ruleValidID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_ID_0=RULE_ID
	{
		$current.merge(this_ID_0);
	}
	{
		newLeafNode(this_ID_0, grammarAccess.getValidIDAccess().getIDTerminalRuleCall());
	}
;

// Entry rule entryRuleXImportDeclaration
entryRuleXImportDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXImportDeclarationRule()); }
	iv_ruleXImportDeclaration=ruleXImportDeclaration
	{ $current=$iv_ruleXImportDeclaration.current; }
	EOF;

// Rule XImportDeclaration
ruleXImportDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='import'
		{
			newLeafNode(otherlv_0, grammarAccess.getXImportDeclarationAccess().getImportKeyword_0());
		}
		(
			(
				(
					(
						lv_static_1_0='static'
						{
							newLeafNode(lv_static_1_0, grammarAccess.getXImportDeclarationAccess().getStaticStaticKeyword_1_0_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getXImportDeclarationRule());
							}
							setWithLastConsumed($current, "static", lv_static_1_0 != null, "static");
						}
					)
				)
				(
					(
						lv_extension_2_0='extension'
						{
							newLeafNode(lv_extension_2_0, grammarAccess.getXImportDeclarationAccess().getExtensionExtensionKeyword_1_0_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getXImportDeclarationRule());
							}
							setWithLastConsumed($current, "extension", lv_extension_2_0 != null, "extension");
						}
					)
				)?
				(
					(
						{
							/* */
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getXImportDeclarationRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getXImportDeclarationAccess().getImportedTypeJvmDeclaredTypeCrossReference_1_0_2_0());
						}
						ruleQualifiedNameInStaticImport
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						(
							lv_wildcard_4_0='*'
							{
								newLeafNode(lv_wildcard_4_0, grammarAccess.getXImportDeclarationAccess().getWildcardAsteriskKeyword_1_0_3_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getXImportDeclarationRule());
								}
								setWithLastConsumed($current, "wildcard", lv_wildcard_4_0 != null, "*");
							}
						)
					)
					    |
					(
						(
							{
								newCompositeNode(grammarAccess.getXImportDeclarationAccess().getMemberNameValidIDParserRuleCall_1_0_3_1_0());
							}
							lv_memberName_5_0=ruleValidID
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getXImportDeclarationRule());
								}
								set(
									$current,
									"memberName",
									lv_memberName_5_0,
									"org.eclipse.xtext.xbase.Xtype.ValidID");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
			)
			    |
			(
				(
					{
						/* */
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getXImportDeclarationRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getXImportDeclarationAccess().getImportedTypeJvmDeclaredTypeCrossReference_1_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getXImportDeclarationAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_2_0());
					}
					lv_importedNamespace_7_0=ruleQualifiedNameWithWildcard
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getXImportDeclarationRule());
						}
						set(
							$current,
							"importedNamespace",
							lv_importedNamespace_7_0,
							"org.eclipse.xtext.xbase.Xtype.QualifiedNameWithWildcard");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			otherlv_8=';'
			{
				newLeafNode(otherlv_8, grammarAccess.getXImportDeclarationAccess().getSemicolonKeyword_2());
			}
		)?
	)
;

// Entry rule entryRuleQualifiedNameInStaticImport
entryRuleQualifiedNameInStaticImport returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameInStaticImportRule()); }
	iv_ruleQualifiedNameInStaticImport=ruleQualifiedNameInStaticImport
	{ $current=$iv_ruleQualifiedNameInStaticImport.current.getText(); }
	EOF;

// Rule QualifiedNameInStaticImport
ruleQualifiedNameInStaticImport returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getQualifiedNameInStaticImportAccess().getValidIDParserRuleCall_0());
		}
		this_ValidID_0=ruleValidID
		{
			$current.merge(this_ValidID_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		kw='.'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getQualifiedNameInStaticImportAccess().getFullStopKeyword_1());
		}
	)+
;

RULE_STRING : '`?' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '`?';

RULE_ORM_UNMANAGED_CONTENT : '<!-- ORM-UNMANAGED-CONTENT -->' ( options {greedy=false;} : . )*'<!-- /ORM-UNMANAGED-CONTENT -->';

RULE_HEX : ('0x'|'0X') ('0'..'9'|'a'..'f'|'A'..'F'|'_')+ ('#' (('b'|'B') ('i'|'I')|('l'|'L')))?;

RULE_INT : '0'..'9' ('0'..'9'|'_')*;

RULE_DECIMAL : RULE_INT (('e'|'E') ('+'|'-')? RULE_INT)? (('b'|'B') ('i'|'I'|'d'|'D')|('l'|'L'|'d'|'D'|'f'|'F'))?;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'$'|'_') ('a'..'z'|'A'..'Z'|'$'|'_'|'0'..'9')*;

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
