/**
 * generated by Xtext 2.35.0
 */
package jpaqldsl.jPAQLDsl.impl;

import jpadsl.jPADsl.JPADslPackage;

import jpaqldsl.jPAQLDsl.AggregateExpression;
import jpaqldsl.jPAQLDsl.AllOrAnyExpression;
import jpaqldsl.jPAQLDsl.ArithmeticExpression;
import jpaqldsl.jPAQLDsl.ArithmeticPrimary;
import jpaqldsl.jPAQLDsl.ArithmeticTerm;
import jpaqldsl.jPAQLDsl.BetweenExpression;
import jpaqldsl.jPAQLDsl.BooleanExpression;
import jpaqldsl.jPAQLDsl.BooleanPrimary;
import jpaqldsl.jPAQLDsl.CollectionMemberDeclaration;
import jpaqldsl.jPAQLDsl.CollectionMemberExpression;
import jpaqldsl.jPAQLDsl.ComparisonExpression;
import jpaqldsl.jPAQLDsl.ConditionalExpression;
import jpaqldsl.jPAQLDsl.ConditionalTerm;
import jpaqldsl.jPAQLDsl.ConstructorExpression;
import jpaqldsl.jPAQLDsl.ConstructorItem;
import jpaqldsl.jPAQLDsl.ConstructorName;
import jpaqldsl.jPAQLDsl.DateTimeExpression;
import jpaqldsl.jPAQLDsl.DateTimePrimary;
import jpaqldsl.jPAQLDsl.EmptyCollectionComparisonExpression;
import jpaqldsl.jPAQLDsl.EntityExpression;
import jpaqldsl.jPAQLDsl.EnumExpression;
import jpaqldsl.jPAQLDsl.EnumLiteral;
import jpaqldsl.jPAQLDsl.EnumPrimary;
import jpaqldsl.jPAQLDsl.EscapeCharacter;
import jpaqldsl.jPAQLDsl.ExistsExpression;
import jpaqldsl.jPAQLDsl.Expression;
import jpaqldsl.jPAQLDsl.FetchJoin;
import jpaqldsl.jPAQLDsl.FromClause;
import jpaqldsl.jPAQLDsl.FunctionsReturningNumerics;
import jpaqldsl.jPAQLDsl.FunctionsReturningStrings;
import jpaqldsl.jPAQLDsl.IdentificationVariable;
import jpaqldsl.jPAQLDsl.IdentificationVariableDeclaration;
import jpaqldsl.jPAQLDsl.Import;
import jpaqldsl.jPAQLDsl.InExpression;
import jpaqldsl.jPAQLDsl.InItem;
import jpaqldsl.jPAQLDsl.InputParameter;
import jpaqldsl.jPAQLDsl.JPAPathExpression;
import jpaqldsl.jPAQLDsl.JPAQLDslFactory;
import jpaqldsl.jPAQLDsl.JPAQLDslPackage;
import jpaqldsl.jPAQLDsl.Join;
import jpaqldsl.jPAQLDsl.JpaAttribute;
import jpaqldsl.jPAQLDsl.LikeExpression;
import jpaqldsl.jPAQLDsl.Literal;
import jpaqldsl.jPAQLDsl.Model;
import jpaqldsl.jPAQLDsl.NamedQuery;
import jpaqldsl.jPAQLDsl.NullComparisonExpression;
import jpaqldsl.jPAQLDsl.NumericLiteral;
import jpaqldsl.jPAQLDsl.PatternValue;
import jpaqldsl.jPAQLDsl.QLStatement;
import jpaqldsl.jPAQLDsl.RangeVariableDeclaration;
import jpaqldsl.jPAQLDsl.SelectClause;
import jpaqldsl.jPAQLDsl.SelectExpression;
import jpaqldsl.jPAQLDsl.SelectStatement;
import jpaqldsl.jPAQLDsl.SimpleArithmeticExpression;
import jpaqldsl.jPAQLDsl.SimpleConditionalExpression;
import jpaqldsl.jPAQLDsl.SimpleEntityExpression;
import jpaqldsl.jPAQLDsl.SimpleSelectClause;
import jpaqldsl.jPAQLDsl.SimpleSelectExpression;
import jpaqldsl.jPAQLDsl.StringExpression;
import jpaqldsl.jPAQLDsl.StringLiteral;
import jpaqldsl.jPAQLDsl.StringPrimary;
import jpaqldsl.jPAQLDsl.SubQuery;
import jpaqldsl.jPAQLDsl.SubqueryFromClause;
import jpaqldsl.jPAQLDsl.SubselectIdentificationVariableDeclaration;
import jpaqldsl.jPAQLDsl.TrimCharacter;
import jpaqldsl.jPAQLDsl.WhereClause;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class JPAQLDslPackageImpl extends EPackageImpl implements JPAQLDslPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass modelEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass namedQueryEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass qlStatementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass selectStatementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fromClauseEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass identificationVariableDeclarationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass rangeVariableDeclarationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass joinEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fetchJoinEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass jpaPathExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass jpaAttributeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass collectionMemberDeclarationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass selectClauseEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass selectExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass constructorExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass constructorItemEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass aggregateExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass identificationVariableEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass constructorNameEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass whereClauseEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass expressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass simpleConditionalExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass betweenExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass inExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass inItemEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass likeExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass nullComparisonExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass emptyCollectionComparisonExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass collectionMemberExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass existsExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass allOrAnyExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass comparisonExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass arithmeticExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass arithmeticPrimaryEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass stringExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass stringPrimaryEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dateTimeExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dateTimePrimaryEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass booleanExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass booleanPrimaryEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass enumExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass enumPrimaryEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass entityExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass simpleEntityExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass functionsReturningNumericsEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass functionsReturningStringsEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass subQueryEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass subqueryFromClauseEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass subselectIdentificationVariableDeclarationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass simpleSelectClauseEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass simpleSelectExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass inputParameterEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass escapeCharacterEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass literalEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass patternValueEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass stringLiteralEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass numericLiteralEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass enumLiteralEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass trimCharacterEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass importEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass conditionalExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass conditionalTermEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass simpleArithmeticExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass arithmeticTermEClass = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see jpaqldsl.jPAQLDsl.JPAQLDslPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private JPAQLDslPackageImpl()
  {
    super(eNS_URI, JPAQLDslFactory.eINSTANCE);
  }
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   *
   * <p>This method is used to initialize {@link JPAQLDslPackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static JPAQLDslPackage init()
  {
    if (isInited) return (JPAQLDslPackage)EPackage.Registry.INSTANCE.getEPackage(JPAQLDslPackage.eNS_URI);

    // Obtain or create and register package
    Object registeredJPAQLDslPackage = EPackage.Registry.INSTANCE.get(eNS_URI);
    JPAQLDslPackageImpl theJPAQLDslPackage = registeredJPAQLDslPackage instanceof JPAQLDslPackageImpl ? (JPAQLDslPackageImpl)registeredJPAQLDslPackage : new JPAQLDslPackageImpl();

    isInited = true;

    // Initialize simple dependencies
    JPADslPackage.eINSTANCE.eClass();

    // Create package meta-data objects
    theJPAQLDslPackage.createPackageContents();

    // Initialize created meta-data
    theJPAQLDslPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theJPAQLDslPackage.freeze();

    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(JPAQLDslPackage.eNS_URI, theJPAQLDslPackage);
    return theJPAQLDslPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getModel()
  {
    return modelEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getModel_XmlDescriptor()
  {
    return (EAttribute)modelEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getModel_Imports()
  {
    return (EReference)modelEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getModel_Name()
  {
    return (EAttribute)modelEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getModel_NamedQueries()
  {
    return (EReference)modelEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getNamedQuery()
  {
    return namedQueryEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getNamedQuery_Name()
  {
    return (EAttribute)namedQueryEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getNamedQuery_QlStatement()
  {
    return (EReference)namedQueryEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getQLStatement()
  {
    return qlStatementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getQLStatement_SelectStatements()
  {
    return (EReference)qlStatementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSelectStatement()
  {
    return selectStatementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSelectStatement_SelectClause()
  {
    return (EReference)selectStatementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSelectStatement_FromClause()
  {
    return (EReference)selectStatementEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSelectStatement_WhereClause()
  {
    return (EReference)selectStatementEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFromClause()
  {
    return fromClauseEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFromClause_IdentificationVariableDeclarations()
  {
    return (EReference)fromClauseEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getIdentificationVariableDeclaration()
  {
    return identificationVariableDeclarationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getIdentificationVariableDeclaration_RangeVariableDeclaration()
  {
    return (EReference)identificationVariableDeclarationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getIdentificationVariableDeclaration_Joins()
  {
    return (EReference)identificationVariableDeclarationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getRangeVariableDeclaration()
  {
    return rangeVariableDeclarationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getRangeVariableDeclaration_AbstractSchemaName()
  {
    return (EReference)rangeVariableDeclarationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getRangeVariableDeclaration_IdentificationVariable()
  {
    return (EReference)rangeVariableDeclarationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getJoin()
  {
    return joinEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getJoin_JoinSpec()
  {
    return (EAttribute)joinEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getJoin_JoinAssociationPathExpression()
  {
    return (EReference)joinEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getJoin_IdentificationVariable()
  {
    return (EReference)joinEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFetchJoin()
  {
    return fetchJoinEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getFetchJoin_JoinSpec()
  {
    return (EAttribute)fetchJoinEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFetchJoin_JoinAssociationPathExpression()
  {
    return (EReference)fetchJoinEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFetchJoin_IdentificationVariable()
  {
    return (EReference)fetchJoinEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getJPAPathExpression()
  {
    return jpaPathExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getJPAPathExpression_Root()
  {
    return (EReference)jpaPathExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getJPAPathExpression_JpaAttributes()
  {
    return (EReference)jpaPathExpressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getJpaAttribute()
  {
    return jpaAttributeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getJpaAttribute_Attribute()
  {
    return (EReference)jpaAttributeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getCollectionMemberDeclaration()
  {
    return collectionMemberDeclarationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getCollectionMemberDeclaration_CollectionValuedPathExpression()
  {
    return (EReference)collectionMemberDeclarationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getCollectionMemberDeclaration_IdentificationVariable()
  {
    return (EReference)collectionMemberDeclarationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSelectClause()
  {
    return selectClauseEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSelectClause_SelectExpressions()
  {
    return (EReference)selectClauseEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSelectExpression()
  {
    return selectExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSelectExpression_JpaPathExpression()
  {
    return (EReference)selectExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSelectExpression_AggregateExpression()
  {
    return (EReference)selectExpressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSelectExpression_ConstructorExpression()
  {
    return (EReference)selectExpressionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getConstructorExpression()
  {
    return constructorExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getConstructorExpression_ConstructorName()
  {
    return (EReference)constructorExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getConstructorExpression_ConstructorItems()
  {
    return (EReference)constructorExpressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getConstructorItem()
  {
    return constructorItemEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getAggregateExpression()
  {
    return aggregateExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getAggregateExpression_StateFieldPathExpression()
  {
    return (EReference)aggregateExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getIdentificationVariable()
  {
    return identificationVariableEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getIdentificationVariable_Name()
  {
    return (EAttribute)identificationVariableEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getConstructorName()
  {
    return constructorNameEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getConstructorName_Name()
  {
    return (EAttribute)constructorNameEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getWhereClause()
  {
    return whereClauseEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getWhereClause_ConditionalExpression()
  {
    return (EReference)whereClauseEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getExpression()
  {
    return expressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getExpression_ConditionalPrimary()
  {
    return (EReference)expressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getExpression_ConditionalExpression()
  {
    return (EReference)expressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getExpression_ArithmeticTerm()
  {
    return (EReference)expressionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getExpression_ArithmeticFactor()
  {
    return (EReference)expressionEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getExpression_ArithmeticPrimary()
  {
    return (EReference)expressionEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getExpression_Left()
  {
    return (EReference)expressionEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getExpression_Right()
  {
    return (EReference)expressionEClass.getEStructuralFeatures().get(6);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSimpleConditionalExpression()
  {
    return simpleConditionalExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSimpleConditionalExpression_ComparisionExpression()
  {
    return (EReference)simpleConditionalExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSimpleConditionalExpression_BetweenExpression()
  {
    return (EReference)simpleConditionalExpressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSimpleConditionalExpression_LikeExpression()
  {
    return (EReference)simpleConditionalExpressionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSimpleConditionalExpression_InExpression()
  {
    return (EReference)simpleConditionalExpressionEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSimpleConditionalExpression_NullComparisionExpression()
  {
    return (EReference)simpleConditionalExpressionEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSimpleConditionalExpression_EmptyCollectionComparisonExpression()
  {
    return (EReference)simpleConditionalExpressionEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSimpleConditionalExpression_CollectionMemberExpression()
  {
    return (EReference)simpleConditionalExpressionEClass.getEStructuralFeatures().get(6);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSimpleConditionalExpression_ExistsExpression()
  {
    return (EReference)simpleConditionalExpressionEClass.getEStructuralFeatures().get(7);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getBetweenExpression()
  {
    return betweenExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBetweenExpression_PrimaryArithmeticExpression()
  {
    return (EReference)betweenExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBetweenExpression_LowerArithmeticExpression()
  {
    return (EReference)betweenExpressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBetweenExpression_UpperArithmeticExpression()
  {
    return (EReference)betweenExpressionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBetweenExpression_PrimaryStringExpression()
  {
    return (EReference)betweenExpressionEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBetweenExpression_LowerStringExpression()
  {
    return (EReference)betweenExpressionEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBetweenExpression_UpperStringExpression()
  {
    return (EReference)betweenExpressionEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBetweenExpression_PrimaryDateTimeExpression()
  {
    return (EReference)betweenExpressionEClass.getEStructuralFeatures().get(6);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBetweenExpression_LowerDateTimeExpression()
  {
    return (EReference)betweenExpressionEClass.getEStructuralFeatures().get(7);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBetweenExpression_UpperDateTimeExpression()
  {
    return (EReference)betweenExpressionEClass.getEStructuralFeatures().get(8);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getInExpression()
  {
    return inExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getInExpression_PathExpression()
  {
    return (EReference)inExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getInExpression_InItems()
  {
    return (EReference)inExpressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getInExpression_SubQuery()
  {
    return (EReference)inExpressionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getInItem()
  {
    return inItemEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getInItem_Literal()
  {
    return (EReference)inItemEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getInItem_InputParameter()
  {
    return (EReference)inItemEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLikeExpression()
  {
    return likeExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLikeExpression_StringExpression()
  {
    return (EReference)likeExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLikeExpression_PatternValue()
  {
    return (EReference)likeExpressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLikeExpression_EscapeCharacter()
  {
    return (EReference)likeExpressionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getNullComparisonExpression()
  {
    return nullComparisonExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getNullComparisonExpression_PathExpression()
  {
    return (EReference)nullComparisonExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getNullComparisonExpression_InputParameter()
  {
    return (EReference)nullComparisonExpressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEmptyCollectionComparisonExpression()
  {
    return emptyCollectionComparisonExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEmptyCollectionComparisonExpression_PathExpression()
  {
    return (EReference)emptyCollectionComparisonExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getCollectionMemberExpression()
  {
    return collectionMemberExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getCollectionMemberExpression_EntityExpression()
  {
    return (EReference)collectionMemberExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getCollectionMemberExpression_PathExpression()
  {
    return (EReference)collectionMemberExpressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getExistsExpression()
  {
    return existsExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getExistsExpression_SubQuery()
  {
    return (EReference)existsExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getAllOrAnyExpression()
  {
    return allOrAnyExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getAllOrAnyExpression_SubQuery()
  {
    return (EReference)allOrAnyExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getComparisonExpression()
  {
    return comparisonExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getComparisonExpression_PrimaryStringExpression()
  {
    return (EReference)comparisonExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getComparisonExpression_ComparisonOperator()
  {
    return (EAttribute)comparisonExpressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getComparisonExpression_SecondaryStringExpression()
  {
    return (EReference)comparisonExpressionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getComparisonExpression_AllOrAnyExpression()
  {
    return (EReference)comparisonExpressionEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getComparisonExpression_PrimaryBooleanExpression()
  {
    return (EReference)comparisonExpressionEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getComparisonExpression_SecondaryBooleanExpression()
  {
    return (EReference)comparisonExpressionEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getComparisonExpression_PrimaryEnumExpression()
  {
    return (EReference)comparisonExpressionEClass.getEStructuralFeatures().get(6);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getComparisonExpression_SecondaryEnumExpression()
  {
    return (EReference)comparisonExpressionEClass.getEStructuralFeatures().get(7);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getComparisonExpression_PrimaryDatetimeExpression()
  {
    return (EReference)comparisonExpressionEClass.getEStructuralFeatures().get(8);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getComparisonExpression_SecondaryDatetimeExpression()
  {
    return (EReference)comparisonExpressionEClass.getEStructuralFeatures().get(9);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getComparisonExpression_PrimaryEntityExpression()
  {
    return (EReference)comparisonExpressionEClass.getEStructuralFeatures().get(10);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getComparisonExpression_SecondaryEntityExpression()
  {
    return (EReference)comparisonExpressionEClass.getEStructuralFeatures().get(11);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getComparisonExpression_PrimaryArithmeticExpression()
  {
    return (EReference)comparisonExpressionEClass.getEStructuralFeatures().get(12);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getComparisonExpression_SecondaryArithmeticExpression()
  {
    return (EReference)comparisonExpressionEClass.getEStructuralFeatures().get(13);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getArithmeticExpression()
  {
    return arithmeticExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getArithmeticExpression_SimpleArithmeticExpression()
  {
    return (EReference)arithmeticExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getArithmeticExpression_SubQuery()
  {
    return (EReference)arithmeticExpressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getArithmeticPrimary()
  {
    return arithmeticPrimaryEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getArithmeticPrimary_PathExpression()
  {
    return (EReference)arithmeticPrimaryEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getArithmeticPrimary_NumericLiteral()
  {
    return (EReference)arithmeticPrimaryEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getArithmeticPrimary_SimpleArithmeticExpression()
  {
    return (EReference)arithmeticPrimaryEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getArithmeticPrimary_InputParameter()
  {
    return (EReference)arithmeticPrimaryEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getArithmeticPrimary_FunctionsReturningNumerics()
  {
    return (EReference)arithmeticPrimaryEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getArithmeticPrimary_AggregateExpression()
  {
    return (EReference)arithmeticPrimaryEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getStringExpression()
  {
    return stringExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getStringExpression_StringPrimary()
  {
    return (EReference)stringExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getStringExpression_SubQuery()
  {
    return (EReference)stringExpressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getStringPrimary()
  {
    return stringPrimaryEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getStringPrimary_PathExpression()
  {
    return (EReference)stringPrimaryEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getStringPrimary_StringLiteral()
  {
    return (EReference)stringPrimaryEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getStringPrimary_InputParamater()
  {
    return (EReference)stringPrimaryEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getStringPrimary_FunctionsReturningStrings()
  {
    return (EReference)stringPrimaryEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getStringPrimary_AggregateExpression()
  {
    return (EReference)stringPrimaryEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getDateTimeExpression()
  {
    return dateTimeExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getDateTimeExpression_DateTimePrimary()
  {
    return (EReference)dateTimeExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getDateTimeExpression_SubQuery()
  {
    return (EReference)dateTimeExpressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getDateTimePrimary()
  {
    return dateTimePrimaryEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getDateTimePrimary_PathExpression()
  {
    return (EReference)dateTimePrimaryEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getDateTimePrimary_InputParameter()
  {
    return (EReference)dateTimePrimaryEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDateTimePrimary_FunctionsReturningDateTime()
  {
    return (EAttribute)dateTimePrimaryEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getDateTimePrimary_AggregateExpression()
  {
    return (EReference)dateTimePrimaryEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getBooleanExpression()
  {
    return booleanExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBooleanExpression_BooleanPrimary()
  {
    return (EReference)booleanExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBooleanExpression_SubQuery()
  {
    return (EReference)booleanExpressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getBooleanPrimary()
  {
    return booleanPrimaryEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBooleanPrimary_PathExpression()
  {
    return (EReference)booleanPrimaryEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getBooleanPrimary_BooleanLiteral()
  {
    return (EAttribute)booleanPrimaryEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBooleanPrimary_InputParameter()
  {
    return (EReference)booleanPrimaryEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEnumExpression()
  {
    return enumExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEnumExpression_EnumPrimary()
  {
    return (EReference)enumExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEnumExpression_SubQuery()
  {
    return (EReference)enumExpressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEnumPrimary()
  {
    return enumPrimaryEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEnumPrimary_PathExpression()
  {
    return (EReference)enumPrimaryEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEnumPrimary_EnumLiteral()
  {
    return (EReference)enumPrimaryEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEnumPrimary_InputParameter()
  {
    return (EReference)enumPrimaryEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEntityExpression()
  {
    return entityExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEntityExpression_PathExpression()
  {
    return (EReference)entityExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEntityExpression_SimpleEntityExpression()
  {
    return (EReference)entityExpressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSimpleEntityExpression()
  {
    return simpleEntityExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSimpleEntityExpression_IdentificationVariable()
  {
    return (EReference)simpleEntityExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSimpleEntityExpression_InputParameter()
  {
    return (EReference)simpleEntityExpressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFunctionsReturningNumerics()
  {
    return functionsReturningNumericsEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFunctionsReturningNumerics_StringPrimary()
  {
    return (EReference)functionsReturningNumericsEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFunctionsReturningNumerics_StringSecondary()
  {
    return (EReference)functionsReturningNumericsEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFunctionsReturningNumerics_SimpleArithmeticExpression()
  {
    return (EReference)functionsReturningNumericsEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFunctionsReturningNumerics_PrimarySimpleArithmeticExpression()
  {
    return (EReference)functionsReturningNumericsEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFunctionsReturningNumerics_SecondarySimpleArithmeticExpression()
  {
    return (EReference)functionsReturningNumericsEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFunctionsReturningNumerics_PathExpression()
  {
    return (EReference)functionsReturningNumericsEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFunctionsReturningStrings()
  {
    return functionsReturningStringsEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFunctionsReturningStrings_PrimaryStringPrimary()
  {
    return (EReference)functionsReturningStringsEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFunctionsReturningStrings_SecondaryStringPrimary()
  {
    return (EReference)functionsReturningStringsEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFunctionsReturningStrings_StringPrimary()
  {
    return (EReference)functionsReturningStringsEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFunctionsReturningStrings_PrimarySimpleArithmeticExpression()
  {
    return (EReference)functionsReturningStringsEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFunctionsReturningStrings_SecondarySimpleArithmeticExpression()
  {
    return (EReference)functionsReturningStringsEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getFunctionsReturningStrings_TrimSpecification()
  {
    return (EAttribute)functionsReturningStringsEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFunctionsReturningStrings_TrimCharacter()
  {
    return (EReference)functionsReturningStringsEClass.getEStructuralFeatures().get(6);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSubQuery()
  {
    return subQueryEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSubQuery_SimpleSelectClause()
  {
    return (EReference)subQueryEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSubQuery_SubqueryFromClause()
  {
    return (EReference)subQueryEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSubQuery_WhereClause()
  {
    return (EReference)subQueryEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSubqueryFromClause()
  {
    return subqueryFromClauseEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSubqueryFromClause_SubselectIdentificationVariableDeclaration()
  {
    return (EReference)subqueryFromClauseEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSubselectIdentificationVariableDeclaration()
  {
    return subselectIdentificationVariableDeclarationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSubselectIdentificationVariableDeclaration_IdentificationVariableDecalaration()
  {
    return (EReference)subselectIdentificationVariableDeclarationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSubselectIdentificationVariableDeclaration_AssociationPathExpression()
  {
    return (EReference)subselectIdentificationVariableDeclarationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSubselectIdentificationVariableDeclaration_IdentificationVariable()
  {
    return (EReference)subselectIdentificationVariableDeclarationEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSubselectIdentificationVariableDeclaration_CollectionMemberDeclaration()
  {
    return (EReference)subselectIdentificationVariableDeclarationEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSimpleSelectClause()
  {
    return simpleSelectClauseEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSimpleSelectClause_SimpleSelectExpression()
  {
    return (EReference)simpleSelectClauseEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSimpleSelectExpression()
  {
    return simpleSelectExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSimpleSelectExpression_PathExpression()
  {
    return (EReference)simpleSelectExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSimpleSelectExpression_AggregateExpression()
  {
    return (EReference)simpleSelectExpressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSimpleSelectExpression_IdentificationVariable()
  {
    return (EReference)simpleSelectExpressionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getInputParameter()
  {
    return inputParameterEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getInputParameter_Name()
  {
    return (EAttribute)inputParameterEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEscapeCharacter()
  {
    return escapeCharacterEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEscapeCharacter_Name()
  {
    return (EAttribute)escapeCharacterEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLiteral()
  {
    return literalEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLiteral_Name()
  {
    return (EAttribute)literalEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPatternValue()
  {
    return patternValueEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getPatternValue_Name()
  {
    return (EAttribute)patternValueEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getStringLiteral()
  {
    return stringLiteralEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getStringLiteral_Literal()
  {
    return (EAttribute)stringLiteralEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getNumericLiteral()
  {
    return numericLiteralEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getNumericLiteral_Literal()
  {
    return (EAttribute)numericLiteralEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEnumLiteral()
  {
    return enumLiteralEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEnumLiteral_Name()
  {
    return (EAttribute)enumLiteralEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getTrimCharacter()
  {
    return trimCharacterEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getTrimCharacter_Name()
  {
    return (EAttribute)trimCharacterEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getImport()
  {
    return importEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getImport_ImportedNamespace()
  {
    return (EAttribute)importEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getConditionalExpression()
  {
    return conditionalExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getConditionalTerm()
  {
    return conditionalTermEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSimpleArithmeticExpression()
  {
    return simpleArithmeticExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getArithmeticTerm()
  {
    return arithmeticTermEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public JPAQLDslFactory getJPAQLDslFactory()
  {
    return (JPAQLDslFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    modelEClass = createEClass(MODEL);
    createEAttribute(modelEClass, MODEL__XML_DESCRIPTOR);
    createEReference(modelEClass, MODEL__IMPORTS);
    createEAttribute(modelEClass, MODEL__NAME);
    createEReference(modelEClass, MODEL__NAMED_QUERIES);

    namedQueryEClass = createEClass(NAMED_QUERY);
    createEAttribute(namedQueryEClass, NAMED_QUERY__NAME);
    createEReference(namedQueryEClass, NAMED_QUERY__QL_STATEMENT);

    qlStatementEClass = createEClass(QL_STATEMENT);
    createEReference(qlStatementEClass, QL_STATEMENT__SELECT_STATEMENTS);

    selectStatementEClass = createEClass(SELECT_STATEMENT);
    createEReference(selectStatementEClass, SELECT_STATEMENT__SELECT_CLAUSE);
    createEReference(selectStatementEClass, SELECT_STATEMENT__FROM_CLAUSE);
    createEReference(selectStatementEClass, SELECT_STATEMENT__WHERE_CLAUSE);

    fromClauseEClass = createEClass(FROM_CLAUSE);
    createEReference(fromClauseEClass, FROM_CLAUSE__IDENTIFICATION_VARIABLE_DECLARATIONS);

    identificationVariableDeclarationEClass = createEClass(IDENTIFICATION_VARIABLE_DECLARATION);
    createEReference(identificationVariableDeclarationEClass, IDENTIFICATION_VARIABLE_DECLARATION__RANGE_VARIABLE_DECLARATION);
    createEReference(identificationVariableDeclarationEClass, IDENTIFICATION_VARIABLE_DECLARATION__JOINS);

    rangeVariableDeclarationEClass = createEClass(RANGE_VARIABLE_DECLARATION);
    createEReference(rangeVariableDeclarationEClass, RANGE_VARIABLE_DECLARATION__ABSTRACT_SCHEMA_NAME);
    createEReference(rangeVariableDeclarationEClass, RANGE_VARIABLE_DECLARATION__IDENTIFICATION_VARIABLE);

    joinEClass = createEClass(JOIN);
    createEAttribute(joinEClass, JOIN__JOIN_SPEC);
    createEReference(joinEClass, JOIN__JOIN_ASSOCIATION_PATH_EXPRESSION);
    createEReference(joinEClass, JOIN__IDENTIFICATION_VARIABLE);

    fetchJoinEClass = createEClass(FETCH_JOIN);
    createEAttribute(fetchJoinEClass, FETCH_JOIN__JOIN_SPEC);
    createEReference(fetchJoinEClass, FETCH_JOIN__JOIN_ASSOCIATION_PATH_EXPRESSION);
    createEReference(fetchJoinEClass, FETCH_JOIN__IDENTIFICATION_VARIABLE);

    jpaPathExpressionEClass = createEClass(JPA_PATH_EXPRESSION);
    createEReference(jpaPathExpressionEClass, JPA_PATH_EXPRESSION__ROOT);
    createEReference(jpaPathExpressionEClass, JPA_PATH_EXPRESSION__JPA_ATTRIBUTES);

    jpaAttributeEClass = createEClass(JPA_ATTRIBUTE);
    createEReference(jpaAttributeEClass, JPA_ATTRIBUTE__ATTRIBUTE);

    collectionMemberDeclarationEClass = createEClass(COLLECTION_MEMBER_DECLARATION);
    createEReference(collectionMemberDeclarationEClass, COLLECTION_MEMBER_DECLARATION__COLLECTION_VALUED_PATH_EXPRESSION);
    createEReference(collectionMemberDeclarationEClass, COLLECTION_MEMBER_DECLARATION__IDENTIFICATION_VARIABLE);

    selectClauseEClass = createEClass(SELECT_CLAUSE);
    createEReference(selectClauseEClass, SELECT_CLAUSE__SELECT_EXPRESSIONS);

    selectExpressionEClass = createEClass(SELECT_EXPRESSION);
    createEReference(selectExpressionEClass, SELECT_EXPRESSION__JPA_PATH_EXPRESSION);
    createEReference(selectExpressionEClass, SELECT_EXPRESSION__AGGREGATE_EXPRESSION);
    createEReference(selectExpressionEClass, SELECT_EXPRESSION__CONSTRUCTOR_EXPRESSION);

    constructorExpressionEClass = createEClass(CONSTRUCTOR_EXPRESSION);
    createEReference(constructorExpressionEClass, CONSTRUCTOR_EXPRESSION__CONSTRUCTOR_NAME);
    createEReference(constructorExpressionEClass, CONSTRUCTOR_EXPRESSION__CONSTRUCTOR_ITEMS);

    constructorItemEClass = createEClass(CONSTRUCTOR_ITEM);

    aggregateExpressionEClass = createEClass(AGGREGATE_EXPRESSION);
    createEReference(aggregateExpressionEClass, AGGREGATE_EXPRESSION__STATE_FIELD_PATH_EXPRESSION);

    identificationVariableEClass = createEClass(IDENTIFICATION_VARIABLE);
    createEAttribute(identificationVariableEClass, IDENTIFICATION_VARIABLE__NAME);

    constructorNameEClass = createEClass(CONSTRUCTOR_NAME);
    createEAttribute(constructorNameEClass, CONSTRUCTOR_NAME__NAME);

    whereClauseEClass = createEClass(WHERE_CLAUSE);
    createEReference(whereClauseEClass, WHERE_CLAUSE__CONDITIONAL_EXPRESSION);

    expressionEClass = createEClass(EXPRESSION);
    createEReference(expressionEClass, EXPRESSION__CONDITIONAL_PRIMARY);
    createEReference(expressionEClass, EXPRESSION__CONDITIONAL_EXPRESSION);
    createEReference(expressionEClass, EXPRESSION__ARITHMETIC_TERM);
    createEReference(expressionEClass, EXPRESSION__ARITHMETIC_FACTOR);
    createEReference(expressionEClass, EXPRESSION__ARITHMETIC_PRIMARY);
    createEReference(expressionEClass, EXPRESSION__LEFT);
    createEReference(expressionEClass, EXPRESSION__RIGHT);

    simpleConditionalExpressionEClass = createEClass(SIMPLE_CONDITIONAL_EXPRESSION);
    createEReference(simpleConditionalExpressionEClass, SIMPLE_CONDITIONAL_EXPRESSION__COMPARISION_EXPRESSION);
    createEReference(simpleConditionalExpressionEClass, SIMPLE_CONDITIONAL_EXPRESSION__BETWEEN_EXPRESSION);
    createEReference(simpleConditionalExpressionEClass, SIMPLE_CONDITIONAL_EXPRESSION__LIKE_EXPRESSION);
    createEReference(simpleConditionalExpressionEClass, SIMPLE_CONDITIONAL_EXPRESSION__IN_EXPRESSION);
    createEReference(simpleConditionalExpressionEClass, SIMPLE_CONDITIONAL_EXPRESSION__NULL_COMPARISION_EXPRESSION);
    createEReference(simpleConditionalExpressionEClass, SIMPLE_CONDITIONAL_EXPRESSION__EMPTY_COLLECTION_COMPARISON_EXPRESSION);
    createEReference(simpleConditionalExpressionEClass, SIMPLE_CONDITIONAL_EXPRESSION__COLLECTION_MEMBER_EXPRESSION);
    createEReference(simpleConditionalExpressionEClass, SIMPLE_CONDITIONAL_EXPRESSION__EXISTS_EXPRESSION);

    betweenExpressionEClass = createEClass(BETWEEN_EXPRESSION);
    createEReference(betweenExpressionEClass, BETWEEN_EXPRESSION__PRIMARY_ARITHMETIC_EXPRESSION);
    createEReference(betweenExpressionEClass, BETWEEN_EXPRESSION__LOWER_ARITHMETIC_EXPRESSION);
    createEReference(betweenExpressionEClass, BETWEEN_EXPRESSION__UPPER_ARITHMETIC_EXPRESSION);
    createEReference(betweenExpressionEClass, BETWEEN_EXPRESSION__PRIMARY_STRING_EXPRESSION);
    createEReference(betweenExpressionEClass, BETWEEN_EXPRESSION__LOWER_STRING_EXPRESSION);
    createEReference(betweenExpressionEClass, BETWEEN_EXPRESSION__UPPER_STRING_EXPRESSION);
    createEReference(betweenExpressionEClass, BETWEEN_EXPRESSION__PRIMARY_DATE_TIME_EXPRESSION);
    createEReference(betweenExpressionEClass, BETWEEN_EXPRESSION__LOWER_DATE_TIME_EXPRESSION);
    createEReference(betweenExpressionEClass, BETWEEN_EXPRESSION__UPPER_DATE_TIME_EXPRESSION);

    inExpressionEClass = createEClass(IN_EXPRESSION);
    createEReference(inExpressionEClass, IN_EXPRESSION__PATH_EXPRESSION);
    createEReference(inExpressionEClass, IN_EXPRESSION__IN_ITEMS);
    createEReference(inExpressionEClass, IN_EXPRESSION__SUB_QUERY);

    inItemEClass = createEClass(IN_ITEM);
    createEReference(inItemEClass, IN_ITEM__LITERAL);
    createEReference(inItemEClass, IN_ITEM__INPUT_PARAMETER);

    likeExpressionEClass = createEClass(LIKE_EXPRESSION);
    createEReference(likeExpressionEClass, LIKE_EXPRESSION__STRING_EXPRESSION);
    createEReference(likeExpressionEClass, LIKE_EXPRESSION__PATTERN_VALUE);
    createEReference(likeExpressionEClass, LIKE_EXPRESSION__ESCAPE_CHARACTER);

    nullComparisonExpressionEClass = createEClass(NULL_COMPARISON_EXPRESSION);
    createEReference(nullComparisonExpressionEClass, NULL_COMPARISON_EXPRESSION__PATH_EXPRESSION);
    createEReference(nullComparisonExpressionEClass, NULL_COMPARISON_EXPRESSION__INPUT_PARAMETER);

    emptyCollectionComparisonExpressionEClass = createEClass(EMPTY_COLLECTION_COMPARISON_EXPRESSION);
    createEReference(emptyCollectionComparisonExpressionEClass, EMPTY_COLLECTION_COMPARISON_EXPRESSION__PATH_EXPRESSION);

    collectionMemberExpressionEClass = createEClass(COLLECTION_MEMBER_EXPRESSION);
    createEReference(collectionMemberExpressionEClass, COLLECTION_MEMBER_EXPRESSION__ENTITY_EXPRESSION);
    createEReference(collectionMemberExpressionEClass, COLLECTION_MEMBER_EXPRESSION__PATH_EXPRESSION);

    existsExpressionEClass = createEClass(EXISTS_EXPRESSION);
    createEReference(existsExpressionEClass, EXISTS_EXPRESSION__SUB_QUERY);

    allOrAnyExpressionEClass = createEClass(ALL_OR_ANY_EXPRESSION);
    createEReference(allOrAnyExpressionEClass, ALL_OR_ANY_EXPRESSION__SUB_QUERY);

    comparisonExpressionEClass = createEClass(COMPARISON_EXPRESSION);
    createEReference(comparisonExpressionEClass, COMPARISON_EXPRESSION__PRIMARY_STRING_EXPRESSION);
    createEAttribute(comparisonExpressionEClass, COMPARISON_EXPRESSION__COMPARISON_OPERATOR);
    createEReference(comparisonExpressionEClass, COMPARISON_EXPRESSION__SECONDARY_STRING_EXPRESSION);
    createEReference(comparisonExpressionEClass, COMPARISON_EXPRESSION__ALL_OR_ANY_EXPRESSION);
    createEReference(comparisonExpressionEClass, COMPARISON_EXPRESSION__PRIMARY_BOOLEAN_EXPRESSION);
    createEReference(comparisonExpressionEClass, COMPARISON_EXPRESSION__SECONDARY_BOOLEAN_EXPRESSION);
    createEReference(comparisonExpressionEClass, COMPARISON_EXPRESSION__PRIMARY_ENUM_EXPRESSION);
    createEReference(comparisonExpressionEClass, COMPARISON_EXPRESSION__SECONDARY_ENUM_EXPRESSION);
    createEReference(comparisonExpressionEClass, COMPARISON_EXPRESSION__PRIMARY_DATETIME_EXPRESSION);
    createEReference(comparisonExpressionEClass, COMPARISON_EXPRESSION__SECONDARY_DATETIME_EXPRESSION);
    createEReference(comparisonExpressionEClass, COMPARISON_EXPRESSION__PRIMARY_ENTITY_EXPRESSION);
    createEReference(comparisonExpressionEClass, COMPARISON_EXPRESSION__SECONDARY_ENTITY_EXPRESSION);
    createEReference(comparisonExpressionEClass, COMPARISON_EXPRESSION__PRIMARY_ARITHMETIC_EXPRESSION);
    createEReference(comparisonExpressionEClass, COMPARISON_EXPRESSION__SECONDARY_ARITHMETIC_EXPRESSION);

    arithmeticExpressionEClass = createEClass(ARITHMETIC_EXPRESSION);
    createEReference(arithmeticExpressionEClass, ARITHMETIC_EXPRESSION__SIMPLE_ARITHMETIC_EXPRESSION);
    createEReference(arithmeticExpressionEClass, ARITHMETIC_EXPRESSION__SUB_QUERY);

    arithmeticPrimaryEClass = createEClass(ARITHMETIC_PRIMARY);
    createEReference(arithmeticPrimaryEClass, ARITHMETIC_PRIMARY__PATH_EXPRESSION);
    createEReference(arithmeticPrimaryEClass, ARITHMETIC_PRIMARY__NUMERIC_LITERAL);
    createEReference(arithmeticPrimaryEClass, ARITHMETIC_PRIMARY__SIMPLE_ARITHMETIC_EXPRESSION);
    createEReference(arithmeticPrimaryEClass, ARITHMETIC_PRIMARY__INPUT_PARAMETER);
    createEReference(arithmeticPrimaryEClass, ARITHMETIC_PRIMARY__FUNCTIONS_RETURNING_NUMERICS);
    createEReference(arithmeticPrimaryEClass, ARITHMETIC_PRIMARY__AGGREGATE_EXPRESSION);

    stringExpressionEClass = createEClass(STRING_EXPRESSION);
    createEReference(stringExpressionEClass, STRING_EXPRESSION__STRING_PRIMARY);
    createEReference(stringExpressionEClass, STRING_EXPRESSION__SUB_QUERY);

    stringPrimaryEClass = createEClass(STRING_PRIMARY);
    createEReference(stringPrimaryEClass, STRING_PRIMARY__PATH_EXPRESSION);
    createEReference(stringPrimaryEClass, STRING_PRIMARY__STRING_LITERAL);
    createEReference(stringPrimaryEClass, STRING_PRIMARY__INPUT_PARAMATER);
    createEReference(stringPrimaryEClass, STRING_PRIMARY__FUNCTIONS_RETURNING_STRINGS);
    createEReference(stringPrimaryEClass, STRING_PRIMARY__AGGREGATE_EXPRESSION);

    dateTimeExpressionEClass = createEClass(DATE_TIME_EXPRESSION);
    createEReference(dateTimeExpressionEClass, DATE_TIME_EXPRESSION__DATE_TIME_PRIMARY);
    createEReference(dateTimeExpressionEClass, DATE_TIME_EXPRESSION__SUB_QUERY);

    dateTimePrimaryEClass = createEClass(DATE_TIME_PRIMARY);
    createEReference(dateTimePrimaryEClass, DATE_TIME_PRIMARY__PATH_EXPRESSION);
    createEReference(dateTimePrimaryEClass, DATE_TIME_PRIMARY__INPUT_PARAMETER);
    createEAttribute(dateTimePrimaryEClass, DATE_TIME_PRIMARY__FUNCTIONS_RETURNING_DATE_TIME);
    createEReference(dateTimePrimaryEClass, DATE_TIME_PRIMARY__AGGREGATE_EXPRESSION);

    booleanExpressionEClass = createEClass(BOOLEAN_EXPRESSION);
    createEReference(booleanExpressionEClass, BOOLEAN_EXPRESSION__BOOLEAN_PRIMARY);
    createEReference(booleanExpressionEClass, BOOLEAN_EXPRESSION__SUB_QUERY);

    booleanPrimaryEClass = createEClass(BOOLEAN_PRIMARY);
    createEReference(booleanPrimaryEClass, BOOLEAN_PRIMARY__PATH_EXPRESSION);
    createEAttribute(booleanPrimaryEClass, BOOLEAN_PRIMARY__BOOLEAN_LITERAL);
    createEReference(booleanPrimaryEClass, BOOLEAN_PRIMARY__INPUT_PARAMETER);

    enumExpressionEClass = createEClass(ENUM_EXPRESSION);
    createEReference(enumExpressionEClass, ENUM_EXPRESSION__ENUM_PRIMARY);
    createEReference(enumExpressionEClass, ENUM_EXPRESSION__SUB_QUERY);

    enumPrimaryEClass = createEClass(ENUM_PRIMARY);
    createEReference(enumPrimaryEClass, ENUM_PRIMARY__PATH_EXPRESSION);
    createEReference(enumPrimaryEClass, ENUM_PRIMARY__ENUM_LITERAL);
    createEReference(enumPrimaryEClass, ENUM_PRIMARY__INPUT_PARAMETER);

    entityExpressionEClass = createEClass(ENTITY_EXPRESSION);
    createEReference(entityExpressionEClass, ENTITY_EXPRESSION__PATH_EXPRESSION);
    createEReference(entityExpressionEClass, ENTITY_EXPRESSION__SIMPLE_ENTITY_EXPRESSION);

    simpleEntityExpressionEClass = createEClass(SIMPLE_ENTITY_EXPRESSION);
    createEReference(simpleEntityExpressionEClass, SIMPLE_ENTITY_EXPRESSION__IDENTIFICATION_VARIABLE);
    createEReference(simpleEntityExpressionEClass, SIMPLE_ENTITY_EXPRESSION__INPUT_PARAMETER);

    functionsReturningNumericsEClass = createEClass(FUNCTIONS_RETURNING_NUMERICS);
    createEReference(functionsReturningNumericsEClass, FUNCTIONS_RETURNING_NUMERICS__STRING_PRIMARY);
    createEReference(functionsReturningNumericsEClass, FUNCTIONS_RETURNING_NUMERICS__STRING_SECONDARY);
    createEReference(functionsReturningNumericsEClass, FUNCTIONS_RETURNING_NUMERICS__SIMPLE_ARITHMETIC_EXPRESSION);
    createEReference(functionsReturningNumericsEClass, FUNCTIONS_RETURNING_NUMERICS__PRIMARY_SIMPLE_ARITHMETIC_EXPRESSION);
    createEReference(functionsReturningNumericsEClass, FUNCTIONS_RETURNING_NUMERICS__SECONDARY_SIMPLE_ARITHMETIC_EXPRESSION);
    createEReference(functionsReturningNumericsEClass, FUNCTIONS_RETURNING_NUMERICS__PATH_EXPRESSION);

    functionsReturningStringsEClass = createEClass(FUNCTIONS_RETURNING_STRINGS);
    createEReference(functionsReturningStringsEClass, FUNCTIONS_RETURNING_STRINGS__PRIMARY_STRING_PRIMARY);
    createEReference(functionsReturningStringsEClass, FUNCTIONS_RETURNING_STRINGS__SECONDARY_STRING_PRIMARY);
    createEReference(functionsReturningStringsEClass, FUNCTIONS_RETURNING_STRINGS__STRING_PRIMARY);
    createEReference(functionsReturningStringsEClass, FUNCTIONS_RETURNING_STRINGS__PRIMARY_SIMPLE_ARITHMETIC_EXPRESSION);
    createEReference(functionsReturningStringsEClass, FUNCTIONS_RETURNING_STRINGS__SECONDARY_SIMPLE_ARITHMETIC_EXPRESSION);
    createEAttribute(functionsReturningStringsEClass, FUNCTIONS_RETURNING_STRINGS__TRIM_SPECIFICATION);
    createEReference(functionsReturningStringsEClass, FUNCTIONS_RETURNING_STRINGS__TRIM_CHARACTER);

    subQueryEClass = createEClass(SUB_QUERY);
    createEReference(subQueryEClass, SUB_QUERY__SIMPLE_SELECT_CLAUSE);
    createEReference(subQueryEClass, SUB_QUERY__SUBQUERY_FROM_CLAUSE);
    createEReference(subQueryEClass, SUB_QUERY__WHERE_CLAUSE);

    subqueryFromClauseEClass = createEClass(SUBQUERY_FROM_CLAUSE);
    createEReference(subqueryFromClauseEClass, SUBQUERY_FROM_CLAUSE__SUBSELECT_IDENTIFICATION_VARIABLE_DECLARATION);

    subselectIdentificationVariableDeclarationEClass = createEClass(SUBSELECT_IDENTIFICATION_VARIABLE_DECLARATION);
    createEReference(subselectIdentificationVariableDeclarationEClass, SUBSELECT_IDENTIFICATION_VARIABLE_DECLARATION__IDENTIFICATION_VARIABLE_DECALARATION);
    createEReference(subselectIdentificationVariableDeclarationEClass, SUBSELECT_IDENTIFICATION_VARIABLE_DECLARATION__ASSOCIATION_PATH_EXPRESSION);
    createEReference(subselectIdentificationVariableDeclarationEClass, SUBSELECT_IDENTIFICATION_VARIABLE_DECLARATION__IDENTIFICATION_VARIABLE);
    createEReference(subselectIdentificationVariableDeclarationEClass, SUBSELECT_IDENTIFICATION_VARIABLE_DECLARATION__COLLECTION_MEMBER_DECLARATION);

    simpleSelectClauseEClass = createEClass(SIMPLE_SELECT_CLAUSE);
    createEReference(simpleSelectClauseEClass, SIMPLE_SELECT_CLAUSE__SIMPLE_SELECT_EXPRESSION);

    simpleSelectExpressionEClass = createEClass(SIMPLE_SELECT_EXPRESSION);
    createEReference(simpleSelectExpressionEClass, SIMPLE_SELECT_EXPRESSION__PATH_EXPRESSION);
    createEReference(simpleSelectExpressionEClass, SIMPLE_SELECT_EXPRESSION__AGGREGATE_EXPRESSION);
    createEReference(simpleSelectExpressionEClass, SIMPLE_SELECT_EXPRESSION__IDENTIFICATION_VARIABLE);

    inputParameterEClass = createEClass(INPUT_PARAMETER);
    createEAttribute(inputParameterEClass, INPUT_PARAMETER__NAME);

    escapeCharacterEClass = createEClass(ESCAPE_CHARACTER);
    createEAttribute(escapeCharacterEClass, ESCAPE_CHARACTER__NAME);

    literalEClass = createEClass(LITERAL);
    createEAttribute(literalEClass, LITERAL__NAME);

    patternValueEClass = createEClass(PATTERN_VALUE);
    createEAttribute(patternValueEClass, PATTERN_VALUE__NAME);

    stringLiteralEClass = createEClass(STRING_LITERAL);
    createEAttribute(stringLiteralEClass, STRING_LITERAL__LITERAL);

    numericLiteralEClass = createEClass(NUMERIC_LITERAL);
    createEAttribute(numericLiteralEClass, NUMERIC_LITERAL__LITERAL);

    enumLiteralEClass = createEClass(ENUM_LITERAL);
    createEAttribute(enumLiteralEClass, ENUM_LITERAL__NAME);

    trimCharacterEClass = createEClass(TRIM_CHARACTER);
    createEAttribute(trimCharacterEClass, TRIM_CHARACTER__NAME);

    importEClass = createEClass(IMPORT);
    createEAttribute(importEClass, IMPORT__IMPORTED_NAMESPACE);

    conditionalExpressionEClass = createEClass(CONDITIONAL_EXPRESSION);

    conditionalTermEClass = createEClass(CONDITIONAL_TERM);

    simpleArithmeticExpressionEClass = createEClass(SIMPLE_ARITHMETIC_EXPRESSION);

    arithmeticTermEClass = createEClass(ARITHMETIC_TERM);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Obtain other dependent packages
    JPADslPackage theJPADslPackage = (JPADslPackage)EPackage.Registry.INSTANCE.getEPackage(JPADslPackage.eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes
    jpaPathExpressionEClass.getESuperTypes().add(this.getConstructorItem());
    aggregateExpressionEClass.getESuperTypes().add(this.getConstructorItem());
    conditionalExpressionEClass.getESuperTypes().add(this.getExpression());
    conditionalTermEClass.getESuperTypes().add(this.getExpression());
    simpleArithmeticExpressionEClass.getESuperTypes().add(this.getExpression());
    arithmeticTermEClass.getESuperTypes().add(this.getExpression());

    // Initialize classes and features; add operations and parameters
    initEClass(modelEClass, Model.class, "Model", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getModel_XmlDescriptor(), ecorePackage.getEString(), "xmlDescriptor", null, 0, 1, Model.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getModel_Imports(), this.getImport(), null, "imports", null, 0, -1, Model.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getModel_Name(), ecorePackage.getEString(), "name", null, 0, 1, Model.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getModel_NamedQueries(), this.getNamedQuery(), null, "namedQueries", null, 0, -1, Model.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(namedQueryEClass, NamedQuery.class, "NamedQuery", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getNamedQuery_Name(), ecorePackage.getEString(), "name", null, 0, 1, NamedQuery.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getNamedQuery_QlStatement(), this.getQLStatement(), null, "qlStatement", null, 0, 1, NamedQuery.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(qlStatementEClass, QLStatement.class, "QLStatement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getQLStatement_SelectStatements(), this.getSelectStatement(), null, "selectStatements", null, 0, -1, QLStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(selectStatementEClass, SelectStatement.class, "SelectStatement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getSelectStatement_SelectClause(), this.getSelectClause(), null, "selectClause", null, 0, 1, SelectStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSelectStatement_FromClause(), this.getFromClause(), null, "fromClause", null, 0, 1, SelectStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSelectStatement_WhereClause(), this.getWhereClause(), null, "whereClause", null, 0, 1, SelectStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(fromClauseEClass, FromClause.class, "FromClause", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getFromClause_IdentificationVariableDeclarations(), ecorePackage.getEObject(), null, "identificationVariableDeclarations", null, 0, -1, FromClause.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(identificationVariableDeclarationEClass, IdentificationVariableDeclaration.class, "IdentificationVariableDeclaration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getIdentificationVariableDeclaration_RangeVariableDeclaration(), this.getRangeVariableDeclaration(), null, "rangeVariableDeclaration", null, 0, 1, IdentificationVariableDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getIdentificationVariableDeclaration_Joins(), ecorePackage.getEObject(), null, "joins", null, 0, -1, IdentificationVariableDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(rangeVariableDeclarationEClass, RangeVariableDeclaration.class, "RangeVariableDeclaration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getRangeVariableDeclaration_AbstractSchemaName(), theJPADslPackage.getEntity(), null, "abstractSchemaName", null, 0, 1, RangeVariableDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getRangeVariableDeclaration_IdentificationVariable(), this.getIdentificationVariable(), null, "identificationVariable", null, 0, 1, RangeVariableDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(joinEClass, Join.class, "Join", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getJoin_JoinSpec(), ecorePackage.getEString(), "joinSpec", null, 0, 1, Join.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getJoin_JoinAssociationPathExpression(), this.getJPAPathExpression(), null, "joinAssociationPathExpression", null, 0, 1, Join.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getJoin_IdentificationVariable(), this.getIdentificationVariable(), null, "identificationVariable", null, 0, 1, Join.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(fetchJoinEClass, FetchJoin.class, "FetchJoin", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getFetchJoin_JoinSpec(), ecorePackage.getEString(), "joinSpec", null, 0, 1, FetchJoin.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFetchJoin_JoinAssociationPathExpression(), this.getJPAPathExpression(), null, "joinAssociationPathExpression", null, 0, 1, FetchJoin.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFetchJoin_IdentificationVariable(), this.getIdentificationVariable(), null, "identificationVariable", null, 0, 1, FetchJoin.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(jpaPathExpressionEClass, JPAPathExpression.class, "JPAPathExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getJPAPathExpression_Root(), this.getIdentificationVariable(), null, "root", null, 0, 1, JPAPathExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getJPAPathExpression_JpaAttributes(), this.getJpaAttribute(), null, "jpaAttributes", null, 0, -1, JPAPathExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(jpaAttributeEClass, JpaAttribute.class, "JpaAttribute", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getJpaAttribute_Attribute(), theJPADslPackage.getAttribute(), null, "attribute", null, 0, 1, JpaAttribute.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(collectionMemberDeclarationEClass, CollectionMemberDeclaration.class, "CollectionMemberDeclaration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getCollectionMemberDeclaration_CollectionValuedPathExpression(), this.getJPAPathExpression(), null, "collectionValuedPathExpression", null, 0, 1, CollectionMemberDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getCollectionMemberDeclaration_IdentificationVariable(), this.getIdentificationVariable(), null, "identificationVariable", null, 0, 1, CollectionMemberDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(selectClauseEClass, SelectClause.class, "SelectClause", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getSelectClause_SelectExpressions(), this.getSelectExpression(), null, "selectExpressions", null, 0, -1, SelectClause.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(selectExpressionEClass, SelectExpression.class, "SelectExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getSelectExpression_JpaPathExpression(), this.getJPAPathExpression(), null, "jpaPathExpression", null, 0, 1, SelectExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSelectExpression_AggregateExpression(), this.getAggregateExpression(), null, "aggregateExpression", null, 0, 1, SelectExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSelectExpression_ConstructorExpression(), this.getConstructorExpression(), null, "constructorExpression", null, 0, 1, SelectExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(constructorExpressionEClass, ConstructorExpression.class, "ConstructorExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getConstructorExpression_ConstructorName(), this.getConstructorName(), null, "constructorName", null, 0, 1, ConstructorExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getConstructorExpression_ConstructorItems(), this.getConstructorItem(), null, "constructorItems", null, 0, -1, ConstructorExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(constructorItemEClass, ConstructorItem.class, "ConstructorItem", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(aggregateExpressionEClass, AggregateExpression.class, "AggregateExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getAggregateExpression_StateFieldPathExpression(), this.getJPAPathExpression(), null, "stateFieldPathExpression", null, 0, 1, AggregateExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(identificationVariableEClass, IdentificationVariable.class, "IdentificationVariable", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getIdentificationVariable_Name(), ecorePackage.getEString(), "name", null, 0, 1, IdentificationVariable.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(constructorNameEClass, ConstructorName.class, "ConstructorName", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getConstructorName_Name(), ecorePackage.getEString(), "name", null, 0, 1, ConstructorName.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(whereClauseEClass, WhereClause.class, "WhereClause", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getWhereClause_ConditionalExpression(), this.getExpression(), null, "conditionalExpression", null, 0, 1, WhereClause.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(expressionEClass, Expression.class, "Expression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getExpression_ConditionalPrimary(), this.getSimpleConditionalExpression(), null, "conditionalPrimary", null, 0, 1, Expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getExpression_ConditionalExpression(), this.getExpression(), null, "conditionalExpression", null, 0, 1, Expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getExpression_ArithmeticTerm(), this.getExpression(), null, "arithmeticTerm", null, 0, 1, Expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getExpression_ArithmeticFactor(), this.getExpression(), null, "arithmeticFactor", null, 0, 1, Expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getExpression_ArithmeticPrimary(), this.getArithmeticPrimary(), null, "arithmeticPrimary", null, 0, 1, Expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getExpression_Left(), this.getExpression(), null, "left", null, 0, 1, Expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getExpression_Right(), this.getExpression(), null, "right", null, 0, 1, Expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(simpleConditionalExpressionEClass, SimpleConditionalExpression.class, "SimpleConditionalExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getSimpleConditionalExpression_ComparisionExpression(), this.getComparisonExpression(), null, "comparisionExpression", null, 0, 1, SimpleConditionalExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSimpleConditionalExpression_BetweenExpression(), this.getBetweenExpression(), null, "betweenExpression", null, 0, 1, SimpleConditionalExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSimpleConditionalExpression_LikeExpression(), this.getLikeExpression(), null, "likeExpression", null, 0, 1, SimpleConditionalExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSimpleConditionalExpression_InExpression(), this.getInExpression(), null, "inExpression", null, 0, 1, SimpleConditionalExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSimpleConditionalExpression_NullComparisionExpression(), this.getNullComparisonExpression(), null, "nullComparisionExpression", null, 0, 1, SimpleConditionalExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSimpleConditionalExpression_EmptyCollectionComparisonExpression(), this.getEmptyCollectionComparisonExpression(), null, "emptyCollectionComparisonExpression", null, 0, 1, SimpleConditionalExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSimpleConditionalExpression_CollectionMemberExpression(), this.getCollectionMemberExpression(), null, "collectionMemberExpression", null, 0, 1, SimpleConditionalExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSimpleConditionalExpression_ExistsExpression(), this.getExistsExpression(), null, "existsExpression", null, 0, 1, SimpleConditionalExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(betweenExpressionEClass, BetweenExpression.class, "BetweenExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getBetweenExpression_PrimaryArithmeticExpression(), this.getArithmeticExpression(), null, "primaryArithmeticExpression", null, 0, 1, BetweenExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getBetweenExpression_LowerArithmeticExpression(), this.getArithmeticExpression(), null, "lowerArithmeticExpression", null, 0, 1, BetweenExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getBetweenExpression_UpperArithmeticExpression(), this.getArithmeticExpression(), null, "upperArithmeticExpression", null, 0, 1, BetweenExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getBetweenExpression_PrimaryStringExpression(), this.getStringExpression(), null, "primaryStringExpression", null, 0, 1, BetweenExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getBetweenExpression_LowerStringExpression(), this.getStringExpression(), null, "lowerStringExpression", null, 0, 1, BetweenExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getBetweenExpression_UpperStringExpression(), this.getStringExpression(), null, "upperStringExpression", null, 0, 1, BetweenExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getBetweenExpression_PrimaryDateTimeExpression(), this.getDateTimeExpression(), null, "primaryDateTimeExpression", null, 0, 1, BetweenExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getBetweenExpression_LowerDateTimeExpression(), this.getDateTimeExpression(), null, "lowerDateTimeExpression", null, 0, 1, BetweenExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getBetweenExpression_UpperDateTimeExpression(), this.getDateTimeExpression(), null, "upperDateTimeExpression", null, 0, 1, BetweenExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(inExpressionEClass, InExpression.class, "InExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getInExpression_PathExpression(), this.getJPAPathExpression(), null, "pathExpression", null, 0, 1, InExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getInExpression_InItems(), this.getInItem(), null, "inItems", null, 0, -1, InExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getInExpression_SubQuery(), this.getSubQuery(), null, "subQuery", null, 0, 1, InExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(inItemEClass, InItem.class, "InItem", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getInItem_Literal(), this.getLiteral(), null, "literal", null, 0, 1, InItem.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getInItem_InputParameter(), this.getInputParameter(), null, "inputParameter", null, 0, 1, InItem.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(likeExpressionEClass, LikeExpression.class, "LikeExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getLikeExpression_StringExpression(), this.getStringExpression(), null, "stringExpression", null, 0, 1, LikeExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getLikeExpression_PatternValue(), this.getPatternValue(), null, "patternValue", null, 0, 1, LikeExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getLikeExpression_EscapeCharacter(), this.getEscapeCharacter(), null, "escapeCharacter", null, 0, 1, LikeExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(nullComparisonExpressionEClass, NullComparisonExpression.class, "NullComparisonExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getNullComparisonExpression_PathExpression(), this.getJPAPathExpression(), null, "pathExpression", null, 0, 1, NullComparisonExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getNullComparisonExpression_InputParameter(), this.getInputParameter(), null, "inputParameter", null, 0, 1, NullComparisonExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(emptyCollectionComparisonExpressionEClass, EmptyCollectionComparisonExpression.class, "EmptyCollectionComparisonExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getEmptyCollectionComparisonExpression_PathExpression(), this.getJPAPathExpression(), null, "pathExpression", null, 0, 1, EmptyCollectionComparisonExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(collectionMemberExpressionEClass, CollectionMemberExpression.class, "CollectionMemberExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getCollectionMemberExpression_EntityExpression(), this.getEntityExpression(), null, "entityExpression", null, 0, 1, CollectionMemberExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getCollectionMemberExpression_PathExpression(), this.getJPAPathExpression(), null, "pathExpression", null, 0, 1, CollectionMemberExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(existsExpressionEClass, ExistsExpression.class, "ExistsExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getExistsExpression_SubQuery(), this.getSubQuery(), null, "subQuery", null, 0, 1, ExistsExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(allOrAnyExpressionEClass, AllOrAnyExpression.class, "AllOrAnyExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getAllOrAnyExpression_SubQuery(), this.getSubQuery(), null, "subQuery", null, 0, 1, AllOrAnyExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(comparisonExpressionEClass, ComparisonExpression.class, "ComparisonExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getComparisonExpression_PrimaryStringExpression(), this.getStringExpression(), null, "primaryStringExpression", null, 0, 1, ComparisonExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getComparisonExpression_ComparisonOperator(), ecorePackage.getEString(), "comparisonOperator", null, 0, 1, ComparisonExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getComparisonExpression_SecondaryStringExpression(), this.getStringExpression(), null, "secondaryStringExpression", null, 0, 1, ComparisonExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getComparisonExpression_AllOrAnyExpression(), this.getAllOrAnyExpression(), null, "allOrAnyExpression", null, 0, 1, ComparisonExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getComparisonExpression_PrimaryBooleanExpression(), this.getBooleanExpression(), null, "primaryBooleanExpression", null, 0, 1, ComparisonExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getComparisonExpression_SecondaryBooleanExpression(), this.getBooleanExpression(), null, "secondaryBooleanExpression", null, 0, 1, ComparisonExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getComparisonExpression_PrimaryEnumExpression(), this.getEnumExpression(), null, "primaryEnumExpression", null, 0, 1, ComparisonExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getComparisonExpression_SecondaryEnumExpression(), this.getEnumExpression(), null, "secondaryEnumExpression", null, 0, 1, ComparisonExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getComparisonExpression_PrimaryDatetimeExpression(), this.getDateTimeExpression(), null, "primaryDatetimeExpression", null, 0, 1, ComparisonExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getComparisonExpression_SecondaryDatetimeExpression(), this.getDateTimeExpression(), null, "secondaryDatetimeExpression", null, 0, 1, ComparisonExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getComparisonExpression_PrimaryEntityExpression(), this.getEntityExpression(), null, "primaryEntityExpression", null, 0, 1, ComparisonExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getComparisonExpression_SecondaryEntityExpression(), this.getEntityExpression(), null, "secondaryEntityExpression", null, 0, 1, ComparisonExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getComparisonExpression_PrimaryArithmeticExpression(), this.getArithmeticExpression(), null, "primaryArithmeticExpression", null, 0, 1, ComparisonExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getComparisonExpression_SecondaryArithmeticExpression(), this.getArithmeticExpression(), null, "secondaryArithmeticExpression", null, 0, 1, ComparisonExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(arithmeticExpressionEClass, ArithmeticExpression.class, "ArithmeticExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getArithmeticExpression_SimpleArithmeticExpression(), this.getExpression(), null, "simpleArithmeticExpression", null, 0, 1, ArithmeticExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getArithmeticExpression_SubQuery(), this.getSubQuery(), null, "subQuery", null, 0, 1, ArithmeticExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(arithmeticPrimaryEClass, ArithmeticPrimary.class, "ArithmeticPrimary", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getArithmeticPrimary_PathExpression(), this.getJPAPathExpression(), null, "pathExpression", null, 0, 1, ArithmeticPrimary.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getArithmeticPrimary_NumericLiteral(), this.getNumericLiteral(), null, "numericLiteral", null, 0, 1, ArithmeticPrimary.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getArithmeticPrimary_SimpleArithmeticExpression(), this.getExpression(), null, "simpleArithmeticExpression", null, 0, 1, ArithmeticPrimary.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getArithmeticPrimary_InputParameter(), this.getInputParameter(), null, "inputParameter", null, 0, 1, ArithmeticPrimary.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getArithmeticPrimary_FunctionsReturningNumerics(), this.getFunctionsReturningNumerics(), null, "functionsReturningNumerics", null, 0, 1, ArithmeticPrimary.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getArithmeticPrimary_AggregateExpression(), this.getAggregateExpression(), null, "aggregateExpression", null, 0, 1, ArithmeticPrimary.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(stringExpressionEClass, StringExpression.class, "StringExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getStringExpression_StringPrimary(), this.getStringPrimary(), null, "stringPrimary", null, 0, 1, StringExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getStringExpression_SubQuery(), this.getSubQuery(), null, "subQuery", null, 0, 1, StringExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(stringPrimaryEClass, StringPrimary.class, "StringPrimary", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getStringPrimary_PathExpression(), this.getJPAPathExpression(), null, "pathExpression", null, 0, 1, StringPrimary.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getStringPrimary_StringLiteral(), this.getStringLiteral(), null, "stringLiteral", null, 0, 1, StringPrimary.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getStringPrimary_InputParamater(), this.getInputParameter(), null, "inputParamater", null, 0, 1, StringPrimary.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getStringPrimary_FunctionsReturningStrings(), this.getFunctionsReturningStrings(), null, "functionsReturningStrings", null, 0, 1, StringPrimary.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getStringPrimary_AggregateExpression(), this.getAggregateExpression(), null, "aggregateExpression", null, 0, 1, StringPrimary.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(dateTimeExpressionEClass, DateTimeExpression.class, "DateTimeExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getDateTimeExpression_DateTimePrimary(), this.getDateTimePrimary(), null, "dateTimePrimary", null, 0, 1, DateTimeExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDateTimeExpression_SubQuery(), this.getSubQuery(), null, "subQuery", null, 0, 1, DateTimeExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(dateTimePrimaryEClass, DateTimePrimary.class, "DateTimePrimary", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getDateTimePrimary_PathExpression(), this.getJPAPathExpression(), null, "pathExpression", null, 0, 1, DateTimePrimary.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDateTimePrimary_InputParameter(), this.getInputParameter(), null, "inputParameter", null, 0, 1, DateTimePrimary.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getDateTimePrimary_FunctionsReturningDateTime(), ecorePackage.getEString(), "functionsReturningDateTime", null, 0, 1, DateTimePrimary.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDateTimePrimary_AggregateExpression(), this.getAggregateExpression(), null, "aggregateExpression", null, 0, 1, DateTimePrimary.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(booleanExpressionEClass, BooleanExpression.class, "BooleanExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getBooleanExpression_BooleanPrimary(), this.getBooleanPrimary(), null, "booleanPrimary", null, 0, 1, BooleanExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getBooleanExpression_SubQuery(), this.getSubQuery(), null, "subQuery", null, 0, 1, BooleanExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(booleanPrimaryEClass, BooleanPrimary.class, "BooleanPrimary", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getBooleanPrimary_PathExpression(), this.getJPAPathExpression(), null, "pathExpression", null, 0, 1, BooleanPrimary.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getBooleanPrimary_BooleanLiteral(), ecorePackage.getEString(), "booleanLiteral", null, 0, 1, BooleanPrimary.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getBooleanPrimary_InputParameter(), this.getInputParameter(), null, "inputParameter", null, 0, 1, BooleanPrimary.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(enumExpressionEClass, EnumExpression.class, "EnumExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getEnumExpression_EnumPrimary(), this.getEnumPrimary(), null, "enumPrimary", null, 0, 1, EnumExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEnumExpression_SubQuery(), this.getSubQuery(), null, "subQuery", null, 0, 1, EnumExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(enumPrimaryEClass, EnumPrimary.class, "EnumPrimary", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getEnumPrimary_PathExpression(), this.getJPAPathExpression(), null, "pathExpression", null, 0, 1, EnumPrimary.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEnumPrimary_EnumLiteral(), this.getEnumLiteral(), null, "enumLiteral", null, 0, 1, EnumPrimary.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEnumPrimary_InputParameter(), this.getInputParameter(), null, "inputParameter", null, 0, 1, EnumPrimary.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(entityExpressionEClass, EntityExpression.class, "EntityExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getEntityExpression_PathExpression(), this.getJPAPathExpression(), null, "pathExpression", null, 0, 1, EntityExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEntityExpression_SimpleEntityExpression(), this.getSimpleEntityExpression(), null, "simpleEntityExpression", null, 0, 1, EntityExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(simpleEntityExpressionEClass, SimpleEntityExpression.class, "SimpleEntityExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getSimpleEntityExpression_IdentificationVariable(), this.getIdentificationVariable(), null, "identificationVariable", null, 0, 1, SimpleEntityExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSimpleEntityExpression_InputParameter(), this.getInputParameter(), null, "inputParameter", null, 0, 1, SimpleEntityExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(functionsReturningNumericsEClass, FunctionsReturningNumerics.class, "FunctionsReturningNumerics", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getFunctionsReturningNumerics_StringPrimary(), this.getStringPrimary(), null, "stringPrimary", null, 0, 1, FunctionsReturningNumerics.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFunctionsReturningNumerics_StringSecondary(), this.getStringPrimary(), null, "stringSecondary", null, 0, 1, FunctionsReturningNumerics.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFunctionsReturningNumerics_SimpleArithmeticExpression(), this.getExpression(), null, "simpleArithmeticExpression", null, 0, 1, FunctionsReturningNumerics.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFunctionsReturningNumerics_PrimarySimpleArithmeticExpression(), this.getExpression(), null, "primarySimpleArithmeticExpression", null, 0, 1, FunctionsReturningNumerics.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFunctionsReturningNumerics_SecondarySimpleArithmeticExpression(), this.getExpression(), null, "secondarySimpleArithmeticExpression", null, 0, 1, FunctionsReturningNumerics.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFunctionsReturningNumerics_PathExpression(), this.getJPAPathExpression(), null, "pathExpression", null, 0, 1, FunctionsReturningNumerics.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(functionsReturningStringsEClass, FunctionsReturningStrings.class, "FunctionsReturningStrings", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getFunctionsReturningStrings_PrimaryStringPrimary(), this.getStringPrimary(), null, "primaryStringPrimary", null, 0, 1, FunctionsReturningStrings.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFunctionsReturningStrings_SecondaryStringPrimary(), this.getStringPrimary(), null, "secondaryStringPrimary", null, 0, 1, FunctionsReturningStrings.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFunctionsReturningStrings_StringPrimary(), this.getStringPrimary(), null, "stringPrimary", null, 0, 1, FunctionsReturningStrings.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFunctionsReturningStrings_PrimarySimpleArithmeticExpression(), this.getExpression(), null, "primarySimpleArithmeticExpression", null, 0, 1, FunctionsReturningStrings.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFunctionsReturningStrings_SecondarySimpleArithmeticExpression(), this.getExpression(), null, "secondarySimpleArithmeticExpression", null, 0, 1, FunctionsReturningStrings.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getFunctionsReturningStrings_TrimSpecification(), ecorePackage.getEString(), "trimSpecification", null, 0, 1, FunctionsReturningStrings.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFunctionsReturningStrings_TrimCharacter(), this.getTrimCharacter(), null, "trimCharacter", null, 0, 1, FunctionsReturningStrings.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(subQueryEClass, SubQuery.class, "SubQuery", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getSubQuery_SimpleSelectClause(), this.getSimpleSelectClause(), null, "simpleSelectClause", null, 0, 1, SubQuery.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSubQuery_SubqueryFromClause(), this.getSubqueryFromClause(), null, "subqueryFromClause", null, 0, 1, SubQuery.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSubQuery_WhereClause(), this.getWhereClause(), null, "whereClause", null, 0, 1, SubQuery.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(subqueryFromClauseEClass, SubqueryFromClause.class, "SubqueryFromClause", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getSubqueryFromClause_SubselectIdentificationVariableDeclaration(), this.getSubselectIdentificationVariableDeclaration(), null, "subselectIdentificationVariableDeclaration", null, 0, -1, SubqueryFromClause.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(subselectIdentificationVariableDeclarationEClass, SubselectIdentificationVariableDeclaration.class, "SubselectIdentificationVariableDeclaration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getSubselectIdentificationVariableDeclaration_IdentificationVariableDecalaration(), this.getIdentificationVariableDeclaration(), null, "identificationVariableDecalaration", null, 0, 1, SubselectIdentificationVariableDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSubselectIdentificationVariableDeclaration_AssociationPathExpression(), this.getJPAPathExpression(), null, "associationPathExpression", null, 0, 1, SubselectIdentificationVariableDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSubselectIdentificationVariableDeclaration_IdentificationVariable(), this.getIdentificationVariable(), null, "identificationVariable", null, 0, 1, SubselectIdentificationVariableDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSubselectIdentificationVariableDeclaration_CollectionMemberDeclaration(), this.getCollectionMemberDeclaration(), null, "collectionMemberDeclaration", null, 0, 1, SubselectIdentificationVariableDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(simpleSelectClauseEClass, SimpleSelectClause.class, "SimpleSelectClause", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getSimpleSelectClause_SimpleSelectExpression(), this.getSimpleSelectExpression(), null, "simpleSelectExpression", null, 0, 1, SimpleSelectClause.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(simpleSelectExpressionEClass, SimpleSelectExpression.class, "SimpleSelectExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getSimpleSelectExpression_PathExpression(), this.getJPAPathExpression(), null, "pathExpression", null, 0, 1, SimpleSelectExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSimpleSelectExpression_AggregateExpression(), this.getAggregateExpression(), null, "aggregateExpression", null, 0, 1, SimpleSelectExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSimpleSelectExpression_IdentificationVariable(), this.getIdentificationVariable(), null, "identificationVariable", null, 0, 1, SimpleSelectExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(inputParameterEClass, InputParameter.class, "InputParameter", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getInputParameter_Name(), ecorePackage.getEString(), "name", null, 0, 1, InputParameter.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(escapeCharacterEClass, EscapeCharacter.class, "EscapeCharacter", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getEscapeCharacter_Name(), ecorePackage.getEString(), "name", null, 0, 1, EscapeCharacter.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(literalEClass, Literal.class, "Literal", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getLiteral_Name(), ecorePackage.getEString(), "name", null, 0, 1, Literal.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(patternValueEClass, PatternValue.class, "PatternValue", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getPatternValue_Name(), ecorePackage.getEString(), "name", null, 0, 1, PatternValue.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(stringLiteralEClass, StringLiteral.class, "StringLiteral", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getStringLiteral_Literal(), ecorePackage.getEString(), "literal", null, 0, 1, StringLiteral.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(numericLiteralEClass, NumericLiteral.class, "NumericLiteral", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getNumericLiteral_Literal(), ecorePackage.getEInt(), "literal", null, 0, 1, NumericLiteral.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(enumLiteralEClass, EnumLiteral.class, "EnumLiteral", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getEnumLiteral_Name(), ecorePackage.getEString(), "name", null, 0, 1, EnumLiteral.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(trimCharacterEClass, TrimCharacter.class, "TrimCharacter", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getTrimCharacter_Name(), ecorePackage.getEString(), "name", null, 0, 1, TrimCharacter.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(importEClass, Import.class, "Import", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getImport_ImportedNamespace(), ecorePackage.getEString(), "importedNamespace", null, 0, 1, Import.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(conditionalExpressionEClass, ConditionalExpression.class, "ConditionalExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(conditionalTermEClass, ConditionalTerm.class, "ConditionalTerm", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(simpleArithmeticExpressionEClass, SimpleArithmeticExpression.class, "SimpleArithmeticExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(arithmeticTermEClass, ArithmeticTerm.class, "ArithmeticTerm", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    // Create resource
    createResource(eNS_URI);
  }

} //JPAQLDslPackageImpl
