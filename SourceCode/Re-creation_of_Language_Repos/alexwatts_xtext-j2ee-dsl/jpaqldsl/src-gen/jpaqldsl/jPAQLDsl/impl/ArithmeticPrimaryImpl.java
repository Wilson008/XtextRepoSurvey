/**
 * generated by Xtext 2.35.0
 */
package jpaqldsl.jPAQLDsl.impl;

import jpaqldsl.jPAQLDsl.AggregateExpression;
import jpaqldsl.jPAQLDsl.ArithmeticPrimary;
import jpaqldsl.jPAQLDsl.Expression;
import jpaqldsl.jPAQLDsl.FunctionsReturningNumerics;
import jpaqldsl.jPAQLDsl.InputParameter;
import jpaqldsl.jPAQLDsl.JPAPathExpression;
import jpaqldsl.jPAQLDsl.JPAQLDslPackage;
import jpaqldsl.jPAQLDsl.NumericLiteral;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Arithmetic Primary</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link jpaqldsl.jPAQLDsl.impl.ArithmeticPrimaryImpl#getPathExpression <em>Path Expression</em>}</li>
 *   <li>{@link jpaqldsl.jPAQLDsl.impl.ArithmeticPrimaryImpl#getNumericLiteral <em>Numeric Literal</em>}</li>
 *   <li>{@link jpaqldsl.jPAQLDsl.impl.ArithmeticPrimaryImpl#getSimpleArithmeticExpression <em>Simple Arithmetic Expression</em>}</li>
 *   <li>{@link jpaqldsl.jPAQLDsl.impl.ArithmeticPrimaryImpl#getInputParameter <em>Input Parameter</em>}</li>
 *   <li>{@link jpaqldsl.jPAQLDsl.impl.ArithmeticPrimaryImpl#getFunctionsReturningNumerics <em>Functions Returning Numerics</em>}</li>
 *   <li>{@link jpaqldsl.jPAQLDsl.impl.ArithmeticPrimaryImpl#getAggregateExpression <em>Aggregate Expression</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ArithmeticPrimaryImpl extends MinimalEObjectImpl.Container implements ArithmeticPrimary
{
  /**
   * The cached value of the '{@link #getPathExpression() <em>Path Expression</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPathExpression()
   * @generated
   * @ordered
   */
  protected JPAPathExpression pathExpression;

  /**
   * The cached value of the '{@link #getNumericLiteral() <em>Numeric Literal</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNumericLiteral()
   * @generated
   * @ordered
   */
  protected NumericLiteral numericLiteral;

  /**
   * The cached value of the '{@link #getSimpleArithmeticExpression() <em>Simple Arithmetic Expression</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSimpleArithmeticExpression()
   * @generated
   * @ordered
   */
  protected Expression simpleArithmeticExpression;

  /**
   * The cached value of the '{@link #getInputParameter() <em>Input Parameter</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInputParameter()
   * @generated
   * @ordered
   */
  protected InputParameter inputParameter;

  /**
   * The cached value of the '{@link #getFunctionsReturningNumerics() <em>Functions Returning Numerics</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFunctionsReturningNumerics()
   * @generated
   * @ordered
   */
  protected FunctionsReturningNumerics functionsReturningNumerics;

  /**
   * The cached value of the '{@link #getAggregateExpression() <em>Aggregate Expression</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAggregateExpression()
   * @generated
   * @ordered
   */
  protected AggregateExpression aggregateExpression;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ArithmeticPrimaryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return JPAQLDslPackage.Literals.ARITHMETIC_PRIMARY;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public JPAPathExpression getPathExpression()
  {
    return pathExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetPathExpression(JPAPathExpression newPathExpression, NotificationChain msgs)
  {
    JPAPathExpression oldPathExpression = pathExpression;
    pathExpression = newPathExpression;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, JPAQLDslPackage.ARITHMETIC_PRIMARY__PATH_EXPRESSION, oldPathExpression, newPathExpression);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPathExpression(JPAPathExpression newPathExpression)
  {
    if (newPathExpression != pathExpression)
    {
      NotificationChain msgs = null;
      if (pathExpression != null)
        msgs = ((InternalEObject)pathExpression).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - JPAQLDslPackage.ARITHMETIC_PRIMARY__PATH_EXPRESSION, null, msgs);
      if (newPathExpression != null)
        msgs = ((InternalEObject)newPathExpression).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - JPAQLDslPackage.ARITHMETIC_PRIMARY__PATH_EXPRESSION, null, msgs);
      msgs = basicSetPathExpression(newPathExpression, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, JPAQLDslPackage.ARITHMETIC_PRIMARY__PATH_EXPRESSION, newPathExpression, newPathExpression));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NumericLiteral getNumericLiteral()
  {
    return numericLiteral;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetNumericLiteral(NumericLiteral newNumericLiteral, NotificationChain msgs)
  {
    NumericLiteral oldNumericLiteral = numericLiteral;
    numericLiteral = newNumericLiteral;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, JPAQLDslPackage.ARITHMETIC_PRIMARY__NUMERIC_LITERAL, oldNumericLiteral, newNumericLiteral);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setNumericLiteral(NumericLiteral newNumericLiteral)
  {
    if (newNumericLiteral != numericLiteral)
    {
      NotificationChain msgs = null;
      if (numericLiteral != null)
        msgs = ((InternalEObject)numericLiteral).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - JPAQLDslPackage.ARITHMETIC_PRIMARY__NUMERIC_LITERAL, null, msgs);
      if (newNumericLiteral != null)
        msgs = ((InternalEObject)newNumericLiteral).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - JPAQLDslPackage.ARITHMETIC_PRIMARY__NUMERIC_LITERAL, null, msgs);
      msgs = basicSetNumericLiteral(newNumericLiteral, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, JPAQLDslPackage.ARITHMETIC_PRIMARY__NUMERIC_LITERAL, newNumericLiteral, newNumericLiteral));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Expression getSimpleArithmeticExpression()
  {
    return simpleArithmeticExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSimpleArithmeticExpression(Expression newSimpleArithmeticExpression, NotificationChain msgs)
  {
    Expression oldSimpleArithmeticExpression = simpleArithmeticExpression;
    simpleArithmeticExpression = newSimpleArithmeticExpression;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, JPAQLDslPackage.ARITHMETIC_PRIMARY__SIMPLE_ARITHMETIC_EXPRESSION, oldSimpleArithmeticExpression, newSimpleArithmeticExpression);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSimpleArithmeticExpression(Expression newSimpleArithmeticExpression)
  {
    if (newSimpleArithmeticExpression != simpleArithmeticExpression)
    {
      NotificationChain msgs = null;
      if (simpleArithmeticExpression != null)
        msgs = ((InternalEObject)simpleArithmeticExpression).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - JPAQLDslPackage.ARITHMETIC_PRIMARY__SIMPLE_ARITHMETIC_EXPRESSION, null, msgs);
      if (newSimpleArithmeticExpression != null)
        msgs = ((InternalEObject)newSimpleArithmeticExpression).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - JPAQLDslPackage.ARITHMETIC_PRIMARY__SIMPLE_ARITHMETIC_EXPRESSION, null, msgs);
      msgs = basicSetSimpleArithmeticExpression(newSimpleArithmeticExpression, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, JPAQLDslPackage.ARITHMETIC_PRIMARY__SIMPLE_ARITHMETIC_EXPRESSION, newSimpleArithmeticExpression, newSimpleArithmeticExpression));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public InputParameter getInputParameter()
  {
    return inputParameter;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetInputParameter(InputParameter newInputParameter, NotificationChain msgs)
  {
    InputParameter oldInputParameter = inputParameter;
    inputParameter = newInputParameter;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, JPAQLDslPackage.ARITHMETIC_PRIMARY__INPUT_PARAMETER, oldInputParameter, newInputParameter);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setInputParameter(InputParameter newInputParameter)
  {
    if (newInputParameter != inputParameter)
    {
      NotificationChain msgs = null;
      if (inputParameter != null)
        msgs = ((InternalEObject)inputParameter).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - JPAQLDslPackage.ARITHMETIC_PRIMARY__INPUT_PARAMETER, null, msgs);
      if (newInputParameter != null)
        msgs = ((InternalEObject)newInputParameter).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - JPAQLDslPackage.ARITHMETIC_PRIMARY__INPUT_PARAMETER, null, msgs);
      msgs = basicSetInputParameter(newInputParameter, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, JPAQLDslPackage.ARITHMETIC_PRIMARY__INPUT_PARAMETER, newInputParameter, newInputParameter));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public FunctionsReturningNumerics getFunctionsReturningNumerics()
  {
    return functionsReturningNumerics;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetFunctionsReturningNumerics(FunctionsReturningNumerics newFunctionsReturningNumerics, NotificationChain msgs)
  {
    FunctionsReturningNumerics oldFunctionsReturningNumerics = functionsReturningNumerics;
    functionsReturningNumerics = newFunctionsReturningNumerics;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, JPAQLDslPackage.ARITHMETIC_PRIMARY__FUNCTIONS_RETURNING_NUMERICS, oldFunctionsReturningNumerics, newFunctionsReturningNumerics);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFunctionsReturningNumerics(FunctionsReturningNumerics newFunctionsReturningNumerics)
  {
    if (newFunctionsReturningNumerics != functionsReturningNumerics)
    {
      NotificationChain msgs = null;
      if (functionsReturningNumerics != null)
        msgs = ((InternalEObject)functionsReturningNumerics).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - JPAQLDslPackage.ARITHMETIC_PRIMARY__FUNCTIONS_RETURNING_NUMERICS, null, msgs);
      if (newFunctionsReturningNumerics != null)
        msgs = ((InternalEObject)newFunctionsReturningNumerics).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - JPAQLDslPackage.ARITHMETIC_PRIMARY__FUNCTIONS_RETURNING_NUMERICS, null, msgs);
      msgs = basicSetFunctionsReturningNumerics(newFunctionsReturningNumerics, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, JPAQLDslPackage.ARITHMETIC_PRIMARY__FUNCTIONS_RETURNING_NUMERICS, newFunctionsReturningNumerics, newFunctionsReturningNumerics));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AggregateExpression getAggregateExpression()
  {
    return aggregateExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetAggregateExpression(AggregateExpression newAggregateExpression, NotificationChain msgs)
  {
    AggregateExpression oldAggregateExpression = aggregateExpression;
    aggregateExpression = newAggregateExpression;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, JPAQLDslPackage.ARITHMETIC_PRIMARY__AGGREGATE_EXPRESSION, oldAggregateExpression, newAggregateExpression);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAggregateExpression(AggregateExpression newAggregateExpression)
  {
    if (newAggregateExpression != aggregateExpression)
    {
      NotificationChain msgs = null;
      if (aggregateExpression != null)
        msgs = ((InternalEObject)aggregateExpression).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - JPAQLDslPackage.ARITHMETIC_PRIMARY__AGGREGATE_EXPRESSION, null, msgs);
      if (newAggregateExpression != null)
        msgs = ((InternalEObject)newAggregateExpression).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - JPAQLDslPackage.ARITHMETIC_PRIMARY__AGGREGATE_EXPRESSION, null, msgs);
      msgs = basicSetAggregateExpression(newAggregateExpression, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, JPAQLDslPackage.ARITHMETIC_PRIMARY__AGGREGATE_EXPRESSION, newAggregateExpression, newAggregateExpression));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case JPAQLDslPackage.ARITHMETIC_PRIMARY__PATH_EXPRESSION:
        return basicSetPathExpression(null, msgs);
      case JPAQLDslPackage.ARITHMETIC_PRIMARY__NUMERIC_LITERAL:
        return basicSetNumericLiteral(null, msgs);
      case JPAQLDslPackage.ARITHMETIC_PRIMARY__SIMPLE_ARITHMETIC_EXPRESSION:
        return basicSetSimpleArithmeticExpression(null, msgs);
      case JPAQLDslPackage.ARITHMETIC_PRIMARY__INPUT_PARAMETER:
        return basicSetInputParameter(null, msgs);
      case JPAQLDslPackage.ARITHMETIC_PRIMARY__FUNCTIONS_RETURNING_NUMERICS:
        return basicSetFunctionsReturningNumerics(null, msgs);
      case JPAQLDslPackage.ARITHMETIC_PRIMARY__AGGREGATE_EXPRESSION:
        return basicSetAggregateExpression(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case JPAQLDslPackage.ARITHMETIC_PRIMARY__PATH_EXPRESSION:
        return getPathExpression();
      case JPAQLDslPackage.ARITHMETIC_PRIMARY__NUMERIC_LITERAL:
        return getNumericLiteral();
      case JPAQLDslPackage.ARITHMETIC_PRIMARY__SIMPLE_ARITHMETIC_EXPRESSION:
        return getSimpleArithmeticExpression();
      case JPAQLDslPackage.ARITHMETIC_PRIMARY__INPUT_PARAMETER:
        return getInputParameter();
      case JPAQLDslPackage.ARITHMETIC_PRIMARY__FUNCTIONS_RETURNING_NUMERICS:
        return getFunctionsReturningNumerics();
      case JPAQLDslPackage.ARITHMETIC_PRIMARY__AGGREGATE_EXPRESSION:
        return getAggregateExpression();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case JPAQLDslPackage.ARITHMETIC_PRIMARY__PATH_EXPRESSION:
        setPathExpression((JPAPathExpression)newValue);
        return;
      case JPAQLDslPackage.ARITHMETIC_PRIMARY__NUMERIC_LITERAL:
        setNumericLiteral((NumericLiteral)newValue);
        return;
      case JPAQLDslPackage.ARITHMETIC_PRIMARY__SIMPLE_ARITHMETIC_EXPRESSION:
        setSimpleArithmeticExpression((Expression)newValue);
        return;
      case JPAQLDslPackage.ARITHMETIC_PRIMARY__INPUT_PARAMETER:
        setInputParameter((InputParameter)newValue);
        return;
      case JPAQLDslPackage.ARITHMETIC_PRIMARY__FUNCTIONS_RETURNING_NUMERICS:
        setFunctionsReturningNumerics((FunctionsReturningNumerics)newValue);
        return;
      case JPAQLDslPackage.ARITHMETIC_PRIMARY__AGGREGATE_EXPRESSION:
        setAggregateExpression((AggregateExpression)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case JPAQLDslPackage.ARITHMETIC_PRIMARY__PATH_EXPRESSION:
        setPathExpression((JPAPathExpression)null);
        return;
      case JPAQLDslPackage.ARITHMETIC_PRIMARY__NUMERIC_LITERAL:
        setNumericLiteral((NumericLiteral)null);
        return;
      case JPAQLDslPackage.ARITHMETIC_PRIMARY__SIMPLE_ARITHMETIC_EXPRESSION:
        setSimpleArithmeticExpression((Expression)null);
        return;
      case JPAQLDslPackage.ARITHMETIC_PRIMARY__INPUT_PARAMETER:
        setInputParameter((InputParameter)null);
        return;
      case JPAQLDslPackage.ARITHMETIC_PRIMARY__FUNCTIONS_RETURNING_NUMERICS:
        setFunctionsReturningNumerics((FunctionsReturningNumerics)null);
        return;
      case JPAQLDslPackage.ARITHMETIC_PRIMARY__AGGREGATE_EXPRESSION:
        setAggregateExpression((AggregateExpression)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case JPAQLDslPackage.ARITHMETIC_PRIMARY__PATH_EXPRESSION:
        return pathExpression != null;
      case JPAQLDslPackage.ARITHMETIC_PRIMARY__NUMERIC_LITERAL:
        return numericLiteral != null;
      case JPAQLDslPackage.ARITHMETIC_PRIMARY__SIMPLE_ARITHMETIC_EXPRESSION:
        return simpleArithmeticExpression != null;
      case JPAQLDslPackage.ARITHMETIC_PRIMARY__INPUT_PARAMETER:
        return inputParameter != null;
      case JPAQLDslPackage.ARITHMETIC_PRIMARY__FUNCTIONS_RETURNING_NUMERICS:
        return functionsReturningNumerics != null;
      case JPAQLDslPackage.ARITHMETIC_PRIMARY__AGGREGATE_EXPRESSION:
        return aggregateExpression != null;
    }
    return super.eIsSet(featureID);
  }

} //ArithmeticPrimaryImpl
