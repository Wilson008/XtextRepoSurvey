/**
 * generated by Xtext 2.35.0
 */
package jpaqldsl.jPAQLDsl.impl;

import jpaqldsl.jPAQLDsl.CollectionMemberExpression;
import jpaqldsl.jPAQLDsl.EntityExpression;
import jpaqldsl.jPAQLDsl.JPAPathExpression;
import jpaqldsl.jPAQLDsl.JPAQLDslPackage;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Collection Member Expression</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link jpaqldsl.jPAQLDsl.impl.CollectionMemberExpressionImpl#getEntityExpression <em>Entity Expression</em>}</li>
 *   <li>{@link jpaqldsl.jPAQLDsl.impl.CollectionMemberExpressionImpl#getPathExpression <em>Path Expression</em>}</li>
 * </ul>
 *
 * @generated
 */
public class CollectionMemberExpressionImpl extends MinimalEObjectImpl.Container implements CollectionMemberExpression
{
  /**
   * The cached value of the '{@link #getEntityExpression() <em>Entity Expression</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEntityExpression()
   * @generated
   * @ordered
   */
  protected EntityExpression entityExpression;

  /**
   * The cached value of the '{@link #getPathExpression() <em>Path Expression</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPathExpression()
   * @generated
   * @ordered
   */
  protected JPAPathExpression pathExpression;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected CollectionMemberExpressionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return JPAQLDslPackage.Literals.COLLECTION_MEMBER_EXPRESSION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EntityExpression getEntityExpression()
  {
    return entityExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetEntityExpression(EntityExpression newEntityExpression, NotificationChain msgs)
  {
    EntityExpression oldEntityExpression = entityExpression;
    entityExpression = newEntityExpression;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, JPAQLDslPackage.COLLECTION_MEMBER_EXPRESSION__ENTITY_EXPRESSION, oldEntityExpression, newEntityExpression);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setEntityExpression(EntityExpression newEntityExpression)
  {
    if (newEntityExpression != entityExpression)
    {
      NotificationChain msgs = null;
      if (entityExpression != null)
        msgs = ((InternalEObject)entityExpression).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - JPAQLDslPackage.COLLECTION_MEMBER_EXPRESSION__ENTITY_EXPRESSION, null, msgs);
      if (newEntityExpression != null)
        msgs = ((InternalEObject)newEntityExpression).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - JPAQLDslPackage.COLLECTION_MEMBER_EXPRESSION__ENTITY_EXPRESSION, null, msgs);
      msgs = basicSetEntityExpression(newEntityExpression, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, JPAQLDslPackage.COLLECTION_MEMBER_EXPRESSION__ENTITY_EXPRESSION, newEntityExpression, newEntityExpression));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public JPAPathExpression getPathExpression()
  {
    return pathExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetPathExpression(JPAPathExpression newPathExpression, NotificationChain msgs)
  {
    JPAPathExpression oldPathExpression = pathExpression;
    pathExpression = newPathExpression;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, JPAQLDslPackage.COLLECTION_MEMBER_EXPRESSION__PATH_EXPRESSION, oldPathExpression, newPathExpression);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPathExpression(JPAPathExpression newPathExpression)
  {
    if (newPathExpression != pathExpression)
    {
      NotificationChain msgs = null;
      if (pathExpression != null)
        msgs = ((InternalEObject)pathExpression).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - JPAQLDslPackage.COLLECTION_MEMBER_EXPRESSION__PATH_EXPRESSION, null, msgs);
      if (newPathExpression != null)
        msgs = ((InternalEObject)newPathExpression).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - JPAQLDslPackage.COLLECTION_MEMBER_EXPRESSION__PATH_EXPRESSION, null, msgs);
      msgs = basicSetPathExpression(newPathExpression, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, JPAQLDslPackage.COLLECTION_MEMBER_EXPRESSION__PATH_EXPRESSION, newPathExpression, newPathExpression));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case JPAQLDslPackage.COLLECTION_MEMBER_EXPRESSION__ENTITY_EXPRESSION:
        return basicSetEntityExpression(null, msgs);
      case JPAQLDslPackage.COLLECTION_MEMBER_EXPRESSION__PATH_EXPRESSION:
        return basicSetPathExpression(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case JPAQLDslPackage.COLLECTION_MEMBER_EXPRESSION__ENTITY_EXPRESSION:
        return getEntityExpression();
      case JPAQLDslPackage.COLLECTION_MEMBER_EXPRESSION__PATH_EXPRESSION:
        return getPathExpression();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case JPAQLDslPackage.COLLECTION_MEMBER_EXPRESSION__ENTITY_EXPRESSION:
        setEntityExpression((EntityExpression)newValue);
        return;
      case JPAQLDslPackage.COLLECTION_MEMBER_EXPRESSION__PATH_EXPRESSION:
        setPathExpression((JPAPathExpression)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case JPAQLDslPackage.COLLECTION_MEMBER_EXPRESSION__ENTITY_EXPRESSION:
        setEntityExpression((EntityExpression)null);
        return;
      case JPAQLDslPackage.COLLECTION_MEMBER_EXPRESSION__PATH_EXPRESSION:
        setPathExpression((JPAPathExpression)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case JPAQLDslPackage.COLLECTION_MEMBER_EXPRESSION__ENTITY_EXPRESSION:
        return entityExpression != null;
      case JPAQLDslPackage.COLLECTION_MEMBER_EXPRESSION__PATH_EXPRESSION:
        return pathExpression != null;
    }
    return super.eIsSet(featureID);
  }

} //CollectionMemberExpressionImpl
