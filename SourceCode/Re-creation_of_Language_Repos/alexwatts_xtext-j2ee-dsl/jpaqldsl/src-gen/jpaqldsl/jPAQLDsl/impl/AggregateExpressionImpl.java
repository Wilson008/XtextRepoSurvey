/**
 * generated by Xtext 2.35.0
 */
package jpaqldsl.jPAQLDsl.impl;

import jpaqldsl.jPAQLDsl.AggregateExpression;
import jpaqldsl.jPAQLDsl.JPAPathExpression;
import jpaqldsl.jPAQLDsl.JPAQLDslPackage;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Aggregate Expression</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link jpaqldsl.jPAQLDsl.impl.AggregateExpressionImpl#getStateFieldPathExpression <em>State Field Path Expression</em>}</li>
 * </ul>
 *
 * @generated
 */
public class AggregateExpressionImpl extends ConstructorItemImpl implements AggregateExpression
{
  /**
   * The cached value of the '{@link #getStateFieldPathExpression() <em>State Field Path Expression</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStateFieldPathExpression()
   * @generated
   * @ordered
   */
  protected JPAPathExpression stateFieldPathExpression;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected AggregateExpressionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return JPAQLDslPackage.Literals.AGGREGATE_EXPRESSION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public JPAPathExpression getStateFieldPathExpression()
  {
    return stateFieldPathExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetStateFieldPathExpression(JPAPathExpression newStateFieldPathExpression, NotificationChain msgs)
  {
    JPAPathExpression oldStateFieldPathExpression = stateFieldPathExpression;
    stateFieldPathExpression = newStateFieldPathExpression;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, JPAQLDslPackage.AGGREGATE_EXPRESSION__STATE_FIELD_PATH_EXPRESSION, oldStateFieldPathExpression, newStateFieldPathExpression);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setStateFieldPathExpression(JPAPathExpression newStateFieldPathExpression)
  {
    if (newStateFieldPathExpression != stateFieldPathExpression)
    {
      NotificationChain msgs = null;
      if (stateFieldPathExpression != null)
        msgs = ((InternalEObject)stateFieldPathExpression).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - JPAQLDslPackage.AGGREGATE_EXPRESSION__STATE_FIELD_PATH_EXPRESSION, null, msgs);
      if (newStateFieldPathExpression != null)
        msgs = ((InternalEObject)newStateFieldPathExpression).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - JPAQLDslPackage.AGGREGATE_EXPRESSION__STATE_FIELD_PATH_EXPRESSION, null, msgs);
      msgs = basicSetStateFieldPathExpression(newStateFieldPathExpression, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, JPAQLDslPackage.AGGREGATE_EXPRESSION__STATE_FIELD_PATH_EXPRESSION, newStateFieldPathExpression, newStateFieldPathExpression));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case JPAQLDslPackage.AGGREGATE_EXPRESSION__STATE_FIELD_PATH_EXPRESSION:
        return basicSetStateFieldPathExpression(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case JPAQLDslPackage.AGGREGATE_EXPRESSION__STATE_FIELD_PATH_EXPRESSION:
        return getStateFieldPathExpression();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case JPAQLDslPackage.AGGREGATE_EXPRESSION__STATE_FIELD_PATH_EXPRESSION:
        setStateFieldPathExpression((JPAPathExpression)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case JPAQLDslPackage.AGGREGATE_EXPRESSION__STATE_FIELD_PATH_EXPRESSION:
        setStateFieldPathExpression((JPAPathExpression)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case JPAQLDslPackage.AGGREGATE_EXPRESSION__STATE_FIELD_PATH_EXPRESSION:
        return stateFieldPathExpression != null;
    }
    return super.eIsSet(featureID);
  }

} //AggregateExpressionImpl
