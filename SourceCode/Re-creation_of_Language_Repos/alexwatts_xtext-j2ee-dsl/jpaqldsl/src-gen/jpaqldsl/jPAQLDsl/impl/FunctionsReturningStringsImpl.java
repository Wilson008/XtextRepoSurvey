/**
 * generated by Xtext 2.35.0
 */
package jpaqldsl.jPAQLDsl.impl;

import jpaqldsl.jPAQLDsl.Expression;
import jpaqldsl.jPAQLDsl.FunctionsReturningStrings;
import jpaqldsl.jPAQLDsl.JPAQLDslPackage;
import jpaqldsl.jPAQLDsl.StringPrimary;
import jpaqldsl.jPAQLDsl.TrimCharacter;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Functions Returning Strings</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link jpaqldsl.jPAQLDsl.impl.FunctionsReturningStringsImpl#getPrimaryStringPrimary <em>Primary String Primary</em>}</li>
 *   <li>{@link jpaqldsl.jPAQLDsl.impl.FunctionsReturningStringsImpl#getSecondaryStringPrimary <em>Secondary String Primary</em>}</li>
 *   <li>{@link jpaqldsl.jPAQLDsl.impl.FunctionsReturningStringsImpl#getStringPrimary <em>String Primary</em>}</li>
 *   <li>{@link jpaqldsl.jPAQLDsl.impl.FunctionsReturningStringsImpl#getPrimarySimpleArithmeticExpression <em>Primary Simple Arithmetic Expression</em>}</li>
 *   <li>{@link jpaqldsl.jPAQLDsl.impl.FunctionsReturningStringsImpl#getSecondarySimpleArithmeticExpression <em>Secondary Simple Arithmetic Expression</em>}</li>
 *   <li>{@link jpaqldsl.jPAQLDsl.impl.FunctionsReturningStringsImpl#getTrimSpecification <em>Trim Specification</em>}</li>
 *   <li>{@link jpaqldsl.jPAQLDsl.impl.FunctionsReturningStringsImpl#getTrimCharacter <em>Trim Character</em>}</li>
 * </ul>
 *
 * @generated
 */
public class FunctionsReturningStringsImpl extends MinimalEObjectImpl.Container implements FunctionsReturningStrings
{
  /**
   * The cached value of the '{@link #getPrimaryStringPrimary() <em>Primary String Primary</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPrimaryStringPrimary()
   * @generated
   * @ordered
   */
  protected StringPrimary primaryStringPrimary;

  /**
   * The cached value of the '{@link #getSecondaryStringPrimary() <em>Secondary String Primary</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSecondaryStringPrimary()
   * @generated
   * @ordered
   */
  protected StringPrimary secondaryStringPrimary;

  /**
   * The cached value of the '{@link #getStringPrimary() <em>String Primary</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStringPrimary()
   * @generated
   * @ordered
   */
  protected StringPrimary stringPrimary;

  /**
   * The cached value of the '{@link #getPrimarySimpleArithmeticExpression() <em>Primary Simple Arithmetic Expression</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPrimarySimpleArithmeticExpression()
   * @generated
   * @ordered
   */
  protected Expression primarySimpleArithmeticExpression;

  /**
   * The cached value of the '{@link #getSecondarySimpleArithmeticExpression() <em>Secondary Simple Arithmetic Expression</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSecondarySimpleArithmeticExpression()
   * @generated
   * @ordered
   */
  protected Expression secondarySimpleArithmeticExpression;

  /**
   * The default value of the '{@link #getTrimSpecification() <em>Trim Specification</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTrimSpecification()
   * @generated
   * @ordered
   */
  protected static final String TRIM_SPECIFICATION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getTrimSpecification() <em>Trim Specification</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTrimSpecification()
   * @generated
   * @ordered
   */
  protected String trimSpecification = TRIM_SPECIFICATION_EDEFAULT;

  /**
   * The cached value of the '{@link #getTrimCharacter() <em>Trim Character</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTrimCharacter()
   * @generated
   * @ordered
   */
  protected TrimCharacter trimCharacter;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected FunctionsReturningStringsImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return JPAQLDslPackage.Literals.FUNCTIONS_RETURNING_STRINGS;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public StringPrimary getPrimaryStringPrimary()
  {
    return primaryStringPrimary;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetPrimaryStringPrimary(StringPrimary newPrimaryStringPrimary, NotificationChain msgs)
  {
    StringPrimary oldPrimaryStringPrimary = primaryStringPrimary;
    primaryStringPrimary = newPrimaryStringPrimary;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, JPAQLDslPackage.FUNCTIONS_RETURNING_STRINGS__PRIMARY_STRING_PRIMARY, oldPrimaryStringPrimary, newPrimaryStringPrimary);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPrimaryStringPrimary(StringPrimary newPrimaryStringPrimary)
  {
    if (newPrimaryStringPrimary != primaryStringPrimary)
    {
      NotificationChain msgs = null;
      if (primaryStringPrimary != null)
        msgs = ((InternalEObject)primaryStringPrimary).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - JPAQLDslPackage.FUNCTIONS_RETURNING_STRINGS__PRIMARY_STRING_PRIMARY, null, msgs);
      if (newPrimaryStringPrimary != null)
        msgs = ((InternalEObject)newPrimaryStringPrimary).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - JPAQLDslPackage.FUNCTIONS_RETURNING_STRINGS__PRIMARY_STRING_PRIMARY, null, msgs);
      msgs = basicSetPrimaryStringPrimary(newPrimaryStringPrimary, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, JPAQLDslPackage.FUNCTIONS_RETURNING_STRINGS__PRIMARY_STRING_PRIMARY, newPrimaryStringPrimary, newPrimaryStringPrimary));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public StringPrimary getSecondaryStringPrimary()
  {
    return secondaryStringPrimary;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSecondaryStringPrimary(StringPrimary newSecondaryStringPrimary, NotificationChain msgs)
  {
    StringPrimary oldSecondaryStringPrimary = secondaryStringPrimary;
    secondaryStringPrimary = newSecondaryStringPrimary;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, JPAQLDslPackage.FUNCTIONS_RETURNING_STRINGS__SECONDARY_STRING_PRIMARY, oldSecondaryStringPrimary, newSecondaryStringPrimary);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSecondaryStringPrimary(StringPrimary newSecondaryStringPrimary)
  {
    if (newSecondaryStringPrimary != secondaryStringPrimary)
    {
      NotificationChain msgs = null;
      if (secondaryStringPrimary != null)
        msgs = ((InternalEObject)secondaryStringPrimary).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - JPAQLDslPackage.FUNCTIONS_RETURNING_STRINGS__SECONDARY_STRING_PRIMARY, null, msgs);
      if (newSecondaryStringPrimary != null)
        msgs = ((InternalEObject)newSecondaryStringPrimary).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - JPAQLDslPackage.FUNCTIONS_RETURNING_STRINGS__SECONDARY_STRING_PRIMARY, null, msgs);
      msgs = basicSetSecondaryStringPrimary(newSecondaryStringPrimary, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, JPAQLDslPackage.FUNCTIONS_RETURNING_STRINGS__SECONDARY_STRING_PRIMARY, newSecondaryStringPrimary, newSecondaryStringPrimary));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public StringPrimary getStringPrimary()
  {
    return stringPrimary;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetStringPrimary(StringPrimary newStringPrimary, NotificationChain msgs)
  {
    StringPrimary oldStringPrimary = stringPrimary;
    stringPrimary = newStringPrimary;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, JPAQLDslPackage.FUNCTIONS_RETURNING_STRINGS__STRING_PRIMARY, oldStringPrimary, newStringPrimary);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setStringPrimary(StringPrimary newStringPrimary)
  {
    if (newStringPrimary != stringPrimary)
    {
      NotificationChain msgs = null;
      if (stringPrimary != null)
        msgs = ((InternalEObject)stringPrimary).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - JPAQLDslPackage.FUNCTIONS_RETURNING_STRINGS__STRING_PRIMARY, null, msgs);
      if (newStringPrimary != null)
        msgs = ((InternalEObject)newStringPrimary).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - JPAQLDslPackage.FUNCTIONS_RETURNING_STRINGS__STRING_PRIMARY, null, msgs);
      msgs = basicSetStringPrimary(newStringPrimary, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, JPAQLDslPackage.FUNCTIONS_RETURNING_STRINGS__STRING_PRIMARY, newStringPrimary, newStringPrimary));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Expression getPrimarySimpleArithmeticExpression()
  {
    return primarySimpleArithmeticExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetPrimarySimpleArithmeticExpression(Expression newPrimarySimpleArithmeticExpression, NotificationChain msgs)
  {
    Expression oldPrimarySimpleArithmeticExpression = primarySimpleArithmeticExpression;
    primarySimpleArithmeticExpression = newPrimarySimpleArithmeticExpression;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, JPAQLDslPackage.FUNCTIONS_RETURNING_STRINGS__PRIMARY_SIMPLE_ARITHMETIC_EXPRESSION, oldPrimarySimpleArithmeticExpression, newPrimarySimpleArithmeticExpression);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPrimarySimpleArithmeticExpression(Expression newPrimarySimpleArithmeticExpression)
  {
    if (newPrimarySimpleArithmeticExpression != primarySimpleArithmeticExpression)
    {
      NotificationChain msgs = null;
      if (primarySimpleArithmeticExpression != null)
        msgs = ((InternalEObject)primarySimpleArithmeticExpression).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - JPAQLDslPackage.FUNCTIONS_RETURNING_STRINGS__PRIMARY_SIMPLE_ARITHMETIC_EXPRESSION, null, msgs);
      if (newPrimarySimpleArithmeticExpression != null)
        msgs = ((InternalEObject)newPrimarySimpleArithmeticExpression).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - JPAQLDslPackage.FUNCTIONS_RETURNING_STRINGS__PRIMARY_SIMPLE_ARITHMETIC_EXPRESSION, null, msgs);
      msgs = basicSetPrimarySimpleArithmeticExpression(newPrimarySimpleArithmeticExpression, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, JPAQLDslPackage.FUNCTIONS_RETURNING_STRINGS__PRIMARY_SIMPLE_ARITHMETIC_EXPRESSION, newPrimarySimpleArithmeticExpression, newPrimarySimpleArithmeticExpression));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Expression getSecondarySimpleArithmeticExpression()
  {
    return secondarySimpleArithmeticExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSecondarySimpleArithmeticExpression(Expression newSecondarySimpleArithmeticExpression, NotificationChain msgs)
  {
    Expression oldSecondarySimpleArithmeticExpression = secondarySimpleArithmeticExpression;
    secondarySimpleArithmeticExpression = newSecondarySimpleArithmeticExpression;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, JPAQLDslPackage.FUNCTIONS_RETURNING_STRINGS__SECONDARY_SIMPLE_ARITHMETIC_EXPRESSION, oldSecondarySimpleArithmeticExpression, newSecondarySimpleArithmeticExpression);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSecondarySimpleArithmeticExpression(Expression newSecondarySimpleArithmeticExpression)
  {
    if (newSecondarySimpleArithmeticExpression != secondarySimpleArithmeticExpression)
    {
      NotificationChain msgs = null;
      if (secondarySimpleArithmeticExpression != null)
        msgs = ((InternalEObject)secondarySimpleArithmeticExpression).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - JPAQLDslPackage.FUNCTIONS_RETURNING_STRINGS__SECONDARY_SIMPLE_ARITHMETIC_EXPRESSION, null, msgs);
      if (newSecondarySimpleArithmeticExpression != null)
        msgs = ((InternalEObject)newSecondarySimpleArithmeticExpression).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - JPAQLDslPackage.FUNCTIONS_RETURNING_STRINGS__SECONDARY_SIMPLE_ARITHMETIC_EXPRESSION, null, msgs);
      msgs = basicSetSecondarySimpleArithmeticExpression(newSecondarySimpleArithmeticExpression, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, JPAQLDslPackage.FUNCTIONS_RETURNING_STRINGS__SECONDARY_SIMPLE_ARITHMETIC_EXPRESSION, newSecondarySimpleArithmeticExpression, newSecondarySimpleArithmeticExpression));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getTrimSpecification()
  {
    return trimSpecification;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setTrimSpecification(String newTrimSpecification)
  {
    String oldTrimSpecification = trimSpecification;
    trimSpecification = newTrimSpecification;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, JPAQLDslPackage.FUNCTIONS_RETURNING_STRINGS__TRIM_SPECIFICATION, oldTrimSpecification, trimSpecification));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public TrimCharacter getTrimCharacter()
  {
    return trimCharacter;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetTrimCharacter(TrimCharacter newTrimCharacter, NotificationChain msgs)
  {
    TrimCharacter oldTrimCharacter = trimCharacter;
    trimCharacter = newTrimCharacter;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, JPAQLDslPackage.FUNCTIONS_RETURNING_STRINGS__TRIM_CHARACTER, oldTrimCharacter, newTrimCharacter);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setTrimCharacter(TrimCharacter newTrimCharacter)
  {
    if (newTrimCharacter != trimCharacter)
    {
      NotificationChain msgs = null;
      if (trimCharacter != null)
        msgs = ((InternalEObject)trimCharacter).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - JPAQLDslPackage.FUNCTIONS_RETURNING_STRINGS__TRIM_CHARACTER, null, msgs);
      if (newTrimCharacter != null)
        msgs = ((InternalEObject)newTrimCharacter).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - JPAQLDslPackage.FUNCTIONS_RETURNING_STRINGS__TRIM_CHARACTER, null, msgs);
      msgs = basicSetTrimCharacter(newTrimCharacter, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, JPAQLDslPackage.FUNCTIONS_RETURNING_STRINGS__TRIM_CHARACTER, newTrimCharacter, newTrimCharacter));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case JPAQLDslPackage.FUNCTIONS_RETURNING_STRINGS__PRIMARY_STRING_PRIMARY:
        return basicSetPrimaryStringPrimary(null, msgs);
      case JPAQLDslPackage.FUNCTIONS_RETURNING_STRINGS__SECONDARY_STRING_PRIMARY:
        return basicSetSecondaryStringPrimary(null, msgs);
      case JPAQLDslPackage.FUNCTIONS_RETURNING_STRINGS__STRING_PRIMARY:
        return basicSetStringPrimary(null, msgs);
      case JPAQLDslPackage.FUNCTIONS_RETURNING_STRINGS__PRIMARY_SIMPLE_ARITHMETIC_EXPRESSION:
        return basicSetPrimarySimpleArithmeticExpression(null, msgs);
      case JPAQLDslPackage.FUNCTIONS_RETURNING_STRINGS__SECONDARY_SIMPLE_ARITHMETIC_EXPRESSION:
        return basicSetSecondarySimpleArithmeticExpression(null, msgs);
      case JPAQLDslPackage.FUNCTIONS_RETURNING_STRINGS__TRIM_CHARACTER:
        return basicSetTrimCharacter(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case JPAQLDslPackage.FUNCTIONS_RETURNING_STRINGS__PRIMARY_STRING_PRIMARY:
        return getPrimaryStringPrimary();
      case JPAQLDslPackage.FUNCTIONS_RETURNING_STRINGS__SECONDARY_STRING_PRIMARY:
        return getSecondaryStringPrimary();
      case JPAQLDslPackage.FUNCTIONS_RETURNING_STRINGS__STRING_PRIMARY:
        return getStringPrimary();
      case JPAQLDslPackage.FUNCTIONS_RETURNING_STRINGS__PRIMARY_SIMPLE_ARITHMETIC_EXPRESSION:
        return getPrimarySimpleArithmeticExpression();
      case JPAQLDslPackage.FUNCTIONS_RETURNING_STRINGS__SECONDARY_SIMPLE_ARITHMETIC_EXPRESSION:
        return getSecondarySimpleArithmeticExpression();
      case JPAQLDslPackage.FUNCTIONS_RETURNING_STRINGS__TRIM_SPECIFICATION:
        return getTrimSpecification();
      case JPAQLDslPackage.FUNCTIONS_RETURNING_STRINGS__TRIM_CHARACTER:
        return getTrimCharacter();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case JPAQLDslPackage.FUNCTIONS_RETURNING_STRINGS__PRIMARY_STRING_PRIMARY:
        setPrimaryStringPrimary((StringPrimary)newValue);
        return;
      case JPAQLDslPackage.FUNCTIONS_RETURNING_STRINGS__SECONDARY_STRING_PRIMARY:
        setSecondaryStringPrimary((StringPrimary)newValue);
        return;
      case JPAQLDslPackage.FUNCTIONS_RETURNING_STRINGS__STRING_PRIMARY:
        setStringPrimary((StringPrimary)newValue);
        return;
      case JPAQLDslPackage.FUNCTIONS_RETURNING_STRINGS__PRIMARY_SIMPLE_ARITHMETIC_EXPRESSION:
        setPrimarySimpleArithmeticExpression((Expression)newValue);
        return;
      case JPAQLDslPackage.FUNCTIONS_RETURNING_STRINGS__SECONDARY_SIMPLE_ARITHMETIC_EXPRESSION:
        setSecondarySimpleArithmeticExpression((Expression)newValue);
        return;
      case JPAQLDslPackage.FUNCTIONS_RETURNING_STRINGS__TRIM_SPECIFICATION:
        setTrimSpecification((String)newValue);
        return;
      case JPAQLDslPackage.FUNCTIONS_RETURNING_STRINGS__TRIM_CHARACTER:
        setTrimCharacter((TrimCharacter)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case JPAQLDslPackage.FUNCTIONS_RETURNING_STRINGS__PRIMARY_STRING_PRIMARY:
        setPrimaryStringPrimary((StringPrimary)null);
        return;
      case JPAQLDslPackage.FUNCTIONS_RETURNING_STRINGS__SECONDARY_STRING_PRIMARY:
        setSecondaryStringPrimary((StringPrimary)null);
        return;
      case JPAQLDslPackage.FUNCTIONS_RETURNING_STRINGS__STRING_PRIMARY:
        setStringPrimary((StringPrimary)null);
        return;
      case JPAQLDslPackage.FUNCTIONS_RETURNING_STRINGS__PRIMARY_SIMPLE_ARITHMETIC_EXPRESSION:
        setPrimarySimpleArithmeticExpression((Expression)null);
        return;
      case JPAQLDslPackage.FUNCTIONS_RETURNING_STRINGS__SECONDARY_SIMPLE_ARITHMETIC_EXPRESSION:
        setSecondarySimpleArithmeticExpression((Expression)null);
        return;
      case JPAQLDslPackage.FUNCTIONS_RETURNING_STRINGS__TRIM_SPECIFICATION:
        setTrimSpecification(TRIM_SPECIFICATION_EDEFAULT);
        return;
      case JPAQLDslPackage.FUNCTIONS_RETURNING_STRINGS__TRIM_CHARACTER:
        setTrimCharacter((TrimCharacter)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case JPAQLDslPackage.FUNCTIONS_RETURNING_STRINGS__PRIMARY_STRING_PRIMARY:
        return primaryStringPrimary != null;
      case JPAQLDslPackage.FUNCTIONS_RETURNING_STRINGS__SECONDARY_STRING_PRIMARY:
        return secondaryStringPrimary != null;
      case JPAQLDslPackage.FUNCTIONS_RETURNING_STRINGS__STRING_PRIMARY:
        return stringPrimary != null;
      case JPAQLDslPackage.FUNCTIONS_RETURNING_STRINGS__PRIMARY_SIMPLE_ARITHMETIC_EXPRESSION:
        return primarySimpleArithmeticExpression != null;
      case JPAQLDslPackage.FUNCTIONS_RETURNING_STRINGS__SECONDARY_SIMPLE_ARITHMETIC_EXPRESSION:
        return secondarySimpleArithmeticExpression != null;
      case JPAQLDslPackage.FUNCTIONS_RETURNING_STRINGS__TRIM_SPECIFICATION:
        return TRIM_SPECIFICATION_EDEFAULT == null ? trimSpecification != null : !TRIM_SPECIFICATION_EDEFAULT.equals(trimSpecification);
      case JPAQLDslPackage.FUNCTIONS_RETURNING_STRINGS__TRIM_CHARACTER:
        return trimCharacter != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (trimSpecification: ");
    result.append(trimSpecification);
    result.append(')');
    return result.toString();
  }

} //FunctionsReturningStringsImpl
