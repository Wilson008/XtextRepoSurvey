/**
 * generated by Xtext 2.35.0
 */
package jpaqldsl.jPAQLDsl.impl;

import jpaqldsl.jPAQLDsl.JPAQLDslPackage;
import jpaqldsl.jPAQLDsl.SimpleSelectClause;
import jpaqldsl.jPAQLDsl.SimpleSelectExpression;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Simple Select Clause</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link jpaqldsl.jPAQLDsl.impl.SimpleSelectClauseImpl#getSimpleSelectExpression <em>Simple Select Expression</em>}</li>
 * </ul>
 *
 * @generated
 */
public class SimpleSelectClauseImpl extends MinimalEObjectImpl.Container implements SimpleSelectClause
{
  /**
   * The cached value of the '{@link #getSimpleSelectExpression() <em>Simple Select Expression</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSimpleSelectExpression()
   * @generated
   * @ordered
   */
  protected SimpleSelectExpression simpleSelectExpression;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SimpleSelectClauseImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return JPAQLDslPackage.Literals.SIMPLE_SELECT_CLAUSE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SimpleSelectExpression getSimpleSelectExpression()
  {
    return simpleSelectExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSimpleSelectExpression(SimpleSelectExpression newSimpleSelectExpression, NotificationChain msgs)
  {
    SimpleSelectExpression oldSimpleSelectExpression = simpleSelectExpression;
    simpleSelectExpression = newSimpleSelectExpression;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, JPAQLDslPackage.SIMPLE_SELECT_CLAUSE__SIMPLE_SELECT_EXPRESSION, oldSimpleSelectExpression, newSimpleSelectExpression);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSimpleSelectExpression(SimpleSelectExpression newSimpleSelectExpression)
  {
    if (newSimpleSelectExpression != simpleSelectExpression)
    {
      NotificationChain msgs = null;
      if (simpleSelectExpression != null)
        msgs = ((InternalEObject)simpleSelectExpression).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - JPAQLDslPackage.SIMPLE_SELECT_CLAUSE__SIMPLE_SELECT_EXPRESSION, null, msgs);
      if (newSimpleSelectExpression != null)
        msgs = ((InternalEObject)newSimpleSelectExpression).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - JPAQLDslPackage.SIMPLE_SELECT_CLAUSE__SIMPLE_SELECT_EXPRESSION, null, msgs);
      msgs = basicSetSimpleSelectExpression(newSimpleSelectExpression, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, JPAQLDslPackage.SIMPLE_SELECT_CLAUSE__SIMPLE_SELECT_EXPRESSION, newSimpleSelectExpression, newSimpleSelectExpression));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case JPAQLDslPackage.SIMPLE_SELECT_CLAUSE__SIMPLE_SELECT_EXPRESSION:
        return basicSetSimpleSelectExpression(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case JPAQLDslPackage.SIMPLE_SELECT_CLAUSE__SIMPLE_SELECT_EXPRESSION:
        return getSimpleSelectExpression();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case JPAQLDslPackage.SIMPLE_SELECT_CLAUSE__SIMPLE_SELECT_EXPRESSION:
        setSimpleSelectExpression((SimpleSelectExpression)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case JPAQLDslPackage.SIMPLE_SELECT_CLAUSE__SIMPLE_SELECT_EXPRESSION:
        setSimpleSelectExpression((SimpleSelectExpression)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case JPAQLDslPackage.SIMPLE_SELECT_CLAUSE__SIMPLE_SELECT_EXPRESSION:
        return simpleSelectExpression != null;
    }
    return super.eIsSet(featureID);
  }

} //SimpleSelectClauseImpl
