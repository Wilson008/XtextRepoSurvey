/**
 * generated by Xtext 2.35.0
 */
package jpaqldsl.jPAQLDsl.impl;

import jpaqldsl.jPAQLDsl.AllOrAnyExpression;
import jpaqldsl.jPAQLDsl.ArithmeticExpression;
import jpaqldsl.jPAQLDsl.BooleanExpression;
import jpaqldsl.jPAQLDsl.ComparisonExpression;
import jpaqldsl.jPAQLDsl.DateTimeExpression;
import jpaqldsl.jPAQLDsl.EntityExpression;
import jpaqldsl.jPAQLDsl.EnumExpression;
import jpaqldsl.jPAQLDsl.JPAQLDslPackage;
import jpaqldsl.jPAQLDsl.StringExpression;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Comparison Expression</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link jpaqldsl.jPAQLDsl.impl.ComparisonExpressionImpl#getPrimaryStringExpression <em>Primary String Expression</em>}</li>
 *   <li>{@link jpaqldsl.jPAQLDsl.impl.ComparisonExpressionImpl#getComparisonOperator <em>Comparison Operator</em>}</li>
 *   <li>{@link jpaqldsl.jPAQLDsl.impl.ComparisonExpressionImpl#getSecondaryStringExpression <em>Secondary String Expression</em>}</li>
 *   <li>{@link jpaqldsl.jPAQLDsl.impl.ComparisonExpressionImpl#getAllOrAnyExpression <em>All Or Any Expression</em>}</li>
 *   <li>{@link jpaqldsl.jPAQLDsl.impl.ComparisonExpressionImpl#getPrimaryBooleanExpression <em>Primary Boolean Expression</em>}</li>
 *   <li>{@link jpaqldsl.jPAQLDsl.impl.ComparisonExpressionImpl#getSecondaryBooleanExpression <em>Secondary Boolean Expression</em>}</li>
 *   <li>{@link jpaqldsl.jPAQLDsl.impl.ComparisonExpressionImpl#getPrimaryEnumExpression <em>Primary Enum Expression</em>}</li>
 *   <li>{@link jpaqldsl.jPAQLDsl.impl.ComparisonExpressionImpl#getSecondaryEnumExpression <em>Secondary Enum Expression</em>}</li>
 *   <li>{@link jpaqldsl.jPAQLDsl.impl.ComparisonExpressionImpl#getPrimaryDatetimeExpression <em>Primary Datetime Expression</em>}</li>
 *   <li>{@link jpaqldsl.jPAQLDsl.impl.ComparisonExpressionImpl#getSecondaryDatetimeExpression <em>Secondary Datetime Expression</em>}</li>
 *   <li>{@link jpaqldsl.jPAQLDsl.impl.ComparisonExpressionImpl#getPrimaryEntityExpression <em>Primary Entity Expression</em>}</li>
 *   <li>{@link jpaqldsl.jPAQLDsl.impl.ComparisonExpressionImpl#getSecondaryEntityExpression <em>Secondary Entity Expression</em>}</li>
 *   <li>{@link jpaqldsl.jPAQLDsl.impl.ComparisonExpressionImpl#getPrimaryArithmeticExpression <em>Primary Arithmetic Expression</em>}</li>
 *   <li>{@link jpaqldsl.jPAQLDsl.impl.ComparisonExpressionImpl#getSecondaryArithmeticExpression <em>Secondary Arithmetic Expression</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ComparisonExpressionImpl extends MinimalEObjectImpl.Container implements ComparisonExpression
{
  /**
   * The cached value of the '{@link #getPrimaryStringExpression() <em>Primary String Expression</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPrimaryStringExpression()
   * @generated
   * @ordered
   */
  protected StringExpression primaryStringExpression;

  /**
   * The default value of the '{@link #getComparisonOperator() <em>Comparison Operator</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getComparisonOperator()
   * @generated
   * @ordered
   */
  protected static final String COMPARISON_OPERATOR_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getComparisonOperator() <em>Comparison Operator</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getComparisonOperator()
   * @generated
   * @ordered
   */
  protected String comparisonOperator = COMPARISON_OPERATOR_EDEFAULT;

  /**
   * The cached value of the '{@link #getSecondaryStringExpression() <em>Secondary String Expression</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSecondaryStringExpression()
   * @generated
   * @ordered
   */
  protected StringExpression secondaryStringExpression;

  /**
   * The cached value of the '{@link #getAllOrAnyExpression() <em>All Or Any Expression</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAllOrAnyExpression()
   * @generated
   * @ordered
   */
  protected AllOrAnyExpression allOrAnyExpression;

  /**
   * The cached value of the '{@link #getPrimaryBooleanExpression() <em>Primary Boolean Expression</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPrimaryBooleanExpression()
   * @generated
   * @ordered
   */
  protected BooleanExpression primaryBooleanExpression;

  /**
   * The cached value of the '{@link #getSecondaryBooleanExpression() <em>Secondary Boolean Expression</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSecondaryBooleanExpression()
   * @generated
   * @ordered
   */
  protected BooleanExpression secondaryBooleanExpression;

  /**
   * The cached value of the '{@link #getPrimaryEnumExpression() <em>Primary Enum Expression</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPrimaryEnumExpression()
   * @generated
   * @ordered
   */
  protected EnumExpression primaryEnumExpression;

  /**
   * The cached value of the '{@link #getSecondaryEnumExpression() <em>Secondary Enum Expression</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSecondaryEnumExpression()
   * @generated
   * @ordered
   */
  protected EnumExpression secondaryEnumExpression;

  /**
   * The cached value of the '{@link #getPrimaryDatetimeExpression() <em>Primary Datetime Expression</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPrimaryDatetimeExpression()
   * @generated
   * @ordered
   */
  protected DateTimeExpression primaryDatetimeExpression;

  /**
   * The cached value of the '{@link #getSecondaryDatetimeExpression() <em>Secondary Datetime Expression</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSecondaryDatetimeExpression()
   * @generated
   * @ordered
   */
  protected DateTimeExpression secondaryDatetimeExpression;

  /**
   * The cached value of the '{@link #getPrimaryEntityExpression() <em>Primary Entity Expression</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPrimaryEntityExpression()
   * @generated
   * @ordered
   */
  protected EntityExpression primaryEntityExpression;

  /**
   * The cached value of the '{@link #getSecondaryEntityExpression() <em>Secondary Entity Expression</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSecondaryEntityExpression()
   * @generated
   * @ordered
   */
  protected EntityExpression secondaryEntityExpression;

  /**
   * The cached value of the '{@link #getPrimaryArithmeticExpression() <em>Primary Arithmetic Expression</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPrimaryArithmeticExpression()
   * @generated
   * @ordered
   */
  protected ArithmeticExpression primaryArithmeticExpression;

  /**
   * The cached value of the '{@link #getSecondaryArithmeticExpression() <em>Secondary Arithmetic Expression</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSecondaryArithmeticExpression()
   * @generated
   * @ordered
   */
  protected ArithmeticExpression secondaryArithmeticExpression;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ComparisonExpressionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return JPAQLDslPackage.Literals.COMPARISON_EXPRESSION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public StringExpression getPrimaryStringExpression()
  {
    return primaryStringExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetPrimaryStringExpression(StringExpression newPrimaryStringExpression, NotificationChain msgs)
  {
    StringExpression oldPrimaryStringExpression = primaryStringExpression;
    primaryStringExpression = newPrimaryStringExpression;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, JPAQLDslPackage.COMPARISON_EXPRESSION__PRIMARY_STRING_EXPRESSION, oldPrimaryStringExpression, newPrimaryStringExpression);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPrimaryStringExpression(StringExpression newPrimaryStringExpression)
  {
    if (newPrimaryStringExpression != primaryStringExpression)
    {
      NotificationChain msgs = null;
      if (primaryStringExpression != null)
        msgs = ((InternalEObject)primaryStringExpression).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - JPAQLDslPackage.COMPARISON_EXPRESSION__PRIMARY_STRING_EXPRESSION, null, msgs);
      if (newPrimaryStringExpression != null)
        msgs = ((InternalEObject)newPrimaryStringExpression).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - JPAQLDslPackage.COMPARISON_EXPRESSION__PRIMARY_STRING_EXPRESSION, null, msgs);
      msgs = basicSetPrimaryStringExpression(newPrimaryStringExpression, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, JPAQLDslPackage.COMPARISON_EXPRESSION__PRIMARY_STRING_EXPRESSION, newPrimaryStringExpression, newPrimaryStringExpression));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getComparisonOperator()
  {
    return comparisonOperator;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setComparisonOperator(String newComparisonOperator)
  {
    String oldComparisonOperator = comparisonOperator;
    comparisonOperator = newComparisonOperator;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, JPAQLDslPackage.COMPARISON_EXPRESSION__COMPARISON_OPERATOR, oldComparisonOperator, comparisonOperator));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public StringExpression getSecondaryStringExpression()
  {
    return secondaryStringExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSecondaryStringExpression(StringExpression newSecondaryStringExpression, NotificationChain msgs)
  {
    StringExpression oldSecondaryStringExpression = secondaryStringExpression;
    secondaryStringExpression = newSecondaryStringExpression;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, JPAQLDslPackage.COMPARISON_EXPRESSION__SECONDARY_STRING_EXPRESSION, oldSecondaryStringExpression, newSecondaryStringExpression);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSecondaryStringExpression(StringExpression newSecondaryStringExpression)
  {
    if (newSecondaryStringExpression != secondaryStringExpression)
    {
      NotificationChain msgs = null;
      if (secondaryStringExpression != null)
        msgs = ((InternalEObject)secondaryStringExpression).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - JPAQLDslPackage.COMPARISON_EXPRESSION__SECONDARY_STRING_EXPRESSION, null, msgs);
      if (newSecondaryStringExpression != null)
        msgs = ((InternalEObject)newSecondaryStringExpression).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - JPAQLDslPackage.COMPARISON_EXPRESSION__SECONDARY_STRING_EXPRESSION, null, msgs);
      msgs = basicSetSecondaryStringExpression(newSecondaryStringExpression, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, JPAQLDslPackage.COMPARISON_EXPRESSION__SECONDARY_STRING_EXPRESSION, newSecondaryStringExpression, newSecondaryStringExpression));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AllOrAnyExpression getAllOrAnyExpression()
  {
    return allOrAnyExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetAllOrAnyExpression(AllOrAnyExpression newAllOrAnyExpression, NotificationChain msgs)
  {
    AllOrAnyExpression oldAllOrAnyExpression = allOrAnyExpression;
    allOrAnyExpression = newAllOrAnyExpression;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, JPAQLDslPackage.COMPARISON_EXPRESSION__ALL_OR_ANY_EXPRESSION, oldAllOrAnyExpression, newAllOrAnyExpression);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAllOrAnyExpression(AllOrAnyExpression newAllOrAnyExpression)
  {
    if (newAllOrAnyExpression != allOrAnyExpression)
    {
      NotificationChain msgs = null;
      if (allOrAnyExpression != null)
        msgs = ((InternalEObject)allOrAnyExpression).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - JPAQLDslPackage.COMPARISON_EXPRESSION__ALL_OR_ANY_EXPRESSION, null, msgs);
      if (newAllOrAnyExpression != null)
        msgs = ((InternalEObject)newAllOrAnyExpression).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - JPAQLDslPackage.COMPARISON_EXPRESSION__ALL_OR_ANY_EXPRESSION, null, msgs);
      msgs = basicSetAllOrAnyExpression(newAllOrAnyExpression, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, JPAQLDslPackage.COMPARISON_EXPRESSION__ALL_OR_ANY_EXPRESSION, newAllOrAnyExpression, newAllOrAnyExpression));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BooleanExpression getPrimaryBooleanExpression()
  {
    return primaryBooleanExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetPrimaryBooleanExpression(BooleanExpression newPrimaryBooleanExpression, NotificationChain msgs)
  {
    BooleanExpression oldPrimaryBooleanExpression = primaryBooleanExpression;
    primaryBooleanExpression = newPrimaryBooleanExpression;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, JPAQLDslPackage.COMPARISON_EXPRESSION__PRIMARY_BOOLEAN_EXPRESSION, oldPrimaryBooleanExpression, newPrimaryBooleanExpression);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPrimaryBooleanExpression(BooleanExpression newPrimaryBooleanExpression)
  {
    if (newPrimaryBooleanExpression != primaryBooleanExpression)
    {
      NotificationChain msgs = null;
      if (primaryBooleanExpression != null)
        msgs = ((InternalEObject)primaryBooleanExpression).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - JPAQLDslPackage.COMPARISON_EXPRESSION__PRIMARY_BOOLEAN_EXPRESSION, null, msgs);
      if (newPrimaryBooleanExpression != null)
        msgs = ((InternalEObject)newPrimaryBooleanExpression).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - JPAQLDslPackage.COMPARISON_EXPRESSION__PRIMARY_BOOLEAN_EXPRESSION, null, msgs);
      msgs = basicSetPrimaryBooleanExpression(newPrimaryBooleanExpression, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, JPAQLDslPackage.COMPARISON_EXPRESSION__PRIMARY_BOOLEAN_EXPRESSION, newPrimaryBooleanExpression, newPrimaryBooleanExpression));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BooleanExpression getSecondaryBooleanExpression()
  {
    return secondaryBooleanExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSecondaryBooleanExpression(BooleanExpression newSecondaryBooleanExpression, NotificationChain msgs)
  {
    BooleanExpression oldSecondaryBooleanExpression = secondaryBooleanExpression;
    secondaryBooleanExpression = newSecondaryBooleanExpression;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, JPAQLDslPackage.COMPARISON_EXPRESSION__SECONDARY_BOOLEAN_EXPRESSION, oldSecondaryBooleanExpression, newSecondaryBooleanExpression);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSecondaryBooleanExpression(BooleanExpression newSecondaryBooleanExpression)
  {
    if (newSecondaryBooleanExpression != secondaryBooleanExpression)
    {
      NotificationChain msgs = null;
      if (secondaryBooleanExpression != null)
        msgs = ((InternalEObject)secondaryBooleanExpression).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - JPAQLDslPackage.COMPARISON_EXPRESSION__SECONDARY_BOOLEAN_EXPRESSION, null, msgs);
      if (newSecondaryBooleanExpression != null)
        msgs = ((InternalEObject)newSecondaryBooleanExpression).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - JPAQLDslPackage.COMPARISON_EXPRESSION__SECONDARY_BOOLEAN_EXPRESSION, null, msgs);
      msgs = basicSetSecondaryBooleanExpression(newSecondaryBooleanExpression, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, JPAQLDslPackage.COMPARISON_EXPRESSION__SECONDARY_BOOLEAN_EXPRESSION, newSecondaryBooleanExpression, newSecondaryBooleanExpression));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EnumExpression getPrimaryEnumExpression()
  {
    return primaryEnumExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetPrimaryEnumExpression(EnumExpression newPrimaryEnumExpression, NotificationChain msgs)
  {
    EnumExpression oldPrimaryEnumExpression = primaryEnumExpression;
    primaryEnumExpression = newPrimaryEnumExpression;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, JPAQLDslPackage.COMPARISON_EXPRESSION__PRIMARY_ENUM_EXPRESSION, oldPrimaryEnumExpression, newPrimaryEnumExpression);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPrimaryEnumExpression(EnumExpression newPrimaryEnumExpression)
  {
    if (newPrimaryEnumExpression != primaryEnumExpression)
    {
      NotificationChain msgs = null;
      if (primaryEnumExpression != null)
        msgs = ((InternalEObject)primaryEnumExpression).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - JPAQLDslPackage.COMPARISON_EXPRESSION__PRIMARY_ENUM_EXPRESSION, null, msgs);
      if (newPrimaryEnumExpression != null)
        msgs = ((InternalEObject)newPrimaryEnumExpression).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - JPAQLDslPackage.COMPARISON_EXPRESSION__PRIMARY_ENUM_EXPRESSION, null, msgs);
      msgs = basicSetPrimaryEnumExpression(newPrimaryEnumExpression, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, JPAQLDslPackage.COMPARISON_EXPRESSION__PRIMARY_ENUM_EXPRESSION, newPrimaryEnumExpression, newPrimaryEnumExpression));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EnumExpression getSecondaryEnumExpression()
  {
    return secondaryEnumExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSecondaryEnumExpression(EnumExpression newSecondaryEnumExpression, NotificationChain msgs)
  {
    EnumExpression oldSecondaryEnumExpression = secondaryEnumExpression;
    secondaryEnumExpression = newSecondaryEnumExpression;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, JPAQLDslPackage.COMPARISON_EXPRESSION__SECONDARY_ENUM_EXPRESSION, oldSecondaryEnumExpression, newSecondaryEnumExpression);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSecondaryEnumExpression(EnumExpression newSecondaryEnumExpression)
  {
    if (newSecondaryEnumExpression != secondaryEnumExpression)
    {
      NotificationChain msgs = null;
      if (secondaryEnumExpression != null)
        msgs = ((InternalEObject)secondaryEnumExpression).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - JPAQLDslPackage.COMPARISON_EXPRESSION__SECONDARY_ENUM_EXPRESSION, null, msgs);
      if (newSecondaryEnumExpression != null)
        msgs = ((InternalEObject)newSecondaryEnumExpression).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - JPAQLDslPackage.COMPARISON_EXPRESSION__SECONDARY_ENUM_EXPRESSION, null, msgs);
      msgs = basicSetSecondaryEnumExpression(newSecondaryEnumExpression, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, JPAQLDslPackage.COMPARISON_EXPRESSION__SECONDARY_ENUM_EXPRESSION, newSecondaryEnumExpression, newSecondaryEnumExpression));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DateTimeExpression getPrimaryDatetimeExpression()
  {
    return primaryDatetimeExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetPrimaryDatetimeExpression(DateTimeExpression newPrimaryDatetimeExpression, NotificationChain msgs)
  {
    DateTimeExpression oldPrimaryDatetimeExpression = primaryDatetimeExpression;
    primaryDatetimeExpression = newPrimaryDatetimeExpression;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, JPAQLDslPackage.COMPARISON_EXPRESSION__PRIMARY_DATETIME_EXPRESSION, oldPrimaryDatetimeExpression, newPrimaryDatetimeExpression);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPrimaryDatetimeExpression(DateTimeExpression newPrimaryDatetimeExpression)
  {
    if (newPrimaryDatetimeExpression != primaryDatetimeExpression)
    {
      NotificationChain msgs = null;
      if (primaryDatetimeExpression != null)
        msgs = ((InternalEObject)primaryDatetimeExpression).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - JPAQLDslPackage.COMPARISON_EXPRESSION__PRIMARY_DATETIME_EXPRESSION, null, msgs);
      if (newPrimaryDatetimeExpression != null)
        msgs = ((InternalEObject)newPrimaryDatetimeExpression).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - JPAQLDslPackage.COMPARISON_EXPRESSION__PRIMARY_DATETIME_EXPRESSION, null, msgs);
      msgs = basicSetPrimaryDatetimeExpression(newPrimaryDatetimeExpression, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, JPAQLDslPackage.COMPARISON_EXPRESSION__PRIMARY_DATETIME_EXPRESSION, newPrimaryDatetimeExpression, newPrimaryDatetimeExpression));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DateTimeExpression getSecondaryDatetimeExpression()
  {
    return secondaryDatetimeExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSecondaryDatetimeExpression(DateTimeExpression newSecondaryDatetimeExpression, NotificationChain msgs)
  {
    DateTimeExpression oldSecondaryDatetimeExpression = secondaryDatetimeExpression;
    secondaryDatetimeExpression = newSecondaryDatetimeExpression;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, JPAQLDslPackage.COMPARISON_EXPRESSION__SECONDARY_DATETIME_EXPRESSION, oldSecondaryDatetimeExpression, newSecondaryDatetimeExpression);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSecondaryDatetimeExpression(DateTimeExpression newSecondaryDatetimeExpression)
  {
    if (newSecondaryDatetimeExpression != secondaryDatetimeExpression)
    {
      NotificationChain msgs = null;
      if (secondaryDatetimeExpression != null)
        msgs = ((InternalEObject)secondaryDatetimeExpression).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - JPAQLDslPackage.COMPARISON_EXPRESSION__SECONDARY_DATETIME_EXPRESSION, null, msgs);
      if (newSecondaryDatetimeExpression != null)
        msgs = ((InternalEObject)newSecondaryDatetimeExpression).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - JPAQLDslPackage.COMPARISON_EXPRESSION__SECONDARY_DATETIME_EXPRESSION, null, msgs);
      msgs = basicSetSecondaryDatetimeExpression(newSecondaryDatetimeExpression, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, JPAQLDslPackage.COMPARISON_EXPRESSION__SECONDARY_DATETIME_EXPRESSION, newSecondaryDatetimeExpression, newSecondaryDatetimeExpression));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EntityExpression getPrimaryEntityExpression()
  {
    return primaryEntityExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetPrimaryEntityExpression(EntityExpression newPrimaryEntityExpression, NotificationChain msgs)
  {
    EntityExpression oldPrimaryEntityExpression = primaryEntityExpression;
    primaryEntityExpression = newPrimaryEntityExpression;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, JPAQLDslPackage.COMPARISON_EXPRESSION__PRIMARY_ENTITY_EXPRESSION, oldPrimaryEntityExpression, newPrimaryEntityExpression);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPrimaryEntityExpression(EntityExpression newPrimaryEntityExpression)
  {
    if (newPrimaryEntityExpression != primaryEntityExpression)
    {
      NotificationChain msgs = null;
      if (primaryEntityExpression != null)
        msgs = ((InternalEObject)primaryEntityExpression).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - JPAQLDslPackage.COMPARISON_EXPRESSION__PRIMARY_ENTITY_EXPRESSION, null, msgs);
      if (newPrimaryEntityExpression != null)
        msgs = ((InternalEObject)newPrimaryEntityExpression).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - JPAQLDslPackage.COMPARISON_EXPRESSION__PRIMARY_ENTITY_EXPRESSION, null, msgs);
      msgs = basicSetPrimaryEntityExpression(newPrimaryEntityExpression, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, JPAQLDslPackage.COMPARISON_EXPRESSION__PRIMARY_ENTITY_EXPRESSION, newPrimaryEntityExpression, newPrimaryEntityExpression));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EntityExpression getSecondaryEntityExpression()
  {
    return secondaryEntityExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSecondaryEntityExpression(EntityExpression newSecondaryEntityExpression, NotificationChain msgs)
  {
    EntityExpression oldSecondaryEntityExpression = secondaryEntityExpression;
    secondaryEntityExpression = newSecondaryEntityExpression;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, JPAQLDslPackage.COMPARISON_EXPRESSION__SECONDARY_ENTITY_EXPRESSION, oldSecondaryEntityExpression, newSecondaryEntityExpression);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSecondaryEntityExpression(EntityExpression newSecondaryEntityExpression)
  {
    if (newSecondaryEntityExpression != secondaryEntityExpression)
    {
      NotificationChain msgs = null;
      if (secondaryEntityExpression != null)
        msgs = ((InternalEObject)secondaryEntityExpression).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - JPAQLDslPackage.COMPARISON_EXPRESSION__SECONDARY_ENTITY_EXPRESSION, null, msgs);
      if (newSecondaryEntityExpression != null)
        msgs = ((InternalEObject)newSecondaryEntityExpression).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - JPAQLDslPackage.COMPARISON_EXPRESSION__SECONDARY_ENTITY_EXPRESSION, null, msgs);
      msgs = basicSetSecondaryEntityExpression(newSecondaryEntityExpression, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, JPAQLDslPackage.COMPARISON_EXPRESSION__SECONDARY_ENTITY_EXPRESSION, newSecondaryEntityExpression, newSecondaryEntityExpression));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ArithmeticExpression getPrimaryArithmeticExpression()
  {
    return primaryArithmeticExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetPrimaryArithmeticExpression(ArithmeticExpression newPrimaryArithmeticExpression, NotificationChain msgs)
  {
    ArithmeticExpression oldPrimaryArithmeticExpression = primaryArithmeticExpression;
    primaryArithmeticExpression = newPrimaryArithmeticExpression;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, JPAQLDslPackage.COMPARISON_EXPRESSION__PRIMARY_ARITHMETIC_EXPRESSION, oldPrimaryArithmeticExpression, newPrimaryArithmeticExpression);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPrimaryArithmeticExpression(ArithmeticExpression newPrimaryArithmeticExpression)
  {
    if (newPrimaryArithmeticExpression != primaryArithmeticExpression)
    {
      NotificationChain msgs = null;
      if (primaryArithmeticExpression != null)
        msgs = ((InternalEObject)primaryArithmeticExpression).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - JPAQLDslPackage.COMPARISON_EXPRESSION__PRIMARY_ARITHMETIC_EXPRESSION, null, msgs);
      if (newPrimaryArithmeticExpression != null)
        msgs = ((InternalEObject)newPrimaryArithmeticExpression).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - JPAQLDslPackage.COMPARISON_EXPRESSION__PRIMARY_ARITHMETIC_EXPRESSION, null, msgs);
      msgs = basicSetPrimaryArithmeticExpression(newPrimaryArithmeticExpression, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, JPAQLDslPackage.COMPARISON_EXPRESSION__PRIMARY_ARITHMETIC_EXPRESSION, newPrimaryArithmeticExpression, newPrimaryArithmeticExpression));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ArithmeticExpression getSecondaryArithmeticExpression()
  {
    return secondaryArithmeticExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSecondaryArithmeticExpression(ArithmeticExpression newSecondaryArithmeticExpression, NotificationChain msgs)
  {
    ArithmeticExpression oldSecondaryArithmeticExpression = secondaryArithmeticExpression;
    secondaryArithmeticExpression = newSecondaryArithmeticExpression;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, JPAQLDslPackage.COMPARISON_EXPRESSION__SECONDARY_ARITHMETIC_EXPRESSION, oldSecondaryArithmeticExpression, newSecondaryArithmeticExpression);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSecondaryArithmeticExpression(ArithmeticExpression newSecondaryArithmeticExpression)
  {
    if (newSecondaryArithmeticExpression != secondaryArithmeticExpression)
    {
      NotificationChain msgs = null;
      if (secondaryArithmeticExpression != null)
        msgs = ((InternalEObject)secondaryArithmeticExpression).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - JPAQLDslPackage.COMPARISON_EXPRESSION__SECONDARY_ARITHMETIC_EXPRESSION, null, msgs);
      if (newSecondaryArithmeticExpression != null)
        msgs = ((InternalEObject)newSecondaryArithmeticExpression).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - JPAQLDslPackage.COMPARISON_EXPRESSION__SECONDARY_ARITHMETIC_EXPRESSION, null, msgs);
      msgs = basicSetSecondaryArithmeticExpression(newSecondaryArithmeticExpression, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, JPAQLDslPackage.COMPARISON_EXPRESSION__SECONDARY_ARITHMETIC_EXPRESSION, newSecondaryArithmeticExpression, newSecondaryArithmeticExpression));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case JPAQLDslPackage.COMPARISON_EXPRESSION__PRIMARY_STRING_EXPRESSION:
        return basicSetPrimaryStringExpression(null, msgs);
      case JPAQLDslPackage.COMPARISON_EXPRESSION__SECONDARY_STRING_EXPRESSION:
        return basicSetSecondaryStringExpression(null, msgs);
      case JPAQLDslPackage.COMPARISON_EXPRESSION__ALL_OR_ANY_EXPRESSION:
        return basicSetAllOrAnyExpression(null, msgs);
      case JPAQLDslPackage.COMPARISON_EXPRESSION__PRIMARY_BOOLEAN_EXPRESSION:
        return basicSetPrimaryBooleanExpression(null, msgs);
      case JPAQLDslPackage.COMPARISON_EXPRESSION__SECONDARY_BOOLEAN_EXPRESSION:
        return basicSetSecondaryBooleanExpression(null, msgs);
      case JPAQLDslPackage.COMPARISON_EXPRESSION__PRIMARY_ENUM_EXPRESSION:
        return basicSetPrimaryEnumExpression(null, msgs);
      case JPAQLDslPackage.COMPARISON_EXPRESSION__SECONDARY_ENUM_EXPRESSION:
        return basicSetSecondaryEnumExpression(null, msgs);
      case JPAQLDslPackage.COMPARISON_EXPRESSION__PRIMARY_DATETIME_EXPRESSION:
        return basicSetPrimaryDatetimeExpression(null, msgs);
      case JPAQLDslPackage.COMPARISON_EXPRESSION__SECONDARY_DATETIME_EXPRESSION:
        return basicSetSecondaryDatetimeExpression(null, msgs);
      case JPAQLDslPackage.COMPARISON_EXPRESSION__PRIMARY_ENTITY_EXPRESSION:
        return basicSetPrimaryEntityExpression(null, msgs);
      case JPAQLDslPackage.COMPARISON_EXPRESSION__SECONDARY_ENTITY_EXPRESSION:
        return basicSetSecondaryEntityExpression(null, msgs);
      case JPAQLDslPackage.COMPARISON_EXPRESSION__PRIMARY_ARITHMETIC_EXPRESSION:
        return basicSetPrimaryArithmeticExpression(null, msgs);
      case JPAQLDslPackage.COMPARISON_EXPRESSION__SECONDARY_ARITHMETIC_EXPRESSION:
        return basicSetSecondaryArithmeticExpression(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case JPAQLDslPackage.COMPARISON_EXPRESSION__PRIMARY_STRING_EXPRESSION:
        return getPrimaryStringExpression();
      case JPAQLDslPackage.COMPARISON_EXPRESSION__COMPARISON_OPERATOR:
        return getComparisonOperator();
      case JPAQLDslPackage.COMPARISON_EXPRESSION__SECONDARY_STRING_EXPRESSION:
        return getSecondaryStringExpression();
      case JPAQLDslPackage.COMPARISON_EXPRESSION__ALL_OR_ANY_EXPRESSION:
        return getAllOrAnyExpression();
      case JPAQLDslPackage.COMPARISON_EXPRESSION__PRIMARY_BOOLEAN_EXPRESSION:
        return getPrimaryBooleanExpression();
      case JPAQLDslPackage.COMPARISON_EXPRESSION__SECONDARY_BOOLEAN_EXPRESSION:
        return getSecondaryBooleanExpression();
      case JPAQLDslPackage.COMPARISON_EXPRESSION__PRIMARY_ENUM_EXPRESSION:
        return getPrimaryEnumExpression();
      case JPAQLDslPackage.COMPARISON_EXPRESSION__SECONDARY_ENUM_EXPRESSION:
        return getSecondaryEnumExpression();
      case JPAQLDslPackage.COMPARISON_EXPRESSION__PRIMARY_DATETIME_EXPRESSION:
        return getPrimaryDatetimeExpression();
      case JPAQLDslPackage.COMPARISON_EXPRESSION__SECONDARY_DATETIME_EXPRESSION:
        return getSecondaryDatetimeExpression();
      case JPAQLDslPackage.COMPARISON_EXPRESSION__PRIMARY_ENTITY_EXPRESSION:
        return getPrimaryEntityExpression();
      case JPAQLDslPackage.COMPARISON_EXPRESSION__SECONDARY_ENTITY_EXPRESSION:
        return getSecondaryEntityExpression();
      case JPAQLDslPackage.COMPARISON_EXPRESSION__PRIMARY_ARITHMETIC_EXPRESSION:
        return getPrimaryArithmeticExpression();
      case JPAQLDslPackage.COMPARISON_EXPRESSION__SECONDARY_ARITHMETIC_EXPRESSION:
        return getSecondaryArithmeticExpression();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case JPAQLDslPackage.COMPARISON_EXPRESSION__PRIMARY_STRING_EXPRESSION:
        setPrimaryStringExpression((StringExpression)newValue);
        return;
      case JPAQLDslPackage.COMPARISON_EXPRESSION__COMPARISON_OPERATOR:
        setComparisonOperator((String)newValue);
        return;
      case JPAQLDslPackage.COMPARISON_EXPRESSION__SECONDARY_STRING_EXPRESSION:
        setSecondaryStringExpression((StringExpression)newValue);
        return;
      case JPAQLDslPackage.COMPARISON_EXPRESSION__ALL_OR_ANY_EXPRESSION:
        setAllOrAnyExpression((AllOrAnyExpression)newValue);
        return;
      case JPAQLDslPackage.COMPARISON_EXPRESSION__PRIMARY_BOOLEAN_EXPRESSION:
        setPrimaryBooleanExpression((BooleanExpression)newValue);
        return;
      case JPAQLDslPackage.COMPARISON_EXPRESSION__SECONDARY_BOOLEAN_EXPRESSION:
        setSecondaryBooleanExpression((BooleanExpression)newValue);
        return;
      case JPAQLDslPackage.COMPARISON_EXPRESSION__PRIMARY_ENUM_EXPRESSION:
        setPrimaryEnumExpression((EnumExpression)newValue);
        return;
      case JPAQLDslPackage.COMPARISON_EXPRESSION__SECONDARY_ENUM_EXPRESSION:
        setSecondaryEnumExpression((EnumExpression)newValue);
        return;
      case JPAQLDslPackage.COMPARISON_EXPRESSION__PRIMARY_DATETIME_EXPRESSION:
        setPrimaryDatetimeExpression((DateTimeExpression)newValue);
        return;
      case JPAQLDslPackage.COMPARISON_EXPRESSION__SECONDARY_DATETIME_EXPRESSION:
        setSecondaryDatetimeExpression((DateTimeExpression)newValue);
        return;
      case JPAQLDslPackage.COMPARISON_EXPRESSION__PRIMARY_ENTITY_EXPRESSION:
        setPrimaryEntityExpression((EntityExpression)newValue);
        return;
      case JPAQLDslPackage.COMPARISON_EXPRESSION__SECONDARY_ENTITY_EXPRESSION:
        setSecondaryEntityExpression((EntityExpression)newValue);
        return;
      case JPAQLDslPackage.COMPARISON_EXPRESSION__PRIMARY_ARITHMETIC_EXPRESSION:
        setPrimaryArithmeticExpression((ArithmeticExpression)newValue);
        return;
      case JPAQLDslPackage.COMPARISON_EXPRESSION__SECONDARY_ARITHMETIC_EXPRESSION:
        setSecondaryArithmeticExpression((ArithmeticExpression)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case JPAQLDslPackage.COMPARISON_EXPRESSION__PRIMARY_STRING_EXPRESSION:
        setPrimaryStringExpression((StringExpression)null);
        return;
      case JPAQLDslPackage.COMPARISON_EXPRESSION__COMPARISON_OPERATOR:
        setComparisonOperator(COMPARISON_OPERATOR_EDEFAULT);
        return;
      case JPAQLDslPackage.COMPARISON_EXPRESSION__SECONDARY_STRING_EXPRESSION:
        setSecondaryStringExpression((StringExpression)null);
        return;
      case JPAQLDslPackage.COMPARISON_EXPRESSION__ALL_OR_ANY_EXPRESSION:
        setAllOrAnyExpression((AllOrAnyExpression)null);
        return;
      case JPAQLDslPackage.COMPARISON_EXPRESSION__PRIMARY_BOOLEAN_EXPRESSION:
        setPrimaryBooleanExpression((BooleanExpression)null);
        return;
      case JPAQLDslPackage.COMPARISON_EXPRESSION__SECONDARY_BOOLEAN_EXPRESSION:
        setSecondaryBooleanExpression((BooleanExpression)null);
        return;
      case JPAQLDslPackage.COMPARISON_EXPRESSION__PRIMARY_ENUM_EXPRESSION:
        setPrimaryEnumExpression((EnumExpression)null);
        return;
      case JPAQLDslPackage.COMPARISON_EXPRESSION__SECONDARY_ENUM_EXPRESSION:
        setSecondaryEnumExpression((EnumExpression)null);
        return;
      case JPAQLDslPackage.COMPARISON_EXPRESSION__PRIMARY_DATETIME_EXPRESSION:
        setPrimaryDatetimeExpression((DateTimeExpression)null);
        return;
      case JPAQLDslPackage.COMPARISON_EXPRESSION__SECONDARY_DATETIME_EXPRESSION:
        setSecondaryDatetimeExpression((DateTimeExpression)null);
        return;
      case JPAQLDslPackage.COMPARISON_EXPRESSION__PRIMARY_ENTITY_EXPRESSION:
        setPrimaryEntityExpression((EntityExpression)null);
        return;
      case JPAQLDslPackage.COMPARISON_EXPRESSION__SECONDARY_ENTITY_EXPRESSION:
        setSecondaryEntityExpression((EntityExpression)null);
        return;
      case JPAQLDslPackage.COMPARISON_EXPRESSION__PRIMARY_ARITHMETIC_EXPRESSION:
        setPrimaryArithmeticExpression((ArithmeticExpression)null);
        return;
      case JPAQLDslPackage.COMPARISON_EXPRESSION__SECONDARY_ARITHMETIC_EXPRESSION:
        setSecondaryArithmeticExpression((ArithmeticExpression)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case JPAQLDslPackage.COMPARISON_EXPRESSION__PRIMARY_STRING_EXPRESSION:
        return primaryStringExpression != null;
      case JPAQLDslPackage.COMPARISON_EXPRESSION__COMPARISON_OPERATOR:
        return COMPARISON_OPERATOR_EDEFAULT == null ? comparisonOperator != null : !COMPARISON_OPERATOR_EDEFAULT.equals(comparisonOperator);
      case JPAQLDslPackage.COMPARISON_EXPRESSION__SECONDARY_STRING_EXPRESSION:
        return secondaryStringExpression != null;
      case JPAQLDslPackage.COMPARISON_EXPRESSION__ALL_OR_ANY_EXPRESSION:
        return allOrAnyExpression != null;
      case JPAQLDslPackage.COMPARISON_EXPRESSION__PRIMARY_BOOLEAN_EXPRESSION:
        return primaryBooleanExpression != null;
      case JPAQLDslPackage.COMPARISON_EXPRESSION__SECONDARY_BOOLEAN_EXPRESSION:
        return secondaryBooleanExpression != null;
      case JPAQLDslPackage.COMPARISON_EXPRESSION__PRIMARY_ENUM_EXPRESSION:
        return primaryEnumExpression != null;
      case JPAQLDslPackage.COMPARISON_EXPRESSION__SECONDARY_ENUM_EXPRESSION:
        return secondaryEnumExpression != null;
      case JPAQLDslPackage.COMPARISON_EXPRESSION__PRIMARY_DATETIME_EXPRESSION:
        return primaryDatetimeExpression != null;
      case JPAQLDslPackage.COMPARISON_EXPRESSION__SECONDARY_DATETIME_EXPRESSION:
        return secondaryDatetimeExpression != null;
      case JPAQLDslPackage.COMPARISON_EXPRESSION__PRIMARY_ENTITY_EXPRESSION:
        return primaryEntityExpression != null;
      case JPAQLDslPackage.COMPARISON_EXPRESSION__SECONDARY_ENTITY_EXPRESSION:
        return secondaryEntityExpression != null;
      case JPAQLDslPackage.COMPARISON_EXPRESSION__PRIMARY_ARITHMETIC_EXPRESSION:
        return primaryArithmeticExpression != null;
      case JPAQLDslPackage.COMPARISON_EXPRESSION__SECONDARY_ARITHMETIC_EXPRESSION:
        return secondaryArithmeticExpression != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (comparisonOperator: ");
    result.append(comparisonOperator);
    result.append(')');
    return result.toString();
  }

} //ComparisonExpressionImpl
