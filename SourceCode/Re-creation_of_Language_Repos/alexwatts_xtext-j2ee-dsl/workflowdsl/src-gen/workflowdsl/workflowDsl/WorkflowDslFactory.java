/**
 * generated by Xtext 2.35.0
 */
package workflowdsl.workflowDsl;

import org.eclipse.emf.ecore.EFactory;

/**
 * <!-- begin-user-doc -->
 * The <b>Factory</b> for the model.
 * It provides a create method for each non-abstract class of the model.
 * <!-- end-user-doc -->
 * @see workflowdsl.workflowDsl.WorkflowDslPackage
 * @generated
 */
public interface WorkflowDslFactory extends EFactory
{
  /**
   * The singleton instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  WorkflowDslFactory eINSTANCE = workflowdsl.workflowDsl.impl.WorkflowDslFactoryImpl.init();

  /**
   * Returns a new object of class '<em>Model</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Model</em>'.
   * @generated
   */
  Model createModel();

  /**
   * Returns a new object of class '<em>Import</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Import</em>'.
   * @generated
   */
  Import createImport();

  /**
   * Returns a new object of class '<em>Workflow Definition</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Workflow Definition</em>'.
   * @generated
   */
  WorkflowDefinition createWorkflowDefinition();

  /**
   * Returns a new object of class '<em>Package</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Package</em>'.
   * @generated
   */
  Package createPackage();

  /**
   * Returns a new object of class '<em>Market Name</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Market Name</em>'.
   * @generated
   */
  MarketName createMarketName();

  /**
   * Returns a new object of class '<em>Class Name</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Class Name</em>'.
   * @generated
   */
  ClassName createClassName();

  /**
   * Returns a new object of class '<em>Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Event</em>'.
   * @generated
   */
  Event createEvent();

  /**
   * Returns a new object of class '<em>Variable</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Variable</em>'.
   * @generated
   */
  Variable createVariable();

  /**
   * Returns a new object of class '<em>String Based Conditional Varaible</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>String Based Conditional Varaible</em>'.
   * @generated
   */
  StringBasedConditionalVaraible createStringBasedConditionalVaraible();

  /**
   * Returns a new object of class '<em>Node</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Node</em>'.
   * @generated
   */
  Node createNode();

  /**
   * Returns a new object of class '<em>Service Task</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Service Task</em>'.
   * @generated
   */
  ServiceTask createServiceTask();

  /**
   * Returns a new object of class '<em>Gateway</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Gateway</em>'.
   * @generated
   */
  Gateway createGateway();

  /**
   * Returns a new object of class '<em>Diverging Gateway</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Diverging Gateway</em>'.
   * @generated
   */
  DivergingGateway createDivergingGateway();

  /**
   * Returns a new object of class '<em>Converging Gateway</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Converging Gateway</em>'.
   * @generated
   */
  ConvergingGateway createConvergingGateway();

  /**
   * Returns a new object of class '<em>Start Node</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Start Node</em>'.
   * @generated
   */
  StartNode createStartNode();

  /**
   * Returns a new object of class '<em>End Node</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>End Node</em>'.
   * @generated
   */
  EndNode createEndNode();

  /**
   * Returns a new object of class '<em>Signal</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Signal</em>'.
   * @generated
   */
  Signal createSignal();

  /**
   * Returns a new object of class '<em>Asyncronous Service Task</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Asyncronous Service Task</em>'.
   * @generated
   */
  AsyncronousServiceTask createAsyncronousServiceTask();

  /**
   * Returns a new object of class '<em>Syncronous Service Task</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Syncronous Service Task</em>'.
   * @generated
   */
  SyncronousServiceTask createSyncronousServiceTask();

  /**
   * Returns a new object of class '<em>Exlcusive Diverging</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Exlcusive Diverging</em>'.
   * @generated
   */
  ExlcusiveDiverging createExlcusiveDiverging();

  /**
   * Returns a new object of class '<em>Parallel Diverging</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Parallel Diverging</em>'.
   * @generated
   */
  ParallelDiverging createParallelDiverging();

  /**
   * Returns a new object of class '<em>Exclusive Converging</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Exclusive Converging</em>'.
   * @generated
   */
  ExclusiveConverging createExclusiveConverging();

  /**
   * Returns a new object of class '<em>Parallel Converging</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Parallel Converging</em>'.
   * @generated
   */
  ParallelConverging createParallelConverging();

  /**
   * Returns a new object of class '<em>Connector</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Connector</em>'.
   * @generated
   */
  Connector createConnector();

  /**
   * Returns a new object of class '<em>Basic Connector</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Basic Connector</em>'.
   * @generated
   */
  BasicConnector createBasicConnector();

  /**
   * Returns a new object of class '<em>Input Data</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Input Data</em>'.
   * @generated
   */
  InputData createInputData();

  /**
   * Returns a new object of class '<em>Task Name Input</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Task Name Input</em>'.
   * @generated
   */
  TaskNameInput createTaskNameInput();

  /**
   * Returns a new object of class '<em>Variable Based Input</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Variable Based Input</em>'.
   * @generated
   */
  VariableBasedInput createVariableBasedInput();

  /**
   * Returns a new object of class '<em>Event Based Input</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Event Based Input</em>'.
   * @generated
   */
  EventBasedInput createEventBasedInput();

  /**
   * Returns a new object of class '<em>Output Data</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Output Data</em>'.
   * @generated
   */
  OutputData createOutputData();

  /**
   * Returns a new object of class '<em>Conditional Connector</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Conditional Connector</em>'.
   * @generated
   */
  ConditionalConnector createConditionalConnector();

  /**
   * Returns a new object of class '<em>Test</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Test</em>'.
   * @generated
   */
  Test createTest();

  /**
   * Returns a new object of class '<em>Process Variable</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Process Variable</em>'.
   * @generated
   */
  ProcessVariable createProcessVariable();

  /**
   * Returns a new object of class '<em>Fire Signal</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Fire Signal</em>'.
   * @generated
   */
  FireSignal createFireSignal();

  /**
   * Returns a new object of class '<em>Assert Flow</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Assert Flow</em>'.
   * @generated
   */
  AssertFlow createAssertFlow();

  /**
   * Returns a new object of class '<em>Assert Wait</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Assert Wait</em>'.
   * @generated
   */
  AssertWait createAssertWait();

  /**
   * Returns the package supported by this factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the package supported by this factory.
   * @generated
   */
  WorkflowDslPackage getWorkflowDslPackage();

} //WorkflowDslFactory
