/*
 * generated by Xtext 2.35.0
 */
package dk.itu.mdd.nowheretravel.dsl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class NowhereTravelDslGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class TravelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "dk.itu.mdd.nowheretravel.dsl.NowhereTravelDsl.Travel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTravelKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cStartAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cStartStartParserRuleCall_2_0 = (RuleCall)cStartAssignment_2.eContents().get(0);
		private final Assignment cItemsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cItemsItemParserRuleCall_3_0 = (RuleCall)cItemsAssignment_3.eContents().get(0);
		private final Assignment cDataAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cDataDataParserRuleCall_4_0 = (RuleCall)cDataAssignment_4.eContents().get(0);
		private final Assignment cConnectionsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cConnectionsConnectionParserRuleCall_5_0 = (RuleCall)cConnectionsAssignment_5.eContents().get(0);
		private final Assignment cEndAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cEndEndParserRuleCall_6_0 = (RuleCall)cEndAssignment_6.eContents().get(0);
		
		//Travel returns Travel:
		//    'Travel' ID
		//    start=Start
		//    items+=Item+
		//    data+=Data
		//    (connections+=Connection)*
		//    end=End
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//'Travel' ID
		//start=Start
		//items+=Item+
		//data+=Data
		//(connections+=Connection)*
		//end=End
		public Group getGroup() { return cGroup; }
		
		//'Travel'
		public Keyword getTravelKeyword_0() { return cTravelKeyword_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
		
		//start=Start
		public Assignment getStartAssignment_2() { return cStartAssignment_2; }
		
		//Start
		public RuleCall getStartStartParserRuleCall_2_0() { return cStartStartParserRuleCall_2_0; }
		
		//items+=Item+
		public Assignment getItemsAssignment_3() { return cItemsAssignment_3; }
		
		//Item
		public RuleCall getItemsItemParserRuleCall_3_0() { return cItemsItemParserRuleCall_3_0; }
		
		//data+=Data
		public Assignment getDataAssignment_4() { return cDataAssignment_4; }
		
		//Data
		public RuleCall getDataDataParserRuleCall_4_0() { return cDataDataParserRuleCall_4_0; }
		
		//(connections+=Connection)*
		public Assignment getConnectionsAssignment_5() { return cConnectionsAssignment_5; }
		
		//Connection
		public RuleCall getConnectionsConnectionParserRuleCall_5_0() { return cConnectionsConnectionParserRuleCall_5_0; }
		
		//end=End
		public Assignment getEndAssignment_6() { return cEndAssignment_6; }
		
		//End
		public RuleCall getEndEndParserRuleCall_6_0() { return cEndEndParserRuleCall_6_0; }
	}
	public class ItemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "dk.itu.mdd.nowheretravel.dsl.NowhereTravelDsl.Item");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cFlightParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cHotelParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cTrekkingTourParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cParachuteTourParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cCarRentalParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cInsuranceParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		
		//Item returns Item:
		//    Flight | Hotel | TrekkingTour | ParachuteTour | CarRental | Insurance;
		@Override public ParserRule getRule() { return rule; }
		
		//Flight | Hotel | TrekkingTour | ParachuteTour | CarRental | Insurance
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Flight
		public RuleCall getFlightParserRuleCall_0() { return cFlightParserRuleCall_0; }
		
		//Hotel
		public RuleCall getHotelParserRuleCall_1() { return cHotelParserRuleCall_1; }
		
		//TrekkingTour
		public RuleCall getTrekkingTourParserRuleCall_2() { return cTrekkingTourParserRuleCall_2; }
		
		//ParachuteTour
		public RuleCall getParachuteTourParserRuleCall_3() { return cParachuteTourParserRuleCall_3; }
		
		//CarRental
		public RuleCall getCarRentalParserRuleCall_4() { return cCarRentalParserRuleCall_4; }
		
		//Insurance
		public RuleCall getInsuranceParserRuleCall_5() { return cInsuranceParserRuleCall_5; }
	}
	public class NodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "dk.itu.mdd.nowheretravel.dsl.NowhereTravelDsl.Node");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cStartParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cEndParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cFlightParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cHotelParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cTrekkingTourParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cParachuteTourParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cCarRentalParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cInsuranceParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		
		//Node returns Node:
		//    Start | End | Flight | Hotel | TrekkingTour | ParachuteTour | CarRental | Insurance;
		@Override public ParserRule getRule() { return rule; }
		
		//Start | End | Flight | Hotel | TrekkingTour | ParachuteTour | CarRental | Insurance
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Start
		public RuleCall getStartParserRuleCall_0() { return cStartParserRuleCall_0; }
		
		//End
		public RuleCall getEndParserRuleCall_1() { return cEndParserRuleCall_1; }
		
		//Flight
		public RuleCall getFlightParserRuleCall_2() { return cFlightParserRuleCall_2; }
		
		//Hotel
		public RuleCall getHotelParserRuleCall_3() { return cHotelParserRuleCall_3; }
		
		//TrekkingTour
		public RuleCall getTrekkingTourParserRuleCall_4() { return cTrekkingTourParserRuleCall_4; }
		
		//ParachuteTour
		public RuleCall getParachuteTourParserRuleCall_5() { return cParachuteTourParserRuleCall_5; }
		
		//CarRental
		public RuleCall getCarRentalParserRuleCall_6() { return cCarRentalParserRuleCall_6; }
		
		//Insurance
		public RuleCall getInsuranceParserRuleCall_7() { return cInsuranceParserRuleCall_7; }
	}
	public class StartElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "dk.itu.mdd.nowheretravel.dsl.NowhereTravelDsl.Start");
		private final Action cStartAction = (Action)rule.eContents().get(1);
		
		//Start returns Start:{Start};
		@Override public ParserRule getRule() { return rule; }
		
		//{Start}
		public Action getStartAction() { return cStartAction; }
	}
	public class EndElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "dk.itu.mdd.nowheretravel.dsl.NowhereTravelDsl.End");
		private final Action cEndAction = (Action)rule.eContents().get(1);
		
		//End returns End:{End};
		@Override public ParserRule getRule() { return rule; }
		
		//{End}
		public Action getEndAction() { return cEndAction; }
	}
	public class DataElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "dk.itu.mdd.nowheretravel.dsl.NowhereTravelDsl.Data");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCustomerDataKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cParametersAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cParametersParameterParserRuleCall_2_0 = (RuleCall)cParametersAssignment_2.eContents().get(0);
		
		//Data returns Data:
		//    'CustomerData'
		//    name=EString
		//    (parameters+=Parameter)?;
		@Override public ParserRule getRule() { return rule; }
		
		//'CustomerData'
		//name=EString
		//(parameters+=Parameter)?
		public Group getGroup() { return cGroup; }
		
		//'CustomerData'
		public Keyword getCustomerDataKeyword_0() { return cCustomerDataKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//(parameters+=Parameter)?
		public Assignment getParametersAssignment_2() { return cParametersAssignment_2; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_2_0() { return cParametersParameterParserRuleCall_2_0; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "dk.itu.mdd.nowheretravel.dsl.NowhereTravelDsl.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString returns ecore::EString:
		//    STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class ParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "dk.itu.mdd.nowheretravel.dsl.NowhereTravelDsl.Parameter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cParameterKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueEStringParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//Parameter returns Parameter:
		//    'Parameter'
		//    name=EString
		//    value=EString;
		@Override public ParserRule getRule() { return rule; }
		
		//'Parameter'
		//name=EString
		//value=EString
		public Group getGroup() { return cGroup; }
		
		//'Parameter'
		public Keyword getParameterKeyword_0() { return cParameterKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//value=EString
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }
		
		//EString
		public RuleCall getValueEStringParserRuleCall_2_0() { return cValueEStringParserRuleCall_2_0; }
	}
	public class ConnectionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "dk.itu.mdd.nowheretravel.dsl.NowhereTravelDsl.Connection");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cConnectionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cSourceNodeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cSourceNodeNodeCrossReference_2_0 = (CrossReference)cSourceNodeAssignment_2.eContents().get(0);
		private final RuleCall cSourceNodeNodeEStringParserRuleCall_2_0_1 = (RuleCall)cSourceNodeNodeCrossReference_2_0.eContents().get(1);
		private final Assignment cTargetNodeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cTargetNodeNodeCrossReference_3_0 = (CrossReference)cTargetNodeAssignment_3.eContents().get(0);
		private final RuleCall cTargetNodeNodeEStringParserRuleCall_3_0_1 = (RuleCall)cTargetNodeNodeCrossReference_3_0.eContents().get(1);
		
		//Connection returns Connection:
		//    'Connection'
		//    name=EString
		//    sourceNode=[Node|EString]
		//    targetNode=[Node|EString];
		@Override public ParserRule getRule() { return rule; }
		
		//'Connection'
		//name=EString
		//sourceNode=[Node|EString]
		//targetNode=[Node|EString]
		public Group getGroup() { return cGroup; }
		
		//'Connection'
		public Keyword getConnectionKeyword_0() { return cConnectionKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//sourceNode=[Node|EString]
		public Assignment getSourceNodeAssignment_2() { return cSourceNodeAssignment_2; }
		
		//[Node|EString]
		public CrossReference getSourceNodeNodeCrossReference_2_0() { return cSourceNodeNodeCrossReference_2_0; }
		
		//EString
		public RuleCall getSourceNodeNodeEStringParserRuleCall_2_0_1() { return cSourceNodeNodeEStringParserRuleCall_2_0_1; }
		
		//targetNode=[Node|EString]
		public Assignment getTargetNodeAssignment_3() { return cTargetNodeAssignment_3; }
		
		//[Node|EString]
		public CrossReference getTargetNodeNodeCrossReference_3_0() { return cTargetNodeNodeCrossReference_3_0; }
		
		//EString
		public RuleCall getTargetNodeNodeEStringParserRuleCall_3_0_1() { return cTargetNodeNodeEStringParserRuleCall_3_0_1; }
	}
	public class FlightElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "dk.itu.mdd.nowheretravel.dsl.NowhereTravelDsl.Flight");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cFlightAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cFlightKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cDestinationTownKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cDestinationTownAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cDestinationTownEStringParserRuleCall_3_1_0 = (RuleCall)cDestinationTownAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cDestinationCountryKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cDestinationCountryAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cDestinationCountryEStringParserRuleCall_4_1_0 = (RuleCall)cDestinationCountryAssignment_4_1.eContents().get(0);
		
		//Flight returns Flight:
		//    {Flight}
		//    'Flight' name=EString
		//    ('destinationTown' destinationTown=EString)?
		//    ('destinationCountry' destinationCountry=EString)?;
		@Override public ParserRule getRule() { return rule; }
		
		//{Flight}
		//'Flight' name=EString
		//('destinationTown' destinationTown=EString)?
		//('destinationCountry' destinationCountry=EString)?
		public Group getGroup() { return cGroup; }
		
		//{Flight}
		public Action getFlightAction_0() { return cFlightAction_0; }
		
		//'Flight'
		public Keyword getFlightKeyword_1() { return cFlightKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//('destinationTown' destinationTown=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'destinationTown'
		public Keyword getDestinationTownKeyword_3_0() { return cDestinationTownKeyword_3_0; }
		
		//destinationTown=EString
		public Assignment getDestinationTownAssignment_3_1() { return cDestinationTownAssignment_3_1; }
		
		//EString
		public RuleCall getDestinationTownEStringParserRuleCall_3_1_0() { return cDestinationTownEStringParserRuleCall_3_1_0; }
		
		//('destinationCountry' destinationCountry=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'destinationCountry'
		public Keyword getDestinationCountryKeyword_4_0() { return cDestinationCountryKeyword_4_0; }
		
		//destinationCountry=EString
		public Assignment getDestinationCountryAssignment_4_1() { return cDestinationCountryAssignment_4_1; }
		
		//EString
		public RuleCall getDestinationCountryEStringParserRuleCall_4_1_0() { return cDestinationCountryEStringParserRuleCall_4_1_0; }
	}
	public class HotelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "dk.itu.mdd.nowheretravel.dsl.NowhereTravelDsl.Hotel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cHotelAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cHotelKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cHotelNameKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cHotelNameAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cHotelNameEStringParserRuleCall_3_1_0 = (RuleCall)cHotelNameAssignment_3_1.eContents().get(0);
		
		//Hotel returns Hotel:
		//    {Hotel}
		//    'Hotel'
		//    name=EString
		//    ('hotelName' hotelName=EString)?;
		@Override public ParserRule getRule() { return rule; }
		
		//{Hotel}
		//'Hotel'
		//name=EString
		//('hotelName' hotelName=EString)?
		public Group getGroup() { return cGroup; }
		
		//{Hotel}
		public Action getHotelAction_0() { return cHotelAction_0; }
		
		//'Hotel'
		public Keyword getHotelKeyword_1() { return cHotelKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//('hotelName' hotelName=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'hotelName'
		public Keyword getHotelNameKeyword_3_0() { return cHotelNameKeyword_3_0; }
		
		//hotelName=EString
		public Assignment getHotelNameAssignment_3_1() { return cHotelNameAssignment_3_1; }
		
		//EString
		public RuleCall getHotelNameEStringParserRuleCall_3_1_0() { return cHotelNameEStringParserRuleCall_3_1_0; }
	}
	public class TrekkingTourElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "dk.itu.mdd.nowheretravel.dsl.NowhereTravelDsl.TrekkingTour");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTrekkingTourAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cTrekkingTourKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		
		//TrekkingTour returns TrekkingTour:
		//    {TrekkingTour}
		//    'TrekkingTour'
		//    name=EString;
		@Override public ParserRule getRule() { return rule; }
		
		//{TrekkingTour}
		//'TrekkingTour'
		//name=EString
		public Group getGroup() { return cGroup; }
		
		//{TrekkingTour}
		public Action getTrekkingTourAction_0() { return cTrekkingTourAction_0; }
		
		//'TrekkingTour'
		public Keyword getTrekkingTourKeyword_1() { return cTrekkingTourKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
	}
	public class ParachuteTourElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "dk.itu.mdd.nowheretravel.dsl.NowhereTravelDsl.ParachuteTour");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cParachuteTourAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cParachuteTourKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		
		//ParachuteTour returns ParachuteTour:
		//    {ParachuteTour}
		//    'ParachuteTour'
		//    name=EString;
		@Override public ParserRule getRule() { return rule; }
		
		//{ParachuteTour}
		//'ParachuteTour'
		//name=EString
		public Group getGroup() { return cGroup; }
		
		//{ParachuteTour}
		public Action getParachuteTourAction_0() { return cParachuteTourAction_0; }
		
		//'ParachuteTour'
		public Keyword getParachuteTourKeyword_1() { return cParachuteTourKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
	}
	public class CarRentalElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "dk.itu.mdd.nowheretravel.dsl.NowhereTravelDsl.CarRental");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCarRentalAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cCarRentalKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		
		//CarRental returns CarRental:
		//    {CarRental}
		//    'CarRental'
		//    name=EString;
		@Override public ParserRule getRule() { return rule; }
		
		//{CarRental}
		//'CarRental'
		//name=EString
		public Group getGroup() { return cGroup; }
		
		//{CarRental}
		public Action getCarRentalAction_0() { return cCarRentalAction_0; }
		
		//'CarRental'
		public Keyword getCarRentalKeyword_1() { return cCarRentalKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
	}
	public class InsuranceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "dk.itu.mdd.nowheretravel.dsl.NowhereTravelDsl.Insurance");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cInsuranceAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cInsuranceKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cTypeKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cTypeAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cTypeInsuranceTypeEnumRuleCall_3_1_0 = (RuleCall)cTypeAssignment_3_1.eContents().get(0);
		
		//Insurance returns Insurance:
		//    {Insurance}
		//    'Insurance'
		//    name=EString
		//    ('type' type=InsuranceType)?;
		@Override public ParserRule getRule() { return rule; }
		
		//{Insurance}
		//'Insurance'
		//name=EString
		//('type' type=InsuranceType)?
		public Group getGroup() { return cGroup; }
		
		//{Insurance}
		public Action getInsuranceAction_0() { return cInsuranceAction_0; }
		
		//'Insurance'
		public Keyword getInsuranceKeyword_1() { return cInsuranceKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//('type' type=InsuranceType)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'type'
		public Keyword getTypeKeyword_3_0() { return cTypeKeyword_3_0; }
		
		//type=InsuranceType
		public Assignment getTypeAssignment_3_1() { return cTypeAssignment_3_1; }
		
		//InsuranceType
		public RuleCall getTypeInsuranceTypeEnumRuleCall_3_1_0() { return cTypeInsuranceTypeEnumRuleCall_3_1_0; }
	}
	
	public class InsuranceTypeElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "dk.itu.mdd.nowheretravel.dsl.NowhereTravelDsl.InsuranceType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cCarInsuranceEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cCarInsuranceCarInsuranceKeyword_0_0 = (Keyword)cCarInsuranceEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cTravelInsuranceEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cTravelInsuranceTravelInsuranceKeyword_1_0 = (Keyword)cTravelInsuranceEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum InsuranceType returns InsuranceType:
		//    CarInsurance = 'CarInsurance' | TravelInsurance = 'TravelInsurance';
		public EnumRule getRule() { return rule; }
		
		//CarInsurance = 'CarInsurance' | TravelInsurance = 'TravelInsurance'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//CarInsurance = 'CarInsurance'
		public EnumLiteralDeclaration getCarInsuranceEnumLiteralDeclaration_0() { return cCarInsuranceEnumLiteralDeclaration_0; }
		
		//'CarInsurance'
		public Keyword getCarInsuranceCarInsuranceKeyword_0_0() { return cCarInsuranceCarInsuranceKeyword_0_0; }
		
		//TravelInsurance = 'TravelInsurance'
		public EnumLiteralDeclaration getTravelInsuranceEnumLiteralDeclaration_1() { return cTravelInsuranceEnumLiteralDeclaration_1; }
		
		//'TravelInsurance'
		public Keyword getTravelInsuranceTravelInsuranceKeyword_1_0() { return cTravelInsuranceTravelInsuranceKeyword_1_0; }
	}
	
	private final TravelElements pTravel;
	private final ItemElements pItem;
	private final NodeElements pNode;
	private final StartElements pStart;
	private final EndElements pEnd;
	private final DataElements pData;
	private final EStringElements pEString;
	private final ParameterElements pParameter;
	private final ConnectionElements pConnection;
	private final FlightElements pFlight;
	private final HotelElements pHotel;
	private final TrekkingTourElements pTrekkingTour;
	private final ParachuteTourElements pParachuteTour;
	private final CarRentalElements pCarRental;
	private final InsuranceElements pInsurance;
	private final InsuranceTypeElements eInsuranceType;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public NowhereTravelDslGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pTravel = new TravelElements();
		this.pItem = new ItemElements();
		this.pNode = new NodeElements();
		this.pStart = new StartElements();
		this.pEnd = new EndElements();
		this.pData = new DataElements();
		this.pEString = new EStringElements();
		this.pParameter = new ParameterElements();
		this.pConnection = new ConnectionElements();
		this.pFlight = new FlightElements();
		this.pHotel = new HotelElements();
		this.pTrekkingTour = new TrekkingTourElements();
		this.pParachuteTour = new ParachuteTourElements();
		this.pCarRental = new CarRentalElements();
		this.pInsurance = new InsuranceElements();
		this.eInsuranceType = new InsuranceTypeElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("dk.itu.mdd.nowheretravel.dsl.NowhereTravelDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Travel returns Travel:
	//    'Travel' ID
	//    start=Start
	//    items+=Item+
	//    data+=Data
	//    (connections+=Connection)*
	//    end=End
	//    ;
	public TravelElements getTravelAccess() {
		return pTravel;
	}
	
	public ParserRule getTravelRule() {
		return getTravelAccess().getRule();
	}
	
	//Item returns Item:
	//    Flight | Hotel | TrekkingTour | ParachuteTour | CarRental | Insurance;
	public ItemElements getItemAccess() {
		return pItem;
	}
	
	public ParserRule getItemRule() {
		return getItemAccess().getRule();
	}
	
	//Node returns Node:
	//    Start | End | Flight | Hotel | TrekkingTour | ParachuteTour | CarRental | Insurance;
	public NodeElements getNodeAccess() {
		return pNode;
	}
	
	public ParserRule getNodeRule() {
		return getNodeAccess().getRule();
	}
	
	//Start returns Start:{Start};
	public StartElements getStartAccess() {
		return pStart;
	}
	
	public ParserRule getStartRule() {
		return getStartAccess().getRule();
	}
	
	//End returns End:{End};
	public EndElements getEndAccess() {
		return pEnd;
	}
	
	public ParserRule getEndRule() {
		return getEndAccess().getRule();
	}
	
	//Data returns Data:
	//    'CustomerData'
	//    name=EString
	//    (parameters+=Parameter)?;
	public DataElements getDataAccess() {
		return pData;
	}
	
	public ParserRule getDataRule() {
		return getDataAccess().getRule();
	}
	
	//EString returns ecore::EString:
	//    STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//Parameter returns Parameter:
	//    'Parameter'
	//    name=EString
	//    value=EString;
	public ParameterElements getParameterAccess() {
		return pParameter;
	}
	
	public ParserRule getParameterRule() {
		return getParameterAccess().getRule();
	}
	
	//Connection returns Connection:
	//    'Connection'
	//    name=EString
	//    sourceNode=[Node|EString]
	//    targetNode=[Node|EString];
	public ConnectionElements getConnectionAccess() {
		return pConnection;
	}
	
	public ParserRule getConnectionRule() {
		return getConnectionAccess().getRule();
	}
	
	//Flight returns Flight:
	//    {Flight}
	//    'Flight' name=EString
	//    ('destinationTown' destinationTown=EString)?
	//    ('destinationCountry' destinationCountry=EString)?;
	public FlightElements getFlightAccess() {
		return pFlight;
	}
	
	public ParserRule getFlightRule() {
		return getFlightAccess().getRule();
	}
	
	//Hotel returns Hotel:
	//    {Hotel}
	//    'Hotel'
	//    name=EString
	//    ('hotelName' hotelName=EString)?;
	public HotelElements getHotelAccess() {
		return pHotel;
	}
	
	public ParserRule getHotelRule() {
		return getHotelAccess().getRule();
	}
	
	//TrekkingTour returns TrekkingTour:
	//    {TrekkingTour}
	//    'TrekkingTour'
	//    name=EString;
	public TrekkingTourElements getTrekkingTourAccess() {
		return pTrekkingTour;
	}
	
	public ParserRule getTrekkingTourRule() {
		return getTrekkingTourAccess().getRule();
	}
	
	//ParachuteTour returns ParachuteTour:
	//    {ParachuteTour}
	//    'ParachuteTour'
	//    name=EString;
	public ParachuteTourElements getParachuteTourAccess() {
		return pParachuteTour;
	}
	
	public ParserRule getParachuteTourRule() {
		return getParachuteTourAccess().getRule();
	}
	
	//CarRental returns CarRental:
	//    {CarRental}
	//    'CarRental'
	//    name=EString;
	public CarRentalElements getCarRentalAccess() {
		return pCarRental;
	}
	
	public ParserRule getCarRentalRule() {
		return getCarRentalAccess().getRule();
	}
	
	//Insurance returns Insurance:
	//    {Insurance}
	//    'Insurance'
	//    name=EString
	//    ('type' type=InsuranceType)?;
	public InsuranceElements getInsuranceAccess() {
		return pInsurance;
	}
	
	public ParserRule getInsuranceRule() {
		return getInsuranceAccess().getRule();
	}
	
	//enum InsuranceType returns InsuranceType:
	//    CarInsurance = 'CarInsurance' | TravelInsurance = 'TravelInsurance';
	public InsuranceTypeElements getInsuranceTypeAccess() {
		return eInsuranceType;
	}
	
	public EnumRule getInsuranceTypeRule() {
		return getInsuranceTypeAccess().getRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
