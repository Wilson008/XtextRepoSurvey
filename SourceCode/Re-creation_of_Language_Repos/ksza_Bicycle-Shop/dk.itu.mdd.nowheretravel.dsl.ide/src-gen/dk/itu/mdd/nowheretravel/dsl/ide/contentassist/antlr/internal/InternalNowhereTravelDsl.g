/*
 * generated by Xtext 2.35.0
 */
grammar InternalNowhereTravelDsl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package dk.itu.mdd.nowheretravel.dsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package dk.itu.mdd.nowheretravel.dsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import dk.itu.mdd.nowheretravel.dsl.services.NowhereTravelDslGrammarAccess;

}
@parser::members {
	private NowhereTravelDslGrammarAccess grammarAccess;

	public void setGrammarAccess(NowhereTravelDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleTravel
entryRuleTravel
:
{ before(grammarAccess.getTravelRule()); }
	 ruleTravel
{ after(grammarAccess.getTravelRule()); } 
	 EOF 
;

// Rule Travel
ruleTravel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTravelAccess().getGroup()); }
		(rule__Travel__Group__0)
		{ after(grammarAccess.getTravelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleItem
entryRuleItem
:
{ before(grammarAccess.getItemRule()); }
	 ruleItem
{ after(grammarAccess.getItemRule()); } 
	 EOF 
;

// Rule Item
ruleItem 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getItemAccess().getAlternatives()); }
		(rule__Item__Alternatives)
		{ after(grammarAccess.getItemAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStart
entryRuleStart
:
{ before(grammarAccess.getStartRule()); }
	 ruleStart
{ after(grammarAccess.getStartRule()); } 
	 EOF 
;

// Rule Start
ruleStart 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStartAccess().getStartAction()); }
		()
		{ after(grammarAccess.getStartAccess().getStartAction()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnd
entryRuleEnd
:
{ before(grammarAccess.getEndRule()); }
	 ruleEnd
{ after(grammarAccess.getEndRule()); } 
	 EOF 
;

// Rule End
ruleEnd 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEndAccess().getEndAction()); }
		()
		{ after(grammarAccess.getEndAccess().getEndAction()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleData
entryRuleData
:
{ before(grammarAccess.getDataRule()); }
	 ruleData
{ after(grammarAccess.getDataRule()); } 
	 EOF 
;

// Rule Data
ruleData 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDataAccess().getGroup()); }
		(rule__Data__Group__0)
		{ after(grammarAccess.getDataAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEString
entryRuleEString
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEStringAccess().getAlternatives()); }
		(rule__EString__Alternatives)
		{ after(grammarAccess.getEStringAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameter
entryRuleParameter
:
{ before(grammarAccess.getParameterRule()); }
	 ruleParameter
{ after(grammarAccess.getParameterRule()); } 
	 EOF 
;

// Rule Parameter
ruleParameter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterAccess().getGroup()); }
		(rule__Parameter__Group__0)
		{ after(grammarAccess.getParameterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConnection
entryRuleConnection
:
{ before(grammarAccess.getConnectionRule()); }
	 ruleConnection
{ after(grammarAccess.getConnectionRule()); } 
	 EOF 
;

// Rule Connection
ruleConnection 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConnectionAccess().getGroup()); }
		(rule__Connection__Group__0)
		{ after(grammarAccess.getConnectionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFlight
entryRuleFlight
:
{ before(grammarAccess.getFlightRule()); }
	 ruleFlight
{ after(grammarAccess.getFlightRule()); } 
	 EOF 
;

// Rule Flight
ruleFlight 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFlightAccess().getGroup()); }
		(rule__Flight__Group__0)
		{ after(grammarAccess.getFlightAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHotel
entryRuleHotel
:
{ before(grammarAccess.getHotelRule()); }
	 ruleHotel
{ after(grammarAccess.getHotelRule()); } 
	 EOF 
;

// Rule Hotel
ruleHotel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHotelAccess().getGroup()); }
		(rule__Hotel__Group__0)
		{ after(grammarAccess.getHotelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTrekkingTour
entryRuleTrekkingTour
:
{ before(grammarAccess.getTrekkingTourRule()); }
	 ruleTrekkingTour
{ after(grammarAccess.getTrekkingTourRule()); } 
	 EOF 
;

// Rule TrekkingTour
ruleTrekkingTour 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTrekkingTourAccess().getGroup()); }
		(rule__TrekkingTour__Group__0)
		{ after(grammarAccess.getTrekkingTourAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParachuteTour
entryRuleParachuteTour
:
{ before(grammarAccess.getParachuteTourRule()); }
	 ruleParachuteTour
{ after(grammarAccess.getParachuteTourRule()); } 
	 EOF 
;

// Rule ParachuteTour
ruleParachuteTour 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParachuteTourAccess().getGroup()); }
		(rule__ParachuteTour__Group__0)
		{ after(grammarAccess.getParachuteTourAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCarRental
entryRuleCarRental
:
{ before(grammarAccess.getCarRentalRule()); }
	 ruleCarRental
{ after(grammarAccess.getCarRentalRule()); } 
	 EOF 
;

// Rule CarRental
ruleCarRental 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCarRentalAccess().getGroup()); }
		(rule__CarRental__Group__0)
		{ after(grammarAccess.getCarRentalAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInsurance
entryRuleInsurance
:
{ before(grammarAccess.getInsuranceRule()); }
	 ruleInsurance
{ after(grammarAccess.getInsuranceRule()); } 
	 EOF 
;

// Rule Insurance
ruleInsurance 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInsuranceAccess().getGroup()); }
		(rule__Insurance__Group__0)
		{ after(grammarAccess.getInsuranceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule InsuranceType
ruleInsuranceType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInsuranceTypeAccess().getAlternatives()); }
		(rule__InsuranceType__Alternatives)
		{ after(grammarAccess.getInsuranceTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Item__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getItemAccess().getFlightParserRuleCall_0()); }
		ruleFlight
		{ after(grammarAccess.getItemAccess().getFlightParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getItemAccess().getHotelParserRuleCall_1()); }
		ruleHotel
		{ after(grammarAccess.getItemAccess().getHotelParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getItemAccess().getTrekkingTourParserRuleCall_2()); }
		ruleTrekkingTour
		{ after(grammarAccess.getItemAccess().getTrekkingTourParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getItemAccess().getParachuteTourParserRuleCall_3()); }
		ruleParachuteTour
		{ after(grammarAccess.getItemAccess().getParachuteTourParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getItemAccess().getCarRentalParserRuleCall_4()); }
		ruleCarRental
		{ after(grammarAccess.getItemAccess().getCarRentalParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getItemAccess().getInsuranceParserRuleCall_5()); }
		ruleInsurance
		{ after(grammarAccess.getItemAccess().getInsuranceParserRuleCall_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
		RULE_ID
		{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InsuranceType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInsuranceTypeAccess().getCarInsuranceEnumLiteralDeclaration_0()); }
		('CarInsurance')
		{ after(grammarAccess.getInsuranceTypeAccess().getCarInsuranceEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getInsuranceTypeAccess().getTravelInsuranceEnumLiteralDeclaration_1()); }
		('TravelInsurance')
		{ after(grammarAccess.getInsuranceTypeAccess().getTravelInsuranceEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Travel__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Travel__Group__0__Impl
	rule__Travel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Travel__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTravelAccess().getTravelKeyword_0()); }
	'Travel'
	{ after(grammarAccess.getTravelAccess().getTravelKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Travel__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Travel__Group__1__Impl
	rule__Travel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Travel__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTravelAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
	{ after(grammarAccess.getTravelAccess().getIDTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Travel__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Travel__Group__2__Impl
	rule__Travel__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Travel__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTravelAccess().getStartAssignment_2()); }
	(rule__Travel__StartAssignment_2)
	{ after(grammarAccess.getTravelAccess().getStartAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Travel__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Travel__Group__3__Impl
	rule__Travel__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Travel__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getTravelAccess().getItemsAssignment_3()); }
		(rule__Travel__ItemsAssignment_3)
		{ after(grammarAccess.getTravelAccess().getItemsAssignment_3()); }
	)
	(
		{ before(grammarAccess.getTravelAccess().getItemsAssignment_3()); }
		(rule__Travel__ItemsAssignment_3)*
		{ after(grammarAccess.getTravelAccess().getItemsAssignment_3()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Travel__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Travel__Group__4__Impl
	rule__Travel__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Travel__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTravelAccess().getDataAssignment_4()); }
	(rule__Travel__DataAssignment_4)
	{ after(grammarAccess.getTravelAccess().getDataAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Travel__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Travel__Group__5__Impl
	rule__Travel__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Travel__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTravelAccess().getConnectionsAssignment_5()); }
	(rule__Travel__ConnectionsAssignment_5)*
	{ after(grammarAccess.getTravelAccess().getConnectionsAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Travel__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Travel__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Travel__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTravelAccess().getEndAssignment_6()); }
	(rule__Travel__EndAssignment_6)
	{ after(grammarAccess.getTravelAccess().getEndAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Data__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Data__Group__0__Impl
	rule__Data__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataAccess().getCustomerDataKeyword_0()); }
	'CustomerData'
	{ after(grammarAccess.getDataAccess().getCustomerDataKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Data__Group__1__Impl
	rule__Data__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataAccess().getNameAssignment_1()); }
	(rule__Data__NameAssignment_1)
	{ after(grammarAccess.getDataAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Data__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataAccess().getParametersAssignment_2()); }
	(rule__Data__ParametersAssignment_2)?
	{ after(grammarAccess.getDataAccess().getParametersAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__0__Impl
	rule__Parameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getParameterKeyword_0()); }
	'Parameter'
	{ after(grammarAccess.getParameterAccess().getParameterKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__1__Impl
	rule__Parameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getNameAssignment_1()); }
	(rule__Parameter__NameAssignment_1)
	{ after(grammarAccess.getParameterAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getValueAssignment_2()); }
	(rule__Parameter__ValueAssignment_2)
	{ after(grammarAccess.getParameterAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Connection__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connection__Group__0__Impl
	rule__Connection__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectionAccess().getConnectionKeyword_0()); }
	'Connection'
	{ after(grammarAccess.getConnectionAccess().getConnectionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connection__Group__1__Impl
	rule__Connection__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectionAccess().getNameAssignment_1()); }
	(rule__Connection__NameAssignment_1)
	{ after(grammarAccess.getConnectionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connection__Group__2__Impl
	rule__Connection__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectionAccess().getSourceNodeAssignment_2()); }
	(rule__Connection__SourceNodeAssignment_2)
	{ after(grammarAccess.getConnectionAccess().getSourceNodeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Connection__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConnectionAccess().getTargetNodeAssignment_3()); }
	(rule__Connection__TargetNodeAssignment_3)
	{ after(grammarAccess.getConnectionAccess().getTargetNodeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Flight__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Flight__Group__0__Impl
	rule__Flight__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Flight__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFlightAccess().getFlightAction_0()); }
	()
	{ after(grammarAccess.getFlightAccess().getFlightAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Flight__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Flight__Group__1__Impl
	rule__Flight__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Flight__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFlightAccess().getFlightKeyword_1()); }
	'Flight'
	{ after(grammarAccess.getFlightAccess().getFlightKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Flight__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Flight__Group__2__Impl
	rule__Flight__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Flight__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFlightAccess().getNameAssignment_2()); }
	(rule__Flight__NameAssignment_2)
	{ after(grammarAccess.getFlightAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Flight__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Flight__Group__3__Impl
	rule__Flight__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Flight__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFlightAccess().getGroup_3()); }
	(rule__Flight__Group_3__0)?
	{ after(grammarAccess.getFlightAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Flight__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Flight__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Flight__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFlightAccess().getGroup_4()); }
	(rule__Flight__Group_4__0)?
	{ after(grammarAccess.getFlightAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Flight__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Flight__Group_3__0__Impl
	rule__Flight__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Flight__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFlightAccess().getDestinationTownKeyword_3_0()); }
	'destinationTown'
	{ after(grammarAccess.getFlightAccess().getDestinationTownKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Flight__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Flight__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Flight__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFlightAccess().getDestinationTownAssignment_3_1()); }
	(rule__Flight__DestinationTownAssignment_3_1)
	{ after(grammarAccess.getFlightAccess().getDestinationTownAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Flight__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Flight__Group_4__0__Impl
	rule__Flight__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Flight__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFlightAccess().getDestinationCountryKeyword_4_0()); }
	'destinationCountry'
	{ after(grammarAccess.getFlightAccess().getDestinationCountryKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Flight__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Flight__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Flight__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFlightAccess().getDestinationCountryAssignment_4_1()); }
	(rule__Flight__DestinationCountryAssignment_4_1)
	{ after(grammarAccess.getFlightAccess().getDestinationCountryAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Hotel__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Hotel__Group__0__Impl
	rule__Hotel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Hotel__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHotelAccess().getHotelAction_0()); }
	()
	{ after(grammarAccess.getHotelAccess().getHotelAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Hotel__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Hotel__Group__1__Impl
	rule__Hotel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Hotel__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHotelAccess().getHotelKeyword_1()); }
	'Hotel'
	{ after(grammarAccess.getHotelAccess().getHotelKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Hotel__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Hotel__Group__2__Impl
	rule__Hotel__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Hotel__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHotelAccess().getNameAssignment_2()); }
	(rule__Hotel__NameAssignment_2)
	{ after(grammarAccess.getHotelAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Hotel__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Hotel__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Hotel__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHotelAccess().getGroup_3()); }
	(rule__Hotel__Group_3__0)?
	{ after(grammarAccess.getHotelAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Hotel__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Hotel__Group_3__0__Impl
	rule__Hotel__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Hotel__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHotelAccess().getHotelNameKeyword_3_0()); }
	'hotelName'
	{ after(grammarAccess.getHotelAccess().getHotelNameKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Hotel__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Hotel__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Hotel__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHotelAccess().getHotelNameAssignment_3_1()); }
	(rule__Hotel__HotelNameAssignment_3_1)
	{ after(grammarAccess.getHotelAccess().getHotelNameAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TrekkingTour__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TrekkingTour__Group__0__Impl
	rule__TrekkingTour__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TrekkingTour__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTrekkingTourAccess().getTrekkingTourAction_0()); }
	()
	{ after(grammarAccess.getTrekkingTourAccess().getTrekkingTourAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TrekkingTour__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TrekkingTour__Group__1__Impl
	rule__TrekkingTour__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TrekkingTour__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTrekkingTourAccess().getTrekkingTourKeyword_1()); }
	'TrekkingTour'
	{ after(grammarAccess.getTrekkingTourAccess().getTrekkingTourKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TrekkingTour__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TrekkingTour__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TrekkingTour__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTrekkingTourAccess().getNameAssignment_2()); }
	(rule__TrekkingTour__NameAssignment_2)
	{ after(grammarAccess.getTrekkingTourAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParachuteTour__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParachuteTour__Group__0__Impl
	rule__ParachuteTour__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParachuteTour__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParachuteTourAccess().getParachuteTourAction_0()); }
	()
	{ after(grammarAccess.getParachuteTourAccess().getParachuteTourAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParachuteTour__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParachuteTour__Group__1__Impl
	rule__ParachuteTour__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParachuteTour__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParachuteTourAccess().getParachuteTourKeyword_1()); }
	'ParachuteTour'
	{ after(grammarAccess.getParachuteTourAccess().getParachuteTourKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParachuteTour__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParachuteTour__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParachuteTour__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParachuteTourAccess().getNameAssignment_2()); }
	(rule__ParachuteTour__NameAssignment_2)
	{ after(grammarAccess.getParachuteTourAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CarRental__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CarRental__Group__0__Impl
	rule__CarRental__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CarRental__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCarRentalAccess().getCarRentalAction_0()); }
	()
	{ after(grammarAccess.getCarRentalAccess().getCarRentalAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CarRental__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CarRental__Group__1__Impl
	rule__CarRental__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CarRental__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCarRentalAccess().getCarRentalKeyword_1()); }
	'CarRental'
	{ after(grammarAccess.getCarRentalAccess().getCarRentalKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CarRental__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CarRental__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CarRental__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCarRentalAccess().getNameAssignment_2()); }
	(rule__CarRental__NameAssignment_2)
	{ after(grammarAccess.getCarRentalAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Insurance__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Insurance__Group__0__Impl
	rule__Insurance__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Insurance__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsuranceAccess().getInsuranceAction_0()); }
	()
	{ after(grammarAccess.getInsuranceAccess().getInsuranceAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Insurance__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Insurance__Group__1__Impl
	rule__Insurance__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Insurance__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsuranceAccess().getInsuranceKeyword_1()); }
	'Insurance'
	{ after(grammarAccess.getInsuranceAccess().getInsuranceKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Insurance__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Insurance__Group__2__Impl
	rule__Insurance__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Insurance__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsuranceAccess().getNameAssignment_2()); }
	(rule__Insurance__NameAssignment_2)
	{ after(grammarAccess.getInsuranceAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Insurance__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Insurance__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Insurance__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsuranceAccess().getGroup_3()); }
	(rule__Insurance__Group_3__0)?
	{ after(grammarAccess.getInsuranceAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Insurance__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Insurance__Group_3__0__Impl
	rule__Insurance__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Insurance__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsuranceAccess().getTypeKeyword_3_0()); }
	'type'
	{ after(grammarAccess.getInsuranceAccess().getTypeKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Insurance__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Insurance__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Insurance__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsuranceAccess().getTypeAssignment_3_1()); }
	(rule__Insurance__TypeAssignment_3_1)
	{ after(grammarAccess.getInsuranceAccess().getTypeAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Travel__StartAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTravelAccess().getStartStartParserRuleCall_2_0()); }
		ruleStart
		{ after(grammarAccess.getTravelAccess().getStartStartParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Travel__ItemsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTravelAccess().getItemsItemParserRuleCall_3_0()); }
		ruleItem
		{ after(grammarAccess.getTravelAccess().getItemsItemParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Travel__DataAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTravelAccess().getDataDataParserRuleCall_4_0()); }
		ruleData
		{ after(grammarAccess.getTravelAccess().getDataDataParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Travel__ConnectionsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTravelAccess().getConnectionsConnectionParserRuleCall_5_0()); }
		ruleConnection
		{ after(grammarAccess.getTravelAccess().getConnectionsConnectionParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Travel__EndAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTravelAccess().getEndEndParserRuleCall_6_0()); }
		ruleEnd
		{ after(grammarAccess.getTravelAccess().getEndEndParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataAccess().getNameEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getDataAccess().getNameEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__ParametersAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataAccess().getParametersParameterParserRuleCall_2_0()); }
		ruleParameter
		{ after(grammarAccess.getDataAccess().getParametersParameterParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getNameEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getParameterAccess().getNameEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getValueEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getParameterAccess().getValueEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectionAccess().getNameEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getConnectionAccess().getNameEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__SourceNodeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectionAccess().getSourceNodeNodeCrossReference_2_0()); }
		(
			{ before(grammarAccess.getConnectionAccess().getSourceNodeNodeEStringParserRuleCall_2_0_1()); }
			ruleEString
			{ after(grammarAccess.getConnectionAccess().getSourceNodeNodeEStringParserRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getConnectionAccess().getSourceNodeNodeCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__TargetNodeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConnectionAccess().getTargetNodeNodeCrossReference_3_0()); }
		(
			{ before(grammarAccess.getConnectionAccess().getTargetNodeNodeEStringParserRuleCall_3_0_1()); }
			ruleEString
			{ after(grammarAccess.getConnectionAccess().getTargetNodeNodeEStringParserRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getConnectionAccess().getTargetNodeNodeCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Flight__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFlightAccess().getNameEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getFlightAccess().getNameEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Flight__DestinationTownAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFlightAccess().getDestinationTownEStringParserRuleCall_3_1_0()); }
		ruleEString
		{ after(grammarAccess.getFlightAccess().getDestinationTownEStringParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Flight__DestinationCountryAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFlightAccess().getDestinationCountryEStringParserRuleCall_4_1_0()); }
		ruleEString
		{ after(grammarAccess.getFlightAccess().getDestinationCountryEStringParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Hotel__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHotelAccess().getNameEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getHotelAccess().getNameEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Hotel__HotelNameAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHotelAccess().getHotelNameEStringParserRuleCall_3_1_0()); }
		ruleEString
		{ after(grammarAccess.getHotelAccess().getHotelNameEStringParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TrekkingTour__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTrekkingTourAccess().getNameEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getTrekkingTourAccess().getNameEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParachuteTour__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParachuteTourAccess().getNameEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getParachuteTourAccess().getNameEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CarRental__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCarRentalAccess().getNameEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getCarRentalAccess().getNameEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Insurance__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInsuranceAccess().getNameEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getInsuranceAccess().getNameEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Insurance__TypeAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInsuranceAccess().getTypeInsuranceTypeEnumRuleCall_3_1_0()); }
		ruleInsuranceType
		{ after(grammarAccess.getInsuranceAccess().getTypeInsuranceTypeEnumRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
