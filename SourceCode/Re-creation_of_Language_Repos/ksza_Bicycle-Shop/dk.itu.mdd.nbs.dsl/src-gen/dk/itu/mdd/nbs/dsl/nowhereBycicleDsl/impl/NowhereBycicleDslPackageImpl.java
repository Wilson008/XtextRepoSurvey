/**
 * generated by Xtext 2.35.0
 */
package dk.itu.mdd.nbs.dsl.nowhereBycicleDsl.impl;

import dk.itu.mdd.nbs.dsl.nowhereBycicleDsl.Bicycle;
import dk.itu.mdd.nbs.dsl.nowhereBycicleDsl.Color;
import dk.itu.mdd.nbs.dsl.nowhereBycicleDsl.CustomerData;
import dk.itu.mdd.nbs.dsl.nowhereBycicleDsl.Frame;
import dk.itu.mdd.nbs.dsl.nowhereBycicleDsl.FrameType;
import dk.itu.mdd.nbs.dsl.nowhereBycicleDsl.HandBrakes;
import dk.itu.mdd.nbs.dsl.nowhereBycicleDsl.HandleBars;
import dk.itu.mdd.nbs.dsl.nowhereBycicleDsl.InnerGear;
import dk.itu.mdd.nbs.dsl.nowhereBycicleDsl.Manufacturers;
import dk.itu.mdd.nbs.dsl.nowhereBycicleDsl.NowhereBycicleDslFactory;
import dk.itu.mdd.nbs.dsl.nowhereBycicleDsl.NowhereBycicleDslPackage;
import dk.itu.mdd.nbs.dsl.nowhereBycicleDsl.OuterGear;
import dk.itu.mdd.nbs.dsl.nowhereBycicleDsl.Parameter;
import dk.itu.mdd.nbs.dsl.nowhereBycicleDsl.Part;
import dk.itu.mdd.nbs.dsl.nowhereBycicleDsl.PedalTypes;
import dk.itu.mdd.nbs.dsl.nowhereBycicleDsl.Pedals;
import dk.itu.mdd.nbs.dsl.nowhereBycicleDsl.Saddle;
import dk.itu.mdd.nbs.dsl.nowhereBycicleDsl.SaddleType;
import dk.itu.mdd.nbs.dsl.nowhereBycicleDsl.Wheel;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EEnum;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class NowhereBycicleDslPackageImpl extends EPackageImpl implements NowhereBycicleDslPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass bicycleEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass partEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass customerDataEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass parameterEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass frameEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass wheelEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass innerGearEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass outerGearEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass pedalsEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass saddleEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass handBrakesEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass handleBarsEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum manufacturersEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum frameTypeEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum colorEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum pedalTypesEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum saddleTypeEEnum = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see dk.itu.mdd.nbs.dsl.nowhereBycicleDsl.NowhereBycicleDslPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private NowhereBycicleDslPackageImpl()
  {
    super(eNS_URI, NowhereBycicleDslFactory.eINSTANCE);
  }
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   *
   * <p>This method is used to initialize {@link NowhereBycicleDslPackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static NowhereBycicleDslPackage init()
  {
    if (isInited) return (NowhereBycicleDslPackage)EPackage.Registry.INSTANCE.getEPackage(NowhereBycicleDslPackage.eNS_URI);

    // Obtain or create and register package
    Object registeredNowhereBycicleDslPackage = EPackage.Registry.INSTANCE.get(eNS_URI);
    NowhereBycicleDslPackageImpl theNowhereBycicleDslPackage = registeredNowhereBycicleDslPackage instanceof NowhereBycicleDslPackageImpl ? (NowhereBycicleDslPackageImpl)registeredNowhereBycicleDslPackage : new NowhereBycicleDslPackageImpl();

    isInited = true;

    // Create package meta-data objects
    theNowhereBycicleDslPackage.createPackageContents();

    // Initialize created meta-data
    theNowhereBycicleDslPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theNowhereBycicleDslPackage.freeze();

    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(NowhereBycicleDslPackage.eNS_URI, theNowhereBycicleDslPackage);
    return theNowhereBycicleDslPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getBicycle()
  {
    return bicycleEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getBicycle_DeliveryDate()
  {
    return (EAttribute)bicycleEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBicycle_Parts()
  {
    return (EReference)bicycleEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBicycle_CustomerData()
  {
    return (EReference)bicycleEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBicycle_Parameters()
  {
    return (EReference)bicycleEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPart()
  {
    return partEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getPart_Name()
  {
    return (EAttribute)partEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getPart_Price()
  {
    return (EAttribute)partEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getPart_Manufacturer()
  {
    return (EAttribute)partEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getCustomerData()
  {
    return customerDataEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getCustomerData_Name()
  {
    return (EAttribute)customerDataEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getCustomerData_Address()
  {
    return (EAttribute)customerDataEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getCustomerData_Parameters()
  {
    return (EReference)customerDataEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getParameter()
  {
    return parameterEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getParameter_Name()
  {
    return (EAttribute)parameterEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getParameter_Value()
  {
    return (EAttribute)parameterEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFrame()
  {
    return frameEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getFrame_FrameType()
  {
    return (EAttribute)frameEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getFrame_Color()
  {
    return (EAttribute)frameEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getWheel()
  {
    return wheelEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getInnerGear()
  {
    return innerGearEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getOuterGear()
  {
    return outerGearEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPedals()
  {
    return pedalsEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getPedals_PedalType()
  {
    return (EAttribute)pedalsEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSaddle()
  {
    return saddleEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSaddle_SaddleType()
  {
    return (EAttribute)saddleEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getHandBrakes()
  {
    return handBrakesEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getHandleBars()
  {
    return handleBarsEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getManufacturers()
  {
    return manufacturersEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getFrameType()
  {
    return frameTypeEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getColor()
  {
    return colorEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getPedalTypes()
  {
    return pedalTypesEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getSaddleType()
  {
    return saddleTypeEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NowhereBycicleDslFactory getNowhereBycicleDslFactory()
  {
    return (NowhereBycicleDslFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    bicycleEClass = createEClass(BICYCLE);
    createEAttribute(bicycleEClass, BICYCLE__DELIVERY_DATE);
    createEReference(bicycleEClass, BICYCLE__PARTS);
    createEReference(bicycleEClass, BICYCLE__CUSTOMER_DATA);
    createEReference(bicycleEClass, BICYCLE__PARAMETERS);

    partEClass = createEClass(PART);
    createEAttribute(partEClass, PART__NAME);
    createEAttribute(partEClass, PART__PRICE);
    createEAttribute(partEClass, PART__MANUFACTURER);

    customerDataEClass = createEClass(CUSTOMER_DATA);
    createEAttribute(customerDataEClass, CUSTOMER_DATA__NAME);
    createEAttribute(customerDataEClass, CUSTOMER_DATA__ADDRESS);
    createEReference(customerDataEClass, CUSTOMER_DATA__PARAMETERS);

    parameterEClass = createEClass(PARAMETER);
    createEAttribute(parameterEClass, PARAMETER__NAME);
    createEAttribute(parameterEClass, PARAMETER__VALUE);

    frameEClass = createEClass(FRAME);
    createEAttribute(frameEClass, FRAME__FRAME_TYPE);
    createEAttribute(frameEClass, FRAME__COLOR);

    wheelEClass = createEClass(WHEEL);

    innerGearEClass = createEClass(INNER_GEAR);

    outerGearEClass = createEClass(OUTER_GEAR);

    pedalsEClass = createEClass(PEDALS);
    createEAttribute(pedalsEClass, PEDALS__PEDAL_TYPE);

    saddleEClass = createEClass(SADDLE);
    createEAttribute(saddleEClass, SADDLE__SADDLE_TYPE);

    handBrakesEClass = createEClass(HAND_BRAKES);

    handleBarsEClass = createEClass(HANDLE_BARS);

    // Create enums
    manufacturersEEnum = createEEnum(MANUFACTURERS);
    frameTypeEEnum = createEEnum(FRAME_TYPE);
    colorEEnum = createEEnum(COLOR);
    pedalTypesEEnum = createEEnum(PEDAL_TYPES);
    saddleTypeEEnum = createEEnum(SADDLE_TYPE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes
    frameEClass.getESuperTypes().add(this.getPart());
    wheelEClass.getESuperTypes().add(this.getPart());
    innerGearEClass.getESuperTypes().add(this.getPart());
    outerGearEClass.getESuperTypes().add(this.getPart());
    pedalsEClass.getESuperTypes().add(this.getPart());
    saddleEClass.getESuperTypes().add(this.getPart());
    handBrakesEClass.getESuperTypes().add(this.getPart());
    handleBarsEClass.getESuperTypes().add(this.getPart());

    // Initialize classes and features; add operations and parameters
    initEClass(bicycleEClass, Bicycle.class, "Bicycle", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getBicycle_DeliveryDate(), ecorePackage.getEString(), "deliveryDate", null, 0, 1, Bicycle.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getBicycle_Parts(), this.getPart(), null, "parts", null, 0, -1, Bicycle.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getBicycle_CustomerData(), this.getCustomerData(), null, "customerData", null, 0, -1, Bicycle.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getBicycle_Parameters(), this.getParameter(), null, "parameters", null, 0, -1, Bicycle.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(partEClass, Part.class, "Part", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getPart_Name(), ecorePackage.getEString(), "name", null, 0, 1, Part.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getPart_Price(), ecorePackage.getEDouble(), "price", null, 0, 1, Part.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getPart_Manufacturer(), this.getManufacturers(), "manufacturer", null, 0, 1, Part.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(customerDataEClass, CustomerData.class, "CustomerData", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getCustomerData_Name(), ecorePackage.getEString(), "name", null, 0, 1, CustomerData.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getCustomerData_Address(), ecorePackage.getEString(), "address", null, 0, 1, CustomerData.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getCustomerData_Parameters(), this.getParameter(), null, "parameters", null, 0, -1, CustomerData.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(parameterEClass, Parameter.class, "Parameter", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getParameter_Name(), ecorePackage.getEString(), "name", null, 0, 1, Parameter.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getParameter_Value(), ecorePackage.getEString(), "value", null, 0, 1, Parameter.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(frameEClass, Frame.class, "Frame", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getFrame_FrameType(), this.getFrameType(), "frameType", null, 0, 1, Frame.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getFrame_Color(), this.getColor(), "color", null, 0, 1, Frame.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(wheelEClass, Wheel.class, "Wheel", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(innerGearEClass, InnerGear.class, "InnerGear", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(outerGearEClass, OuterGear.class, "OuterGear", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(pedalsEClass, Pedals.class, "Pedals", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getPedals_PedalType(), this.getPedalTypes(), "pedalType", null, 0, 1, Pedals.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(saddleEClass, Saddle.class, "Saddle", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getSaddle_SaddleType(), this.getSaddleType(), "saddleType", null, 0, 1, Saddle.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(handBrakesEClass, HandBrakes.class, "HandBrakes", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(handleBarsEClass, HandleBars.class, "HandleBars", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    // Initialize enums and add enum literals
    initEEnum(manufacturersEEnum, Manufacturers.class, "Manufacturers");
    addEEnumLiteral(manufacturersEEnum, Manufacturers.SUPER_PARTS);
    addEEnumLiteral(manufacturersEEnum, Manufacturers.HOME_PARTS);
    addEEnumLiteral(manufacturersEEnum, Manufacturers.HAND_MADE_PARTS);

    initEEnum(frameTypeEEnum, FrameType.class, "FrameType");
    addEEnumLiteral(frameTypeEEnum, FrameType.RACER_FRAME);
    addEEnumLiteral(frameTypeEEnum, FrameType.CITY_FRAME);
    addEEnumLiteral(frameTypeEEnum, FrameType.UNICYCLE_FRAME);

    initEEnum(colorEEnum, Color.class, "Color");
    addEEnumLiteral(colorEEnum, Color.RED);
    addEEnumLiteral(colorEEnum, Color.BLUE);
    addEEnumLiteral(colorEEnum, Color.BLACK);
    addEEnumLiteral(colorEEnum, Color.GREEN);

    initEEnum(pedalTypesEEnum, PedalTypes.class, "PedalTypes");
    addEEnumLiteral(pedalTypesEEnum, PedalTypes.CHILD_PEDALS);
    addEEnumLiteral(pedalTypesEEnum, PedalTypes.SPORTS_PEDALS);
    addEEnumLiteral(pedalTypesEEnum, PedalTypes.COMFORT_PEDALS);
    addEEnumLiteral(pedalTypesEEnum, PedalTypes.EXTREME_PEDALS);

    initEEnum(saddleTypeEEnum, SaddleType.class, "SaddleType");
    addEEnumLiteral(saddleTypeEEnum, SaddleType.RACING_SADDLE);
    addEEnumLiteral(saddleTypeEEnum, SaddleType.CHILD_SADDLE);
    addEEnumLiteral(saddleTypeEEnum, SaddleType.SPECIAL_UNICYCLE_SADDLE);
    addEEnumLiteral(saddleTypeEEnum, SaddleType.COMFORT_SADDLE);

    // Create resource
    createResource(eNS_URI);
  }

} //NowhereBycicleDslPackageImpl
