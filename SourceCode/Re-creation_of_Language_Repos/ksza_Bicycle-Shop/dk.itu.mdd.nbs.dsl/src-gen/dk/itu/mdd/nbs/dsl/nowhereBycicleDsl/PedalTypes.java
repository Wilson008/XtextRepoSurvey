/**
 * generated by Xtext 2.35.0
 */
package dk.itu.mdd.nbs.dsl.nowhereBycicleDsl;

import java.util.Arrays;
import java.util.Collections;
import java.util.List;

import org.eclipse.emf.common.util.Enumerator;

/**
 * <!-- begin-user-doc -->
 * A representation of the literals of the enumeration '<em><b>Pedal Types</b></em>',
 * and utility methods for working with them.
 * <!-- end-user-doc -->
 * @see dk.itu.mdd.nbs.dsl.nowhereBycicleDsl.NowhereBycicleDslPackage#getPedalTypes()
 * @model
 * @generated
 */
public enum PedalTypes implements Enumerator
{
  /**
   * The '<em><b>Child Pedals</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #CHILD_PEDALS_VALUE
   * @generated
   * @ordered
   */
  CHILD_PEDALS(0, "ChildPedals", "ChildPedals"),

  /**
   * The '<em><b>Sports Pedals</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #SPORTS_PEDALS_VALUE
   * @generated
   * @ordered
   */
  SPORTS_PEDALS(1, "SportsPedals", "SportsPedals"),

  /**
   * The '<em><b>Comfort Pedals</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #COMFORT_PEDALS_VALUE
   * @generated
   * @ordered
   */
  COMFORT_PEDALS(2, "ComfortPedals", "ComfortPedals"),

  /**
   * The '<em><b>Extreme Pedals</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #EXTREME_PEDALS_VALUE
   * @generated
   * @ordered
   */
  EXTREME_PEDALS(3, "ExtremePedals", "ExtremePedals");

  /**
   * The '<em><b>Child Pedals</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #CHILD_PEDALS
   * @model name="ChildPedals"
   * @generated
   * @ordered
   */
  public static final int CHILD_PEDALS_VALUE = 0;

  /**
   * The '<em><b>Sports Pedals</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #SPORTS_PEDALS
   * @model name="SportsPedals"
   * @generated
   * @ordered
   */
  public static final int SPORTS_PEDALS_VALUE = 1;

  /**
   * The '<em><b>Comfort Pedals</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #COMFORT_PEDALS
   * @model name="ComfortPedals"
   * @generated
   * @ordered
   */
  public static final int COMFORT_PEDALS_VALUE = 2;

  /**
   * The '<em><b>Extreme Pedals</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #EXTREME_PEDALS
   * @model name="ExtremePedals"
   * @generated
   * @ordered
   */
  public static final int EXTREME_PEDALS_VALUE = 3;

  /**
   * An array of all the '<em><b>Pedal Types</b></em>' enumerators.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static final PedalTypes[] VALUES_ARRAY =
    new PedalTypes[]
    {
      CHILD_PEDALS,
      SPORTS_PEDALS,
      COMFORT_PEDALS,
      EXTREME_PEDALS,
    };

  /**
   * A public read-only list of all the '<em><b>Pedal Types</b></em>' enumerators.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final List<PedalTypes> VALUES = Collections.unmodifiableList(Arrays.asList(VALUES_ARRAY));

  /**
   * Returns the '<em><b>Pedal Types</b></em>' literal with the specified literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param literal the literal.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static PedalTypes get(String literal)
  {
    for (int i = 0; i < VALUES_ARRAY.length; ++i)
    {
      PedalTypes result = VALUES_ARRAY[i];
      if (result.toString().equals(literal))
      {
        return result;
      }
    }
    return null;
  }

  /**
   * Returns the '<em><b>Pedal Types</b></em>' literal with the specified name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param name the name.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static PedalTypes getByName(String name)
  {
    for (int i = 0; i < VALUES_ARRAY.length; ++i)
    {
      PedalTypes result = VALUES_ARRAY[i];
      if (result.getName().equals(name))
      {
        return result;
      }
    }
    return null;
  }

  /**
   * Returns the '<em><b>Pedal Types</b></em>' literal with the specified integer value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the integer value.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static PedalTypes get(int value)
  {
    switch (value)
    {
      case CHILD_PEDALS_VALUE: return CHILD_PEDALS;
      case SPORTS_PEDALS_VALUE: return SPORTS_PEDALS;
      case COMFORT_PEDALS_VALUE: return COMFORT_PEDALS;
      case EXTREME_PEDALS_VALUE: return EXTREME_PEDALS;
    }
    return null;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final int value;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final String name;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final String literal;

  /**
   * Only this class can construct instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private PedalTypes(int value, String name, String literal)
  {
    this.value = value;
    this.name = name;
    this.literal = literal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getValue()
  {
    return value;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getLiteral()
  {
    return literal;
  }

  /**
   * Returns the literal value of the enumerator, which is its string representation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    return literal;
  }
  
} //PedalTypes
