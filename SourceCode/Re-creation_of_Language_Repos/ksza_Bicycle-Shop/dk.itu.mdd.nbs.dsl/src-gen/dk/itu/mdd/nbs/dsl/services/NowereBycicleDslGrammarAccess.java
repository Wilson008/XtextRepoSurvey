/*
 * generated by Xtext 2.35.0
 */
package dk.itu.mdd.nbs.dsl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class NowereBycicleDslGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class BicycleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "dk.itu.mdd.nbs.dsl.NowereBycicleDsl.Bicycle");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cBicycleAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cBicycleKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cDeliveryDateKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cDeliveryDateAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cDeliveryDateEStringParserRuleCall_3_1_0 = (RuleCall)cDeliveryDateAssignment_3_1.eContents().get(0);
		private final Assignment cPartsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cPartsPartParserRuleCall_4_0 = (RuleCall)cPartsAssignment_4.eContents().get(0);
		private final Assignment cCustomerDataAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cCustomerDataCustomerDataParserRuleCall_5_0 = (RuleCall)cCustomerDataAssignment_5.eContents().get(0);
		private final Assignment cParametersAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cParametersParameterParserRuleCall_6_0 = (RuleCall)cParametersAssignment_6.eContents().get(0);
		
		//Bicycle returns Bicycle:
		//    {Bicycle}
		//    'Bicycle' (ID)?
		//    ('deliveryDate' deliveryDate=EString)?
		//    (parts+=Part)+
		//    (customerData+=CustomerData)?
		//    (parameters+=Parameter)*;
		@Override public ParserRule getRule() { return rule; }
		
		//{Bicycle}
		//'Bicycle' (ID)?
		//('deliveryDate' deliveryDate=EString)?
		//(parts+=Part)+
		//(customerData+=CustomerData)?
		//(parameters+=Parameter)*
		public Group getGroup() { return cGroup; }
		
		//{Bicycle}
		public Action getBicycleAction_0() { return cBicycleAction_0; }
		
		//'Bicycle'
		public Keyword getBicycleKeyword_1() { return cBicycleKeyword_1; }
		
		//(ID)?
		public RuleCall getIDTerminalRuleCall_2() { return cIDTerminalRuleCall_2; }
		
		//('deliveryDate' deliveryDate=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'deliveryDate'
		public Keyword getDeliveryDateKeyword_3_0() { return cDeliveryDateKeyword_3_0; }
		
		//deliveryDate=EString
		public Assignment getDeliveryDateAssignment_3_1() { return cDeliveryDateAssignment_3_1; }
		
		//EString
		public RuleCall getDeliveryDateEStringParserRuleCall_3_1_0() { return cDeliveryDateEStringParserRuleCall_3_1_0; }
		
		//(parts+=Part)+
		public Assignment getPartsAssignment_4() { return cPartsAssignment_4; }
		
		//Part
		public RuleCall getPartsPartParserRuleCall_4_0() { return cPartsPartParserRuleCall_4_0; }
		
		//(customerData+=CustomerData)?
		public Assignment getCustomerDataAssignment_5() { return cCustomerDataAssignment_5; }
		
		//CustomerData
		public RuleCall getCustomerDataCustomerDataParserRuleCall_5_0() { return cCustomerDataCustomerDataParserRuleCall_5_0; }
		
		//(parameters+=Parameter)*
		public Assignment getParametersAssignment_6() { return cParametersAssignment_6; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_6_0() { return cParametersParameterParserRuleCall_6_0; }
	}
	public class PartElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "dk.itu.mdd.nbs.dsl.NowereBycicleDsl.Part");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cFrameParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cWheelParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cInnerGearParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cOuterGearParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cPedalsParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cSaddleParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cHandBrakesParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cHandleBarsParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		
		//Part returns Part:
		//    Frame | Wheel | InnerGear | OuterGear | Pedals | Saddle | HandBrakes | HandleBars;
		@Override public ParserRule getRule() { return rule; }
		
		//Frame | Wheel | InnerGear | OuterGear | Pedals | Saddle | HandBrakes | HandleBars
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Frame
		public RuleCall getFrameParserRuleCall_0() { return cFrameParserRuleCall_0; }
		
		//Wheel
		public RuleCall getWheelParserRuleCall_1() { return cWheelParserRuleCall_1; }
		
		//InnerGear
		public RuleCall getInnerGearParserRuleCall_2() { return cInnerGearParserRuleCall_2; }
		
		//OuterGear
		public RuleCall getOuterGearParserRuleCall_3() { return cOuterGearParserRuleCall_3; }
		
		//Pedals
		public RuleCall getPedalsParserRuleCall_4() { return cPedalsParserRuleCall_4; }
		
		//Saddle
		public RuleCall getSaddleParserRuleCall_5() { return cSaddleParserRuleCall_5; }
		
		//HandBrakes
		public RuleCall getHandBrakesParserRuleCall_6() { return cHandBrakesParserRuleCall_6; }
		
		//HandleBars
		public RuleCall getHandleBarsParserRuleCall_7() { return cHandleBarsParserRuleCall_7; }
	}
	public class CustomerDataElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "dk.itu.mdd.nbs.dsl.NowereBycicleDsl.CustomerData");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCustomerDataAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cCustomerDataKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cAddressKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cAddressAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cAddressEStringParserRuleCall_3_1_0 = (RuleCall)cAddressAssignment_3_1.eContents().get(0);
		private final Assignment cParametersAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cParametersParameterParserRuleCall_4_0 = (RuleCall)cParametersAssignment_4.eContents().get(0);
		
		//CustomerData returns CustomerData:
		//    {CustomerData}
		//    'CustomerData'
		//    name=EString
		//    ('address' address=EString)?
		//    (parameters+=Parameter)*;
		@Override public ParserRule getRule() { return rule; }
		
		//{CustomerData}
		//'CustomerData'
		//name=EString
		//('address' address=EString)?
		//(parameters+=Parameter)*
		public Group getGroup() { return cGroup; }
		
		//{CustomerData}
		public Action getCustomerDataAction_0() { return cCustomerDataAction_0; }
		
		//'CustomerData'
		public Keyword getCustomerDataKeyword_1() { return cCustomerDataKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//('address' address=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'address'
		public Keyword getAddressKeyword_3_0() { return cAddressKeyword_3_0; }
		
		//address=EString
		public Assignment getAddressAssignment_3_1() { return cAddressAssignment_3_1; }
		
		//EString
		public RuleCall getAddressEStringParserRuleCall_3_1_0() { return cAddressEStringParserRuleCall_3_1_0; }
		
		//(parameters+=Parameter)*
		public Assignment getParametersAssignment_4() { return cParametersAssignment_4; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_4_0() { return cParametersParameterParserRuleCall_4_0; }
	}
	public class ParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "dk.itu.mdd.nbs.dsl.NowereBycicleDsl.Parameter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cParameterAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cParameterKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Assignment cValueAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cValueEStringParserRuleCall_3_0 = (RuleCall)cValueAssignment_3.eContents().get(0);
		
		//Parameter returns Parameter:
		//    {Parameter}
		//    'Parameter'
		//    name=EString
		//    (value=EString)?;
		@Override public ParserRule getRule() { return rule; }
		
		//{Parameter}
		//'Parameter'
		//name=EString
		//(value=EString)?
		public Group getGroup() { return cGroup; }
		
		//{Parameter}
		public Action getParameterAction_0() { return cParameterAction_0; }
		
		//'Parameter'
		public Keyword getParameterKeyword_1() { return cParameterKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//(value=EString)?
		public Assignment getValueAssignment_3() { return cValueAssignment_3; }
		
		//EString
		public RuleCall getValueEStringParserRuleCall_3_0() { return cValueEStringParserRuleCall_3_0; }
	}
	public class EDoubleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "dk.itu.mdd.nbs.dsl.NowereBycicleDsl.EDouble");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cINTTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Alternatives cAlternatives_4_0 = (Alternatives)cGroup_4.eContents().get(0);
		private final Keyword cEKeyword_4_0_0 = (Keyword)cAlternatives_4_0.eContents().get(0);
		private final Keyword cEKeyword_4_0_1 = (Keyword)cAlternatives_4_0.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_4_2 = (RuleCall)cGroup_4.eContents().get(2);
		
		//EDouble returns ecore::EDouble:
		//    '-'? INT? '.' INT (('E'|'e') '-'? INT)?;
		@Override public ParserRule getRule() { return rule; }
		
		//'-'? INT? '.' INT (('E'|'e') '-'? INT)?
		public Group getGroup() { return cGroup; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//INT?
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
		
		//'.'
		public Keyword getFullStopKeyword_2() { return cFullStopKeyword_2; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_3() { return cINTTerminalRuleCall_3; }
		
		//(('E'|'e') '-'? INT)?
		public Group getGroup_4() { return cGroup_4; }
		
		//('E'|'e')
		public Alternatives getAlternatives_4_0() { return cAlternatives_4_0; }
		
		//'E'
		public Keyword getEKeyword_4_0_0() { return cEKeyword_4_0_0; }
		
		//'e'
		public Keyword getEKeyword_4_0_1() { return cEKeyword_4_0_1; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_4_1() { return cHyphenMinusKeyword_4_1; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_4_2() { return cINTTerminalRuleCall_4_2; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "dk.itu.mdd.nbs.dsl.NowereBycicleDsl.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString returns ecore::EString:
		//    STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class EByteElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "dk.itu.mdd.nbs.dsl.NowereBycicleDsl.EByte");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//EByte returns ecore::EByte:
		//    '-'? INT;
		@Override public ParserRule getRule() { return rule; }
		
		//'-'? INT
		public Group getGroup() { return cGroup; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
	}
	public class FrameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "dk.itu.mdd.nbs.dsl.NowereBycicleDsl.Frame");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cFrameAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cFrameKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cPriceKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cPriceAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cPriceEDoubleParserRuleCall_3_1_0 = (RuleCall)cPriceAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cManufacturerKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cManufacturerAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cManufacturerManufacturersEnumRuleCall_4_1_0 = (RuleCall)cManufacturerAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cFrameTypeKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cFrameTypeAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cFrameTypeFrameTypeEnumRuleCall_5_1_0 = (RuleCall)cFrameTypeAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cColorKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cColorAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cColorColorEnumRuleCall_6_1_0 = (RuleCall)cColorAssignment_6_1.eContents().get(0);
		
		//Frame returns Frame:
		//    {Frame}
		//    'Frame' name=EString
		//    ('price' price=EDouble)?
		//    ('manufacturer' manufacturer=Manufacturers)?
		//    ('frameType' frameType=FrameType)?
		//    ('color' color=Color)?;
		@Override public ParserRule getRule() { return rule; }
		
		//{Frame}
		//'Frame' name=EString
		//('price' price=EDouble)?
		//('manufacturer' manufacturer=Manufacturers)?
		//('frameType' frameType=FrameType)?
		//('color' color=Color)?
		public Group getGroup() { return cGroup; }
		
		//{Frame}
		public Action getFrameAction_0() { return cFrameAction_0; }
		
		//'Frame'
		public Keyword getFrameKeyword_1() { return cFrameKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//('price' price=EDouble)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'price'
		public Keyword getPriceKeyword_3_0() { return cPriceKeyword_3_0; }
		
		//price=EDouble
		public Assignment getPriceAssignment_3_1() { return cPriceAssignment_3_1; }
		
		//EDouble
		public RuleCall getPriceEDoubleParserRuleCall_3_1_0() { return cPriceEDoubleParserRuleCall_3_1_0; }
		
		//('manufacturer' manufacturer=Manufacturers)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'manufacturer'
		public Keyword getManufacturerKeyword_4_0() { return cManufacturerKeyword_4_0; }
		
		//manufacturer=Manufacturers
		public Assignment getManufacturerAssignment_4_1() { return cManufacturerAssignment_4_1; }
		
		//Manufacturers
		public RuleCall getManufacturerManufacturersEnumRuleCall_4_1_0() { return cManufacturerManufacturersEnumRuleCall_4_1_0; }
		
		//('frameType' frameType=FrameType)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'frameType'
		public Keyword getFrameTypeKeyword_5_0() { return cFrameTypeKeyword_5_0; }
		
		//frameType=FrameType
		public Assignment getFrameTypeAssignment_5_1() { return cFrameTypeAssignment_5_1; }
		
		//FrameType
		public RuleCall getFrameTypeFrameTypeEnumRuleCall_5_1_0() { return cFrameTypeFrameTypeEnumRuleCall_5_1_0; }
		
		//('color' color=Color)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'color'
		public Keyword getColorKeyword_6_0() { return cColorKeyword_6_0; }
		
		//color=Color
		public Assignment getColorAssignment_6_1() { return cColorAssignment_6_1; }
		
		//Color
		public RuleCall getColorColorEnumRuleCall_6_1_0() { return cColorColorEnumRuleCall_6_1_0; }
	}
	public class WheelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "dk.itu.mdd.nbs.dsl.NowereBycicleDsl.Wheel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cWheelAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cWheelKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cPriceKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cPriceAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cPriceEDoubleParserRuleCall_3_1_0 = (RuleCall)cPriceAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cManufacturerKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cManufacturerAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cManufacturerManufacturersEnumRuleCall_4_1_0 = (RuleCall)cManufacturerAssignment_4_1.eContents().get(0);
		
		//Wheel returns Wheel:
		//    {Wheel}
		//    'Wheel' name=EString
		//    ('price' price=EDouble)?
		//    ('manufacturer' manufacturer=Manufacturers)?;
		@Override public ParserRule getRule() { return rule; }
		
		//{Wheel}
		//'Wheel' name=EString
		//('price' price=EDouble)?
		//('manufacturer' manufacturer=Manufacturers)?
		public Group getGroup() { return cGroup; }
		
		//{Wheel}
		public Action getWheelAction_0() { return cWheelAction_0; }
		
		//'Wheel'
		public Keyword getWheelKeyword_1() { return cWheelKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//('price' price=EDouble)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'price'
		public Keyword getPriceKeyword_3_0() { return cPriceKeyword_3_0; }
		
		//price=EDouble
		public Assignment getPriceAssignment_3_1() { return cPriceAssignment_3_1; }
		
		//EDouble
		public RuleCall getPriceEDoubleParserRuleCall_3_1_0() { return cPriceEDoubleParserRuleCall_3_1_0; }
		
		//('manufacturer' manufacturer=Manufacturers)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'manufacturer'
		public Keyword getManufacturerKeyword_4_0() { return cManufacturerKeyword_4_0; }
		
		//manufacturer=Manufacturers
		public Assignment getManufacturerAssignment_4_1() { return cManufacturerAssignment_4_1; }
		
		//Manufacturers
		public RuleCall getManufacturerManufacturersEnumRuleCall_4_1_0() { return cManufacturerManufacturersEnumRuleCall_4_1_0; }
	}
	public class InnerGearElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "dk.itu.mdd.nbs.dsl.NowereBycicleDsl.InnerGear");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cInnerGearAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cInnerGearKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cPriceKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cPriceAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cPriceEDoubleParserRuleCall_3_1_0 = (RuleCall)cPriceAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cManufacturerKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cManufacturerAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cManufacturerManufacturersEnumRuleCall_4_1_0 = (RuleCall)cManufacturerAssignment_4_1.eContents().get(0);
		
		//InnerGear returns InnerGear:
		//    {InnerGear}
		//    'InnerGear' name=EString
		//    ('price' price=EDouble)?
		//    ('manufacturer' manufacturer=Manufacturers)?;
		@Override public ParserRule getRule() { return rule; }
		
		//{InnerGear}
		//'InnerGear' name=EString
		//('price' price=EDouble)?
		//('manufacturer' manufacturer=Manufacturers)?
		public Group getGroup() { return cGroup; }
		
		//{InnerGear}
		public Action getInnerGearAction_0() { return cInnerGearAction_0; }
		
		//'InnerGear'
		public Keyword getInnerGearKeyword_1() { return cInnerGearKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//('price' price=EDouble)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'price'
		public Keyword getPriceKeyword_3_0() { return cPriceKeyword_3_0; }
		
		//price=EDouble
		public Assignment getPriceAssignment_3_1() { return cPriceAssignment_3_1; }
		
		//EDouble
		public RuleCall getPriceEDoubleParserRuleCall_3_1_0() { return cPriceEDoubleParserRuleCall_3_1_0; }
		
		//('manufacturer' manufacturer=Manufacturers)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'manufacturer'
		public Keyword getManufacturerKeyword_4_0() { return cManufacturerKeyword_4_0; }
		
		//manufacturer=Manufacturers
		public Assignment getManufacturerAssignment_4_1() { return cManufacturerAssignment_4_1; }
		
		//Manufacturers
		public RuleCall getManufacturerManufacturersEnumRuleCall_4_1_0() { return cManufacturerManufacturersEnumRuleCall_4_1_0; }
	}
	public class OuterGearElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "dk.itu.mdd.nbs.dsl.NowereBycicleDsl.OuterGear");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cOuterGearAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cOuterGearKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cPriceKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cPriceAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cPriceEDoubleParserRuleCall_3_1_0 = (RuleCall)cPriceAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cManufacturerKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cManufacturerAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cManufacturerManufacturersEnumRuleCall_4_1_0 = (RuleCall)cManufacturerAssignment_4_1.eContents().get(0);
		
		//OuterGear returns OuterGear:
		//    {OuterGear}
		//    'OuterGear' name=EString
		//    ('price' price=EDouble)?
		//    ('manufacturer' manufacturer=Manufacturers)?;
		@Override public ParserRule getRule() { return rule; }
		
		//{OuterGear}
		//'OuterGear' name=EString
		//('price' price=EDouble)?
		//('manufacturer' manufacturer=Manufacturers)?
		public Group getGroup() { return cGroup; }
		
		//{OuterGear}
		public Action getOuterGearAction_0() { return cOuterGearAction_0; }
		
		//'OuterGear'
		public Keyword getOuterGearKeyword_1() { return cOuterGearKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//('price' price=EDouble)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'price'
		public Keyword getPriceKeyword_3_0() { return cPriceKeyword_3_0; }
		
		//price=EDouble
		public Assignment getPriceAssignment_3_1() { return cPriceAssignment_3_1; }
		
		//EDouble
		public RuleCall getPriceEDoubleParserRuleCall_3_1_0() { return cPriceEDoubleParserRuleCall_3_1_0; }
		
		//('manufacturer' manufacturer=Manufacturers)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'manufacturer'
		public Keyword getManufacturerKeyword_4_0() { return cManufacturerKeyword_4_0; }
		
		//manufacturer=Manufacturers
		public Assignment getManufacturerAssignment_4_1() { return cManufacturerAssignment_4_1; }
		
		//Manufacturers
		public RuleCall getManufacturerManufacturersEnumRuleCall_4_1_0() { return cManufacturerManufacturersEnumRuleCall_4_1_0; }
	}
	public class PedalsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "dk.itu.mdd.nbs.dsl.NowereBycicleDsl.Pedals");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cPedalsAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cPedalsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cPriceKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cPriceAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cPriceEDoubleParserRuleCall_3_1_0 = (RuleCall)cPriceAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cManufacturerKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cManufacturerAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cManufacturerManufacturersEnumRuleCall_4_1_0 = (RuleCall)cManufacturerAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cPedalTypeKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cPedalTypeAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cPedalTypePedalTypesEnumRuleCall_5_1_0 = (RuleCall)cPedalTypeAssignment_5_1.eContents().get(0);
		
		//Pedals returns Pedals:
		//    {Pedals}
		//    'Pedals' name=EString
		//    ('price' price=EDouble)?
		//    ('manufacturer' manufacturer=Manufacturers)?
		//    ('pedalType' pedalType=PedalTypes)?;
		@Override public ParserRule getRule() { return rule; }
		
		//{Pedals}
		//'Pedals' name=EString
		//('price' price=EDouble)?
		//('manufacturer' manufacturer=Manufacturers)?
		//('pedalType' pedalType=PedalTypes)?
		public Group getGroup() { return cGroup; }
		
		//{Pedals}
		public Action getPedalsAction_0() { return cPedalsAction_0; }
		
		//'Pedals'
		public Keyword getPedalsKeyword_1() { return cPedalsKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//('price' price=EDouble)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'price'
		public Keyword getPriceKeyword_3_0() { return cPriceKeyword_3_0; }
		
		//price=EDouble
		public Assignment getPriceAssignment_3_1() { return cPriceAssignment_3_1; }
		
		//EDouble
		public RuleCall getPriceEDoubleParserRuleCall_3_1_0() { return cPriceEDoubleParserRuleCall_3_1_0; }
		
		//('manufacturer' manufacturer=Manufacturers)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'manufacturer'
		public Keyword getManufacturerKeyword_4_0() { return cManufacturerKeyword_4_0; }
		
		//manufacturer=Manufacturers
		public Assignment getManufacturerAssignment_4_1() { return cManufacturerAssignment_4_1; }
		
		//Manufacturers
		public RuleCall getManufacturerManufacturersEnumRuleCall_4_1_0() { return cManufacturerManufacturersEnumRuleCall_4_1_0; }
		
		//('pedalType' pedalType=PedalTypes)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'pedalType'
		public Keyword getPedalTypeKeyword_5_0() { return cPedalTypeKeyword_5_0; }
		
		//pedalType=PedalTypes
		public Assignment getPedalTypeAssignment_5_1() { return cPedalTypeAssignment_5_1; }
		
		//PedalTypes
		public RuleCall getPedalTypePedalTypesEnumRuleCall_5_1_0() { return cPedalTypePedalTypesEnumRuleCall_5_1_0; }
	}
	public class SaddleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "dk.itu.mdd.nbs.dsl.NowereBycicleDsl.Saddle");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSaddleAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cSaddleKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cPriceKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cPriceAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cPriceEDoubleParserRuleCall_3_1_0 = (RuleCall)cPriceAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cManufacturerKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cManufacturerAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cManufacturerManufacturersEnumRuleCall_4_1_0 = (RuleCall)cManufacturerAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cSaddleTypeKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cSaddleTypeAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cSaddleTypeSaddleTypeEnumRuleCall_5_1_0 = (RuleCall)cSaddleTypeAssignment_5_1.eContents().get(0);
		
		//Saddle returns Saddle:
		//    {Saddle}
		//    'Saddle' name=EString
		//    ('price' price=EDouble)?
		//    ('manufacturer' manufacturer=Manufacturers)?
		//    ('saddleType' saddleType=SaddleType)?;
		@Override public ParserRule getRule() { return rule; }
		
		//{Saddle}
		//'Saddle' name=EString
		//('price' price=EDouble)?
		//('manufacturer' manufacturer=Manufacturers)?
		//('saddleType' saddleType=SaddleType)?
		public Group getGroup() { return cGroup; }
		
		//{Saddle}
		public Action getSaddleAction_0() { return cSaddleAction_0; }
		
		//'Saddle'
		public Keyword getSaddleKeyword_1() { return cSaddleKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//('price' price=EDouble)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'price'
		public Keyword getPriceKeyword_3_0() { return cPriceKeyword_3_0; }
		
		//price=EDouble
		public Assignment getPriceAssignment_3_1() { return cPriceAssignment_3_1; }
		
		//EDouble
		public RuleCall getPriceEDoubleParserRuleCall_3_1_0() { return cPriceEDoubleParserRuleCall_3_1_0; }
		
		//('manufacturer' manufacturer=Manufacturers)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'manufacturer'
		public Keyword getManufacturerKeyword_4_0() { return cManufacturerKeyword_4_0; }
		
		//manufacturer=Manufacturers
		public Assignment getManufacturerAssignment_4_1() { return cManufacturerAssignment_4_1; }
		
		//Manufacturers
		public RuleCall getManufacturerManufacturersEnumRuleCall_4_1_0() { return cManufacturerManufacturersEnumRuleCall_4_1_0; }
		
		//('saddleType' saddleType=SaddleType)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'saddleType'
		public Keyword getSaddleTypeKeyword_5_0() { return cSaddleTypeKeyword_5_0; }
		
		//saddleType=SaddleType
		public Assignment getSaddleTypeAssignment_5_1() { return cSaddleTypeAssignment_5_1; }
		
		//SaddleType
		public RuleCall getSaddleTypeSaddleTypeEnumRuleCall_5_1_0() { return cSaddleTypeSaddleTypeEnumRuleCall_5_1_0; }
	}
	public class HandBrakesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "dk.itu.mdd.nbs.dsl.NowereBycicleDsl.HandBrakes");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cHandBrakesAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cHandBrakesKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cPriceKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cPriceAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cPriceEDoubleParserRuleCall_3_1_0 = (RuleCall)cPriceAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cManufacturerKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cManufacturerAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cManufacturerManufacturersEnumRuleCall_4_1_0 = (RuleCall)cManufacturerAssignment_4_1.eContents().get(0);
		
		//HandBrakes returns HandBrakes:
		//    {HandBrakes}
		//    'HandBrakes' name=EString
		//    ('price' price=EDouble)?
		//    ('manufacturer' manufacturer=Manufacturers)?;
		@Override public ParserRule getRule() { return rule; }
		
		//{HandBrakes}
		//'HandBrakes' name=EString
		//('price' price=EDouble)?
		//('manufacturer' manufacturer=Manufacturers)?
		public Group getGroup() { return cGroup; }
		
		//{HandBrakes}
		public Action getHandBrakesAction_0() { return cHandBrakesAction_0; }
		
		//'HandBrakes'
		public Keyword getHandBrakesKeyword_1() { return cHandBrakesKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//('price' price=EDouble)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'price'
		public Keyword getPriceKeyword_3_0() { return cPriceKeyword_3_0; }
		
		//price=EDouble
		public Assignment getPriceAssignment_3_1() { return cPriceAssignment_3_1; }
		
		//EDouble
		public RuleCall getPriceEDoubleParserRuleCall_3_1_0() { return cPriceEDoubleParserRuleCall_3_1_0; }
		
		//('manufacturer' manufacturer=Manufacturers)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'manufacturer'
		public Keyword getManufacturerKeyword_4_0() { return cManufacturerKeyword_4_0; }
		
		//manufacturer=Manufacturers
		public Assignment getManufacturerAssignment_4_1() { return cManufacturerAssignment_4_1; }
		
		//Manufacturers
		public RuleCall getManufacturerManufacturersEnumRuleCall_4_1_0() { return cManufacturerManufacturersEnumRuleCall_4_1_0; }
	}
	public class HandleBarsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "dk.itu.mdd.nbs.dsl.NowereBycicleDsl.HandleBars");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cHandleBarsAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cHandleBarsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cPriceKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cPriceAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cPriceEDoubleParserRuleCall_3_1_0 = (RuleCall)cPriceAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cManufacturerKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cManufacturerAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cManufacturerManufacturersEnumRuleCall_4_1_0 = (RuleCall)cManufacturerAssignment_4_1.eContents().get(0);
		
		//HandleBars returns HandleBars:
		//    {HandleBars}
		//    'HandleBars' name=EString
		//    ('price' price=EDouble)?
		//    ('manufacturer' manufacturer=Manufacturers)?;
		@Override public ParserRule getRule() { return rule; }
		
		//{HandleBars}
		//'HandleBars' name=EString
		//('price' price=EDouble)?
		//('manufacturer' manufacturer=Manufacturers)?
		public Group getGroup() { return cGroup; }
		
		//{HandleBars}
		public Action getHandleBarsAction_0() { return cHandleBarsAction_0; }
		
		//'HandleBars'
		public Keyword getHandleBarsKeyword_1() { return cHandleBarsKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//('price' price=EDouble)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'price'
		public Keyword getPriceKeyword_3_0() { return cPriceKeyword_3_0; }
		
		//price=EDouble
		public Assignment getPriceAssignment_3_1() { return cPriceAssignment_3_1; }
		
		//EDouble
		public RuleCall getPriceEDoubleParserRuleCall_3_1_0() { return cPriceEDoubleParserRuleCall_3_1_0; }
		
		//('manufacturer' manufacturer=Manufacturers)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'manufacturer'
		public Keyword getManufacturerKeyword_4_0() { return cManufacturerKeyword_4_0; }
		
		//manufacturer=Manufacturers
		public Assignment getManufacturerAssignment_4_1() { return cManufacturerAssignment_4_1; }
		
		//Manufacturers
		public RuleCall getManufacturerManufacturersEnumRuleCall_4_1_0() { return cManufacturerManufacturersEnumRuleCall_4_1_0; }
	}
	
	public class ManufacturersElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "dk.itu.mdd.nbs.dsl.NowereBycicleDsl.Manufacturers");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cSuperPartsEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cSuperPartsSuperPartsKeyword_0_0 = (Keyword)cSuperPartsEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cHomePartsEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cHomePartsHomePartsKeyword_1_0 = (Keyword)cHomePartsEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cHandMadePartsEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cHandMadePartsHandMadePartsKeyword_2_0 = (Keyword)cHandMadePartsEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum Manufacturers returns Manufacturers:
		//    SuperParts = 'SuperParts' | HomeParts = 'HomeParts' | HandMadeParts = 'HandMadeParts';
		public EnumRule getRule() { return rule; }
		
		//SuperParts = 'SuperParts' | HomeParts = 'HomeParts' | HandMadeParts = 'HandMadeParts'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//SuperParts = 'SuperParts'
		public EnumLiteralDeclaration getSuperPartsEnumLiteralDeclaration_0() { return cSuperPartsEnumLiteralDeclaration_0; }
		
		//'SuperParts'
		public Keyword getSuperPartsSuperPartsKeyword_0_0() { return cSuperPartsSuperPartsKeyword_0_0; }
		
		//HomeParts = 'HomeParts'
		public EnumLiteralDeclaration getHomePartsEnumLiteralDeclaration_1() { return cHomePartsEnumLiteralDeclaration_1; }
		
		//'HomeParts'
		public Keyword getHomePartsHomePartsKeyword_1_0() { return cHomePartsHomePartsKeyword_1_0; }
		
		//HandMadeParts = 'HandMadeParts'
		public EnumLiteralDeclaration getHandMadePartsEnumLiteralDeclaration_2() { return cHandMadePartsEnumLiteralDeclaration_2; }
		
		//'HandMadeParts'
		public Keyword getHandMadePartsHandMadePartsKeyword_2_0() { return cHandMadePartsHandMadePartsKeyword_2_0; }
	}
	public class FrameTypeElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "dk.itu.mdd.nbs.dsl.NowereBycicleDsl.FrameType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cRacerFrameEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cRacerFrameRacerFrameKeyword_0_0 = (Keyword)cRacerFrameEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cCityFrameEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cCityFrameCityFrameKeyword_1_0 = (Keyword)cCityFrameEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cUnicycleFrameEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cUnicycleFrameUnicycleFrameKeyword_2_0 = (Keyword)cUnicycleFrameEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum FrameType returns FrameType:
		//    RacerFrame = 'RacerFrame' | CityFrame = 'CityFrame' | UnicycleFrame = 'UnicycleFrame';
		public EnumRule getRule() { return rule; }
		
		//RacerFrame = 'RacerFrame' | CityFrame = 'CityFrame' | UnicycleFrame = 'UnicycleFrame'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//RacerFrame = 'RacerFrame'
		public EnumLiteralDeclaration getRacerFrameEnumLiteralDeclaration_0() { return cRacerFrameEnumLiteralDeclaration_0; }
		
		//'RacerFrame'
		public Keyword getRacerFrameRacerFrameKeyword_0_0() { return cRacerFrameRacerFrameKeyword_0_0; }
		
		//CityFrame = 'CityFrame'
		public EnumLiteralDeclaration getCityFrameEnumLiteralDeclaration_1() { return cCityFrameEnumLiteralDeclaration_1; }
		
		//'CityFrame'
		public Keyword getCityFrameCityFrameKeyword_1_0() { return cCityFrameCityFrameKeyword_1_0; }
		
		//UnicycleFrame = 'UnicycleFrame'
		public EnumLiteralDeclaration getUnicycleFrameEnumLiteralDeclaration_2() { return cUnicycleFrameEnumLiteralDeclaration_2; }
		
		//'UnicycleFrame'
		public Keyword getUnicycleFrameUnicycleFrameKeyword_2_0() { return cUnicycleFrameUnicycleFrameKeyword_2_0; }
	}
	public class ColorElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "dk.itu.mdd.nbs.dsl.NowereBycicleDsl.Color");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cRedEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cRedRedKeyword_0_0 = (Keyword)cRedEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cBlueEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cBlueBlueKeyword_1_0 = (Keyword)cBlueEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cBlackEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cBlackBlackKeyword_2_0 = (Keyword)cBlackEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cGreenEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cGreenGreenKeyword_3_0 = (Keyword)cGreenEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum Color returns Color:
		//    Red = 'Red' | Blue = 'Blue' | Black = 'Black' | Green = 'Green';
		public EnumRule getRule() { return rule; }
		
		//Red = 'Red' | Blue = 'Blue' | Black = 'Black' | Green = 'Green'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Red = 'Red'
		public EnumLiteralDeclaration getRedEnumLiteralDeclaration_0() { return cRedEnumLiteralDeclaration_0; }
		
		//'Red'
		public Keyword getRedRedKeyword_0_0() { return cRedRedKeyword_0_0; }
		
		//Blue = 'Blue'
		public EnumLiteralDeclaration getBlueEnumLiteralDeclaration_1() { return cBlueEnumLiteralDeclaration_1; }
		
		//'Blue'
		public Keyword getBlueBlueKeyword_1_0() { return cBlueBlueKeyword_1_0; }
		
		//Black = 'Black'
		public EnumLiteralDeclaration getBlackEnumLiteralDeclaration_2() { return cBlackEnumLiteralDeclaration_2; }
		
		//'Black'
		public Keyword getBlackBlackKeyword_2_0() { return cBlackBlackKeyword_2_0; }
		
		//Green = 'Green'
		public EnumLiteralDeclaration getGreenEnumLiteralDeclaration_3() { return cGreenEnumLiteralDeclaration_3; }
		
		//'Green'
		public Keyword getGreenGreenKeyword_3_0() { return cGreenGreenKeyword_3_0; }
	}
	public class PedalTypesElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "dk.itu.mdd.nbs.dsl.NowereBycicleDsl.PedalTypes");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cChildPedalsEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cChildPedalsChildPedalsKeyword_0_0 = (Keyword)cChildPedalsEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cSportsPedalsEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cSportsPedalsSportsPedalsKeyword_1_0 = (Keyword)cSportsPedalsEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cComfortPedalsEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cComfortPedalsComfortPedalsKeyword_2_0 = (Keyword)cComfortPedalsEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cExtremePedalsEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cExtremePedalsExtremePedalsKeyword_3_0 = (Keyword)cExtremePedalsEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum PedalTypes returns PedalTypes:
		//    ChildPedals = 'ChildPedals' | SportsPedals = 'SportsPedals' | ComfortPedals = 'ComfortPedals' | ExtremePedals = 'ExtremePedals';
		public EnumRule getRule() { return rule; }
		
		//ChildPedals = 'ChildPedals' | SportsPedals = 'SportsPedals' | ComfortPedals = 'ComfortPedals' | ExtremePedals = 'ExtremePedals'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ChildPedals = 'ChildPedals'
		public EnumLiteralDeclaration getChildPedalsEnumLiteralDeclaration_0() { return cChildPedalsEnumLiteralDeclaration_0; }
		
		//'ChildPedals'
		public Keyword getChildPedalsChildPedalsKeyword_0_0() { return cChildPedalsChildPedalsKeyword_0_0; }
		
		//SportsPedals = 'SportsPedals'
		public EnumLiteralDeclaration getSportsPedalsEnumLiteralDeclaration_1() { return cSportsPedalsEnumLiteralDeclaration_1; }
		
		//'SportsPedals'
		public Keyword getSportsPedalsSportsPedalsKeyword_1_0() { return cSportsPedalsSportsPedalsKeyword_1_0; }
		
		//ComfortPedals = 'ComfortPedals'
		public EnumLiteralDeclaration getComfortPedalsEnumLiteralDeclaration_2() { return cComfortPedalsEnumLiteralDeclaration_2; }
		
		//'ComfortPedals'
		public Keyword getComfortPedalsComfortPedalsKeyword_2_0() { return cComfortPedalsComfortPedalsKeyword_2_0; }
		
		//ExtremePedals = 'ExtremePedals'
		public EnumLiteralDeclaration getExtremePedalsEnumLiteralDeclaration_3() { return cExtremePedalsEnumLiteralDeclaration_3; }
		
		//'ExtremePedals'
		public Keyword getExtremePedalsExtremePedalsKeyword_3_0() { return cExtremePedalsExtremePedalsKeyword_3_0; }
	}
	public class SaddleTypeElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "dk.itu.mdd.nbs.dsl.NowereBycicleDsl.SaddleType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cRacingSaddleEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cRacingSaddleRacingSaddleKeyword_0_0 = (Keyword)cRacingSaddleEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cChildSaddleEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cChildSaddleChildSaddleKeyword_1_0 = (Keyword)cChildSaddleEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cSpecialUnicycleSaddleEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cSpecialUnicycleSaddleSpecialUnicycleSaddleKeyword_2_0 = (Keyword)cSpecialUnicycleSaddleEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cComfortSaddleEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cComfortSaddleComfortSaddleKeyword_3_0 = (Keyword)cComfortSaddleEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum SaddleType returns SaddleType:
		//    RacingSaddle = 'RacingSaddle' | ChildSaddle = 'ChildSaddle' | SpecialUnicycleSaddle = 'SpecialUnicycleSaddle' | ComfortSaddle = 'ComfortSaddle';
		public EnumRule getRule() { return rule; }
		
		//RacingSaddle = 'RacingSaddle' | ChildSaddle = 'ChildSaddle' | SpecialUnicycleSaddle = 'SpecialUnicycleSaddle' | ComfortSaddle = 'ComfortSaddle'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//RacingSaddle = 'RacingSaddle'
		public EnumLiteralDeclaration getRacingSaddleEnumLiteralDeclaration_0() { return cRacingSaddleEnumLiteralDeclaration_0; }
		
		//'RacingSaddle'
		public Keyword getRacingSaddleRacingSaddleKeyword_0_0() { return cRacingSaddleRacingSaddleKeyword_0_0; }
		
		//ChildSaddle = 'ChildSaddle'
		public EnumLiteralDeclaration getChildSaddleEnumLiteralDeclaration_1() { return cChildSaddleEnumLiteralDeclaration_1; }
		
		//'ChildSaddle'
		public Keyword getChildSaddleChildSaddleKeyword_1_0() { return cChildSaddleChildSaddleKeyword_1_0; }
		
		//SpecialUnicycleSaddle = 'SpecialUnicycleSaddle'
		public EnumLiteralDeclaration getSpecialUnicycleSaddleEnumLiteralDeclaration_2() { return cSpecialUnicycleSaddleEnumLiteralDeclaration_2; }
		
		//'SpecialUnicycleSaddle'
		public Keyword getSpecialUnicycleSaddleSpecialUnicycleSaddleKeyword_2_0() { return cSpecialUnicycleSaddleSpecialUnicycleSaddleKeyword_2_0; }
		
		//ComfortSaddle = 'ComfortSaddle'
		public EnumLiteralDeclaration getComfortSaddleEnumLiteralDeclaration_3() { return cComfortSaddleEnumLiteralDeclaration_3; }
		
		//'ComfortSaddle'
		public Keyword getComfortSaddleComfortSaddleKeyword_3_0() { return cComfortSaddleComfortSaddleKeyword_3_0; }
	}
	
	private final BicycleElements pBicycle;
	private final PartElements pPart;
	private final CustomerDataElements pCustomerData;
	private final ParameterElements pParameter;
	private final EDoubleElements pEDouble;
	private final EStringElements pEString;
	private final ManufacturersElements eManufacturers;
	private final EByteElements pEByte;
	private final FrameElements pFrame;
	private final WheelElements pWheel;
	private final InnerGearElements pInnerGear;
	private final OuterGearElements pOuterGear;
	private final PedalsElements pPedals;
	private final SaddleElements pSaddle;
	private final HandBrakesElements pHandBrakes;
	private final HandleBarsElements pHandleBars;
	private final FrameTypeElements eFrameType;
	private final ColorElements eColor;
	private final PedalTypesElements ePedalTypes;
	private final SaddleTypeElements eSaddleType;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public NowereBycicleDslGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pBicycle = new BicycleElements();
		this.pPart = new PartElements();
		this.pCustomerData = new CustomerDataElements();
		this.pParameter = new ParameterElements();
		this.pEDouble = new EDoubleElements();
		this.pEString = new EStringElements();
		this.eManufacturers = new ManufacturersElements();
		this.pEByte = new EByteElements();
		this.pFrame = new FrameElements();
		this.pWheel = new WheelElements();
		this.pInnerGear = new InnerGearElements();
		this.pOuterGear = new OuterGearElements();
		this.pPedals = new PedalsElements();
		this.pSaddle = new SaddleElements();
		this.pHandBrakes = new HandBrakesElements();
		this.pHandleBars = new HandleBarsElements();
		this.eFrameType = new FrameTypeElements();
		this.eColor = new ColorElements();
		this.ePedalTypes = new PedalTypesElements();
		this.eSaddleType = new SaddleTypeElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("dk.itu.mdd.nbs.dsl.NowereBycicleDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Bicycle returns Bicycle:
	//    {Bicycle}
	//    'Bicycle' (ID)?
	//    ('deliveryDate' deliveryDate=EString)?
	//    (parts+=Part)+
	//    (customerData+=CustomerData)?
	//    (parameters+=Parameter)*;
	public BicycleElements getBicycleAccess() {
		return pBicycle;
	}
	
	public ParserRule getBicycleRule() {
		return getBicycleAccess().getRule();
	}
	
	//Part returns Part:
	//    Frame | Wheel | InnerGear | OuterGear | Pedals | Saddle | HandBrakes | HandleBars;
	public PartElements getPartAccess() {
		return pPart;
	}
	
	public ParserRule getPartRule() {
		return getPartAccess().getRule();
	}
	
	//CustomerData returns CustomerData:
	//    {CustomerData}
	//    'CustomerData'
	//    name=EString
	//    ('address' address=EString)?
	//    (parameters+=Parameter)*;
	public CustomerDataElements getCustomerDataAccess() {
		return pCustomerData;
	}
	
	public ParserRule getCustomerDataRule() {
		return getCustomerDataAccess().getRule();
	}
	
	//Parameter returns Parameter:
	//    {Parameter}
	//    'Parameter'
	//    name=EString
	//    (value=EString)?;
	public ParameterElements getParameterAccess() {
		return pParameter;
	}
	
	public ParserRule getParameterRule() {
		return getParameterAccess().getRule();
	}
	
	//EDouble returns ecore::EDouble:
	//    '-'? INT? '.' INT (('E'|'e') '-'? INT)?;
	public EDoubleElements getEDoubleAccess() {
		return pEDouble;
	}
	
	public ParserRule getEDoubleRule() {
		return getEDoubleAccess().getRule();
	}
	
	//EString returns ecore::EString:
	//    STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//enum Manufacturers returns Manufacturers:
	//    SuperParts = 'SuperParts' | HomeParts = 'HomeParts' | HandMadeParts = 'HandMadeParts';
	public ManufacturersElements getManufacturersAccess() {
		return eManufacturers;
	}
	
	public EnumRule getManufacturersRule() {
		return getManufacturersAccess().getRule();
	}
	
	//EByte returns ecore::EByte:
	//    '-'? INT;
	public EByteElements getEByteAccess() {
		return pEByte;
	}
	
	public ParserRule getEByteRule() {
		return getEByteAccess().getRule();
	}
	
	//Frame returns Frame:
	//    {Frame}
	//    'Frame' name=EString
	//    ('price' price=EDouble)?
	//    ('manufacturer' manufacturer=Manufacturers)?
	//    ('frameType' frameType=FrameType)?
	//    ('color' color=Color)?;
	public FrameElements getFrameAccess() {
		return pFrame;
	}
	
	public ParserRule getFrameRule() {
		return getFrameAccess().getRule();
	}
	
	//Wheel returns Wheel:
	//    {Wheel}
	//    'Wheel' name=EString
	//    ('price' price=EDouble)?
	//    ('manufacturer' manufacturer=Manufacturers)?;
	public WheelElements getWheelAccess() {
		return pWheel;
	}
	
	public ParserRule getWheelRule() {
		return getWheelAccess().getRule();
	}
	
	//InnerGear returns InnerGear:
	//    {InnerGear}
	//    'InnerGear' name=EString
	//    ('price' price=EDouble)?
	//    ('manufacturer' manufacturer=Manufacturers)?;
	public InnerGearElements getInnerGearAccess() {
		return pInnerGear;
	}
	
	public ParserRule getInnerGearRule() {
		return getInnerGearAccess().getRule();
	}
	
	//OuterGear returns OuterGear:
	//    {OuterGear}
	//    'OuterGear' name=EString
	//    ('price' price=EDouble)?
	//    ('manufacturer' manufacturer=Manufacturers)?;
	public OuterGearElements getOuterGearAccess() {
		return pOuterGear;
	}
	
	public ParserRule getOuterGearRule() {
		return getOuterGearAccess().getRule();
	}
	
	//Pedals returns Pedals:
	//    {Pedals}
	//    'Pedals' name=EString
	//    ('price' price=EDouble)?
	//    ('manufacturer' manufacturer=Manufacturers)?
	//    ('pedalType' pedalType=PedalTypes)?;
	public PedalsElements getPedalsAccess() {
		return pPedals;
	}
	
	public ParserRule getPedalsRule() {
		return getPedalsAccess().getRule();
	}
	
	//Saddle returns Saddle:
	//    {Saddle}
	//    'Saddle' name=EString
	//    ('price' price=EDouble)?
	//    ('manufacturer' manufacturer=Manufacturers)?
	//    ('saddleType' saddleType=SaddleType)?;
	public SaddleElements getSaddleAccess() {
		return pSaddle;
	}
	
	public ParserRule getSaddleRule() {
		return getSaddleAccess().getRule();
	}
	
	//HandBrakes returns HandBrakes:
	//    {HandBrakes}
	//    'HandBrakes' name=EString
	//    ('price' price=EDouble)?
	//    ('manufacturer' manufacturer=Manufacturers)?;
	public HandBrakesElements getHandBrakesAccess() {
		return pHandBrakes;
	}
	
	public ParserRule getHandBrakesRule() {
		return getHandBrakesAccess().getRule();
	}
	
	//HandleBars returns HandleBars:
	//    {HandleBars}
	//    'HandleBars' name=EString
	//    ('price' price=EDouble)?
	//    ('manufacturer' manufacturer=Manufacturers)?;
	public HandleBarsElements getHandleBarsAccess() {
		return pHandleBars;
	}
	
	public ParserRule getHandleBarsRule() {
		return getHandleBarsAccess().getRule();
	}
	
	//enum FrameType returns FrameType:
	//    RacerFrame = 'RacerFrame' | CityFrame = 'CityFrame' | UnicycleFrame = 'UnicycleFrame';
	public FrameTypeElements getFrameTypeAccess() {
		return eFrameType;
	}
	
	public EnumRule getFrameTypeRule() {
		return getFrameTypeAccess().getRule();
	}
	
	//enum Color returns Color:
	//    Red = 'Red' | Blue = 'Blue' | Black = 'Black' | Green = 'Green';
	public ColorElements getColorAccess() {
		return eColor;
	}
	
	public EnumRule getColorRule() {
		return getColorAccess().getRule();
	}
	
	//enum PedalTypes returns PedalTypes:
	//    ChildPedals = 'ChildPedals' | SportsPedals = 'SportsPedals' | ComfortPedals = 'ComfortPedals' | ExtremePedals = 'ExtremePedals';
	public PedalTypesElements getPedalTypesAccess() {
		return ePedalTypes;
	}
	
	public EnumRule getPedalTypesRule() {
		return getPedalTypesAccess().getRule();
	}
	
	//enum SaddleType returns SaddleType:
	//    RacingSaddle = 'RacingSaddle' | ChildSaddle = 'ChildSaddle' | SpecialUnicycleSaddle = 'SpecialUnicycleSaddle' | ComfortSaddle = 'ComfortSaddle';
	public SaddleTypeElements getSaddleTypeAccess() {
		return eSaddleType;
	}
	
	public EnumRule getSaddleTypeRule() {
		return getSaddleTypeAccess().getRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
