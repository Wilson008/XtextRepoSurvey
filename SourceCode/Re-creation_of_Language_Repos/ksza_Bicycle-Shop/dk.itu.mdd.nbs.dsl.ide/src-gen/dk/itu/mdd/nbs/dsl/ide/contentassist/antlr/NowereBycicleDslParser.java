/*
 * generated by Xtext 2.35.0
 */
package dk.itu.mdd.nbs.dsl.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import dk.itu.mdd.nbs.dsl.ide.contentassist.antlr.internal.InternalNowereBycicleDslParser;
import dk.itu.mdd.nbs.dsl.services.NowereBycicleDslGrammarAccess;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;

public class NowereBycicleDslParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(NowereBycicleDslGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, NowereBycicleDslGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getPartAccess().getAlternatives(), "rule__Part__Alternatives");
			builder.put(grammarAccess.getEDoubleAccess().getAlternatives_4_0(), "rule__EDouble__Alternatives_4_0");
			builder.put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
			builder.put(grammarAccess.getManufacturersAccess().getAlternatives(), "rule__Manufacturers__Alternatives");
			builder.put(grammarAccess.getFrameTypeAccess().getAlternatives(), "rule__FrameType__Alternatives");
			builder.put(grammarAccess.getColorAccess().getAlternatives(), "rule__Color__Alternatives");
			builder.put(grammarAccess.getPedalTypesAccess().getAlternatives(), "rule__PedalTypes__Alternatives");
			builder.put(grammarAccess.getSaddleTypeAccess().getAlternatives(), "rule__SaddleType__Alternatives");
			builder.put(grammarAccess.getBicycleAccess().getGroup(), "rule__Bicycle__Group__0");
			builder.put(grammarAccess.getBicycleAccess().getGroup_3(), "rule__Bicycle__Group_3__0");
			builder.put(grammarAccess.getCustomerDataAccess().getGroup(), "rule__CustomerData__Group__0");
			builder.put(grammarAccess.getCustomerDataAccess().getGroup_3(), "rule__CustomerData__Group_3__0");
			builder.put(grammarAccess.getParameterAccess().getGroup(), "rule__Parameter__Group__0");
			builder.put(grammarAccess.getEDoubleAccess().getGroup(), "rule__EDouble__Group__0");
			builder.put(grammarAccess.getEDoubleAccess().getGroup_4(), "rule__EDouble__Group_4__0");
			builder.put(grammarAccess.getEByteAccess().getGroup(), "rule__EByte__Group__0");
			builder.put(grammarAccess.getFrameAccess().getGroup(), "rule__Frame__Group__0");
			builder.put(grammarAccess.getFrameAccess().getGroup_3(), "rule__Frame__Group_3__0");
			builder.put(grammarAccess.getFrameAccess().getGroup_4(), "rule__Frame__Group_4__0");
			builder.put(grammarAccess.getFrameAccess().getGroup_5(), "rule__Frame__Group_5__0");
			builder.put(grammarAccess.getFrameAccess().getGroup_6(), "rule__Frame__Group_6__0");
			builder.put(grammarAccess.getWheelAccess().getGroup(), "rule__Wheel__Group__0");
			builder.put(grammarAccess.getWheelAccess().getGroup_3(), "rule__Wheel__Group_3__0");
			builder.put(grammarAccess.getWheelAccess().getGroup_4(), "rule__Wheel__Group_4__0");
			builder.put(grammarAccess.getInnerGearAccess().getGroup(), "rule__InnerGear__Group__0");
			builder.put(grammarAccess.getInnerGearAccess().getGroup_3(), "rule__InnerGear__Group_3__0");
			builder.put(grammarAccess.getInnerGearAccess().getGroup_4(), "rule__InnerGear__Group_4__0");
			builder.put(grammarAccess.getOuterGearAccess().getGroup(), "rule__OuterGear__Group__0");
			builder.put(grammarAccess.getOuterGearAccess().getGroup_3(), "rule__OuterGear__Group_3__0");
			builder.put(grammarAccess.getOuterGearAccess().getGroup_4(), "rule__OuterGear__Group_4__0");
			builder.put(grammarAccess.getPedalsAccess().getGroup(), "rule__Pedals__Group__0");
			builder.put(grammarAccess.getPedalsAccess().getGroup_3(), "rule__Pedals__Group_3__0");
			builder.put(grammarAccess.getPedalsAccess().getGroup_4(), "rule__Pedals__Group_4__0");
			builder.put(grammarAccess.getPedalsAccess().getGroup_5(), "rule__Pedals__Group_5__0");
			builder.put(grammarAccess.getSaddleAccess().getGroup(), "rule__Saddle__Group__0");
			builder.put(grammarAccess.getSaddleAccess().getGroup_3(), "rule__Saddle__Group_3__0");
			builder.put(grammarAccess.getSaddleAccess().getGroup_4(), "rule__Saddle__Group_4__0");
			builder.put(grammarAccess.getSaddleAccess().getGroup_5(), "rule__Saddle__Group_5__0");
			builder.put(grammarAccess.getHandBrakesAccess().getGroup(), "rule__HandBrakes__Group__0");
			builder.put(grammarAccess.getHandBrakesAccess().getGroup_3(), "rule__HandBrakes__Group_3__0");
			builder.put(grammarAccess.getHandBrakesAccess().getGroup_4(), "rule__HandBrakes__Group_4__0");
			builder.put(grammarAccess.getHandleBarsAccess().getGroup(), "rule__HandleBars__Group__0");
			builder.put(grammarAccess.getHandleBarsAccess().getGroup_3(), "rule__HandleBars__Group_3__0");
			builder.put(grammarAccess.getHandleBarsAccess().getGroup_4(), "rule__HandleBars__Group_4__0");
			builder.put(grammarAccess.getBicycleAccess().getDeliveryDateAssignment_3_1(), "rule__Bicycle__DeliveryDateAssignment_3_1");
			builder.put(grammarAccess.getBicycleAccess().getPartsAssignment_4(), "rule__Bicycle__PartsAssignment_4");
			builder.put(grammarAccess.getBicycleAccess().getCustomerDataAssignment_5(), "rule__Bicycle__CustomerDataAssignment_5");
			builder.put(grammarAccess.getBicycleAccess().getParametersAssignment_6(), "rule__Bicycle__ParametersAssignment_6");
			builder.put(grammarAccess.getCustomerDataAccess().getNameAssignment_2(), "rule__CustomerData__NameAssignment_2");
			builder.put(grammarAccess.getCustomerDataAccess().getAddressAssignment_3_1(), "rule__CustomerData__AddressAssignment_3_1");
			builder.put(grammarAccess.getCustomerDataAccess().getParametersAssignment_4(), "rule__CustomerData__ParametersAssignment_4");
			builder.put(grammarAccess.getParameterAccess().getNameAssignment_2(), "rule__Parameter__NameAssignment_2");
			builder.put(grammarAccess.getParameterAccess().getValueAssignment_3(), "rule__Parameter__ValueAssignment_3");
			builder.put(grammarAccess.getFrameAccess().getNameAssignment_2(), "rule__Frame__NameAssignment_2");
			builder.put(grammarAccess.getFrameAccess().getPriceAssignment_3_1(), "rule__Frame__PriceAssignment_3_1");
			builder.put(grammarAccess.getFrameAccess().getManufacturerAssignment_4_1(), "rule__Frame__ManufacturerAssignment_4_1");
			builder.put(grammarAccess.getFrameAccess().getFrameTypeAssignment_5_1(), "rule__Frame__FrameTypeAssignment_5_1");
			builder.put(grammarAccess.getFrameAccess().getColorAssignment_6_1(), "rule__Frame__ColorAssignment_6_1");
			builder.put(grammarAccess.getWheelAccess().getNameAssignment_2(), "rule__Wheel__NameAssignment_2");
			builder.put(grammarAccess.getWheelAccess().getPriceAssignment_3_1(), "rule__Wheel__PriceAssignment_3_1");
			builder.put(grammarAccess.getWheelAccess().getManufacturerAssignment_4_1(), "rule__Wheel__ManufacturerAssignment_4_1");
			builder.put(grammarAccess.getInnerGearAccess().getNameAssignment_2(), "rule__InnerGear__NameAssignment_2");
			builder.put(grammarAccess.getInnerGearAccess().getPriceAssignment_3_1(), "rule__InnerGear__PriceAssignment_3_1");
			builder.put(grammarAccess.getInnerGearAccess().getManufacturerAssignment_4_1(), "rule__InnerGear__ManufacturerAssignment_4_1");
			builder.put(grammarAccess.getOuterGearAccess().getNameAssignment_2(), "rule__OuterGear__NameAssignment_2");
			builder.put(grammarAccess.getOuterGearAccess().getPriceAssignment_3_1(), "rule__OuterGear__PriceAssignment_3_1");
			builder.put(grammarAccess.getOuterGearAccess().getManufacturerAssignment_4_1(), "rule__OuterGear__ManufacturerAssignment_4_1");
			builder.put(grammarAccess.getPedalsAccess().getNameAssignment_2(), "rule__Pedals__NameAssignment_2");
			builder.put(grammarAccess.getPedalsAccess().getPriceAssignment_3_1(), "rule__Pedals__PriceAssignment_3_1");
			builder.put(grammarAccess.getPedalsAccess().getManufacturerAssignment_4_1(), "rule__Pedals__ManufacturerAssignment_4_1");
			builder.put(grammarAccess.getPedalsAccess().getPedalTypeAssignment_5_1(), "rule__Pedals__PedalTypeAssignment_5_1");
			builder.put(grammarAccess.getSaddleAccess().getNameAssignment_2(), "rule__Saddle__NameAssignment_2");
			builder.put(grammarAccess.getSaddleAccess().getPriceAssignment_3_1(), "rule__Saddle__PriceAssignment_3_1");
			builder.put(grammarAccess.getSaddleAccess().getManufacturerAssignment_4_1(), "rule__Saddle__ManufacturerAssignment_4_1");
			builder.put(grammarAccess.getSaddleAccess().getSaddleTypeAssignment_5_1(), "rule__Saddle__SaddleTypeAssignment_5_1");
			builder.put(grammarAccess.getHandBrakesAccess().getNameAssignment_2(), "rule__HandBrakes__NameAssignment_2");
			builder.put(grammarAccess.getHandBrakesAccess().getPriceAssignment_3_1(), "rule__HandBrakes__PriceAssignment_3_1");
			builder.put(grammarAccess.getHandBrakesAccess().getManufacturerAssignment_4_1(), "rule__HandBrakes__ManufacturerAssignment_4_1");
			builder.put(grammarAccess.getHandleBarsAccess().getNameAssignment_2(), "rule__HandleBars__NameAssignment_2");
			builder.put(grammarAccess.getHandleBarsAccess().getPriceAssignment_3_1(), "rule__HandleBars__PriceAssignment_3_1");
			builder.put(grammarAccess.getHandleBarsAccess().getManufacturerAssignment_4_1(), "rule__HandleBars__ManufacturerAssignment_4_1");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private NowereBycicleDslGrammarAccess grammarAccess;

	@Override
	protected InternalNowereBycicleDslParser createParser() {
		InternalNowereBycicleDslParser result = new InternalNowereBycicleDslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public NowereBycicleDslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(NowereBycicleDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
