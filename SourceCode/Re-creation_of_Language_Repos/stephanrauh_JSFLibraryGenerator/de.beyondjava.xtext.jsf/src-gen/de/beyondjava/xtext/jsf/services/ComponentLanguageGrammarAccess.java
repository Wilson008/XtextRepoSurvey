/*
 * generated by Xtext 2.35.0
 */
package de.beyondjava.xtext.jsf.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class ComponentLanguageGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class DomainmodelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.beyondjava.xtext.jsf.ComponentLanguage.Domainmodel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cElementsAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cElementsAttributeListParserRuleCall_0_0 = (RuleCall)cElementsAssignment_0.eContents().get(0);
		private final Assignment cElementsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cElementsComponentParserRuleCall_1_0 = (RuleCall)cElementsAssignment_1.eContents().get(0);
		
		//Domainmodel:
		//    (elements+=AttributeList)*
		//    (elements+=Component)*;
		@Override public ParserRule getRule() { return rule; }
		
		//(elements+=AttributeList)*
		//(elements+=Component)*
		public Group getGroup() { return cGroup; }
		
		//(elements+=AttributeList)*
		public Assignment getElementsAssignment_0() { return cElementsAssignment_0; }
		
		//AttributeList
		public RuleCall getElementsAttributeListParserRuleCall_0_0() { return cElementsAttributeListParserRuleCall_0_0; }
		
		//(elements+=Component)*
		public Assignment getElementsAssignment_1() { return cElementsAssignment_1; }
		
		//Component
		public RuleCall getElementsComponentParserRuleCall_1_0() { return cElementsComponentParserRuleCall_1_0; }
	}
	public class AttributeListElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.beyondjava.xtext.jsf.ComponentLanguage.AttributeList");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAttribute_listKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cAttributesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cAttributesAttributeParserRuleCall_3_0 = (RuleCall)cAttributesAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//AttributeList:
		//    'attribute_list' name=ID
		//    '{'
		//       (attributes+=Attribute)*
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'attribute_list' name=ID
		//'{'
		//   (attributes+=Attribute)*
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'attribute_list'
		public Keyword getAttribute_listKeyword_0() { return cAttribute_listKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//(attributes+=Attribute)*
		public Assignment getAttributesAssignment_3() { return cAttributesAssignment_3; }
		
		//Attribute
		public RuleCall getAttributesAttributeParserRuleCall_3_0() { return cAttributesAttributeParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class ComponentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.beyondjava.xtext.jsf.ComponentLanguage.Component");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cWidgetKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cImplemented_byKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cImplementedByAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cImplementedByQualifiedNameParserRuleCall_2_1_0 = (RuleCall)cImplementedByAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cRendered_byKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cRenderedByAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cRenderedByQualifiedNameParserRuleCall_3_1_0 = (RuleCall)cRenderedByAssignment_3_1.eContents().get(0);
		private final Assignment cProcessesInputAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final Keyword cProcessesInputProcesses_inputKeyword_4_0 = (Keyword)cProcessesInputAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cExtendsKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cExtendsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cExtendsQualifiedNameParserRuleCall_5_1_0 = (RuleCall)cExtendsAssignment_5_1.eContents().get(0);
		private final Assignment cHasChildrenAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final Keyword cHasChildrenHas_childrenKeyword_6_0 = (Keyword)cHasChildrenAssignment_6.eContents().get(0);
		private final Assignment cHasTooltipAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final Keyword cHasTooltipHas_tooltipKeyword_7_0 = (Keyword)cHasTooltipAssignment_7.eContents().get(0);
		private final Assignment cIsReponsiveAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final Keyword cIsReponsiveIs_responsiveKeyword_8_0 = (Keyword)cIsReponsiveAssignment_8.eContents().get(0);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cDescriptionKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Assignment cDescriptionAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_9_1_0 = (RuleCall)cDescriptionAssignment_9_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cAttributesAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cAttributesAttributeParserRuleCall_11_0 = (RuleCall)cAttributesAssignment_11.eContents().get(0);
		private final Group cGroup_12 = (Group)cGroup.eContents().get(12);
		private final Keyword cPlusSignKeyword_12_0 = (Keyword)cGroup_12.eContents().get(0);
		private final Assignment cAttributeListsAssignment_12_1 = (Assignment)cGroup_12.eContents().get(1);
		private final RuleCall cAttributeListsIDTerminalRuleCall_12_1_0 = (RuleCall)cAttributeListsAssignment_12_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_13 = (Keyword)cGroup.eContents().get(13);
		
		//Component:
		//    'widget' name=ID
		//    ('implemented_by ' implementedBy+=QualifiedName)?
		//    ('rendered_by ' renderedBy+=QualifiedName)?
		//    (processesInput='processes_input')?
		//    ('extends' extends=QualifiedName)?
		//    (hasChildren='has_children')?
		//    (hasTooltip='has_tooltip')?
		//    (isReponsive='is_responsive')?
		//    ('description' description=STRING)?
		//    '{'
		//       (attributes+=Attribute)*
		//       ('+' attributeLists += ID)*
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'widget' name=ID
		//('implemented_by ' implementedBy+=QualifiedName)?
		//('rendered_by ' renderedBy+=QualifiedName)?
		//(processesInput='processes_input')?
		//('extends' extends=QualifiedName)?
		//(hasChildren='has_children')?
		//(hasTooltip='has_tooltip')?
		//(isReponsive='is_responsive')?
		//('description' description=STRING)?
		//'{'
		//   (attributes+=Attribute)*
		//   ('+' attributeLists += ID)*
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'widget'
		public Keyword getWidgetKeyword_0() { return cWidgetKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//('implemented_by ' implementedBy+=QualifiedName)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'implemented_by '
		public Keyword getImplemented_byKeyword_2_0() { return cImplemented_byKeyword_2_0; }
		
		//implementedBy+=QualifiedName
		public Assignment getImplementedByAssignment_2_1() { return cImplementedByAssignment_2_1; }
		
		//QualifiedName
		public RuleCall getImplementedByQualifiedNameParserRuleCall_2_1_0() { return cImplementedByQualifiedNameParserRuleCall_2_1_0; }
		
		//('rendered_by ' renderedBy+=QualifiedName)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'rendered_by '
		public Keyword getRendered_byKeyword_3_0() { return cRendered_byKeyword_3_0; }
		
		//renderedBy+=QualifiedName
		public Assignment getRenderedByAssignment_3_1() { return cRenderedByAssignment_3_1; }
		
		//QualifiedName
		public RuleCall getRenderedByQualifiedNameParserRuleCall_3_1_0() { return cRenderedByQualifiedNameParserRuleCall_3_1_0; }
		
		//(processesInput='processes_input')?
		public Assignment getProcessesInputAssignment_4() { return cProcessesInputAssignment_4; }
		
		//'processes_input'
		public Keyword getProcessesInputProcesses_inputKeyword_4_0() { return cProcessesInputProcesses_inputKeyword_4_0; }
		
		//('extends' extends=QualifiedName)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'extends'
		public Keyword getExtendsKeyword_5_0() { return cExtendsKeyword_5_0; }
		
		//extends=QualifiedName
		public Assignment getExtendsAssignment_5_1() { return cExtendsAssignment_5_1; }
		
		//QualifiedName
		public RuleCall getExtendsQualifiedNameParserRuleCall_5_1_0() { return cExtendsQualifiedNameParserRuleCall_5_1_0; }
		
		//(hasChildren='has_children')?
		public Assignment getHasChildrenAssignment_6() { return cHasChildrenAssignment_6; }
		
		//'has_children'
		public Keyword getHasChildrenHas_childrenKeyword_6_0() { return cHasChildrenHas_childrenKeyword_6_0; }
		
		//(hasTooltip='has_tooltip')?
		public Assignment getHasTooltipAssignment_7() { return cHasTooltipAssignment_7; }
		
		//'has_tooltip'
		public Keyword getHasTooltipHas_tooltipKeyword_7_0() { return cHasTooltipHas_tooltipKeyword_7_0; }
		
		//(isReponsive='is_responsive')?
		public Assignment getIsReponsiveAssignment_8() { return cIsReponsiveAssignment_8; }
		
		//'is_responsive'
		public Keyword getIsReponsiveIs_responsiveKeyword_8_0() { return cIsReponsiveIs_responsiveKeyword_8_0; }
		
		//('description' description=STRING)?
		public Group getGroup_9() { return cGroup_9; }
		
		//'description'
		public Keyword getDescriptionKeyword_9_0() { return cDescriptionKeyword_9_0; }
		
		//description=STRING
		public Assignment getDescriptionAssignment_9_1() { return cDescriptionAssignment_9_1; }
		
		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_9_1_0() { return cDescriptionSTRINGTerminalRuleCall_9_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_10() { return cLeftCurlyBracketKeyword_10; }
		
		//(attributes+=Attribute)*
		public Assignment getAttributesAssignment_11() { return cAttributesAssignment_11; }
		
		//Attribute
		public RuleCall getAttributesAttributeParserRuleCall_11_0() { return cAttributesAttributeParserRuleCall_11_0; }
		
		//('+' attributeLists += ID)*
		public Group getGroup_12() { return cGroup_12; }
		
		//'+'
		public Keyword getPlusSignKeyword_12_0() { return cPlusSignKeyword_12_0; }
		
		//attributeLists += ID
		public Assignment getAttributeListsAssignment_12_1() { return cAttributeListsAssignment_12_1; }
		
		//ID
		public RuleCall getAttributeListsIDTerminalRuleCall_12_1_0() { return cAttributeListsIDTerminalRuleCall_12_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_13() { return cRightCurlyBracketKeyword_13; }
	}
	public class AttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.beyondjava.xtext.jsf.ComponentLanguage.Attribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameCSSIDParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Assignment cTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cTypeAttributetypeParserRuleCall_1_0 = (RuleCall)cTypeAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cDefaultKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cDefaultValueAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cDefaultValueSTRINGTerminalRuleCall_2_1_0 = (RuleCall)cDefaultValueAssignment_2_1.eContents().get(0);
		private final Assignment cRequiredAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cRequiredMandatoryKeyword_3_0 = (Keyword)cRequiredAssignment_3.eContents().get(0);
		private final Assignment cInheritedAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final Keyword cInheritedInheritedKeyword_4_0 = (Keyword)cInheritedAssignment_4.eContents().get(0);
		private final Assignment cDescAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cDescSTRINGTerminalRuleCall_5_0 = (RuleCall)cDescAssignment_5.eContents().get(0);
		
		//Attribute:
		//    name=CSSID (type=Attributetype)? ('default' defaultValue=STRING)? (required='mandatory')? (inherited='inherited')? (desc=STRING)?;
		@Override public ParserRule getRule() { return rule; }
		
		//name=CSSID (type=Attributetype)? ('default' defaultValue=STRING)? (required='mandatory')? (inherited='inherited')? (desc=STRING)?
		public Group getGroup() { return cGroup; }
		
		//name=CSSID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//CSSID
		public RuleCall getNameCSSIDParserRuleCall_0_0() { return cNameCSSIDParserRuleCall_0_0; }
		
		//(type=Attributetype)?
		public Assignment getTypeAssignment_1() { return cTypeAssignment_1; }
		
		//Attributetype
		public RuleCall getTypeAttributetypeParserRuleCall_1_0() { return cTypeAttributetypeParserRuleCall_1_0; }
		
		//('default' defaultValue=STRING)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'default'
		public Keyword getDefaultKeyword_2_0() { return cDefaultKeyword_2_0; }
		
		//defaultValue=STRING
		public Assignment getDefaultValueAssignment_2_1() { return cDefaultValueAssignment_2_1; }
		
		//STRING
		public RuleCall getDefaultValueSTRINGTerminalRuleCall_2_1_0() { return cDefaultValueSTRINGTerminalRuleCall_2_1_0; }
		
		//(required='mandatory')?
		public Assignment getRequiredAssignment_3() { return cRequiredAssignment_3; }
		
		//'mandatory'
		public Keyword getRequiredMandatoryKeyword_3_0() { return cRequiredMandatoryKeyword_3_0; }
		
		//(inherited='inherited')?
		public Assignment getInheritedAssignment_4() { return cInheritedAssignment_4; }
		
		//'inherited'
		public Keyword getInheritedInheritedKeyword_4_0() { return cInheritedInheritedKeyword_4_0; }
		
		//(desc=STRING)?
		public Assignment getDescAssignment_5() { return cDescAssignment_5; }
		
		//STRING
		public RuleCall getDescSTRINGTerminalRuleCall_5_0() { return cDescSTRINGTerminalRuleCall_5_0; }
	}
	public class QualifiedNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.beyondjava.xtext.jsf.ComponentLanguage.QualifiedName");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//QualifiedName:
		//    ID ('.' ID)*;
		@Override public ParserRule getRule() { return rule; }
		
		//ID ('.' ID)*
		public Group getGroup() { return cGroup; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }
		
		//('.' ID)*
		public Group getGroup_1() { return cGroup_1; }
		
		//'.'
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1_1() { return cIDTerminalRuleCall_1_1; }
	}
	public class CSSIDElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.beyondjava.xtext.jsf.ComponentLanguage.CSSID");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//CSSID:
		//    ID ('-' ID)*;
		@Override public ParserRule getRule() { return rule; }
		
		//ID ('-' ID)*
		public Group getGroup() { return cGroup; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }
		
		//('-' ID)*
		public Group getGroup_1() { return cGroup_1; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_1_0() { return cHyphenMinusKeyword_1_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1_1() { return cIDTerminalRuleCall_1_1; }
	}
	public class AttributetypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.beyondjava.xtext.jsf.ComponentLanguage.Attributetype");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cStringKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cBooleanKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cIntegerKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword cFloatKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		private final Keyword cJavaxElMethodExpressionKeyword_4 = (Keyword)cAlternatives.eContents().get(4);
		private final Keyword cJavaxFacesEventActionListenerKeyword_5 = (Keyword)cAlternatives.eContents().get(5);
		private final Keyword cJavaxFacesComponentUIComponentKeyword_6 = (Keyword)cAlternatives.eContents().get(6);
		private final Keyword cJavaxElValueExpressionKeyword_7 = (Keyword)cAlternatives.eContents().get(7);
		private final Keyword cJavaxFacesEventValueChangeListenerKeyword_8 = (Keyword)cAlternatives.eContents().get(8);
		private final Keyword cJavaFacesConvertConverterKeyword_9 = (Keyword)cAlternatives.eContents().get(9);
		private final Keyword cJavaUtilListKeyword_10 = (Keyword)cAlternatives.eContents().get(10);
		private final Keyword cJavaxFacesValidatorValidatorKeyword_11 = (Keyword)cAlternatives.eContents().get(11);
		private final Keyword cTreeNodeEventListenerKeyword_12 = (Keyword)cAlternatives.eContents().get(12);
		private final Group cGroup_13 = (Group)cAlternatives.eContents().get(13);
		private final Keyword cMapKeyword_13_0 = (Keyword)cGroup_13.eContents().get(0);
		private final RuleCall cQualifiedNameParserRuleCall_13_1 = (RuleCall)cGroup_13.eContents().get(1);
		private final Keyword cCommaKeyword_13_2 = (Keyword)cGroup_13.eContents().get(2);
		private final RuleCall cQualifiedNameParserRuleCall_13_3 = (RuleCall)cGroup_13.eContents().get(3);
		private final Keyword cGreaterThanSignKeyword_13_4 = (Keyword)cGroup_13.eContents().get(4);
		private final Keyword cDrawingKeyword_14 = (Keyword)cAlternatives.eContents().get(14);
		private final Keyword cJavaLangObjectKeyword_15 = (Keyword)cAlternatives.eContents().get(15);
		private final Keyword cScrollSpyEventListenerKeyword_16 = (Keyword)cAlternatives.eContents().get(16);
		private final Keyword cNodeKeyword_17 = (Keyword)cAlternatives.eContents().get(17);
		
		//Attributetype:
		//    'String'
		//    | 'Boolean'
		//    | 'Integer'
		//    | 'Float'
		//    | 'javax.el.MethodExpression'
		//    | 'javax.faces.event.ActionListener'
		//    | 'javax.faces.component.UIComponent'
		//    | 'javax.el.ValueExpression'
		//    | 'javax.faces.event.ValueChangeListener'
		//    | 'java.faces.convert.Converter'
		//    | 'java.util.List'
		//    | 'javax.faces.validator.Validator'
		//    | 'TreeNodeEventListener'
		//    | 'Map<' QualifiedName ',' QualifiedName '>'
		//    | 'Drawing'
		//    | 'java.lang.Object'
		//    | 'ScrollSpyEventListener'
		//    | 'Node';
		@Override public ParserRule getRule() { return rule; }
		
		//'String'
		//| 'Boolean'
		//| 'Integer'
		//| 'Float'
		//| 'javax.el.MethodExpression'
		//| 'javax.faces.event.ActionListener'
		//| 'javax.faces.component.UIComponent'
		//| 'javax.el.ValueExpression'
		//| 'javax.faces.event.ValueChangeListener'
		//| 'java.faces.convert.Converter'
		//| 'java.util.List'
		//| 'javax.faces.validator.Validator'
		//| 'TreeNodeEventListener'
		//| 'Map<' QualifiedName ',' QualifiedName '>'
		//| 'Drawing'
		//| 'java.lang.Object'
		//| 'ScrollSpyEventListener'
		//| 'Node'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'String'
		public Keyword getStringKeyword_0() { return cStringKeyword_0; }
		
		//'Boolean'
		public Keyword getBooleanKeyword_1() { return cBooleanKeyword_1; }
		
		//'Integer'
		public Keyword getIntegerKeyword_2() { return cIntegerKeyword_2; }
		
		//'Float'
		public Keyword getFloatKeyword_3() { return cFloatKeyword_3; }
		
		//'javax.el.MethodExpression'
		public Keyword getJavaxElMethodExpressionKeyword_4() { return cJavaxElMethodExpressionKeyword_4; }
		
		//'javax.faces.event.ActionListener'
		public Keyword getJavaxFacesEventActionListenerKeyword_5() { return cJavaxFacesEventActionListenerKeyword_5; }
		
		//'javax.faces.component.UIComponent'
		public Keyword getJavaxFacesComponentUIComponentKeyword_6() { return cJavaxFacesComponentUIComponentKeyword_6; }
		
		//'javax.el.ValueExpression'
		public Keyword getJavaxElValueExpressionKeyword_7() { return cJavaxElValueExpressionKeyword_7; }
		
		//'javax.faces.event.ValueChangeListener'
		public Keyword getJavaxFacesEventValueChangeListenerKeyword_8() { return cJavaxFacesEventValueChangeListenerKeyword_8; }
		
		//'java.faces.convert.Converter'
		public Keyword getJavaFacesConvertConverterKeyword_9() { return cJavaFacesConvertConverterKeyword_9; }
		
		//'java.util.List'
		public Keyword getJavaUtilListKeyword_10() { return cJavaUtilListKeyword_10; }
		
		//'javax.faces.validator.Validator'
		public Keyword getJavaxFacesValidatorValidatorKeyword_11() { return cJavaxFacesValidatorValidatorKeyword_11; }
		
		//'TreeNodeEventListener'
		public Keyword getTreeNodeEventListenerKeyword_12() { return cTreeNodeEventListenerKeyword_12; }
		
		//'Map<' QualifiedName ',' QualifiedName '>'
		public Group getGroup_13() { return cGroup_13; }
		
		//'Map<'
		public Keyword getMapKeyword_13_0() { return cMapKeyword_13_0; }
		
		//QualifiedName
		public RuleCall getQualifiedNameParserRuleCall_13_1() { return cQualifiedNameParserRuleCall_13_1; }
		
		//','
		public Keyword getCommaKeyword_13_2() { return cCommaKeyword_13_2; }
		
		//QualifiedName
		public RuleCall getQualifiedNameParserRuleCall_13_3() { return cQualifiedNameParserRuleCall_13_3; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_13_4() { return cGreaterThanSignKeyword_13_4; }
		
		//'Drawing'
		public Keyword getDrawingKeyword_14() { return cDrawingKeyword_14; }
		
		//'java.lang.Object'
		public Keyword getJavaLangObjectKeyword_15() { return cJavaLangObjectKeyword_15; }
		
		//'ScrollSpyEventListener'
		public Keyword getScrollSpyEventListenerKeyword_16() { return cScrollSpyEventListenerKeyword_16; }
		
		//'Node'
		public Keyword getNodeKeyword_17() { return cNodeKeyword_17; }
	}
	
	
	private final DomainmodelElements pDomainmodel;
	private final AttributeListElements pAttributeList;
	private final ComponentElements pComponent;
	private final AttributeElements pAttribute;
	private final QualifiedNameElements pQualifiedName;
	private final CSSIDElements pCSSID;
	private final AttributetypeElements pAttributetype;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public ComponentLanguageGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pDomainmodel = new DomainmodelElements();
		this.pAttributeList = new AttributeListElements();
		this.pComponent = new ComponentElements();
		this.pAttribute = new AttributeElements();
		this.pQualifiedName = new QualifiedNameElements();
		this.pCSSID = new CSSIDElements();
		this.pAttributetype = new AttributetypeElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("de.beyondjava.xtext.jsf.ComponentLanguage".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Domainmodel:
	//    (elements+=AttributeList)*
	//    (elements+=Component)*;
	public DomainmodelElements getDomainmodelAccess() {
		return pDomainmodel;
	}
	
	public ParserRule getDomainmodelRule() {
		return getDomainmodelAccess().getRule();
	}
	
	//AttributeList:
	//    'attribute_list' name=ID
	//    '{'
	//       (attributes+=Attribute)*
	//    '}';
	public AttributeListElements getAttributeListAccess() {
		return pAttributeList;
	}
	
	public ParserRule getAttributeListRule() {
		return getAttributeListAccess().getRule();
	}
	
	//Component:
	//    'widget' name=ID
	//    ('implemented_by ' implementedBy+=QualifiedName)?
	//    ('rendered_by ' renderedBy+=QualifiedName)?
	//    (processesInput='processes_input')?
	//    ('extends' extends=QualifiedName)?
	//    (hasChildren='has_children')?
	//    (hasTooltip='has_tooltip')?
	//    (isReponsive='is_responsive')?
	//    ('description' description=STRING)?
	//    '{'
	//       (attributes+=Attribute)*
	//       ('+' attributeLists += ID)*
	//    '}';
	public ComponentElements getComponentAccess() {
		return pComponent;
	}
	
	public ParserRule getComponentRule() {
		return getComponentAccess().getRule();
	}
	
	//Attribute:
	//    name=CSSID (type=Attributetype)? ('default' defaultValue=STRING)? (required='mandatory')? (inherited='inherited')? (desc=STRING)?;
	public AttributeElements getAttributeAccess() {
		return pAttribute;
	}
	
	public ParserRule getAttributeRule() {
		return getAttributeAccess().getRule();
	}
	
	//QualifiedName:
	//    ID ('.' ID)*;
	public QualifiedNameElements getQualifiedNameAccess() {
		return pQualifiedName;
	}
	
	public ParserRule getQualifiedNameRule() {
		return getQualifiedNameAccess().getRule();
	}
	
	//CSSID:
	//    ID ('-' ID)*;
	public CSSIDElements getCSSIDAccess() {
		return pCSSID;
	}
	
	public ParserRule getCSSIDRule() {
		return getCSSIDAccess().getRule();
	}
	
	//Attributetype:
	//    'String'
	//    | 'Boolean'
	//    | 'Integer'
	//    | 'Float'
	//    | 'javax.el.MethodExpression'
	//    | 'javax.faces.event.ActionListener'
	//    | 'javax.faces.component.UIComponent'
	//    | 'javax.el.ValueExpression'
	//    | 'javax.faces.event.ValueChangeListener'
	//    | 'java.faces.convert.Converter'
	//    | 'java.util.List'
	//    | 'javax.faces.validator.Validator'
	//    | 'TreeNodeEventListener'
	//    | 'Map<' QualifiedName ',' QualifiedName '>'
	//    | 'Drawing'
	//    | 'java.lang.Object'
	//    | 'ScrollSpyEventListener'
	//    | 'Node';
	public AttributetypeElements getAttributetypeAccess() {
		return pAttributetype;
	}
	
	public ParserRule getAttributetypeRule() {
		return getAttributetypeAccess().getRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
