/**
 * generated by Xtext 2.35.0
 */
package edelta.edelta.impl;

import edelta.edelta.*;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class EdeltaFactoryImpl extends EFactoryImpl implements EdeltaFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static EdeltaFactory init()
  {
    try
    {
      EdeltaFactory theEdeltaFactory = (EdeltaFactory)EPackage.Registry.INSTANCE.getEFactory(EdeltaPackage.eNS_URI);
      if (theEdeltaFactory != null)
      {
        return theEdeltaFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new EdeltaFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EdeltaFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case EdeltaPackage.EDELTA_PROGRAM: return createEdeltaProgram();
      case EdeltaPackage.EDELTA_USE_AS: return createEdeltaUseAs();
      case EdeltaPackage.EDELTA_MODIFY_ECORE_OPERATION: return createEdeltaModifyEcoreOperation();
      case EdeltaPackage.EDELTA_OPERATION: return createEdeltaOperation();
      case EdeltaPackage.EDELTA_ECORE_REFERENCE: return createEdeltaEcoreReference();
      case EdeltaPackage.EDELTA_ECORE_REFERENCE_EXPRESSION: return createEdeltaEcoreReferenceExpression();
      case EdeltaPackage.EDELTA_ECORE_QUALIFIED_REFERENCE: return createEdeltaEcoreQualifiedReference();
      case EdeltaPackage.EDELTA_ECORE_DIRECT_REFERENCE: return createEdeltaEcoreDirectReference();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EdeltaProgram createEdeltaProgram()
  {
    EdeltaProgramImpl edeltaProgram = new EdeltaProgramImpl();
    return edeltaProgram;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EdeltaUseAs createEdeltaUseAs()
  {
    EdeltaUseAsImpl edeltaUseAs = new EdeltaUseAsImpl();
    return edeltaUseAs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EdeltaModifyEcoreOperation createEdeltaModifyEcoreOperation()
  {
    EdeltaModifyEcoreOperationImpl edeltaModifyEcoreOperation = new EdeltaModifyEcoreOperationImpl();
    return edeltaModifyEcoreOperation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EdeltaOperation createEdeltaOperation()
  {
    EdeltaOperationImpl edeltaOperation = new EdeltaOperationImpl();
    return edeltaOperation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EdeltaEcoreReference createEdeltaEcoreReference()
  {
    EdeltaEcoreReferenceImpl edeltaEcoreReference = new EdeltaEcoreReferenceImpl();
    return edeltaEcoreReference;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EdeltaEcoreReferenceExpression createEdeltaEcoreReferenceExpression()
  {
    EdeltaEcoreReferenceExpressionImpl edeltaEcoreReferenceExpression = new EdeltaEcoreReferenceExpressionImpl();
    return edeltaEcoreReferenceExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EdeltaEcoreQualifiedReference createEdeltaEcoreQualifiedReference()
  {
    EdeltaEcoreQualifiedReferenceImpl edeltaEcoreQualifiedReference = new EdeltaEcoreQualifiedReferenceImpl();
    return edeltaEcoreQualifiedReference;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EdeltaEcoreDirectReference createEdeltaEcoreDirectReference()
  {
    EdeltaEcoreDirectReferenceImpl edeltaEcoreDirectReference = new EdeltaEcoreDirectReferenceImpl();
    return edeltaEcoreDirectReference;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EdeltaPackage getEdeltaPackage()
  {
    return (EdeltaPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static EdeltaPackage getPackage()
  {
    return EdeltaPackage.eINSTANCE;
  }

} //EdeltaFactoryImpl
