module ck2xtext.generic.GenerateCk2

import org.eclipse.xtext.xtext.generator.*
import org.eclipse.xtext.xtext.generator.model.project.*

import org.eclipse.xtext.xtext.generator.parser.antlr.*

var rootPath = ".."

Workflow {
	
	component = XtextGenerator {
		configuration = {
			project = StandardProjectConfig {
				baseName = "ck2xtext"
				rootPath = rootPath
				runtimeTest = {
					enabled = true
				}
				genericIde = {
					enabled = true
				}
				eclipsePlugin = {
					enabled = true
				}
				eclipsePluginTest = {
					enabled = true
				}
				createEclipseMetaData = true
			}
			code = {
				encoding = "UTF-8"
				lineDelimiter = "\r\n"
				fileHeader = "/*\n * generated by Xtext \${version}\n */"
				preferXtendStubs = false
			}
		}
		language = XtextGeneratorLanguage {
			name = "ck2xtext.common.Ck2Terminals"
			
			fileExtensions = ""
			
			// Useless, but add minimum fragments to please the compiler
			fragment = grammarAccess.GrammarAccessFragment2 {}
			fragment = serializer.SerializerFragment2 {
				generateStub = false
				generateXtendStub = false
			}	
		}
		language = StandardLanguage {
			name = "ck2xtext.gfx.Ck2Gfx"
			
			fileExtensions = "gfx"

			contentAssist = {
				inheritImplementation = false
			}
			scopeProvider = {
				inheritImplementation = false
			}
			serializer = {
				generateStub = false
			}
			validator = {
				inheritImplementation = false
				// composedCheck = "org.eclipse.xtext.validation.NamesAreUniqueValidator"
			}

			// New formatter API 
			// fragment = formatting.Formatter2Fragment2 {}
			
			junitSupport = {
				junitVersion = "5"
			}
		}
		language = StandardLanguage {
			name = "ck2xtext.generic.Ck2"
			fileExtensions = "txt,gui,sfx,map"
			
			contentAssist = {
				inheritImplementation = false
			}
			scopeProvider = {
				inheritImplementation = false
			}

			serializer = {
				generateStub = false
			}
			validator = {
				inheritImplementation = false
				// composedCheck = "org.eclipse.xtext.validation.NamesAreUniqueValidator"

				// Enables several checks on the inferred Jvm model for Xbase languages concerning Java inheritance relations
				// composedCheck = "org.eclipse.xtext.xbase.validation.JvmGenericTypeValidator"

				// Generates checks for @Deprecated grammar annotations, an IssueProvider and a corresponding PropertyPage
//				generateDeprecationValidation = true
			}
			generator = {
				generateXtendStub = true
			}
			junitSupport = {
				junitVersion = "5"
			}
		}
	}
}
