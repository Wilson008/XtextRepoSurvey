package org.xtext.example.checkerdsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.checkerdsl.services.CheckerDslGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalCheckerDslParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_INT", "RULE_STRING", "RULE_HEX", "RULE_DECIMAL", "RULE_ID", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER", "'package'", "'{'", "'}'", "'class'", "'extends'", "'op'", "'('", "','", "')'", "':'", "'score'", "'followup'", "'check'", "'MR'", "'['", "']'", "';'", "'sp'", "'int'", "'long'", "'float'", "'double'", "'boolean'", "'char'", "'string'", "'tree'", "'adjMat'", "'adjList'", "'in'", "'out'", "'ans'", "'.'", "'`'", "'<'", "'>'", "'sum'", "'max'", "'min'", "'prime'", "'swap'", "'select'", "'..'", "'add'", "'remove'", "'random'", "'size'", "'reverse'", "'contain'", "'addRow'", "'addColumn'", "'swapRow'", "'swapColumn'", "'removeRow'", "'removeColumn'", "'permute'", "'plus'", "'multiply'", "'invert'", "'include'", "'exclude'", "'compositional'", "'def'", "'='", "'+'", "'-'", "'*'", "'/'", "'|'", "'&'", "'^'", "'=='", "'!='", "'>='", "'<='", "'and'", "'or'", "'for'", "'where'", "'not'", "'subtask'", "'input'", "'output'", "'hidden'", "'+='", "'-='", "'*='", "'/='", "'%='", "'||'", "'&&'", "'==='", "'!=='", "'instanceof'", "'->'", "'..<'", "'=>'", "'<>'", "'?:'", "'**'", "'%'", "'!'", "'as'", "'++'", "'--'", "'::'", "'?.'", "'#'", "'if'", "'else'", "'switch'", "'default'", "'case'", "'while'", "'do'", "'var'", "'val'", "'static'", "'import'", "'extension'", "'super'", "'new'", "'false'", "'true'", "'null'", "'typeof'", "'throw'", "'return'", "'try'", "'finally'", "'synchronized'", "'catch'", "'?'"
    };
    public static final int T__144=144;
    public static final int T__143=143;
    public static final int RULE_HEX=6;
    public static final int T__50=50;
    public static final int T__140=140;
    public static final int T__142=142;
    public static final int T__141=141;
    public static final int T__59=59;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__137=137;
    public static final int T__52=52;
    public static final int T__136=136;
    public static final int T__53=53;
    public static final int T__139=139;
    public static final int T__54=54;
    public static final int T__138=138;
    public static final int T__133=133;
    public static final int T__132=132;
    public static final int T__60=60;
    public static final int T__135=135;
    public static final int T__61=61;
    public static final int T__134=134;
    public static final int RULE_ID=8;
    public static final int T__131=131;
    public static final int T__130=130;
    public static final int RULE_INT=4;
    public static final int T__66=66;
    public static final int RULE_ML_COMMENT=9;
    public static final int T__67=67;
    public static final int T__129=129;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__62=62;
    public static final int T__126=126;
    public static final int T__63=63;
    public static final int T__125=125;
    public static final int T__64=64;
    public static final int T__128=128;
    public static final int T__65=65;
    public static final int T__127=127;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__30=30;
    public static final int T__31=31;
    public static final int T__32=32;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__40=40;
    public static final int T__41=41;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__91=91;
    public static final int T__100=100;
    public static final int T__92=92;
    public static final int T__93=93;
    public static final int T__102=102;
    public static final int T__94=94;
    public static final int T__101=101;
    public static final int T__90=90;
    public static final int T__19=19;
    public static final int T__15=15;
    public static final int T__16=16;
    public static final int T__17=17;
    public static final int T__18=18;
    public static final int T__99=99;
    public static final int T__13=13;
    public static final int T__14=14;
    public static final int T__95=95;
    public static final int T__96=96;
    public static final int T__97=97;
    public static final int T__98=98;
    public static final int RULE_DECIMAL=7;
    public static final int T__26=26;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int T__29=29;
    public static final int T__22=22;
    public static final int T__23=23;
    public static final int T__24=24;
    public static final int T__25=25;
    public static final int T__20=20;
    public static final int T__21=21;
    public static final int T__122=122;
    public static final int T__70=70;
    public static final int T__121=121;
    public static final int T__71=71;
    public static final int T__124=124;
    public static final int T__72=72;
    public static final int T__123=123;
    public static final int T__120=120;
    public static final int RULE_STRING=5;
    public static final int RULE_SL_COMMENT=10;
    public static final int T__77=77;
    public static final int T__119=119;
    public static final int T__78=78;
    public static final int T__118=118;
    public static final int T__79=79;
    public static final int T__73=73;
    public static final int T__115=115;
    public static final int EOF=-1;
    public static final int T__74=74;
    public static final int T__114=114;
    public static final int T__75=75;
    public static final int T__117=117;
    public static final int T__76=76;
    public static final int T__116=116;
    public static final int T__80=80;
    public static final int T__111=111;
    public static final int T__81=81;
    public static final int T__110=110;
    public static final int T__82=82;
    public static final int T__113=113;
    public static final int T__83=83;
    public static final int T__112=112;
    public static final int RULE_WS=11;
    public static final int RULE_ANY_OTHER=12;
    public static final int T__88=88;
    public static final int T__108=108;
    public static final int T__89=89;
    public static final int T__107=107;
    public static final int T__109=109;
    public static final int T__84=84;
    public static final int T__104=104;
    public static final int T__85=85;
    public static final int T__103=103;
    public static final int T__86=86;
    public static final int T__106=106;
    public static final int T__87=87;
    public static final int T__105=105;

    // delegates
    // delegators


        public InternalCheckerDslParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalCheckerDslParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalCheckerDslParser.tokenNames; }
    public String getGrammarFileName() { return "InternalCheckerDsl.g"; }



     	private CheckerDslGrammarAccess grammarAccess;

        public InternalCheckerDslParser(TokenStream input, CheckerDslGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }

        @Override
        protected String getFirstRuleName() {
        	return "Dsl";
       	}

       	@Override
       	protected CheckerDslGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}




    // $ANTLR start "entryRuleDsl"
    // InternalCheckerDsl.g:64:1: entryRuleDsl returns [EObject current=null] : iv_ruleDsl= ruleDsl EOF ;
    public final EObject entryRuleDsl() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDsl = null;


        try {
            // InternalCheckerDsl.g:64:44: (iv_ruleDsl= ruleDsl EOF )
            // InternalCheckerDsl.g:65:2: iv_ruleDsl= ruleDsl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDslRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDsl=ruleDsl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDsl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDsl"


    // $ANTLR start "ruleDsl"
    // InternalCheckerDsl.g:71:1: ruleDsl returns [EObject current=null] : ( ( (lv_importSection_0_0= ruleXImportSection ) )? ( (lv_elements_1_0= ruleAbstractElement ) )* ) ;
    public final EObject ruleDsl() throws RecognitionException {
        EObject current = null;

        EObject lv_importSection_0_0 = null;

        EObject lv_elements_1_0 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:77:2: ( ( ( (lv_importSection_0_0= ruleXImportSection ) )? ( (lv_elements_1_0= ruleAbstractElement ) )* ) )
            // InternalCheckerDsl.g:78:2: ( ( (lv_importSection_0_0= ruleXImportSection ) )? ( (lv_elements_1_0= ruleAbstractElement ) )* )
            {
            // InternalCheckerDsl.g:78:2: ( ( (lv_importSection_0_0= ruleXImportSection ) )? ( (lv_elements_1_0= ruleAbstractElement ) )* )
            // InternalCheckerDsl.g:79:3: ( (lv_importSection_0_0= ruleXImportSection ) )? ( (lv_elements_1_0= ruleAbstractElement ) )*
            {
            // InternalCheckerDsl.g:79:3: ( (lv_importSection_0_0= ruleXImportSection ) )?
            int alt1=2;
            int LA1_0 = input.LA(1);

            if ( (LA1_0==130) ) {
                alt1=1;
            }
            switch (alt1) {
                case 1 :
                    // InternalCheckerDsl.g:80:4: (lv_importSection_0_0= ruleXImportSection )
                    {
                    // InternalCheckerDsl.g:80:4: (lv_importSection_0_0= ruleXImportSection )
                    // InternalCheckerDsl.g:81:5: lv_importSection_0_0= ruleXImportSection
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDslAccess().getImportSectionXImportSectionParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_3);
                    lv_importSection_0_0=ruleXImportSection();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDslRule());
                      					}
                      					set(
                      						current,
                      						"importSection",
                      						lv_importSection_0_0,
                      						"org.eclipse.xtext.xbase.Xtype.XImportSection");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalCheckerDsl.g:98:3: ( (lv_elements_1_0= ruleAbstractElement ) )*
            loop2:
            do {
                int alt2=2;
                int LA2_0 = input.LA(1);

                if ( (LA2_0==13||LA2_0==16) ) {
                    alt2=1;
                }


                switch (alt2) {
            	case 1 :
            	    // InternalCheckerDsl.g:99:4: (lv_elements_1_0= ruleAbstractElement )
            	    {
            	    // InternalCheckerDsl.g:99:4: (lv_elements_1_0= ruleAbstractElement )
            	    // InternalCheckerDsl.g:100:5: lv_elements_1_0= ruleAbstractElement
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getDslAccess().getElementsAbstractElementParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_3);
            	    lv_elements_1_0=ruleAbstractElement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getDslRule());
            	      					}
            	      					add(
            	      						current,
            	      						"elements",
            	      						lv_elements_1_0,
            	      						"org.xtext.example.checkerdsl.CheckerDsl.AbstractElement");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop2;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDsl"


    // $ANTLR start "entryRuleAbstractElement"
    // InternalCheckerDsl.g:121:1: entryRuleAbstractElement returns [EObject current=null] : iv_ruleAbstractElement= ruleAbstractElement EOF ;
    public final EObject entryRuleAbstractElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAbstractElement = null;


        try {
            // InternalCheckerDsl.g:121:56: (iv_ruleAbstractElement= ruleAbstractElement EOF )
            // InternalCheckerDsl.g:122:2: iv_ruleAbstractElement= ruleAbstractElement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAbstractElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAbstractElement=ruleAbstractElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAbstractElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAbstractElement"


    // $ANTLR start "ruleAbstractElement"
    // InternalCheckerDsl.g:128:1: ruleAbstractElement returns [EObject current=null] : (this_PackageDeclaration_0= rulePackageDeclaration | this_Class_1= ruleClass ) ;
    public final EObject ruleAbstractElement() throws RecognitionException {
        EObject current = null;

        EObject this_PackageDeclaration_0 = null;

        EObject this_Class_1 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:134:2: ( (this_PackageDeclaration_0= rulePackageDeclaration | this_Class_1= ruleClass ) )
            // InternalCheckerDsl.g:135:2: (this_PackageDeclaration_0= rulePackageDeclaration | this_Class_1= ruleClass )
            {
            // InternalCheckerDsl.g:135:2: (this_PackageDeclaration_0= rulePackageDeclaration | this_Class_1= ruleClass )
            int alt3=2;
            int LA3_0 = input.LA(1);

            if ( (LA3_0==13) ) {
                alt3=1;
            }
            else if ( (LA3_0==16) ) {
                alt3=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;
            }
            switch (alt3) {
                case 1 :
                    // InternalCheckerDsl.g:136:3: this_PackageDeclaration_0= rulePackageDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAbstractElementAccess().getPackageDeclarationParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_PackageDeclaration_0=rulePackageDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_PackageDeclaration_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalCheckerDsl.g:145:3: this_Class_1= ruleClass
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAbstractElementAccess().getClassParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Class_1=ruleClass();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Class_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAbstractElement"


    // $ANTLR start "entryRulePackageDeclaration"
    // InternalCheckerDsl.g:157:1: entryRulePackageDeclaration returns [EObject current=null] : iv_rulePackageDeclaration= rulePackageDeclaration EOF ;
    public final EObject entryRulePackageDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePackageDeclaration = null;


        try {
            // InternalCheckerDsl.g:157:59: (iv_rulePackageDeclaration= rulePackageDeclaration EOF )
            // InternalCheckerDsl.g:158:2: iv_rulePackageDeclaration= rulePackageDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPackageDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePackageDeclaration=rulePackageDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePackageDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePackageDeclaration"


    // $ANTLR start "rulePackageDeclaration"
    // InternalCheckerDsl.g:164:1: rulePackageDeclaration returns [EObject current=null] : (otherlv_0= 'package' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' ( (lv_elements_3_0= ruleAbstractElement ) )* otherlv_4= '}' ) ;
    public final EObject rulePackageDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_elements_3_0 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:170:2: ( (otherlv_0= 'package' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' ( (lv_elements_3_0= ruleAbstractElement ) )* otherlv_4= '}' ) )
            // InternalCheckerDsl.g:171:2: (otherlv_0= 'package' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' ( (lv_elements_3_0= ruleAbstractElement ) )* otherlv_4= '}' )
            {
            // InternalCheckerDsl.g:171:2: (otherlv_0= 'package' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' ( (lv_elements_3_0= ruleAbstractElement ) )* otherlv_4= '}' )
            // InternalCheckerDsl.g:172:3: otherlv_0= 'package' ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= '{' ( (lv_elements_3_0= ruleAbstractElement ) )* otherlv_4= '}'
            {
            otherlv_0=(Token)match(input,13,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getPackageDeclarationAccess().getPackageKeyword_0());
              		
            }
            // InternalCheckerDsl.g:176:3: ( (lv_name_1_0= ruleQualifiedName ) )
            // InternalCheckerDsl.g:177:4: (lv_name_1_0= ruleQualifiedName )
            {
            // InternalCheckerDsl.g:177:4: (lv_name_1_0= ruleQualifiedName )
            // InternalCheckerDsl.g:178:5: lv_name_1_0= ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getPackageDeclarationAccess().getNameQualifiedNameParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_5);
            lv_name_1_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getPackageDeclarationRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xbase.QualifiedName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,14,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getPackageDeclarationAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalCheckerDsl.g:199:3: ( (lv_elements_3_0= ruleAbstractElement ) )*
            loop4:
            do {
                int alt4=2;
                int LA4_0 = input.LA(1);

                if ( (LA4_0==13||LA4_0==16) ) {
                    alt4=1;
                }


                switch (alt4) {
            	case 1 :
            	    // InternalCheckerDsl.g:200:4: (lv_elements_3_0= ruleAbstractElement )
            	    {
            	    // InternalCheckerDsl.g:200:4: (lv_elements_3_0= ruleAbstractElement )
            	    // InternalCheckerDsl.g:201:5: lv_elements_3_0= ruleAbstractElement
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getPackageDeclarationAccess().getElementsAbstractElementParserRuleCall_3_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_6);
            	    lv_elements_3_0=ruleAbstractElement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getPackageDeclarationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"elements",
            	      						lv_elements_3_0,
            	      						"org.xtext.example.checkerdsl.CheckerDsl.AbstractElement");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop4;
                }
            } while (true);

            otherlv_4=(Token)match(input,15,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getPackageDeclarationAccess().getRightCurlyBracketKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePackageDeclaration"


    // $ANTLR start "entryRuleClass"
    // InternalCheckerDsl.g:226:1: entryRuleClass returns [EObject current=null] : iv_ruleClass= ruleClass EOF ;
    public final EObject entryRuleClass() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleClass = null;


        try {
            // InternalCheckerDsl.g:226:46: (iv_ruleClass= ruleClass EOF )
            // InternalCheckerDsl.g:227:2: iv_ruleClass= ruleClass EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getClassRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleClass=ruleClass();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleClass; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleClass"


    // $ANTLR start "ruleClass"
    // InternalCheckerDsl.g:233:1: ruleClass returns [EObject current=null] : (otherlv_0= 'class' ( (lv_name_1_0= ruleValidID ) ) (otherlv_2= 'extends' ( (lv_superType_3_0= ruleJvmTypeReference ) ) )? otherlv_4= '{' ( (lv_features_5_0= ruleFeature ) )* otherlv_6= '}' ) ;
    public final EObject ruleClass() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_superType_3_0 = null;

        EObject lv_features_5_0 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:239:2: ( (otherlv_0= 'class' ( (lv_name_1_0= ruleValidID ) ) (otherlv_2= 'extends' ( (lv_superType_3_0= ruleJvmTypeReference ) ) )? otherlv_4= '{' ( (lv_features_5_0= ruleFeature ) )* otherlv_6= '}' ) )
            // InternalCheckerDsl.g:240:2: (otherlv_0= 'class' ( (lv_name_1_0= ruleValidID ) ) (otherlv_2= 'extends' ( (lv_superType_3_0= ruleJvmTypeReference ) ) )? otherlv_4= '{' ( (lv_features_5_0= ruleFeature ) )* otherlv_6= '}' )
            {
            // InternalCheckerDsl.g:240:2: (otherlv_0= 'class' ( (lv_name_1_0= ruleValidID ) ) (otherlv_2= 'extends' ( (lv_superType_3_0= ruleJvmTypeReference ) ) )? otherlv_4= '{' ( (lv_features_5_0= ruleFeature ) )* otherlv_6= '}' )
            // InternalCheckerDsl.g:241:3: otherlv_0= 'class' ( (lv_name_1_0= ruleValidID ) ) (otherlv_2= 'extends' ( (lv_superType_3_0= ruleJvmTypeReference ) ) )? otherlv_4= '{' ( (lv_features_5_0= ruleFeature ) )* otherlv_6= '}'
            {
            otherlv_0=(Token)match(input,16,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getClassAccess().getClassKeyword_0());
              		
            }
            // InternalCheckerDsl.g:245:3: ( (lv_name_1_0= ruleValidID ) )
            // InternalCheckerDsl.g:246:4: (lv_name_1_0= ruleValidID )
            {
            // InternalCheckerDsl.g:246:4: (lv_name_1_0= ruleValidID )
            // InternalCheckerDsl.g:247:5: lv_name_1_0= ruleValidID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getClassAccess().getNameValidIDParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_7);
            lv_name_1_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getClassRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xtype.ValidID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalCheckerDsl.g:264:3: (otherlv_2= 'extends' ( (lv_superType_3_0= ruleJvmTypeReference ) ) )?
            int alt5=2;
            int LA5_0 = input.LA(1);

            if ( (LA5_0==17) ) {
                alt5=1;
            }
            switch (alt5) {
                case 1 :
                    // InternalCheckerDsl.g:265:4: otherlv_2= 'extends' ( (lv_superType_3_0= ruleJvmTypeReference ) )
                    {
                    otherlv_2=(Token)match(input,17,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getClassAccess().getExtendsKeyword_2_0());
                      			
                    }
                    // InternalCheckerDsl.g:269:4: ( (lv_superType_3_0= ruleJvmTypeReference ) )
                    // InternalCheckerDsl.g:270:5: (lv_superType_3_0= ruleJvmTypeReference )
                    {
                    // InternalCheckerDsl.g:270:5: (lv_superType_3_0= ruleJvmTypeReference )
                    // InternalCheckerDsl.g:271:6: lv_superType_3_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassAccess().getSuperTypeJvmTypeReferenceParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_5);
                    lv_superType_3_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassRule());
                      						}
                      						set(
                      							current,
                      							"superType",
                      							lv_superType_3_0,
                      							"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_4=(Token)match(input,14,FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getClassAccess().getLeftCurlyBracketKeyword_3());
              		
            }
            // InternalCheckerDsl.g:293:3: ( (lv_features_5_0= ruleFeature ) )*
            loop6:
            do {
                int alt6=2;
                int LA6_0 = input.LA(1);

                if ( (LA6_0==18||LA6_0==23||(LA6_0>=25 && LA6_0<=26)||(LA6_0>=31 && LA6_0<=40)||(LA6_0>=93 && LA6_0<=95)) ) {
                    alt6=1;
                }


                switch (alt6) {
            	case 1 :
            	    // InternalCheckerDsl.g:294:4: (lv_features_5_0= ruleFeature )
            	    {
            	    // InternalCheckerDsl.g:294:4: (lv_features_5_0= ruleFeature )
            	    // InternalCheckerDsl.g:295:5: lv_features_5_0= ruleFeature
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getClassAccess().getFeaturesFeatureParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_9);
            	    lv_features_5_0=ruleFeature();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getClassRule());
            	      					}
            	      					add(
            	      						current,
            	      						"features",
            	      						lv_features_5_0,
            	      						"org.xtext.example.checkerdsl.CheckerDsl.Feature");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop6;
                }
            } while (true);

            otherlv_6=(Token)match(input,15,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getClassAccess().getRightCurlyBracketKeyword_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClass"


    // $ANTLR start "entryRuleFeature"
    // InternalCheckerDsl.g:320:1: entryRuleFeature returns [EObject current=null] : iv_ruleFeature= ruleFeature EOF ;
    public final EObject entryRuleFeature() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFeature = null;


        try {
            // InternalCheckerDsl.g:320:48: (iv_ruleFeature= ruleFeature EOF )
            // InternalCheckerDsl.g:321:2: iv_ruleFeature= ruleFeature EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFeatureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFeature=ruleFeature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFeature; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFeature"


    // $ANTLR start "ruleFeature"
    // InternalCheckerDsl.g:327:1: ruleFeature returns [EObject current=null] : (this_ChkVariableDeclaration_0= ruleChkVariableDeclaration | this_Method_1= ruleMethod | this_Format_2= ruleFormat | this_Check_3= ruleCheck | this_MR_4= ruleMR | this_Score_5= ruleScore ) ;
    public final EObject ruleFeature() throws RecognitionException {
        EObject current = null;

        EObject this_ChkVariableDeclaration_0 = null;

        EObject this_Method_1 = null;

        EObject this_Format_2 = null;

        EObject this_Check_3 = null;

        EObject this_MR_4 = null;

        EObject this_Score_5 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:333:2: ( (this_ChkVariableDeclaration_0= ruleChkVariableDeclaration | this_Method_1= ruleMethod | this_Format_2= ruleFormat | this_Check_3= ruleCheck | this_MR_4= ruleMR | this_Score_5= ruleScore ) )
            // InternalCheckerDsl.g:334:2: (this_ChkVariableDeclaration_0= ruleChkVariableDeclaration | this_Method_1= ruleMethod | this_Format_2= ruleFormat | this_Check_3= ruleCheck | this_MR_4= ruleMR | this_Score_5= ruleScore )
            {
            // InternalCheckerDsl.g:334:2: (this_ChkVariableDeclaration_0= ruleChkVariableDeclaration | this_Method_1= ruleMethod | this_Format_2= ruleFormat | this_Check_3= ruleCheck | this_MR_4= ruleMR | this_Score_5= ruleScore )
            int alt7=6;
            switch ( input.LA(1) ) {
            case 31:
            case 32:
            case 33:
            case 34:
            case 35:
            case 36:
            case 37:
            case 38:
            case 39:
            case 40:
                {
                alt7=1;
                }
                break;
            case 18:
                {
                alt7=2;
                }
                break;
            case 93:
            case 94:
            case 95:
                {
                alt7=3;
                }
                break;
            case 25:
                {
                alt7=4;
                }
                break;
            case 26:
                {
                alt7=5;
                }
                break;
            case 23:
                {
                alt7=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;
            }

            switch (alt7) {
                case 1 :
                    // InternalCheckerDsl.g:335:3: this_ChkVariableDeclaration_0= ruleChkVariableDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFeatureAccess().getChkVariableDeclarationParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ChkVariableDeclaration_0=ruleChkVariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ChkVariableDeclaration_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalCheckerDsl.g:344:3: this_Method_1= ruleMethod
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFeatureAccess().getMethodParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Method_1=ruleMethod();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Method_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalCheckerDsl.g:353:3: this_Format_2= ruleFormat
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFeatureAccess().getFormatParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Format_2=ruleFormat();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Format_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalCheckerDsl.g:362:3: this_Check_3= ruleCheck
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFeatureAccess().getCheckParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Check_3=ruleCheck();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Check_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalCheckerDsl.g:371:3: this_MR_4= ruleMR
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFeatureAccess().getMRParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_MR_4=ruleMR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_MR_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalCheckerDsl.g:380:3: this_Score_5= ruleScore
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFeatureAccess().getScoreParserRuleCall_5());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Score_5=ruleScore();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Score_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeature"


    // $ANTLR start "entryRuleMethod"
    // InternalCheckerDsl.g:392:1: entryRuleMethod returns [EObject current=null] : iv_ruleMethod= ruleMethod EOF ;
    public final EObject entryRuleMethod() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMethod = null;


        try {
            // InternalCheckerDsl.g:392:47: (iv_ruleMethod= ruleMethod EOF )
            // InternalCheckerDsl.g:393:2: iv_ruleMethod= ruleMethod EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMethodRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMethod=ruleMethod();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMethod; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMethod"


    // $ANTLR start "ruleMethod"
    // InternalCheckerDsl.g:399:1: ruleMethod returns [EObject current=null] : (otherlv_0= 'op' ( (lv_type_1_0= ruleJvmTypeReference ) ) ( (lv_name_2_0= ruleValidID ) ) otherlv_3= '(' ( ( (lv_params_4_0= ruleFullJvmFormalParameter ) ) (otherlv_5= ',' ( (lv_params_6_0= ruleFullJvmFormalParameter ) ) )* )? otherlv_7= ')' ( (lv_body_8_0= ruleXBlockExpression ) ) ) ;
    public final EObject ruleMethod() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_type_1_0 = null;

        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject lv_params_4_0 = null;

        EObject lv_params_6_0 = null;

        EObject lv_body_8_0 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:405:2: ( (otherlv_0= 'op' ( (lv_type_1_0= ruleJvmTypeReference ) ) ( (lv_name_2_0= ruleValidID ) ) otherlv_3= '(' ( ( (lv_params_4_0= ruleFullJvmFormalParameter ) ) (otherlv_5= ',' ( (lv_params_6_0= ruleFullJvmFormalParameter ) ) )* )? otherlv_7= ')' ( (lv_body_8_0= ruleXBlockExpression ) ) ) )
            // InternalCheckerDsl.g:406:2: (otherlv_0= 'op' ( (lv_type_1_0= ruleJvmTypeReference ) ) ( (lv_name_2_0= ruleValidID ) ) otherlv_3= '(' ( ( (lv_params_4_0= ruleFullJvmFormalParameter ) ) (otherlv_5= ',' ( (lv_params_6_0= ruleFullJvmFormalParameter ) ) )* )? otherlv_7= ')' ( (lv_body_8_0= ruleXBlockExpression ) ) )
            {
            // InternalCheckerDsl.g:406:2: (otherlv_0= 'op' ( (lv_type_1_0= ruleJvmTypeReference ) ) ( (lv_name_2_0= ruleValidID ) ) otherlv_3= '(' ( ( (lv_params_4_0= ruleFullJvmFormalParameter ) ) (otherlv_5= ',' ( (lv_params_6_0= ruleFullJvmFormalParameter ) ) )* )? otherlv_7= ')' ( (lv_body_8_0= ruleXBlockExpression ) ) )
            // InternalCheckerDsl.g:407:3: otherlv_0= 'op' ( (lv_type_1_0= ruleJvmTypeReference ) ) ( (lv_name_2_0= ruleValidID ) ) otherlv_3= '(' ( ( (lv_params_4_0= ruleFullJvmFormalParameter ) ) (otherlv_5= ',' ( (lv_params_6_0= ruleFullJvmFormalParameter ) ) )* )? otherlv_7= ')' ( (lv_body_8_0= ruleXBlockExpression ) )
            {
            otherlv_0=(Token)match(input,18,FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getMethodAccess().getOpKeyword_0());
              		
            }
            // InternalCheckerDsl.g:411:3: ( (lv_type_1_0= ruleJvmTypeReference ) )
            // InternalCheckerDsl.g:412:4: (lv_type_1_0= ruleJvmTypeReference )
            {
            // InternalCheckerDsl.g:412:4: (lv_type_1_0= ruleJvmTypeReference )
            // InternalCheckerDsl.g:413:5: lv_type_1_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMethodAccess().getTypeJvmTypeReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_4);
            lv_type_1_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMethodRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_1_0,
              						"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalCheckerDsl.g:430:3: ( (lv_name_2_0= ruleValidID ) )
            // InternalCheckerDsl.g:431:4: (lv_name_2_0= ruleValidID )
            {
            // InternalCheckerDsl.g:431:4: (lv_name_2_0= ruleValidID )
            // InternalCheckerDsl.g:432:5: lv_name_2_0= ruleValidID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMethodAccess().getNameValidIDParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_10);
            lv_name_2_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMethodRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_2_0,
              						"org.eclipse.xtext.xbase.Xtype.ValidID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,19,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getMethodAccess().getLeftParenthesisKeyword_3());
              		
            }
            // InternalCheckerDsl.g:453:3: ( ( (lv_params_4_0= ruleFullJvmFormalParameter ) ) (otherlv_5= ',' ( (lv_params_6_0= ruleFullJvmFormalParameter ) ) )* )?
            int alt9=2;
            int LA9_0 = input.LA(1);

            if ( (LA9_0==RULE_ID||LA9_0==19||LA9_0==108) ) {
                alt9=1;
            }
            switch (alt9) {
                case 1 :
                    // InternalCheckerDsl.g:454:4: ( (lv_params_4_0= ruleFullJvmFormalParameter ) ) (otherlv_5= ',' ( (lv_params_6_0= ruleFullJvmFormalParameter ) ) )*
                    {
                    // InternalCheckerDsl.g:454:4: ( (lv_params_4_0= ruleFullJvmFormalParameter ) )
                    // InternalCheckerDsl.g:455:5: (lv_params_4_0= ruleFullJvmFormalParameter )
                    {
                    // InternalCheckerDsl.g:455:5: (lv_params_4_0= ruleFullJvmFormalParameter )
                    // InternalCheckerDsl.g:456:6: lv_params_4_0= ruleFullJvmFormalParameter
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getMethodAccess().getParamsFullJvmFormalParameterParserRuleCall_4_0_0());
                      					
                    }
                    pushFollow(FOLLOW_12);
                    lv_params_4_0=ruleFullJvmFormalParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getMethodRule());
                      						}
                      						add(
                      							current,
                      							"params",
                      							lv_params_4_0,
                      							"org.eclipse.xtext.xbase.Xbase.FullJvmFormalParameter");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalCheckerDsl.g:473:4: (otherlv_5= ',' ( (lv_params_6_0= ruleFullJvmFormalParameter ) ) )*
                    loop8:
                    do {
                        int alt8=2;
                        int LA8_0 = input.LA(1);

                        if ( (LA8_0==20) ) {
                            alt8=1;
                        }


                        switch (alt8) {
                    	case 1 :
                    	    // InternalCheckerDsl.g:474:5: otherlv_5= ',' ( (lv_params_6_0= ruleFullJvmFormalParameter ) )
                    	    {
                    	    otherlv_5=(Token)match(input,20,FOLLOW_8); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_5, grammarAccess.getMethodAccess().getCommaKeyword_4_1_0());
                    	      				
                    	    }
                    	    // InternalCheckerDsl.g:478:5: ( (lv_params_6_0= ruleFullJvmFormalParameter ) )
                    	    // InternalCheckerDsl.g:479:6: (lv_params_6_0= ruleFullJvmFormalParameter )
                    	    {
                    	    // InternalCheckerDsl.g:479:6: (lv_params_6_0= ruleFullJvmFormalParameter )
                    	    // InternalCheckerDsl.g:480:7: lv_params_6_0= ruleFullJvmFormalParameter
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getMethodAccess().getParamsFullJvmFormalParameterParserRuleCall_4_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_12);
                    	    lv_params_6_0=ruleFullJvmFormalParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getMethodRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"params",
                    	      								lv_params_6_0,
                    	      								"org.eclipse.xtext.xbase.Xbase.FullJvmFormalParameter");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop8;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_7=(Token)match(input,21,FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getMethodAccess().getRightParenthesisKeyword_5());
              		
            }
            // InternalCheckerDsl.g:503:3: ( (lv_body_8_0= ruleXBlockExpression ) )
            // InternalCheckerDsl.g:504:4: (lv_body_8_0= ruleXBlockExpression )
            {
            // InternalCheckerDsl.g:504:4: (lv_body_8_0= ruleXBlockExpression )
            // InternalCheckerDsl.g:505:5: lv_body_8_0= ruleXBlockExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMethodAccess().getBodyXBlockExpressionParserRuleCall_6_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_body_8_0=ruleXBlockExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMethodRule());
              					}
              					set(
              						current,
              						"body",
              						lv_body_8_0,
              						"org.eclipse.xtext.xbase.Xbase.XBlockExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMethod"


    // $ANTLR start "entryRuleChkScoreExpression"
    // InternalCheckerDsl.g:526:1: entryRuleChkScoreExpression returns [EObject current=null] : iv_ruleChkScoreExpression= ruleChkScoreExpression EOF ;
    public final EObject entryRuleChkScoreExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleChkScoreExpression = null;


        try {
            // InternalCheckerDsl.g:526:59: (iv_ruleChkScoreExpression= ruleChkScoreExpression EOF )
            // InternalCheckerDsl.g:527:2: iv_ruleChkScoreExpression= ruleChkScoreExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getChkScoreExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleChkScoreExpression=ruleChkScoreExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleChkScoreExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleChkScoreExpression"


    // $ANTLR start "ruleChkScoreExpression"
    // InternalCheckerDsl.g:533:1: ruleChkScoreExpression returns [EObject current=null] : (otherlv_0= '(' ( (lv_subtask_1_0= ruleCHK_INT ) ) otherlv_2= ':' ( (lv_score_3_0= ruleCHK_INT ) ) otherlv_4= ')' ) ;
    public final EObject ruleChkScoreExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        AntlrDatatypeRuleToken lv_subtask_1_0 = null;

        AntlrDatatypeRuleToken lv_score_3_0 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:539:2: ( (otherlv_0= '(' ( (lv_subtask_1_0= ruleCHK_INT ) ) otherlv_2= ':' ( (lv_score_3_0= ruleCHK_INT ) ) otherlv_4= ')' ) )
            // InternalCheckerDsl.g:540:2: (otherlv_0= '(' ( (lv_subtask_1_0= ruleCHK_INT ) ) otherlv_2= ':' ( (lv_score_3_0= ruleCHK_INT ) ) otherlv_4= ')' )
            {
            // InternalCheckerDsl.g:540:2: (otherlv_0= '(' ( (lv_subtask_1_0= ruleCHK_INT ) ) otherlv_2= ':' ( (lv_score_3_0= ruleCHK_INT ) ) otherlv_4= ')' )
            // InternalCheckerDsl.g:541:3: otherlv_0= '(' ( (lv_subtask_1_0= ruleCHK_INT ) ) otherlv_2= ':' ( (lv_score_3_0= ruleCHK_INT ) ) otherlv_4= ')'
            {
            otherlv_0=(Token)match(input,19,FOLLOW_13); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getChkScoreExpressionAccess().getLeftParenthesisKeyword_0());
              		
            }
            // InternalCheckerDsl.g:545:3: ( (lv_subtask_1_0= ruleCHK_INT ) )
            // InternalCheckerDsl.g:546:4: (lv_subtask_1_0= ruleCHK_INT )
            {
            // InternalCheckerDsl.g:546:4: (lv_subtask_1_0= ruleCHK_INT )
            // InternalCheckerDsl.g:547:5: lv_subtask_1_0= ruleCHK_INT
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getChkScoreExpressionAccess().getSubtaskCHK_INTParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_14);
            lv_subtask_1_0=ruleCHK_INT();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getChkScoreExpressionRule());
              					}
              					set(
              						current,
              						"subtask",
              						lv_subtask_1_0,
              						"org.xtext.example.checkerdsl.CheckerDsl.CHK_INT");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,22,FOLLOW_13); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getChkScoreExpressionAccess().getColonKeyword_2());
              		
            }
            // InternalCheckerDsl.g:568:3: ( (lv_score_3_0= ruleCHK_INT ) )
            // InternalCheckerDsl.g:569:4: (lv_score_3_0= ruleCHK_INT )
            {
            // InternalCheckerDsl.g:569:4: (lv_score_3_0= ruleCHK_INT )
            // InternalCheckerDsl.g:570:5: lv_score_3_0= ruleCHK_INT
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getChkScoreExpressionAccess().getScoreCHK_INTParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_15);
            lv_score_3_0=ruleCHK_INT();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getChkScoreExpressionRule());
              					}
              					set(
              						current,
              						"score",
              						lv_score_3_0,
              						"org.xtext.example.checkerdsl.CheckerDsl.CHK_INT");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,21,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getChkScoreExpressionAccess().getRightParenthesisKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleChkScoreExpression"


    // $ANTLR start "entryRuleScore"
    // InternalCheckerDsl.g:595:1: entryRuleScore returns [EObject current=null] : iv_ruleScore= ruleScore EOF ;
    public final EObject entryRuleScore() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleScore = null;


        try {
            // InternalCheckerDsl.g:595:46: (iv_ruleScore= ruleScore EOF )
            // InternalCheckerDsl.g:596:2: iv_ruleScore= ruleScore EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getScoreRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleScore=ruleScore();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleScore; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleScore"


    // $ANTLR start "ruleScore"
    // InternalCheckerDsl.g:602:1: ruleScore returns [EObject current=null] : (otherlv_0= 'score' otherlv_1= '{' ( (lv_scores_2_0= ruleChkScoreExpression ) )+ otherlv_3= '}' ) ;
    public final EObject ruleScore() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_scores_2_0 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:608:2: ( (otherlv_0= 'score' otherlv_1= '{' ( (lv_scores_2_0= ruleChkScoreExpression ) )+ otherlv_3= '}' ) )
            // InternalCheckerDsl.g:609:2: (otherlv_0= 'score' otherlv_1= '{' ( (lv_scores_2_0= ruleChkScoreExpression ) )+ otherlv_3= '}' )
            {
            // InternalCheckerDsl.g:609:2: (otherlv_0= 'score' otherlv_1= '{' ( (lv_scores_2_0= ruleChkScoreExpression ) )+ otherlv_3= '}' )
            // InternalCheckerDsl.g:610:3: otherlv_0= 'score' otherlv_1= '{' ( (lv_scores_2_0= ruleChkScoreExpression ) )+ otherlv_3= '}'
            {
            otherlv_0=(Token)match(input,23,FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getScoreAccess().getScoreKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,14,FOLLOW_10); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getScoreAccess().getLeftCurlyBracketKeyword_1());
              		
            }
            // InternalCheckerDsl.g:618:3: ( (lv_scores_2_0= ruleChkScoreExpression ) )+
            int cnt10=0;
            loop10:
            do {
                int alt10=2;
                int LA10_0 = input.LA(1);

                if ( (LA10_0==19) ) {
                    alt10=1;
                }


                switch (alt10) {
            	case 1 :
            	    // InternalCheckerDsl.g:619:4: (lv_scores_2_0= ruleChkScoreExpression )
            	    {
            	    // InternalCheckerDsl.g:619:4: (lv_scores_2_0= ruleChkScoreExpression )
            	    // InternalCheckerDsl.g:620:5: lv_scores_2_0= ruleChkScoreExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getScoreAccess().getScoresChkScoreExpressionParserRuleCall_2_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_16);
            	    lv_scores_2_0=ruleChkScoreExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getScoreRule());
            	      					}
            	      					add(
            	      						current,
            	      						"scores",
            	      						lv_scores_2_0,
            	      						"org.xtext.example.checkerdsl.CheckerDsl.ChkScoreExpression");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt10 >= 1 ) break loop10;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(10, input);
                        throw eee;
                }
                cnt10++;
            } while (true);

            otherlv_3=(Token)match(input,15,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getScoreAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleScore"


    // $ANTLR start "entryRuleFollowUp"
    // InternalCheckerDsl.g:645:1: entryRuleFollowUp returns [EObject current=null] : iv_ruleFollowUp= ruleFollowUp EOF ;
    public final EObject entryRuleFollowUp() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFollowUp = null;


        try {
            // InternalCheckerDsl.g:645:49: (iv_ruleFollowUp= ruleFollowUp EOF )
            // InternalCheckerDsl.g:646:2: iv_ruleFollowUp= ruleFollowUp EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFollowUpRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFollowUp=ruleFollowUp();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFollowUp; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFollowUp"


    // $ANTLR start "ruleFollowUp"
    // InternalCheckerDsl.g:652:1: ruleFollowUp returns [EObject current=null] : ( ( (lv_fol_0_0= 'followup' ) ) otherlv_1= '{' ( ( (lv_followups_2_1= ruleChkExpression | lv_followups_2_2= ruleChkLoopExpression ) ) )* otherlv_3= '}' ) ;
    public final EObject ruleFollowUp() throws RecognitionException {
        EObject current = null;

        Token lv_fol_0_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_followups_2_1 = null;

        EObject lv_followups_2_2 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:658:2: ( ( ( (lv_fol_0_0= 'followup' ) ) otherlv_1= '{' ( ( (lv_followups_2_1= ruleChkExpression | lv_followups_2_2= ruleChkLoopExpression ) ) )* otherlv_3= '}' ) )
            // InternalCheckerDsl.g:659:2: ( ( (lv_fol_0_0= 'followup' ) ) otherlv_1= '{' ( ( (lv_followups_2_1= ruleChkExpression | lv_followups_2_2= ruleChkLoopExpression ) ) )* otherlv_3= '}' )
            {
            // InternalCheckerDsl.g:659:2: ( ( (lv_fol_0_0= 'followup' ) ) otherlv_1= '{' ( ( (lv_followups_2_1= ruleChkExpression | lv_followups_2_2= ruleChkLoopExpression ) ) )* otherlv_3= '}' )
            // InternalCheckerDsl.g:660:3: ( (lv_fol_0_0= 'followup' ) ) otherlv_1= '{' ( ( (lv_followups_2_1= ruleChkExpression | lv_followups_2_2= ruleChkLoopExpression ) ) )* otherlv_3= '}'
            {
            // InternalCheckerDsl.g:660:3: ( (lv_fol_0_0= 'followup' ) )
            // InternalCheckerDsl.g:661:4: (lv_fol_0_0= 'followup' )
            {
            // InternalCheckerDsl.g:661:4: (lv_fol_0_0= 'followup' )
            // InternalCheckerDsl.g:662:5: lv_fol_0_0= 'followup'
            {
            lv_fol_0_0=(Token)match(input,24,FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_fol_0_0, grammarAccess.getFollowUpAccess().getFolFollowupKeyword_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getFollowUpRule());
              					}
              					setWithLastConsumed(current, "fol", lv_fol_0_0, "followup");
              				
            }

            }


            }

            otherlv_1=(Token)match(input,14,FOLLOW_17); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getFollowUpAccess().getLeftCurlyBracketKeyword_1());
              		
            }
            // InternalCheckerDsl.g:678:3: ( ( (lv_followups_2_1= ruleChkExpression | lv_followups_2_2= ruleChkLoopExpression ) ) )*
            loop12:
            do {
                int alt12=2;
                int LA12_0 = input.LA(1);

                if ( (LA12_0==19||LA12_0==89) ) {
                    alt12=1;
                }


                switch (alt12) {
            	case 1 :
            	    // InternalCheckerDsl.g:679:4: ( (lv_followups_2_1= ruleChkExpression | lv_followups_2_2= ruleChkLoopExpression ) )
            	    {
            	    // InternalCheckerDsl.g:679:4: ( (lv_followups_2_1= ruleChkExpression | lv_followups_2_2= ruleChkLoopExpression ) )
            	    // InternalCheckerDsl.g:680:5: (lv_followups_2_1= ruleChkExpression | lv_followups_2_2= ruleChkLoopExpression )
            	    {
            	    // InternalCheckerDsl.g:680:5: (lv_followups_2_1= ruleChkExpression | lv_followups_2_2= ruleChkLoopExpression )
            	    int alt11=2;
            	    int LA11_0 = input.LA(1);

            	    if ( (LA11_0==19) ) {
            	        alt11=1;
            	    }
            	    else if ( (LA11_0==89) ) {
            	        alt11=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 11, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt11) {
            	        case 1 :
            	            // InternalCheckerDsl.g:681:6: lv_followups_2_1= ruleChkExpression
            	            {
            	            if ( state.backtracking==0 ) {

            	              						newCompositeNode(grammarAccess.getFollowUpAccess().getFollowupsChkExpressionParserRuleCall_2_0_0());
            	              					
            	            }
            	            pushFollow(FOLLOW_17);
            	            lv_followups_2_1=ruleChkExpression();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              						if (current==null) {
            	              							current = createModelElementForParent(grammarAccess.getFollowUpRule());
            	              						}
            	              						add(
            	              							current,
            	              							"followups",
            	              							lv_followups_2_1,
            	              							"org.xtext.example.checkerdsl.CheckerDsl.ChkExpression");
            	              						afterParserOrEnumRuleCall();
            	              					
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalCheckerDsl.g:697:6: lv_followups_2_2= ruleChkLoopExpression
            	            {
            	            if ( state.backtracking==0 ) {

            	              						newCompositeNode(grammarAccess.getFollowUpAccess().getFollowupsChkLoopExpressionParserRuleCall_2_0_1());
            	              					
            	            }
            	            pushFollow(FOLLOW_17);
            	            lv_followups_2_2=ruleChkLoopExpression();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              						if (current==null) {
            	              							current = createModelElementForParent(grammarAccess.getFollowUpRule());
            	              						}
            	              						add(
            	              							current,
            	              							"followups",
            	              							lv_followups_2_2,
            	              							"org.xtext.example.checkerdsl.CheckerDsl.ChkLoopExpression");
            	              						afterParserOrEnumRuleCall();
            	              					
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop12;
                }
            } while (true);

            otherlv_3=(Token)match(input,15,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getFollowUpAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFollowUp"


    // $ANTLR start "entryRuleProperty"
    // InternalCheckerDsl.g:723:1: entryRuleProperty returns [EObject current=null] : iv_ruleProperty= ruleProperty EOF ;
    public final EObject entryRuleProperty() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleProperty = null;


        try {
            // InternalCheckerDsl.g:723:49: (iv_ruleProperty= ruleProperty EOF )
            // InternalCheckerDsl.g:724:2: iv_ruleProperty= ruleProperty EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPropertyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleProperty=ruleProperty();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleProperty; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleProperty"


    // $ANTLR start "ruleProperty"
    // InternalCheckerDsl.g:730:1: ruleProperty returns [EObject current=null] : ( ( (lv_prop_0_0= 'check' ) ) otherlv_1= '{' ( ( (lv_properties_2_1= ruleChkExpression | lv_properties_2_2= ruleChkLoopExpression ) ) )* otherlv_3= '}' ) ;
    public final EObject ruleProperty() throws RecognitionException {
        EObject current = null;

        Token lv_prop_0_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_properties_2_1 = null;

        EObject lv_properties_2_2 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:736:2: ( ( ( (lv_prop_0_0= 'check' ) ) otherlv_1= '{' ( ( (lv_properties_2_1= ruleChkExpression | lv_properties_2_2= ruleChkLoopExpression ) ) )* otherlv_3= '}' ) )
            // InternalCheckerDsl.g:737:2: ( ( (lv_prop_0_0= 'check' ) ) otherlv_1= '{' ( ( (lv_properties_2_1= ruleChkExpression | lv_properties_2_2= ruleChkLoopExpression ) ) )* otherlv_3= '}' )
            {
            // InternalCheckerDsl.g:737:2: ( ( (lv_prop_0_0= 'check' ) ) otherlv_1= '{' ( ( (lv_properties_2_1= ruleChkExpression | lv_properties_2_2= ruleChkLoopExpression ) ) )* otherlv_3= '}' )
            // InternalCheckerDsl.g:738:3: ( (lv_prop_0_0= 'check' ) ) otherlv_1= '{' ( ( (lv_properties_2_1= ruleChkExpression | lv_properties_2_2= ruleChkLoopExpression ) ) )* otherlv_3= '}'
            {
            // InternalCheckerDsl.g:738:3: ( (lv_prop_0_0= 'check' ) )
            // InternalCheckerDsl.g:739:4: (lv_prop_0_0= 'check' )
            {
            // InternalCheckerDsl.g:739:4: (lv_prop_0_0= 'check' )
            // InternalCheckerDsl.g:740:5: lv_prop_0_0= 'check'
            {
            lv_prop_0_0=(Token)match(input,25,FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_prop_0_0, grammarAccess.getPropertyAccess().getPropCheckKeyword_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getPropertyRule());
              					}
              					setWithLastConsumed(current, "prop", lv_prop_0_0, "check");
              				
            }

            }


            }

            otherlv_1=(Token)match(input,14,FOLLOW_17); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getPropertyAccess().getLeftCurlyBracketKeyword_1());
              		
            }
            // InternalCheckerDsl.g:756:3: ( ( (lv_properties_2_1= ruleChkExpression | lv_properties_2_2= ruleChkLoopExpression ) ) )*
            loop14:
            do {
                int alt14=2;
                int LA14_0 = input.LA(1);

                if ( (LA14_0==19||LA14_0==89) ) {
                    alt14=1;
                }


                switch (alt14) {
            	case 1 :
            	    // InternalCheckerDsl.g:757:4: ( (lv_properties_2_1= ruleChkExpression | lv_properties_2_2= ruleChkLoopExpression ) )
            	    {
            	    // InternalCheckerDsl.g:757:4: ( (lv_properties_2_1= ruleChkExpression | lv_properties_2_2= ruleChkLoopExpression ) )
            	    // InternalCheckerDsl.g:758:5: (lv_properties_2_1= ruleChkExpression | lv_properties_2_2= ruleChkLoopExpression )
            	    {
            	    // InternalCheckerDsl.g:758:5: (lv_properties_2_1= ruleChkExpression | lv_properties_2_2= ruleChkLoopExpression )
            	    int alt13=2;
            	    int LA13_0 = input.LA(1);

            	    if ( (LA13_0==19) ) {
            	        alt13=1;
            	    }
            	    else if ( (LA13_0==89) ) {
            	        alt13=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 13, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt13) {
            	        case 1 :
            	            // InternalCheckerDsl.g:759:6: lv_properties_2_1= ruleChkExpression
            	            {
            	            if ( state.backtracking==0 ) {

            	              						newCompositeNode(grammarAccess.getPropertyAccess().getPropertiesChkExpressionParserRuleCall_2_0_0());
            	              					
            	            }
            	            pushFollow(FOLLOW_17);
            	            lv_properties_2_1=ruleChkExpression();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              						if (current==null) {
            	              							current = createModelElementForParent(grammarAccess.getPropertyRule());
            	              						}
            	              						add(
            	              							current,
            	              							"properties",
            	              							lv_properties_2_1,
            	              							"org.xtext.example.checkerdsl.CheckerDsl.ChkExpression");
            	              						afterParserOrEnumRuleCall();
            	              					
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalCheckerDsl.g:775:6: lv_properties_2_2= ruleChkLoopExpression
            	            {
            	            if ( state.backtracking==0 ) {

            	              						newCompositeNode(grammarAccess.getPropertyAccess().getPropertiesChkLoopExpressionParserRuleCall_2_0_1());
            	              					
            	            }
            	            pushFollow(FOLLOW_17);
            	            lv_properties_2_2=ruleChkLoopExpression();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              						if (current==null) {
            	              							current = createModelElementForParent(grammarAccess.getPropertyRule());
            	              						}
            	              						add(
            	              							current,
            	              							"properties",
            	              							lv_properties_2_2,
            	              							"org.xtext.example.checkerdsl.CheckerDsl.ChkLoopExpression");
            	              						afterParserOrEnumRuleCall();
            	              					
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop14;
                }
            } while (true);

            otherlv_3=(Token)match(input,15,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getPropertyAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleProperty"


    // $ANTLR start "entryRuleMR"
    // InternalCheckerDsl.g:801:1: entryRuleMR returns [EObject current=null] : iv_ruleMR= ruleMR EOF ;
    public final EObject entryRuleMR() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMR = null;


        try {
            // InternalCheckerDsl.g:801:43: (iv_ruleMR= ruleMR EOF )
            // InternalCheckerDsl.g:802:2: iv_ruleMR= ruleMR EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMRRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMR=ruleMR();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMR; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMR"


    // $ANTLR start "ruleMR"
    // InternalCheckerDsl.g:808:1: ruleMR returns [EObject current=null] : ( ( (lv_mr_0_0= 'MR' ) ) ( (lv_num_1_0= RULE_INT ) ) otherlv_2= '{' ( ( (lv_mrExp_3_1= ruleChkExpression | lv_mrExp_3_2= ruleChkLoopExpression ) ) )* ( (lv_followup_4_0= ruleFollowUp ) ) ( (lv_property_5_0= ruleProperty ) ) otherlv_6= '}' ) ;
    public final EObject ruleMR() throws RecognitionException {
        EObject current = null;

        Token lv_mr_0_0=null;
        Token lv_num_1_0=null;
        Token otherlv_2=null;
        Token otherlv_6=null;
        EObject lv_mrExp_3_1 = null;

        EObject lv_mrExp_3_2 = null;

        EObject lv_followup_4_0 = null;

        EObject lv_property_5_0 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:814:2: ( ( ( (lv_mr_0_0= 'MR' ) ) ( (lv_num_1_0= RULE_INT ) ) otherlv_2= '{' ( ( (lv_mrExp_3_1= ruleChkExpression | lv_mrExp_3_2= ruleChkLoopExpression ) ) )* ( (lv_followup_4_0= ruleFollowUp ) ) ( (lv_property_5_0= ruleProperty ) ) otherlv_6= '}' ) )
            // InternalCheckerDsl.g:815:2: ( ( (lv_mr_0_0= 'MR' ) ) ( (lv_num_1_0= RULE_INT ) ) otherlv_2= '{' ( ( (lv_mrExp_3_1= ruleChkExpression | lv_mrExp_3_2= ruleChkLoopExpression ) ) )* ( (lv_followup_4_0= ruleFollowUp ) ) ( (lv_property_5_0= ruleProperty ) ) otherlv_6= '}' )
            {
            // InternalCheckerDsl.g:815:2: ( ( (lv_mr_0_0= 'MR' ) ) ( (lv_num_1_0= RULE_INT ) ) otherlv_2= '{' ( ( (lv_mrExp_3_1= ruleChkExpression | lv_mrExp_3_2= ruleChkLoopExpression ) ) )* ( (lv_followup_4_0= ruleFollowUp ) ) ( (lv_property_5_0= ruleProperty ) ) otherlv_6= '}' )
            // InternalCheckerDsl.g:816:3: ( (lv_mr_0_0= 'MR' ) ) ( (lv_num_1_0= RULE_INT ) ) otherlv_2= '{' ( ( (lv_mrExp_3_1= ruleChkExpression | lv_mrExp_3_2= ruleChkLoopExpression ) ) )* ( (lv_followup_4_0= ruleFollowUp ) ) ( (lv_property_5_0= ruleProperty ) ) otherlv_6= '}'
            {
            // InternalCheckerDsl.g:816:3: ( (lv_mr_0_0= 'MR' ) )
            // InternalCheckerDsl.g:817:4: (lv_mr_0_0= 'MR' )
            {
            // InternalCheckerDsl.g:817:4: (lv_mr_0_0= 'MR' )
            // InternalCheckerDsl.g:818:5: lv_mr_0_0= 'MR'
            {
            lv_mr_0_0=(Token)match(input,26,FOLLOW_18); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_mr_0_0, grammarAccess.getMRAccess().getMrMRKeyword_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getMRRule());
              					}
              					setWithLastConsumed(current, "mr", lv_mr_0_0, "MR");
              				
            }

            }


            }

            // InternalCheckerDsl.g:830:3: ( (lv_num_1_0= RULE_INT ) )
            // InternalCheckerDsl.g:831:4: (lv_num_1_0= RULE_INT )
            {
            // InternalCheckerDsl.g:831:4: (lv_num_1_0= RULE_INT )
            // InternalCheckerDsl.g:832:5: lv_num_1_0= RULE_INT
            {
            lv_num_1_0=(Token)match(input,RULE_INT,FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_num_1_0, grammarAccess.getMRAccess().getNumINTTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getMRRule());
              					}
              					setWithLastConsumed(
              						current,
              						"num",
              						lv_num_1_0,
              						"org.eclipse.xtext.xbase.Xbase.INT");
              				
            }

            }


            }

            otherlv_2=(Token)match(input,14,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getMRAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalCheckerDsl.g:852:3: ( ( (lv_mrExp_3_1= ruleChkExpression | lv_mrExp_3_2= ruleChkLoopExpression ) ) )*
            loop16:
            do {
                int alt16=2;
                int LA16_0 = input.LA(1);

                if ( (LA16_0==19||LA16_0==89) ) {
                    alt16=1;
                }


                switch (alt16) {
            	case 1 :
            	    // InternalCheckerDsl.g:853:4: ( (lv_mrExp_3_1= ruleChkExpression | lv_mrExp_3_2= ruleChkLoopExpression ) )
            	    {
            	    // InternalCheckerDsl.g:853:4: ( (lv_mrExp_3_1= ruleChkExpression | lv_mrExp_3_2= ruleChkLoopExpression ) )
            	    // InternalCheckerDsl.g:854:5: (lv_mrExp_3_1= ruleChkExpression | lv_mrExp_3_2= ruleChkLoopExpression )
            	    {
            	    // InternalCheckerDsl.g:854:5: (lv_mrExp_3_1= ruleChkExpression | lv_mrExp_3_2= ruleChkLoopExpression )
            	    int alt15=2;
            	    int LA15_0 = input.LA(1);

            	    if ( (LA15_0==19) ) {
            	        alt15=1;
            	    }
            	    else if ( (LA15_0==89) ) {
            	        alt15=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 15, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt15) {
            	        case 1 :
            	            // InternalCheckerDsl.g:855:6: lv_mrExp_3_1= ruleChkExpression
            	            {
            	            if ( state.backtracking==0 ) {

            	              						newCompositeNode(grammarAccess.getMRAccess().getMrExpChkExpressionParserRuleCall_3_0_0());
            	              					
            	            }
            	            pushFollow(FOLLOW_19);
            	            lv_mrExp_3_1=ruleChkExpression();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              						if (current==null) {
            	              							current = createModelElementForParent(grammarAccess.getMRRule());
            	              						}
            	              						add(
            	              							current,
            	              							"mrExp",
            	              							lv_mrExp_3_1,
            	              							"org.xtext.example.checkerdsl.CheckerDsl.ChkExpression");
            	              						afterParserOrEnumRuleCall();
            	              					
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalCheckerDsl.g:871:6: lv_mrExp_3_2= ruleChkLoopExpression
            	            {
            	            if ( state.backtracking==0 ) {

            	              						newCompositeNode(grammarAccess.getMRAccess().getMrExpChkLoopExpressionParserRuleCall_3_0_1());
            	              					
            	            }
            	            pushFollow(FOLLOW_19);
            	            lv_mrExp_3_2=ruleChkLoopExpression();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              						if (current==null) {
            	              							current = createModelElementForParent(grammarAccess.getMRRule());
            	              						}
            	              						add(
            	              							current,
            	              							"mrExp",
            	              							lv_mrExp_3_2,
            	              							"org.xtext.example.checkerdsl.CheckerDsl.ChkLoopExpression");
            	              						afterParserOrEnumRuleCall();
            	              					
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop16;
                }
            } while (true);

            // InternalCheckerDsl.g:889:3: ( (lv_followup_4_0= ruleFollowUp ) )
            // InternalCheckerDsl.g:890:4: (lv_followup_4_0= ruleFollowUp )
            {
            // InternalCheckerDsl.g:890:4: (lv_followup_4_0= ruleFollowUp )
            // InternalCheckerDsl.g:891:5: lv_followup_4_0= ruleFollowUp
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMRAccess().getFollowupFollowUpParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_20);
            lv_followup_4_0=ruleFollowUp();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMRRule());
              					}
              					set(
              						current,
              						"followup",
              						lv_followup_4_0,
              						"org.xtext.example.checkerdsl.CheckerDsl.FollowUp");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalCheckerDsl.g:908:3: ( (lv_property_5_0= ruleProperty ) )
            // InternalCheckerDsl.g:909:4: (lv_property_5_0= ruleProperty )
            {
            // InternalCheckerDsl.g:909:4: (lv_property_5_0= ruleProperty )
            // InternalCheckerDsl.g:910:5: lv_property_5_0= ruleProperty
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMRAccess().getPropertyPropertyParserRuleCall_5_0());
              				
            }
            pushFollow(FOLLOW_21);
            lv_property_5_0=ruleProperty();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMRRule());
              					}
              					set(
              						current,
              						"property",
              						lv_property_5_0,
              						"org.xtext.example.checkerdsl.CheckerDsl.Property");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_6=(Token)match(input,15,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getMRAccess().getRightCurlyBracketKeyword_6());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMR"


    // $ANTLR start "entryRuleChkVariableDeclaration"
    // InternalCheckerDsl.g:935:1: entryRuleChkVariableDeclaration returns [EObject current=null] : iv_ruleChkVariableDeclaration= ruleChkVariableDeclaration EOF ;
    public final EObject entryRuleChkVariableDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleChkVariableDeclaration = null;


        try {
            // InternalCheckerDsl.g:935:63: (iv_ruleChkVariableDeclaration= ruleChkVariableDeclaration EOF )
            // InternalCheckerDsl.g:936:2: iv_ruleChkVariableDeclaration= ruleChkVariableDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getChkVariableDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleChkVariableDeclaration=ruleChkVariableDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleChkVariableDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleChkVariableDeclaration"


    // $ANTLR start "ruleChkVariableDeclaration"
    // InternalCheckerDsl.g:942:1: ruleChkVariableDeclaration returns [EObject current=null] : ( ( (lv_type_0_0= ruleChkTypeReference ) ) (otherlv_1= '[' ( (lv_sz_2_0= ruleCHK_NUMBER ) ) otherlv_3= ']' )* ( (lv_name_4_0= ruleValidID ) ) (otherlv_5= '(' ( (lv_limit1_6_0= ruleLimit ) ) (otherlv_7= ';' ( (lv_limit_8_0= ruleLimit ) ) )* otherlv_9= ')' )? (otherlv_10= 'sp' otherlv_11= '{' ( (lv_spValue_12_0= ruleSpValue ) ) otherlv_13= '}' )? ) ;
    public final EObject ruleChkVariableDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        AntlrDatatypeRuleToken lv_type_0_0 = null;

        AntlrDatatypeRuleToken lv_sz_2_0 = null;

        AntlrDatatypeRuleToken lv_name_4_0 = null;

        EObject lv_limit1_6_0 = null;

        EObject lv_limit_8_0 = null;

        EObject lv_spValue_12_0 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:948:2: ( ( ( (lv_type_0_0= ruleChkTypeReference ) ) (otherlv_1= '[' ( (lv_sz_2_0= ruleCHK_NUMBER ) ) otherlv_3= ']' )* ( (lv_name_4_0= ruleValidID ) ) (otherlv_5= '(' ( (lv_limit1_6_0= ruleLimit ) ) (otherlv_7= ';' ( (lv_limit_8_0= ruleLimit ) ) )* otherlv_9= ')' )? (otherlv_10= 'sp' otherlv_11= '{' ( (lv_spValue_12_0= ruleSpValue ) ) otherlv_13= '}' )? ) )
            // InternalCheckerDsl.g:949:2: ( ( (lv_type_0_0= ruleChkTypeReference ) ) (otherlv_1= '[' ( (lv_sz_2_0= ruleCHK_NUMBER ) ) otherlv_3= ']' )* ( (lv_name_4_0= ruleValidID ) ) (otherlv_5= '(' ( (lv_limit1_6_0= ruleLimit ) ) (otherlv_7= ';' ( (lv_limit_8_0= ruleLimit ) ) )* otherlv_9= ')' )? (otherlv_10= 'sp' otherlv_11= '{' ( (lv_spValue_12_0= ruleSpValue ) ) otherlv_13= '}' )? )
            {
            // InternalCheckerDsl.g:949:2: ( ( (lv_type_0_0= ruleChkTypeReference ) ) (otherlv_1= '[' ( (lv_sz_2_0= ruleCHK_NUMBER ) ) otherlv_3= ']' )* ( (lv_name_4_0= ruleValidID ) ) (otherlv_5= '(' ( (lv_limit1_6_0= ruleLimit ) ) (otherlv_7= ';' ( (lv_limit_8_0= ruleLimit ) ) )* otherlv_9= ')' )? (otherlv_10= 'sp' otherlv_11= '{' ( (lv_spValue_12_0= ruleSpValue ) ) otherlv_13= '}' )? )
            // InternalCheckerDsl.g:950:3: ( (lv_type_0_0= ruleChkTypeReference ) ) (otherlv_1= '[' ( (lv_sz_2_0= ruleCHK_NUMBER ) ) otherlv_3= ']' )* ( (lv_name_4_0= ruleValidID ) ) (otherlv_5= '(' ( (lv_limit1_6_0= ruleLimit ) ) (otherlv_7= ';' ( (lv_limit_8_0= ruleLimit ) ) )* otherlv_9= ')' )? (otherlv_10= 'sp' otherlv_11= '{' ( (lv_spValue_12_0= ruleSpValue ) ) otherlv_13= '}' )?
            {
            // InternalCheckerDsl.g:950:3: ( (lv_type_0_0= ruleChkTypeReference ) )
            // InternalCheckerDsl.g:951:4: (lv_type_0_0= ruleChkTypeReference )
            {
            // InternalCheckerDsl.g:951:4: (lv_type_0_0= ruleChkTypeReference )
            // InternalCheckerDsl.g:952:5: lv_type_0_0= ruleChkTypeReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getChkVariableDeclarationAccess().getTypeChkTypeReferenceParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_22);
            lv_type_0_0=ruleChkTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getChkVariableDeclarationRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_0_0,
              						"org.xtext.example.checkerdsl.CheckerDsl.ChkTypeReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalCheckerDsl.g:969:3: (otherlv_1= '[' ( (lv_sz_2_0= ruleCHK_NUMBER ) ) otherlv_3= ']' )*
            loop17:
            do {
                int alt17=2;
                int LA17_0 = input.LA(1);

                if ( (LA17_0==27) ) {
                    alt17=1;
                }


                switch (alt17) {
            	case 1 :
            	    // InternalCheckerDsl.g:970:4: otherlv_1= '[' ( (lv_sz_2_0= ruleCHK_NUMBER ) ) otherlv_3= ']'
            	    {
            	    otherlv_1=(Token)match(input,27,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getChkVariableDeclarationAccess().getLeftSquareBracketKeyword_1_0());
            	      			
            	    }
            	    // InternalCheckerDsl.g:974:4: ( (lv_sz_2_0= ruleCHK_NUMBER ) )
            	    // InternalCheckerDsl.g:975:5: (lv_sz_2_0= ruleCHK_NUMBER )
            	    {
            	    // InternalCheckerDsl.g:975:5: (lv_sz_2_0= ruleCHK_NUMBER )
            	    // InternalCheckerDsl.g:976:6: lv_sz_2_0= ruleCHK_NUMBER
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getChkVariableDeclarationAccess().getSzCHK_NUMBERParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_24);
            	    lv_sz_2_0=ruleCHK_NUMBER();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getChkVariableDeclarationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"sz",
            	      							lv_sz_2_0,
            	      							"org.xtext.example.checkerdsl.CheckerDsl.CHK_NUMBER");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_3=(Token)match(input,28,FOLLOW_22); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getChkVariableDeclarationAccess().getRightSquareBracketKeyword_1_2());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop17;
                }
            } while (true);

            // InternalCheckerDsl.g:998:3: ( (lv_name_4_0= ruleValidID ) )
            // InternalCheckerDsl.g:999:4: (lv_name_4_0= ruleValidID )
            {
            // InternalCheckerDsl.g:999:4: (lv_name_4_0= ruleValidID )
            // InternalCheckerDsl.g:1000:5: lv_name_4_0= ruleValidID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getChkVariableDeclarationAccess().getNameValidIDParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_25);
            lv_name_4_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getChkVariableDeclarationRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_4_0,
              						"org.eclipse.xtext.xbase.Xtype.ValidID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalCheckerDsl.g:1017:3: (otherlv_5= '(' ( (lv_limit1_6_0= ruleLimit ) ) (otherlv_7= ';' ( (lv_limit_8_0= ruleLimit ) ) )* otherlv_9= ')' )?
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==19) ) {
                alt19=1;
            }
            switch (alt19) {
                case 1 :
                    // InternalCheckerDsl.g:1018:4: otherlv_5= '(' ( (lv_limit1_6_0= ruleLimit ) ) (otherlv_7= ';' ( (lv_limit_8_0= ruleLimit ) ) )* otherlv_9= ')'
                    {
                    otherlv_5=(Token)match(input,19,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getChkVariableDeclarationAccess().getLeftParenthesisKeyword_3_0());
                      			
                    }
                    // InternalCheckerDsl.g:1022:4: ( (lv_limit1_6_0= ruleLimit ) )
                    // InternalCheckerDsl.g:1023:5: (lv_limit1_6_0= ruleLimit )
                    {
                    // InternalCheckerDsl.g:1023:5: (lv_limit1_6_0= ruleLimit )
                    // InternalCheckerDsl.g:1024:6: lv_limit1_6_0= ruleLimit
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getChkVariableDeclarationAccess().getLimit1LimitParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_27);
                    lv_limit1_6_0=ruleLimit();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getChkVariableDeclarationRule());
                      						}
                      						set(
                      							current,
                      							"limit1",
                      							lv_limit1_6_0,
                      							"org.xtext.example.checkerdsl.CheckerDsl.Limit");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalCheckerDsl.g:1041:4: (otherlv_7= ';' ( (lv_limit_8_0= ruleLimit ) ) )*
                    loop18:
                    do {
                        int alt18=2;
                        int LA18_0 = input.LA(1);

                        if ( (LA18_0==29) ) {
                            alt18=1;
                        }


                        switch (alt18) {
                    	case 1 :
                    	    // InternalCheckerDsl.g:1042:5: otherlv_7= ';' ( (lv_limit_8_0= ruleLimit ) )
                    	    {
                    	    otherlv_7=(Token)match(input,29,FOLLOW_26); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_7, grammarAccess.getChkVariableDeclarationAccess().getSemicolonKeyword_3_2_0());
                    	      				
                    	    }
                    	    // InternalCheckerDsl.g:1046:5: ( (lv_limit_8_0= ruleLimit ) )
                    	    // InternalCheckerDsl.g:1047:6: (lv_limit_8_0= ruleLimit )
                    	    {
                    	    // InternalCheckerDsl.g:1047:6: (lv_limit_8_0= ruleLimit )
                    	    // InternalCheckerDsl.g:1048:7: lv_limit_8_0= ruleLimit
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getChkVariableDeclarationAccess().getLimitLimitParserRuleCall_3_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_27);
                    	    lv_limit_8_0=ruleLimit();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getChkVariableDeclarationRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"limit",
                    	      								lv_limit_8_0,
                    	      								"org.xtext.example.checkerdsl.CheckerDsl.Limit");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop18;
                        }
                    } while (true);

                    otherlv_9=(Token)match(input,21,FOLLOW_28); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getChkVariableDeclarationAccess().getRightParenthesisKeyword_3_3());
                      			
                    }

                    }
                    break;

            }

            // InternalCheckerDsl.g:1071:3: (otherlv_10= 'sp' otherlv_11= '{' ( (lv_spValue_12_0= ruleSpValue ) ) otherlv_13= '}' )?
            int alt20=2;
            int LA20_0 = input.LA(1);

            if ( (LA20_0==30) ) {
                alt20=1;
            }
            switch (alt20) {
                case 1 :
                    // InternalCheckerDsl.g:1072:4: otherlv_10= 'sp' otherlv_11= '{' ( (lv_spValue_12_0= ruleSpValue ) ) otherlv_13= '}'
                    {
                    otherlv_10=(Token)match(input,30,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getChkVariableDeclarationAccess().getSpKeyword_4_0());
                      			
                    }
                    otherlv_11=(Token)match(input,14,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getChkVariableDeclarationAccess().getLeftCurlyBracketKeyword_4_1());
                      			
                    }
                    // InternalCheckerDsl.g:1080:4: ( (lv_spValue_12_0= ruleSpValue ) )
                    // InternalCheckerDsl.g:1081:5: (lv_spValue_12_0= ruleSpValue )
                    {
                    // InternalCheckerDsl.g:1081:5: (lv_spValue_12_0= ruleSpValue )
                    // InternalCheckerDsl.g:1082:6: lv_spValue_12_0= ruleSpValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getChkVariableDeclarationAccess().getSpValueSpValueParserRuleCall_4_2_0());
                      					
                    }
                    pushFollow(FOLLOW_21);
                    lv_spValue_12_0=ruleSpValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getChkVariableDeclarationRule());
                      						}
                      						set(
                      							current,
                      							"spValue",
                      							lv_spValue_12_0,
                      							"org.xtext.example.checkerdsl.CheckerDsl.SpValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_13=(Token)match(input,15,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getChkVariableDeclarationAccess().getRightCurlyBracketKeyword_4_3());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleChkVariableDeclaration"


    // $ANTLR start "entryRuleChkTypeReference"
    // InternalCheckerDsl.g:1108:1: entryRuleChkTypeReference returns [String current=null] : iv_ruleChkTypeReference= ruleChkTypeReference EOF ;
    public final String entryRuleChkTypeReference() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleChkTypeReference = null;


        try {
            // InternalCheckerDsl.g:1108:56: (iv_ruleChkTypeReference= ruleChkTypeReference EOF )
            // InternalCheckerDsl.g:1109:2: iv_ruleChkTypeReference= ruleChkTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getChkTypeReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleChkTypeReference=ruleChkTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleChkTypeReference.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleChkTypeReference"


    // $ANTLR start "ruleChkTypeReference"
    // InternalCheckerDsl.g:1115:1: ruleChkTypeReference returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'int' | kw= 'long' | kw= 'float' | kw= 'double' | kw= 'boolean' | kw= 'char' | kw= 'string' | kw= 'tree' | kw= 'adjMat' | kw= 'adjList' ) ;
    public final AntlrDatatypeRuleToken ruleChkTypeReference() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalCheckerDsl.g:1121:2: ( (kw= 'int' | kw= 'long' | kw= 'float' | kw= 'double' | kw= 'boolean' | kw= 'char' | kw= 'string' | kw= 'tree' | kw= 'adjMat' | kw= 'adjList' ) )
            // InternalCheckerDsl.g:1122:2: (kw= 'int' | kw= 'long' | kw= 'float' | kw= 'double' | kw= 'boolean' | kw= 'char' | kw= 'string' | kw= 'tree' | kw= 'adjMat' | kw= 'adjList' )
            {
            // InternalCheckerDsl.g:1122:2: (kw= 'int' | kw= 'long' | kw= 'float' | kw= 'double' | kw= 'boolean' | kw= 'char' | kw= 'string' | kw= 'tree' | kw= 'adjMat' | kw= 'adjList' )
            int alt21=10;
            switch ( input.LA(1) ) {
            case 31:
                {
                alt21=1;
                }
                break;
            case 32:
                {
                alt21=2;
                }
                break;
            case 33:
                {
                alt21=3;
                }
                break;
            case 34:
                {
                alt21=4;
                }
                break;
            case 35:
                {
                alt21=5;
                }
                break;
            case 36:
                {
                alt21=6;
                }
                break;
            case 37:
                {
                alt21=7;
                }
                break;
            case 38:
                {
                alt21=8;
                }
                break;
            case 39:
                {
                alt21=9;
                }
                break;
            case 40:
                {
                alt21=10;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 21, 0, input);

                throw nvae;
            }

            switch (alt21) {
                case 1 :
                    // InternalCheckerDsl.g:1123:3: kw= 'int'
                    {
                    kw=(Token)match(input,31,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getChkTypeReferenceAccess().getIntKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalCheckerDsl.g:1129:3: kw= 'long'
                    {
                    kw=(Token)match(input,32,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getChkTypeReferenceAccess().getLongKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalCheckerDsl.g:1135:3: kw= 'float'
                    {
                    kw=(Token)match(input,33,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getChkTypeReferenceAccess().getFloatKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalCheckerDsl.g:1141:3: kw= 'double'
                    {
                    kw=(Token)match(input,34,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getChkTypeReferenceAccess().getDoubleKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalCheckerDsl.g:1147:3: kw= 'boolean'
                    {
                    kw=(Token)match(input,35,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getChkTypeReferenceAccess().getBooleanKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalCheckerDsl.g:1153:3: kw= 'char'
                    {
                    kw=(Token)match(input,36,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getChkTypeReferenceAccess().getCharKeyword_5());
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalCheckerDsl.g:1159:3: kw= 'string'
                    {
                    kw=(Token)match(input,37,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getChkTypeReferenceAccess().getStringKeyword_6());
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalCheckerDsl.g:1165:3: kw= 'tree'
                    {
                    kw=(Token)match(input,38,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getChkTypeReferenceAccess().getTreeKeyword_7());
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalCheckerDsl.g:1171:3: kw= 'adjMat'
                    {
                    kw=(Token)match(input,39,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getChkTypeReferenceAccess().getAdjMatKeyword_8());
                      		
                    }

                    }
                    break;
                case 10 :
                    // InternalCheckerDsl.g:1177:3: kw= 'adjList'
                    {
                    kw=(Token)match(input,40,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getChkTypeReferenceAccess().getAdjListKeyword_9());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleChkTypeReference"


    // $ANTLR start "entryRuleMethodCall"
    // InternalCheckerDsl.g:1186:1: entryRuleMethodCall returns [EObject current=null] : iv_ruleMethodCall= ruleMethodCall EOF ;
    public final EObject entryRuleMethodCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMethodCall = null;


        try {
            // InternalCheckerDsl.g:1186:51: (iv_ruleMethodCall= ruleMethodCall EOF )
            // InternalCheckerDsl.g:1187:2: iv_ruleMethodCall= ruleMethodCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMethodCallRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMethodCall=ruleMethodCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMethodCall; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMethodCall"


    // $ANTLR start "ruleMethodCall"
    // InternalCheckerDsl.g:1193:1: ruleMethodCall returns [EObject current=null] : ( ( (lv_name_0_0= ruleValidID ) ) otherlv_1= '(' ( ( (lv_params_2_0= ruleValidID ) ) (otherlv_3= ',' ( (lv_params_4_0= ruleValidID ) ) )* )? otherlv_5= ')' ) ;
    public final EObject ruleMethodCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        AntlrDatatypeRuleToken lv_params_2_0 = null;

        AntlrDatatypeRuleToken lv_params_4_0 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:1199:2: ( ( ( (lv_name_0_0= ruleValidID ) ) otherlv_1= '(' ( ( (lv_params_2_0= ruleValidID ) ) (otherlv_3= ',' ( (lv_params_4_0= ruleValidID ) ) )* )? otherlv_5= ')' ) )
            // InternalCheckerDsl.g:1200:2: ( ( (lv_name_0_0= ruleValidID ) ) otherlv_1= '(' ( ( (lv_params_2_0= ruleValidID ) ) (otherlv_3= ',' ( (lv_params_4_0= ruleValidID ) ) )* )? otherlv_5= ')' )
            {
            // InternalCheckerDsl.g:1200:2: ( ( (lv_name_0_0= ruleValidID ) ) otherlv_1= '(' ( ( (lv_params_2_0= ruleValidID ) ) (otherlv_3= ',' ( (lv_params_4_0= ruleValidID ) ) )* )? otherlv_5= ')' )
            // InternalCheckerDsl.g:1201:3: ( (lv_name_0_0= ruleValidID ) ) otherlv_1= '(' ( ( (lv_params_2_0= ruleValidID ) ) (otherlv_3= ',' ( (lv_params_4_0= ruleValidID ) ) )* )? otherlv_5= ')'
            {
            // InternalCheckerDsl.g:1201:3: ( (lv_name_0_0= ruleValidID ) )
            // InternalCheckerDsl.g:1202:4: (lv_name_0_0= ruleValidID )
            {
            // InternalCheckerDsl.g:1202:4: (lv_name_0_0= ruleValidID )
            // InternalCheckerDsl.g:1203:5: lv_name_0_0= ruleValidID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMethodCallAccess().getNameValidIDParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_10);
            lv_name_0_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMethodCallRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_0_0,
              						"org.eclipse.xtext.xbase.Xtype.ValidID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,19,FOLLOW_29); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getMethodCallAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalCheckerDsl.g:1224:3: ( ( (lv_params_2_0= ruleValidID ) ) (otherlv_3= ',' ( (lv_params_4_0= ruleValidID ) ) )* )?
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==RULE_ID) ) {
                alt23=1;
            }
            switch (alt23) {
                case 1 :
                    // InternalCheckerDsl.g:1225:4: ( (lv_params_2_0= ruleValidID ) ) (otherlv_3= ',' ( (lv_params_4_0= ruleValidID ) ) )*
                    {
                    // InternalCheckerDsl.g:1225:4: ( (lv_params_2_0= ruleValidID ) )
                    // InternalCheckerDsl.g:1226:5: (lv_params_2_0= ruleValidID )
                    {
                    // InternalCheckerDsl.g:1226:5: (lv_params_2_0= ruleValidID )
                    // InternalCheckerDsl.g:1227:6: lv_params_2_0= ruleValidID
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getMethodCallAccess().getParamsValidIDParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_12);
                    lv_params_2_0=ruleValidID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getMethodCallRule());
                      						}
                      						add(
                      							current,
                      							"params",
                      							lv_params_2_0,
                      							"org.eclipse.xtext.xbase.Xtype.ValidID");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalCheckerDsl.g:1244:4: (otherlv_3= ',' ( (lv_params_4_0= ruleValidID ) ) )*
                    loop22:
                    do {
                        int alt22=2;
                        int LA22_0 = input.LA(1);

                        if ( (LA22_0==20) ) {
                            alt22=1;
                        }


                        switch (alt22) {
                    	case 1 :
                    	    // InternalCheckerDsl.g:1245:5: otherlv_3= ',' ( (lv_params_4_0= ruleValidID ) )
                    	    {
                    	    otherlv_3=(Token)match(input,20,FOLLOW_4); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_3, grammarAccess.getMethodCallAccess().getCommaKeyword_2_1_0());
                    	      				
                    	    }
                    	    // InternalCheckerDsl.g:1249:5: ( (lv_params_4_0= ruleValidID ) )
                    	    // InternalCheckerDsl.g:1250:6: (lv_params_4_0= ruleValidID )
                    	    {
                    	    // InternalCheckerDsl.g:1250:6: (lv_params_4_0= ruleValidID )
                    	    // InternalCheckerDsl.g:1251:7: lv_params_4_0= ruleValidID
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getMethodCallAccess().getParamsValidIDParserRuleCall_2_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_12);
                    	    lv_params_4_0=ruleValidID();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getMethodCallRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"params",
                    	      								lv_params_4_0,
                    	      								"org.eclipse.xtext.xbase.Xtype.ValidID");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop22;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,21,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getMethodCallAccess().getRightParenthesisKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMethodCall"


    // $ANTLR start "entryRuleChkPrefix"
    // InternalCheckerDsl.g:1278:1: entryRuleChkPrefix returns [EObject current=null] : iv_ruleChkPrefix= ruleChkPrefix EOF ;
    public final EObject entryRuleChkPrefix() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleChkPrefix = null;


        try {
            // InternalCheckerDsl.g:1278:50: (iv_ruleChkPrefix= ruleChkPrefix EOF )
            // InternalCheckerDsl.g:1279:2: iv_ruleChkPrefix= ruleChkPrefix EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getChkPrefixRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleChkPrefix=ruleChkPrefix();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleChkPrefix; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleChkPrefix"


    // $ANTLR start "ruleChkPrefix"
    // InternalCheckerDsl.g:1285:1: ruleChkPrefix returns [EObject current=null] : ( ( ( (lv_type_0_1= 'in' | lv_type_0_2= 'out' | lv_type_0_3= 'ans' ) ) ) otherlv_1= '.' ) ;
    public final EObject ruleChkPrefix() throws RecognitionException {
        EObject current = null;

        Token lv_type_0_1=null;
        Token lv_type_0_2=null;
        Token lv_type_0_3=null;
        Token otherlv_1=null;


        	enterRule();

        try {
            // InternalCheckerDsl.g:1291:2: ( ( ( ( (lv_type_0_1= 'in' | lv_type_0_2= 'out' | lv_type_0_3= 'ans' ) ) ) otherlv_1= '.' ) )
            // InternalCheckerDsl.g:1292:2: ( ( ( (lv_type_0_1= 'in' | lv_type_0_2= 'out' | lv_type_0_3= 'ans' ) ) ) otherlv_1= '.' )
            {
            // InternalCheckerDsl.g:1292:2: ( ( ( (lv_type_0_1= 'in' | lv_type_0_2= 'out' | lv_type_0_3= 'ans' ) ) ) otherlv_1= '.' )
            // InternalCheckerDsl.g:1293:3: ( ( (lv_type_0_1= 'in' | lv_type_0_2= 'out' | lv_type_0_3= 'ans' ) ) ) otherlv_1= '.'
            {
            // InternalCheckerDsl.g:1293:3: ( ( (lv_type_0_1= 'in' | lv_type_0_2= 'out' | lv_type_0_3= 'ans' ) ) )
            // InternalCheckerDsl.g:1294:4: ( (lv_type_0_1= 'in' | lv_type_0_2= 'out' | lv_type_0_3= 'ans' ) )
            {
            // InternalCheckerDsl.g:1294:4: ( (lv_type_0_1= 'in' | lv_type_0_2= 'out' | lv_type_0_3= 'ans' ) )
            // InternalCheckerDsl.g:1295:5: (lv_type_0_1= 'in' | lv_type_0_2= 'out' | lv_type_0_3= 'ans' )
            {
            // InternalCheckerDsl.g:1295:5: (lv_type_0_1= 'in' | lv_type_0_2= 'out' | lv_type_0_3= 'ans' )
            int alt24=3;
            switch ( input.LA(1) ) {
            case 41:
                {
                alt24=1;
                }
                break;
            case 42:
                {
                alt24=2;
                }
                break;
            case 43:
                {
                alt24=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 24, 0, input);

                throw nvae;
            }

            switch (alt24) {
                case 1 :
                    // InternalCheckerDsl.g:1296:6: lv_type_0_1= 'in'
                    {
                    lv_type_0_1=(Token)match(input,41,FOLLOW_30); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_type_0_1, grammarAccess.getChkPrefixAccess().getTypeInKeyword_0_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getChkPrefixRule());
                      						}
                      						setWithLastConsumed(current, "type", lv_type_0_1, null);
                      					
                    }

                    }
                    break;
                case 2 :
                    // InternalCheckerDsl.g:1307:6: lv_type_0_2= 'out'
                    {
                    lv_type_0_2=(Token)match(input,42,FOLLOW_30); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_type_0_2, grammarAccess.getChkPrefixAccess().getTypeOutKeyword_0_0_1());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getChkPrefixRule());
                      						}
                      						setWithLastConsumed(current, "type", lv_type_0_2, null);
                      					
                    }

                    }
                    break;
                case 3 :
                    // InternalCheckerDsl.g:1318:6: lv_type_0_3= 'ans'
                    {
                    lv_type_0_3=(Token)match(input,43,FOLLOW_30); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_type_0_3, grammarAccess.getChkPrefixAccess().getTypeAnsKeyword_0_0_2());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getChkPrefixRule());
                      						}
                      						setWithLastConsumed(current, "type", lv_type_0_3, null);
                      					
                    }

                    }
                    break;

            }


            }


            }

            otherlv_1=(Token)match(input,44,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getChkPrefixAccess().getFullStopKeyword_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleChkPrefix"


    // $ANTLR start "entryRuleChkVariable"
    // InternalCheckerDsl.g:1339:1: entryRuleChkVariable returns [EObject current=null] : iv_ruleChkVariable= ruleChkVariable EOF ;
    public final EObject entryRuleChkVariable() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleChkVariable = null;


        try {
            // InternalCheckerDsl.g:1339:52: (iv_ruleChkVariable= ruleChkVariable EOF )
            // InternalCheckerDsl.g:1340:2: iv_ruleChkVariable= ruleChkVariable EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getChkVariableRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleChkVariable=ruleChkVariable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleChkVariable; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleChkVariable"


    // $ANTLR start "ruleChkVariable"
    // InternalCheckerDsl.g:1346:1: ruleChkVariable returns [EObject current=null] : ( ( (lv_pref_0_0= ruleChkPrefix ) )? ( (lv_var_1_0= ruleValidID ) ) ( (lv_newtest_2_0= '`' ) )? (otherlv_3= '[' ( (lv_v_4_0= ruleCHK_NUMBER ) ) otherlv_5= ']' )* ) ;
    public final EObject ruleChkVariable() throws RecognitionException {
        EObject current = null;

        Token lv_newtest_2_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_pref_0_0 = null;

        AntlrDatatypeRuleToken lv_var_1_0 = null;

        AntlrDatatypeRuleToken lv_v_4_0 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:1352:2: ( ( ( (lv_pref_0_0= ruleChkPrefix ) )? ( (lv_var_1_0= ruleValidID ) ) ( (lv_newtest_2_0= '`' ) )? (otherlv_3= '[' ( (lv_v_4_0= ruleCHK_NUMBER ) ) otherlv_5= ']' )* ) )
            // InternalCheckerDsl.g:1353:2: ( ( (lv_pref_0_0= ruleChkPrefix ) )? ( (lv_var_1_0= ruleValidID ) ) ( (lv_newtest_2_0= '`' ) )? (otherlv_3= '[' ( (lv_v_4_0= ruleCHK_NUMBER ) ) otherlv_5= ']' )* )
            {
            // InternalCheckerDsl.g:1353:2: ( ( (lv_pref_0_0= ruleChkPrefix ) )? ( (lv_var_1_0= ruleValidID ) ) ( (lv_newtest_2_0= '`' ) )? (otherlv_3= '[' ( (lv_v_4_0= ruleCHK_NUMBER ) ) otherlv_5= ']' )* )
            // InternalCheckerDsl.g:1354:3: ( (lv_pref_0_0= ruleChkPrefix ) )? ( (lv_var_1_0= ruleValidID ) ) ( (lv_newtest_2_0= '`' ) )? (otherlv_3= '[' ( (lv_v_4_0= ruleCHK_NUMBER ) ) otherlv_5= ']' )*
            {
            // InternalCheckerDsl.g:1354:3: ( (lv_pref_0_0= ruleChkPrefix ) )?
            int alt25=2;
            int LA25_0 = input.LA(1);

            if ( ((LA25_0>=41 && LA25_0<=43)) ) {
                alt25=1;
            }
            switch (alt25) {
                case 1 :
                    // InternalCheckerDsl.g:1355:4: (lv_pref_0_0= ruleChkPrefix )
                    {
                    // InternalCheckerDsl.g:1355:4: (lv_pref_0_0= ruleChkPrefix )
                    // InternalCheckerDsl.g:1356:5: lv_pref_0_0= ruleChkPrefix
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getChkVariableAccess().getPrefChkPrefixParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_4);
                    lv_pref_0_0=ruleChkPrefix();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getChkVariableRule());
                      					}
                      					set(
                      						current,
                      						"pref",
                      						lv_pref_0_0,
                      						"org.xtext.example.checkerdsl.CheckerDsl.ChkPrefix");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalCheckerDsl.g:1373:3: ( (lv_var_1_0= ruleValidID ) )
            // InternalCheckerDsl.g:1374:4: (lv_var_1_0= ruleValidID )
            {
            // InternalCheckerDsl.g:1374:4: (lv_var_1_0= ruleValidID )
            // InternalCheckerDsl.g:1375:5: lv_var_1_0= ruleValidID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getChkVariableAccess().getVarValidIDParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_31);
            lv_var_1_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getChkVariableRule());
              					}
              					set(
              						current,
              						"var",
              						lv_var_1_0,
              						"org.eclipse.xtext.xbase.Xtype.ValidID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalCheckerDsl.g:1392:3: ( (lv_newtest_2_0= '`' ) )?
            int alt26=2;
            int LA26_0 = input.LA(1);

            if ( (LA26_0==45) ) {
                alt26=1;
            }
            switch (alt26) {
                case 1 :
                    // InternalCheckerDsl.g:1393:4: (lv_newtest_2_0= '`' )
                    {
                    // InternalCheckerDsl.g:1393:4: (lv_newtest_2_0= '`' )
                    // InternalCheckerDsl.g:1394:5: lv_newtest_2_0= '`'
                    {
                    lv_newtest_2_0=(Token)match(input,45,FOLLOW_32); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_newtest_2_0, grammarAccess.getChkVariableAccess().getNewtestGraveAccentKeyword_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getChkVariableRule());
                      					}
                      					setWithLastConsumed(current, "newtest", lv_newtest_2_0, "`");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalCheckerDsl.g:1406:3: (otherlv_3= '[' ( (lv_v_4_0= ruleCHK_NUMBER ) ) otherlv_5= ']' )*
            loop27:
            do {
                int alt27=2;
                int LA27_0 = input.LA(1);

                if ( (LA27_0==27) ) {
                    alt27=1;
                }


                switch (alt27) {
            	case 1 :
            	    // InternalCheckerDsl.g:1407:4: otherlv_3= '[' ( (lv_v_4_0= ruleCHK_NUMBER ) ) otherlv_5= ']'
            	    {
            	    otherlv_3=(Token)match(input,27,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getChkVariableAccess().getLeftSquareBracketKeyword_3_0());
            	      			
            	    }
            	    // InternalCheckerDsl.g:1411:4: ( (lv_v_4_0= ruleCHK_NUMBER ) )
            	    // InternalCheckerDsl.g:1412:5: (lv_v_4_0= ruleCHK_NUMBER )
            	    {
            	    // InternalCheckerDsl.g:1412:5: (lv_v_4_0= ruleCHK_NUMBER )
            	    // InternalCheckerDsl.g:1413:6: lv_v_4_0= ruleCHK_NUMBER
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getChkVariableAccess().getVCHK_NUMBERParserRuleCall_3_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_24);
            	    lv_v_4_0=ruleCHK_NUMBER();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getChkVariableRule());
            	      						}
            	      						add(
            	      							current,
            	      							"v",
            	      							lv_v_4_0,
            	      							"org.xtext.example.checkerdsl.CheckerDsl.CHK_NUMBER");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_5=(Token)match(input,28,FOLLOW_32); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_5, grammarAccess.getChkVariableAccess().getRightSquareBracketKeyword_3_2());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop27;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleChkVariable"


    // $ANTLR start "entryRuleChkVariables"
    // InternalCheckerDsl.g:1439:1: entryRuleChkVariables returns [EObject current=null] : iv_ruleChkVariables= ruleChkVariables EOF ;
    public final EObject entryRuleChkVariables() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleChkVariables = null;


        try {
            // InternalCheckerDsl.g:1439:53: (iv_ruleChkVariables= ruleChkVariables EOF )
            // InternalCheckerDsl.g:1440:2: iv_ruleChkVariables= ruleChkVariables EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getChkVariablesRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleChkVariables=ruleChkVariables();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleChkVariables; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleChkVariables"


    // $ANTLR start "ruleChkVariables"
    // InternalCheckerDsl.g:1446:1: ruleChkVariables returns [EObject current=null] : ( ( (lv_va_0_0= ruleChkVariable ) ) | ( (lv_nu_1_0= ruleCHK_INT ) ) | ( (lv_gr_2_0= ruleChkItemGroup ) ) ) ;
    public final EObject ruleChkVariables() throws RecognitionException {
        EObject current = null;

        EObject lv_va_0_0 = null;

        AntlrDatatypeRuleToken lv_nu_1_0 = null;

        EObject lv_gr_2_0 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:1452:2: ( ( ( (lv_va_0_0= ruleChkVariable ) ) | ( (lv_nu_1_0= ruleCHK_INT ) ) | ( (lv_gr_2_0= ruleChkItemGroup ) ) ) )
            // InternalCheckerDsl.g:1453:2: ( ( (lv_va_0_0= ruleChkVariable ) ) | ( (lv_nu_1_0= ruleCHK_INT ) ) | ( (lv_gr_2_0= ruleChkItemGroup ) ) )
            {
            // InternalCheckerDsl.g:1453:2: ( ( (lv_va_0_0= ruleChkVariable ) ) | ( (lv_nu_1_0= ruleCHK_INT ) ) | ( (lv_gr_2_0= ruleChkItemGroup ) ) )
            int alt28=3;
            switch ( input.LA(1) ) {
            case RULE_ID:
            case 41:
            case 42:
            case 43:
                {
                alt28=1;
                }
                break;
            case RULE_INT:
            case 77:
                {
                alt28=2;
                }
                break;
            case 46:
                {
                alt28=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 28, 0, input);

                throw nvae;
            }

            switch (alt28) {
                case 1 :
                    // InternalCheckerDsl.g:1454:3: ( (lv_va_0_0= ruleChkVariable ) )
                    {
                    // InternalCheckerDsl.g:1454:3: ( (lv_va_0_0= ruleChkVariable ) )
                    // InternalCheckerDsl.g:1455:4: (lv_va_0_0= ruleChkVariable )
                    {
                    // InternalCheckerDsl.g:1455:4: (lv_va_0_0= ruleChkVariable )
                    // InternalCheckerDsl.g:1456:5: lv_va_0_0= ruleChkVariable
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getChkVariablesAccess().getVaChkVariableParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_va_0_0=ruleChkVariable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getChkVariablesRule());
                      					}
                      					set(
                      						current,
                      						"va",
                      						lv_va_0_0,
                      						"org.xtext.example.checkerdsl.CheckerDsl.ChkVariable");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalCheckerDsl.g:1474:3: ( (lv_nu_1_0= ruleCHK_INT ) )
                    {
                    // InternalCheckerDsl.g:1474:3: ( (lv_nu_1_0= ruleCHK_INT ) )
                    // InternalCheckerDsl.g:1475:4: (lv_nu_1_0= ruleCHK_INT )
                    {
                    // InternalCheckerDsl.g:1475:4: (lv_nu_1_0= ruleCHK_INT )
                    // InternalCheckerDsl.g:1476:5: lv_nu_1_0= ruleCHK_INT
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getChkVariablesAccess().getNuCHK_INTParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_nu_1_0=ruleCHK_INT();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getChkVariablesRule());
                      					}
                      					set(
                      						current,
                      						"nu",
                      						lv_nu_1_0,
                      						"org.xtext.example.checkerdsl.CheckerDsl.CHK_INT");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalCheckerDsl.g:1494:3: ( (lv_gr_2_0= ruleChkItemGroup ) )
                    {
                    // InternalCheckerDsl.g:1494:3: ( (lv_gr_2_0= ruleChkItemGroup ) )
                    // InternalCheckerDsl.g:1495:4: (lv_gr_2_0= ruleChkItemGroup )
                    {
                    // InternalCheckerDsl.g:1495:4: (lv_gr_2_0= ruleChkItemGroup )
                    // InternalCheckerDsl.g:1496:5: lv_gr_2_0= ruleChkItemGroup
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getChkVariablesAccess().getGrChkItemGroupParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_gr_2_0=ruleChkItemGroup();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getChkVariablesRule());
                      					}
                      					set(
                      						current,
                      						"gr",
                      						lv_gr_2_0,
                      						"org.xtext.example.checkerdsl.CheckerDsl.ChkItemGroup");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleChkVariables"


    // $ANTLR start "entryRuleChkItemGroup"
    // InternalCheckerDsl.g:1517:1: entryRuleChkItemGroup returns [EObject current=null] : iv_ruleChkItemGroup= ruleChkItemGroup EOF ;
    public final EObject entryRuleChkItemGroup() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleChkItemGroup = null;


        try {
            // InternalCheckerDsl.g:1517:53: (iv_ruleChkItemGroup= ruleChkItemGroup EOF )
            // InternalCheckerDsl.g:1518:2: iv_ruleChkItemGroup= ruleChkItemGroup EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getChkItemGroupRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleChkItemGroup=ruleChkItemGroup();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleChkItemGroup; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleChkItemGroup"


    // $ANTLR start "ruleChkItemGroup"
    // InternalCheckerDsl.g:1524:1: ruleChkItemGroup returns [EObject current=null] : (otherlv_0= '<' ( (lv_vars_1_0= ruleChkVariable ) ) (otherlv_2= ',' ( (lv_vars_3_0= ruleChkVariable ) ) )* otherlv_4= '>' ) ;
    public final EObject ruleChkItemGroup() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_vars_1_0 = null;

        EObject lv_vars_3_0 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:1530:2: ( (otherlv_0= '<' ( (lv_vars_1_0= ruleChkVariable ) ) (otherlv_2= ',' ( (lv_vars_3_0= ruleChkVariable ) ) )* otherlv_4= '>' ) )
            // InternalCheckerDsl.g:1531:2: (otherlv_0= '<' ( (lv_vars_1_0= ruleChkVariable ) ) (otherlv_2= ',' ( (lv_vars_3_0= ruleChkVariable ) ) )* otherlv_4= '>' )
            {
            // InternalCheckerDsl.g:1531:2: (otherlv_0= '<' ( (lv_vars_1_0= ruleChkVariable ) ) (otherlv_2= ',' ( (lv_vars_3_0= ruleChkVariable ) ) )* otherlv_4= '>' )
            // InternalCheckerDsl.g:1532:3: otherlv_0= '<' ( (lv_vars_1_0= ruleChkVariable ) ) (otherlv_2= ',' ( (lv_vars_3_0= ruleChkVariable ) ) )* otherlv_4= '>'
            {
            otherlv_0=(Token)match(input,46,FOLLOW_33); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getChkItemGroupAccess().getLessThanSignKeyword_0());
              		
            }
            // InternalCheckerDsl.g:1536:3: ( (lv_vars_1_0= ruleChkVariable ) )
            // InternalCheckerDsl.g:1537:4: (lv_vars_1_0= ruleChkVariable )
            {
            // InternalCheckerDsl.g:1537:4: (lv_vars_1_0= ruleChkVariable )
            // InternalCheckerDsl.g:1538:5: lv_vars_1_0= ruleChkVariable
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getChkItemGroupAccess().getVarsChkVariableParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_34);
            lv_vars_1_0=ruleChkVariable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getChkItemGroupRule());
              					}
              					add(
              						current,
              						"vars",
              						lv_vars_1_0,
              						"org.xtext.example.checkerdsl.CheckerDsl.ChkVariable");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalCheckerDsl.g:1555:3: (otherlv_2= ',' ( (lv_vars_3_0= ruleChkVariable ) ) )*
            loop29:
            do {
                int alt29=2;
                int LA29_0 = input.LA(1);

                if ( (LA29_0==20) ) {
                    alt29=1;
                }


                switch (alt29) {
            	case 1 :
            	    // InternalCheckerDsl.g:1556:4: otherlv_2= ',' ( (lv_vars_3_0= ruleChkVariable ) )
            	    {
            	    otherlv_2=(Token)match(input,20,FOLLOW_33); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getChkItemGroupAccess().getCommaKeyword_2_0());
            	      			
            	    }
            	    // InternalCheckerDsl.g:1560:4: ( (lv_vars_3_0= ruleChkVariable ) )
            	    // InternalCheckerDsl.g:1561:5: (lv_vars_3_0= ruleChkVariable )
            	    {
            	    // InternalCheckerDsl.g:1561:5: (lv_vars_3_0= ruleChkVariable )
            	    // InternalCheckerDsl.g:1562:6: lv_vars_3_0= ruleChkVariable
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getChkItemGroupAccess().getVarsChkVariableParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_34);
            	    lv_vars_3_0=ruleChkVariable();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getChkItemGroupRule());
            	      						}
            	      						add(
            	      							current,
            	      							"vars",
            	      							lv_vars_3_0,
            	      							"org.xtext.example.checkerdsl.CheckerDsl.ChkVariable");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop29;
                }
            } while (true);

            otherlv_4=(Token)match(input,47,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getChkItemGroupAccess().getGreaterThanSignKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleChkItemGroup"


    // $ANTLR start "entryRuleHelper"
    // InternalCheckerDsl.g:1588:1: entryRuleHelper returns [EObject current=null] : iv_ruleHelper= ruleHelper EOF ;
    public final EObject entryRuleHelper() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleHelper = null;


        try {
            // InternalCheckerDsl.g:1588:47: (iv_ruleHelper= ruleHelper EOF )
            // InternalCheckerDsl.g:1589:2: iv_ruleHelper= ruleHelper EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getHelperRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleHelper=ruleHelper();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleHelper; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleHelper"


    // $ANTLR start "ruleHelper"
    // InternalCheckerDsl.g:1595:1: ruleHelper returns [EObject current=null] : ( ( ( (lv_sum_0_0= 'sum' ) ) otherlv_1= '(' ( (lv_var_2_0= ruleChkVariable ) ) otherlv_3= ')' ) | ( ( (lv_max_4_0= 'max' ) ) otherlv_5= '(' ( (lv_var_6_0= ruleChkVariable ) ) otherlv_7= ')' ) | ( ( (lv_min_8_0= 'min' ) ) otherlv_9= '(' ( (lv_var_10_0= ruleChkVariable ) ) otherlv_11= ')' ) | ( ( (lv_prime_12_0= 'prime' ) ) otherlv_13= '(' ( (lv_var3_14_0= ruleChkVariables ) ) otherlv_15= ')' ) | ( ( (lv_swap_16_0= 'swap' ) ) otherlv_17= '(' ( (lv_var_18_0= ruleChkVariable ) ) otherlv_19= ',' ( (lv_var1_20_0= ruleValidID ) ) otherlv_21= ',' ( (lv_var2_22_0= ruleValidID ) ) otherlv_23= ')' ) | ( ( (lv_select_24_0= 'select' ) ) otherlv_25= '(' ( (lv_vars_26_0= ruleValidID ) ) (otherlv_27= ',' ( (lv_vars_28_0= ruleValidID ) ) )* otherlv_29= ':' ( ( (lv_var3_30_0= ruleChkVariables ) ) otherlv_31= '..' ( (lv_var4_32_0= ruleChkVariables ) ) ) otherlv_33= ')' ) | ( ( (lv_add_34_0= 'add' ) ) otherlv_35= '(' ( (lv_var_36_0= ruleChkVariable ) ) otherlv_37= ',' ( (lv_var3_38_0= ruleChkVariables ) ) otherlv_39= ')' ) | ( ( (lv_remove_40_0= 'remove' ) ) otherlv_41= '(' ( (lv_var_42_0= ruleChkVariable ) ) (otherlv_43= ',' ( (lv_var3_44_0= ruleChkVariables ) ) )? otherlv_45= ')' ) | ( ( (lv_random_46_0= 'random' ) ) otherlv_47= '(' ( ( (lv_var3_48_0= ruleChkVariables ) ) otherlv_49= '..' ( (lv_var4_50_0= ruleChkVariables ) ) )? otherlv_51= ')' ) | ( ( (lv_size_52_0= 'size' ) ) otherlv_53= '(' ( (lv_var_54_0= ruleChkVariable ) ) otherlv_55= ')' ) | ( ( (lv_reverse_56_0= 'reverse' ) ) otherlv_57= '(' ( (lv_var_58_0= ruleChkVariable ) ) otherlv_59= ')' ) | ( ( (lv_contains_60_0= 'contain' ) ) otherlv_61= '(' ( (lv_var_62_0= ruleChkVariable ) ) otherlv_63= ',' ( (lv_var3_64_0= ruleChkVariables ) ) otherlv_65= ')' ) | ( ( (lv_addRow_66_0= 'addRow' ) ) otherlv_67= '(' ( (lv_var_68_0= ruleChkVariable ) ) otherlv_69= ')' ) | ( ( (lv_addCol_70_0= 'addColumn' ) ) otherlv_71= '(' ( (lv_var_72_0= ruleChkVariable ) ) otherlv_73= ')' ) | ( ( (lv_swapRow_74_0= 'swapRow' ) ) otherlv_75= '(' ( (lv_var_76_0= ruleChkVariable ) ) otherlv_77= ',' ( (lv_var1_78_0= ruleValidID ) ) otherlv_79= ',' ( (lv_var2_80_0= ruleValidID ) ) otherlv_81= ')' ) | ( ( (lv_swapCol_82_0= 'swapColumn' ) ) otherlv_83= '(' ( (lv_var_84_0= ruleChkVariable ) ) otherlv_85= ',' ( (lv_var1_86_0= ruleValidID ) ) otherlv_87= ',' ( (lv_var2_88_0= ruleValidID ) ) otherlv_89= ')' ) | ( ( (lv_removeRow_90_0= 'removeRow' ) ) otherlv_91= '(' ( (lv_var_92_0= ruleChkVariable ) ) otherlv_93= ',' ( (lv_var3_94_0= ruleChkVariables ) ) otherlv_95= ')' ) | ( ( (lv_removeCol_96_0= 'removeColumn' ) ) otherlv_97= '(' ( (lv_var_98_0= ruleChkVariable ) ) otherlv_99= ',' ( (lv_var3_100_0= ruleChkVariables ) ) otherlv_101= ')' ) | ( ( (lv_permute_102_0= 'permute' ) ) otherlv_103= '(' ( (lv_var_104_0= ruleChkVariable ) ) otherlv_105= ')' ) | ( ( (lv_plus_106_0= 'plus' ) ) otherlv_107= '(' ( (lv_var_108_0= ruleChkVariable ) ) otherlv_109= ',' ( (lv_var3_110_0= ruleChkVariables ) ) otherlv_111= ')' ) | ( ( (lv_multiply_112_0= 'multiply' ) ) otherlv_113= '(' ( (lv_var_114_0= ruleChkVariable ) ) otherlv_115= ',' ( (lv_var3_116_0= ruleChkVariables ) ) otherlv_117= ')' ) | ( ( (lv_invert_118_0= 'invert' ) ) otherlv_119= '(' ( (lv_var_120_0= ruleChkVariable ) ) otherlv_121= ')' ) | ( ( (lv_include_122_0= 'include' ) ) otherlv_123= '(' ( (lv_var_124_0= ruleChkVariable ) ) otherlv_125= ',' ( (lv_var3_126_0= ruleChkVariables ) ) otherlv_127= ')' ) | ( ( (lv_exclude_128_0= 'exclude' ) ) otherlv_129= '(' ( (lv_var_130_0= ruleChkVariable ) ) otherlv_131= ',' ( (lv_var3_132_0= ruleChkVariables ) ) otherlv_133= ')' ) | ( ( (lv_compositional_134_0= 'compositional' ) ) otherlv_135= '(' ( (lv_var_136_0= ruleChkVariable ) ) otherlv_137= ')' ) ) ;
    public final EObject ruleHelper() throws RecognitionException {
        EObject current = null;

        Token lv_sum_0_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token lv_max_4_0=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token lv_min_8_0=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token lv_prime_12_0=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token lv_swap_16_0=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token otherlv_23=null;
        Token lv_select_24_0=null;
        Token otherlv_25=null;
        Token otherlv_27=null;
        Token otherlv_29=null;
        Token otherlv_31=null;
        Token otherlv_33=null;
        Token lv_add_34_0=null;
        Token otherlv_35=null;
        Token otherlv_37=null;
        Token otherlv_39=null;
        Token lv_remove_40_0=null;
        Token otherlv_41=null;
        Token otherlv_43=null;
        Token otherlv_45=null;
        Token lv_random_46_0=null;
        Token otherlv_47=null;
        Token otherlv_49=null;
        Token otherlv_51=null;
        Token lv_size_52_0=null;
        Token otherlv_53=null;
        Token otherlv_55=null;
        Token lv_reverse_56_0=null;
        Token otherlv_57=null;
        Token otherlv_59=null;
        Token lv_contains_60_0=null;
        Token otherlv_61=null;
        Token otherlv_63=null;
        Token otherlv_65=null;
        Token lv_addRow_66_0=null;
        Token otherlv_67=null;
        Token otherlv_69=null;
        Token lv_addCol_70_0=null;
        Token otherlv_71=null;
        Token otherlv_73=null;
        Token lv_swapRow_74_0=null;
        Token otherlv_75=null;
        Token otherlv_77=null;
        Token otherlv_79=null;
        Token otherlv_81=null;
        Token lv_swapCol_82_0=null;
        Token otherlv_83=null;
        Token otherlv_85=null;
        Token otherlv_87=null;
        Token otherlv_89=null;
        Token lv_removeRow_90_0=null;
        Token otherlv_91=null;
        Token otherlv_93=null;
        Token otherlv_95=null;
        Token lv_removeCol_96_0=null;
        Token otherlv_97=null;
        Token otherlv_99=null;
        Token otherlv_101=null;
        Token lv_permute_102_0=null;
        Token otherlv_103=null;
        Token otherlv_105=null;
        Token lv_plus_106_0=null;
        Token otherlv_107=null;
        Token otherlv_109=null;
        Token otherlv_111=null;
        Token lv_multiply_112_0=null;
        Token otherlv_113=null;
        Token otherlv_115=null;
        Token otherlv_117=null;
        Token lv_invert_118_0=null;
        Token otherlv_119=null;
        Token otherlv_121=null;
        Token lv_include_122_0=null;
        Token otherlv_123=null;
        Token otherlv_125=null;
        Token otherlv_127=null;
        Token lv_exclude_128_0=null;
        Token otherlv_129=null;
        Token otherlv_131=null;
        Token otherlv_133=null;
        Token lv_compositional_134_0=null;
        Token otherlv_135=null;
        Token otherlv_137=null;
        EObject lv_var_2_0 = null;

        EObject lv_var_6_0 = null;

        EObject lv_var_10_0 = null;

        EObject lv_var3_14_0 = null;

        EObject lv_var_18_0 = null;

        AntlrDatatypeRuleToken lv_var1_20_0 = null;

        AntlrDatatypeRuleToken lv_var2_22_0 = null;

        AntlrDatatypeRuleToken lv_vars_26_0 = null;

        AntlrDatatypeRuleToken lv_vars_28_0 = null;

        EObject lv_var3_30_0 = null;

        EObject lv_var4_32_0 = null;

        EObject lv_var_36_0 = null;

        EObject lv_var3_38_0 = null;

        EObject lv_var_42_0 = null;

        EObject lv_var3_44_0 = null;

        EObject lv_var3_48_0 = null;

        EObject lv_var4_50_0 = null;

        EObject lv_var_54_0 = null;

        EObject lv_var_58_0 = null;

        EObject lv_var_62_0 = null;

        EObject lv_var3_64_0 = null;

        EObject lv_var_68_0 = null;

        EObject lv_var_72_0 = null;

        EObject lv_var_76_0 = null;

        AntlrDatatypeRuleToken lv_var1_78_0 = null;

        AntlrDatatypeRuleToken lv_var2_80_0 = null;

        EObject lv_var_84_0 = null;

        AntlrDatatypeRuleToken lv_var1_86_0 = null;

        AntlrDatatypeRuleToken lv_var2_88_0 = null;

        EObject lv_var_92_0 = null;

        EObject lv_var3_94_0 = null;

        EObject lv_var_98_0 = null;

        EObject lv_var3_100_0 = null;

        EObject lv_var_104_0 = null;

        EObject lv_var_108_0 = null;

        EObject lv_var3_110_0 = null;

        EObject lv_var_114_0 = null;

        EObject lv_var3_116_0 = null;

        EObject lv_var_120_0 = null;

        EObject lv_var_124_0 = null;

        EObject lv_var3_126_0 = null;

        EObject lv_var_130_0 = null;

        EObject lv_var3_132_0 = null;

        EObject lv_var_136_0 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:1601:2: ( ( ( ( (lv_sum_0_0= 'sum' ) ) otherlv_1= '(' ( (lv_var_2_0= ruleChkVariable ) ) otherlv_3= ')' ) | ( ( (lv_max_4_0= 'max' ) ) otherlv_5= '(' ( (lv_var_6_0= ruleChkVariable ) ) otherlv_7= ')' ) | ( ( (lv_min_8_0= 'min' ) ) otherlv_9= '(' ( (lv_var_10_0= ruleChkVariable ) ) otherlv_11= ')' ) | ( ( (lv_prime_12_0= 'prime' ) ) otherlv_13= '(' ( (lv_var3_14_0= ruleChkVariables ) ) otherlv_15= ')' ) | ( ( (lv_swap_16_0= 'swap' ) ) otherlv_17= '(' ( (lv_var_18_0= ruleChkVariable ) ) otherlv_19= ',' ( (lv_var1_20_0= ruleValidID ) ) otherlv_21= ',' ( (lv_var2_22_0= ruleValidID ) ) otherlv_23= ')' ) | ( ( (lv_select_24_0= 'select' ) ) otherlv_25= '(' ( (lv_vars_26_0= ruleValidID ) ) (otherlv_27= ',' ( (lv_vars_28_0= ruleValidID ) ) )* otherlv_29= ':' ( ( (lv_var3_30_0= ruleChkVariables ) ) otherlv_31= '..' ( (lv_var4_32_0= ruleChkVariables ) ) ) otherlv_33= ')' ) | ( ( (lv_add_34_0= 'add' ) ) otherlv_35= '(' ( (lv_var_36_0= ruleChkVariable ) ) otherlv_37= ',' ( (lv_var3_38_0= ruleChkVariables ) ) otherlv_39= ')' ) | ( ( (lv_remove_40_0= 'remove' ) ) otherlv_41= '(' ( (lv_var_42_0= ruleChkVariable ) ) (otherlv_43= ',' ( (lv_var3_44_0= ruleChkVariables ) ) )? otherlv_45= ')' ) | ( ( (lv_random_46_0= 'random' ) ) otherlv_47= '(' ( ( (lv_var3_48_0= ruleChkVariables ) ) otherlv_49= '..' ( (lv_var4_50_0= ruleChkVariables ) ) )? otherlv_51= ')' ) | ( ( (lv_size_52_0= 'size' ) ) otherlv_53= '(' ( (lv_var_54_0= ruleChkVariable ) ) otherlv_55= ')' ) | ( ( (lv_reverse_56_0= 'reverse' ) ) otherlv_57= '(' ( (lv_var_58_0= ruleChkVariable ) ) otherlv_59= ')' ) | ( ( (lv_contains_60_0= 'contain' ) ) otherlv_61= '(' ( (lv_var_62_0= ruleChkVariable ) ) otherlv_63= ',' ( (lv_var3_64_0= ruleChkVariables ) ) otherlv_65= ')' ) | ( ( (lv_addRow_66_0= 'addRow' ) ) otherlv_67= '(' ( (lv_var_68_0= ruleChkVariable ) ) otherlv_69= ')' ) | ( ( (lv_addCol_70_0= 'addColumn' ) ) otherlv_71= '(' ( (lv_var_72_0= ruleChkVariable ) ) otherlv_73= ')' ) | ( ( (lv_swapRow_74_0= 'swapRow' ) ) otherlv_75= '(' ( (lv_var_76_0= ruleChkVariable ) ) otherlv_77= ',' ( (lv_var1_78_0= ruleValidID ) ) otherlv_79= ',' ( (lv_var2_80_0= ruleValidID ) ) otherlv_81= ')' ) | ( ( (lv_swapCol_82_0= 'swapColumn' ) ) otherlv_83= '(' ( (lv_var_84_0= ruleChkVariable ) ) otherlv_85= ',' ( (lv_var1_86_0= ruleValidID ) ) otherlv_87= ',' ( (lv_var2_88_0= ruleValidID ) ) otherlv_89= ')' ) | ( ( (lv_removeRow_90_0= 'removeRow' ) ) otherlv_91= '(' ( (lv_var_92_0= ruleChkVariable ) ) otherlv_93= ',' ( (lv_var3_94_0= ruleChkVariables ) ) otherlv_95= ')' ) | ( ( (lv_removeCol_96_0= 'removeColumn' ) ) otherlv_97= '(' ( (lv_var_98_0= ruleChkVariable ) ) otherlv_99= ',' ( (lv_var3_100_0= ruleChkVariables ) ) otherlv_101= ')' ) | ( ( (lv_permute_102_0= 'permute' ) ) otherlv_103= '(' ( (lv_var_104_0= ruleChkVariable ) ) otherlv_105= ')' ) | ( ( (lv_plus_106_0= 'plus' ) ) otherlv_107= '(' ( (lv_var_108_0= ruleChkVariable ) ) otherlv_109= ',' ( (lv_var3_110_0= ruleChkVariables ) ) otherlv_111= ')' ) | ( ( (lv_multiply_112_0= 'multiply' ) ) otherlv_113= '(' ( (lv_var_114_0= ruleChkVariable ) ) otherlv_115= ',' ( (lv_var3_116_0= ruleChkVariables ) ) otherlv_117= ')' ) | ( ( (lv_invert_118_0= 'invert' ) ) otherlv_119= '(' ( (lv_var_120_0= ruleChkVariable ) ) otherlv_121= ')' ) | ( ( (lv_include_122_0= 'include' ) ) otherlv_123= '(' ( (lv_var_124_0= ruleChkVariable ) ) otherlv_125= ',' ( (lv_var3_126_0= ruleChkVariables ) ) otherlv_127= ')' ) | ( ( (lv_exclude_128_0= 'exclude' ) ) otherlv_129= '(' ( (lv_var_130_0= ruleChkVariable ) ) otherlv_131= ',' ( (lv_var3_132_0= ruleChkVariables ) ) otherlv_133= ')' ) | ( ( (lv_compositional_134_0= 'compositional' ) ) otherlv_135= '(' ( (lv_var_136_0= ruleChkVariable ) ) otherlv_137= ')' ) ) )
            // InternalCheckerDsl.g:1602:2: ( ( ( (lv_sum_0_0= 'sum' ) ) otherlv_1= '(' ( (lv_var_2_0= ruleChkVariable ) ) otherlv_3= ')' ) | ( ( (lv_max_4_0= 'max' ) ) otherlv_5= '(' ( (lv_var_6_0= ruleChkVariable ) ) otherlv_7= ')' ) | ( ( (lv_min_8_0= 'min' ) ) otherlv_9= '(' ( (lv_var_10_0= ruleChkVariable ) ) otherlv_11= ')' ) | ( ( (lv_prime_12_0= 'prime' ) ) otherlv_13= '(' ( (lv_var3_14_0= ruleChkVariables ) ) otherlv_15= ')' ) | ( ( (lv_swap_16_0= 'swap' ) ) otherlv_17= '(' ( (lv_var_18_0= ruleChkVariable ) ) otherlv_19= ',' ( (lv_var1_20_0= ruleValidID ) ) otherlv_21= ',' ( (lv_var2_22_0= ruleValidID ) ) otherlv_23= ')' ) | ( ( (lv_select_24_0= 'select' ) ) otherlv_25= '(' ( (lv_vars_26_0= ruleValidID ) ) (otherlv_27= ',' ( (lv_vars_28_0= ruleValidID ) ) )* otherlv_29= ':' ( ( (lv_var3_30_0= ruleChkVariables ) ) otherlv_31= '..' ( (lv_var4_32_0= ruleChkVariables ) ) ) otherlv_33= ')' ) | ( ( (lv_add_34_0= 'add' ) ) otherlv_35= '(' ( (lv_var_36_0= ruleChkVariable ) ) otherlv_37= ',' ( (lv_var3_38_0= ruleChkVariables ) ) otherlv_39= ')' ) | ( ( (lv_remove_40_0= 'remove' ) ) otherlv_41= '(' ( (lv_var_42_0= ruleChkVariable ) ) (otherlv_43= ',' ( (lv_var3_44_0= ruleChkVariables ) ) )? otherlv_45= ')' ) | ( ( (lv_random_46_0= 'random' ) ) otherlv_47= '(' ( ( (lv_var3_48_0= ruleChkVariables ) ) otherlv_49= '..' ( (lv_var4_50_0= ruleChkVariables ) ) )? otherlv_51= ')' ) | ( ( (lv_size_52_0= 'size' ) ) otherlv_53= '(' ( (lv_var_54_0= ruleChkVariable ) ) otherlv_55= ')' ) | ( ( (lv_reverse_56_0= 'reverse' ) ) otherlv_57= '(' ( (lv_var_58_0= ruleChkVariable ) ) otherlv_59= ')' ) | ( ( (lv_contains_60_0= 'contain' ) ) otherlv_61= '(' ( (lv_var_62_0= ruleChkVariable ) ) otherlv_63= ',' ( (lv_var3_64_0= ruleChkVariables ) ) otherlv_65= ')' ) | ( ( (lv_addRow_66_0= 'addRow' ) ) otherlv_67= '(' ( (lv_var_68_0= ruleChkVariable ) ) otherlv_69= ')' ) | ( ( (lv_addCol_70_0= 'addColumn' ) ) otherlv_71= '(' ( (lv_var_72_0= ruleChkVariable ) ) otherlv_73= ')' ) | ( ( (lv_swapRow_74_0= 'swapRow' ) ) otherlv_75= '(' ( (lv_var_76_0= ruleChkVariable ) ) otherlv_77= ',' ( (lv_var1_78_0= ruleValidID ) ) otherlv_79= ',' ( (lv_var2_80_0= ruleValidID ) ) otherlv_81= ')' ) | ( ( (lv_swapCol_82_0= 'swapColumn' ) ) otherlv_83= '(' ( (lv_var_84_0= ruleChkVariable ) ) otherlv_85= ',' ( (lv_var1_86_0= ruleValidID ) ) otherlv_87= ',' ( (lv_var2_88_0= ruleValidID ) ) otherlv_89= ')' ) | ( ( (lv_removeRow_90_0= 'removeRow' ) ) otherlv_91= '(' ( (lv_var_92_0= ruleChkVariable ) ) otherlv_93= ',' ( (lv_var3_94_0= ruleChkVariables ) ) otherlv_95= ')' ) | ( ( (lv_removeCol_96_0= 'removeColumn' ) ) otherlv_97= '(' ( (lv_var_98_0= ruleChkVariable ) ) otherlv_99= ',' ( (lv_var3_100_0= ruleChkVariables ) ) otherlv_101= ')' ) | ( ( (lv_permute_102_0= 'permute' ) ) otherlv_103= '(' ( (lv_var_104_0= ruleChkVariable ) ) otherlv_105= ')' ) | ( ( (lv_plus_106_0= 'plus' ) ) otherlv_107= '(' ( (lv_var_108_0= ruleChkVariable ) ) otherlv_109= ',' ( (lv_var3_110_0= ruleChkVariables ) ) otherlv_111= ')' ) | ( ( (lv_multiply_112_0= 'multiply' ) ) otherlv_113= '(' ( (lv_var_114_0= ruleChkVariable ) ) otherlv_115= ',' ( (lv_var3_116_0= ruleChkVariables ) ) otherlv_117= ')' ) | ( ( (lv_invert_118_0= 'invert' ) ) otherlv_119= '(' ( (lv_var_120_0= ruleChkVariable ) ) otherlv_121= ')' ) | ( ( (lv_include_122_0= 'include' ) ) otherlv_123= '(' ( (lv_var_124_0= ruleChkVariable ) ) otherlv_125= ',' ( (lv_var3_126_0= ruleChkVariables ) ) otherlv_127= ')' ) | ( ( (lv_exclude_128_0= 'exclude' ) ) otherlv_129= '(' ( (lv_var_130_0= ruleChkVariable ) ) otherlv_131= ',' ( (lv_var3_132_0= ruleChkVariables ) ) otherlv_133= ')' ) | ( ( (lv_compositional_134_0= 'compositional' ) ) otherlv_135= '(' ( (lv_var_136_0= ruleChkVariable ) ) otherlv_137= ')' ) )
            {
            // InternalCheckerDsl.g:1602:2: ( ( ( (lv_sum_0_0= 'sum' ) ) otherlv_1= '(' ( (lv_var_2_0= ruleChkVariable ) ) otherlv_3= ')' ) | ( ( (lv_max_4_0= 'max' ) ) otherlv_5= '(' ( (lv_var_6_0= ruleChkVariable ) ) otherlv_7= ')' ) | ( ( (lv_min_8_0= 'min' ) ) otherlv_9= '(' ( (lv_var_10_0= ruleChkVariable ) ) otherlv_11= ')' ) | ( ( (lv_prime_12_0= 'prime' ) ) otherlv_13= '(' ( (lv_var3_14_0= ruleChkVariables ) ) otherlv_15= ')' ) | ( ( (lv_swap_16_0= 'swap' ) ) otherlv_17= '(' ( (lv_var_18_0= ruleChkVariable ) ) otherlv_19= ',' ( (lv_var1_20_0= ruleValidID ) ) otherlv_21= ',' ( (lv_var2_22_0= ruleValidID ) ) otherlv_23= ')' ) | ( ( (lv_select_24_0= 'select' ) ) otherlv_25= '(' ( (lv_vars_26_0= ruleValidID ) ) (otherlv_27= ',' ( (lv_vars_28_0= ruleValidID ) ) )* otherlv_29= ':' ( ( (lv_var3_30_0= ruleChkVariables ) ) otherlv_31= '..' ( (lv_var4_32_0= ruleChkVariables ) ) ) otherlv_33= ')' ) | ( ( (lv_add_34_0= 'add' ) ) otherlv_35= '(' ( (lv_var_36_0= ruleChkVariable ) ) otherlv_37= ',' ( (lv_var3_38_0= ruleChkVariables ) ) otherlv_39= ')' ) | ( ( (lv_remove_40_0= 'remove' ) ) otherlv_41= '(' ( (lv_var_42_0= ruleChkVariable ) ) (otherlv_43= ',' ( (lv_var3_44_0= ruleChkVariables ) ) )? otherlv_45= ')' ) | ( ( (lv_random_46_0= 'random' ) ) otherlv_47= '(' ( ( (lv_var3_48_0= ruleChkVariables ) ) otherlv_49= '..' ( (lv_var4_50_0= ruleChkVariables ) ) )? otherlv_51= ')' ) | ( ( (lv_size_52_0= 'size' ) ) otherlv_53= '(' ( (lv_var_54_0= ruleChkVariable ) ) otherlv_55= ')' ) | ( ( (lv_reverse_56_0= 'reverse' ) ) otherlv_57= '(' ( (lv_var_58_0= ruleChkVariable ) ) otherlv_59= ')' ) | ( ( (lv_contains_60_0= 'contain' ) ) otherlv_61= '(' ( (lv_var_62_0= ruleChkVariable ) ) otherlv_63= ',' ( (lv_var3_64_0= ruleChkVariables ) ) otherlv_65= ')' ) | ( ( (lv_addRow_66_0= 'addRow' ) ) otherlv_67= '(' ( (lv_var_68_0= ruleChkVariable ) ) otherlv_69= ')' ) | ( ( (lv_addCol_70_0= 'addColumn' ) ) otherlv_71= '(' ( (lv_var_72_0= ruleChkVariable ) ) otherlv_73= ')' ) | ( ( (lv_swapRow_74_0= 'swapRow' ) ) otherlv_75= '(' ( (lv_var_76_0= ruleChkVariable ) ) otherlv_77= ',' ( (lv_var1_78_0= ruleValidID ) ) otherlv_79= ',' ( (lv_var2_80_0= ruleValidID ) ) otherlv_81= ')' ) | ( ( (lv_swapCol_82_0= 'swapColumn' ) ) otherlv_83= '(' ( (lv_var_84_0= ruleChkVariable ) ) otherlv_85= ',' ( (lv_var1_86_0= ruleValidID ) ) otherlv_87= ',' ( (lv_var2_88_0= ruleValidID ) ) otherlv_89= ')' ) | ( ( (lv_removeRow_90_0= 'removeRow' ) ) otherlv_91= '(' ( (lv_var_92_0= ruleChkVariable ) ) otherlv_93= ',' ( (lv_var3_94_0= ruleChkVariables ) ) otherlv_95= ')' ) | ( ( (lv_removeCol_96_0= 'removeColumn' ) ) otherlv_97= '(' ( (lv_var_98_0= ruleChkVariable ) ) otherlv_99= ',' ( (lv_var3_100_0= ruleChkVariables ) ) otherlv_101= ')' ) | ( ( (lv_permute_102_0= 'permute' ) ) otherlv_103= '(' ( (lv_var_104_0= ruleChkVariable ) ) otherlv_105= ')' ) | ( ( (lv_plus_106_0= 'plus' ) ) otherlv_107= '(' ( (lv_var_108_0= ruleChkVariable ) ) otherlv_109= ',' ( (lv_var3_110_0= ruleChkVariables ) ) otherlv_111= ')' ) | ( ( (lv_multiply_112_0= 'multiply' ) ) otherlv_113= '(' ( (lv_var_114_0= ruleChkVariable ) ) otherlv_115= ',' ( (lv_var3_116_0= ruleChkVariables ) ) otherlv_117= ')' ) | ( ( (lv_invert_118_0= 'invert' ) ) otherlv_119= '(' ( (lv_var_120_0= ruleChkVariable ) ) otherlv_121= ')' ) | ( ( (lv_include_122_0= 'include' ) ) otherlv_123= '(' ( (lv_var_124_0= ruleChkVariable ) ) otherlv_125= ',' ( (lv_var3_126_0= ruleChkVariables ) ) otherlv_127= ')' ) | ( ( (lv_exclude_128_0= 'exclude' ) ) otherlv_129= '(' ( (lv_var_130_0= ruleChkVariable ) ) otherlv_131= ',' ( (lv_var3_132_0= ruleChkVariables ) ) otherlv_133= ')' ) | ( ( (lv_compositional_134_0= 'compositional' ) ) otherlv_135= '(' ( (lv_var_136_0= ruleChkVariable ) ) otherlv_137= ')' ) )
            int alt33=25;
            switch ( input.LA(1) ) {
            case 48:
                {
                alt33=1;
                }
                break;
            case 49:
                {
                alt33=2;
                }
                break;
            case 50:
                {
                alt33=3;
                }
                break;
            case 51:
                {
                alt33=4;
                }
                break;
            case 52:
                {
                alt33=5;
                }
                break;
            case 53:
                {
                alt33=6;
                }
                break;
            case 55:
                {
                alt33=7;
                }
                break;
            case 56:
                {
                alt33=8;
                }
                break;
            case 57:
                {
                alt33=9;
                }
                break;
            case 58:
                {
                alt33=10;
                }
                break;
            case 59:
                {
                alt33=11;
                }
                break;
            case 60:
                {
                alt33=12;
                }
                break;
            case 61:
                {
                alt33=13;
                }
                break;
            case 62:
                {
                alt33=14;
                }
                break;
            case 63:
                {
                alt33=15;
                }
                break;
            case 64:
                {
                alt33=16;
                }
                break;
            case 65:
                {
                alt33=17;
                }
                break;
            case 66:
                {
                alt33=18;
                }
                break;
            case 67:
                {
                alt33=19;
                }
                break;
            case 68:
                {
                alt33=20;
                }
                break;
            case 69:
                {
                alt33=21;
                }
                break;
            case 70:
                {
                alt33=22;
                }
                break;
            case 71:
                {
                alt33=23;
                }
                break;
            case 72:
                {
                alt33=24;
                }
                break;
            case 73:
                {
                alt33=25;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 33, 0, input);

                throw nvae;
            }

            switch (alt33) {
                case 1 :
                    // InternalCheckerDsl.g:1603:3: ( ( (lv_sum_0_0= 'sum' ) ) otherlv_1= '(' ( (lv_var_2_0= ruleChkVariable ) ) otherlv_3= ')' )
                    {
                    // InternalCheckerDsl.g:1603:3: ( ( (lv_sum_0_0= 'sum' ) ) otherlv_1= '(' ( (lv_var_2_0= ruleChkVariable ) ) otherlv_3= ')' )
                    // InternalCheckerDsl.g:1604:4: ( (lv_sum_0_0= 'sum' ) ) otherlv_1= '(' ( (lv_var_2_0= ruleChkVariable ) ) otherlv_3= ')'
                    {
                    // InternalCheckerDsl.g:1604:4: ( (lv_sum_0_0= 'sum' ) )
                    // InternalCheckerDsl.g:1605:5: (lv_sum_0_0= 'sum' )
                    {
                    // InternalCheckerDsl.g:1605:5: (lv_sum_0_0= 'sum' )
                    // InternalCheckerDsl.g:1606:6: lv_sum_0_0= 'sum'
                    {
                    lv_sum_0_0=(Token)match(input,48,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_sum_0_0, grammarAccess.getHelperAccess().getSumSumKeyword_0_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getHelperRule());
                      						}
                      						setWithLastConsumed(current, "sum", lv_sum_0_0, "sum");
                      					
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,19,FOLLOW_33); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getHelperAccess().getLeftParenthesisKeyword_0_1());
                      			
                    }
                    // InternalCheckerDsl.g:1622:4: ( (lv_var_2_0= ruleChkVariable ) )
                    // InternalCheckerDsl.g:1623:5: (lv_var_2_0= ruleChkVariable )
                    {
                    // InternalCheckerDsl.g:1623:5: (lv_var_2_0= ruleChkVariable )
                    // InternalCheckerDsl.g:1624:6: lv_var_2_0= ruleChkVariable
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getHelperAccess().getVarChkVariableParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_15);
                    lv_var_2_0=ruleChkVariable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getHelperRule());
                      						}
                      						set(
                      							current,
                      							"var",
                      							lv_var_2_0,
                      							"org.xtext.example.checkerdsl.CheckerDsl.ChkVariable");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,21,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getHelperAccess().getRightParenthesisKeyword_0_3());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalCheckerDsl.g:1647:3: ( ( (lv_max_4_0= 'max' ) ) otherlv_5= '(' ( (lv_var_6_0= ruleChkVariable ) ) otherlv_7= ')' )
                    {
                    // InternalCheckerDsl.g:1647:3: ( ( (lv_max_4_0= 'max' ) ) otherlv_5= '(' ( (lv_var_6_0= ruleChkVariable ) ) otherlv_7= ')' )
                    // InternalCheckerDsl.g:1648:4: ( (lv_max_4_0= 'max' ) ) otherlv_5= '(' ( (lv_var_6_0= ruleChkVariable ) ) otherlv_7= ')'
                    {
                    // InternalCheckerDsl.g:1648:4: ( (lv_max_4_0= 'max' ) )
                    // InternalCheckerDsl.g:1649:5: (lv_max_4_0= 'max' )
                    {
                    // InternalCheckerDsl.g:1649:5: (lv_max_4_0= 'max' )
                    // InternalCheckerDsl.g:1650:6: lv_max_4_0= 'max'
                    {
                    lv_max_4_0=(Token)match(input,49,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_max_4_0, grammarAccess.getHelperAccess().getMaxMaxKeyword_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getHelperRule());
                      						}
                      						setWithLastConsumed(current, "max", lv_max_4_0, "max");
                      					
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,19,FOLLOW_33); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getHelperAccess().getLeftParenthesisKeyword_1_1());
                      			
                    }
                    // InternalCheckerDsl.g:1666:4: ( (lv_var_6_0= ruleChkVariable ) )
                    // InternalCheckerDsl.g:1667:5: (lv_var_6_0= ruleChkVariable )
                    {
                    // InternalCheckerDsl.g:1667:5: (lv_var_6_0= ruleChkVariable )
                    // InternalCheckerDsl.g:1668:6: lv_var_6_0= ruleChkVariable
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getHelperAccess().getVarChkVariableParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_15);
                    lv_var_6_0=ruleChkVariable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getHelperRule());
                      						}
                      						set(
                      							current,
                      							"var",
                      							lv_var_6_0,
                      							"org.xtext.example.checkerdsl.CheckerDsl.ChkVariable");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_7=(Token)match(input,21,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getHelperAccess().getRightParenthesisKeyword_1_3());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalCheckerDsl.g:1691:3: ( ( (lv_min_8_0= 'min' ) ) otherlv_9= '(' ( (lv_var_10_0= ruleChkVariable ) ) otherlv_11= ')' )
                    {
                    // InternalCheckerDsl.g:1691:3: ( ( (lv_min_8_0= 'min' ) ) otherlv_9= '(' ( (lv_var_10_0= ruleChkVariable ) ) otherlv_11= ')' )
                    // InternalCheckerDsl.g:1692:4: ( (lv_min_8_0= 'min' ) ) otherlv_9= '(' ( (lv_var_10_0= ruleChkVariable ) ) otherlv_11= ')'
                    {
                    // InternalCheckerDsl.g:1692:4: ( (lv_min_8_0= 'min' ) )
                    // InternalCheckerDsl.g:1693:5: (lv_min_8_0= 'min' )
                    {
                    // InternalCheckerDsl.g:1693:5: (lv_min_8_0= 'min' )
                    // InternalCheckerDsl.g:1694:6: lv_min_8_0= 'min'
                    {
                    lv_min_8_0=(Token)match(input,50,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_min_8_0, grammarAccess.getHelperAccess().getMinMinKeyword_2_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getHelperRule());
                      						}
                      						setWithLastConsumed(current, "min", lv_min_8_0, "min");
                      					
                    }

                    }


                    }

                    otherlv_9=(Token)match(input,19,FOLLOW_33); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getHelperAccess().getLeftParenthesisKeyword_2_1());
                      			
                    }
                    // InternalCheckerDsl.g:1710:4: ( (lv_var_10_0= ruleChkVariable ) )
                    // InternalCheckerDsl.g:1711:5: (lv_var_10_0= ruleChkVariable )
                    {
                    // InternalCheckerDsl.g:1711:5: (lv_var_10_0= ruleChkVariable )
                    // InternalCheckerDsl.g:1712:6: lv_var_10_0= ruleChkVariable
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getHelperAccess().getVarChkVariableParserRuleCall_2_2_0());
                      					
                    }
                    pushFollow(FOLLOW_15);
                    lv_var_10_0=ruleChkVariable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getHelperRule());
                      						}
                      						set(
                      							current,
                      							"var",
                      							lv_var_10_0,
                      							"org.xtext.example.checkerdsl.CheckerDsl.ChkVariable");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_11=(Token)match(input,21,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getHelperAccess().getRightParenthesisKeyword_2_3());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalCheckerDsl.g:1735:3: ( ( (lv_prime_12_0= 'prime' ) ) otherlv_13= '(' ( (lv_var3_14_0= ruleChkVariables ) ) otherlv_15= ')' )
                    {
                    // InternalCheckerDsl.g:1735:3: ( ( (lv_prime_12_0= 'prime' ) ) otherlv_13= '(' ( (lv_var3_14_0= ruleChkVariables ) ) otherlv_15= ')' )
                    // InternalCheckerDsl.g:1736:4: ( (lv_prime_12_0= 'prime' ) ) otherlv_13= '(' ( (lv_var3_14_0= ruleChkVariables ) ) otherlv_15= ')'
                    {
                    // InternalCheckerDsl.g:1736:4: ( (lv_prime_12_0= 'prime' ) )
                    // InternalCheckerDsl.g:1737:5: (lv_prime_12_0= 'prime' )
                    {
                    // InternalCheckerDsl.g:1737:5: (lv_prime_12_0= 'prime' )
                    // InternalCheckerDsl.g:1738:6: lv_prime_12_0= 'prime'
                    {
                    lv_prime_12_0=(Token)match(input,51,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_prime_12_0, grammarAccess.getHelperAccess().getPrimePrimeKeyword_3_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getHelperRule());
                      						}
                      						setWithLastConsumed(current, "prime", lv_prime_12_0, "prime");
                      					
                    }

                    }


                    }

                    otherlv_13=(Token)match(input,19,FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getHelperAccess().getLeftParenthesisKeyword_3_1());
                      			
                    }
                    // InternalCheckerDsl.g:1754:4: ( (lv_var3_14_0= ruleChkVariables ) )
                    // InternalCheckerDsl.g:1755:5: (lv_var3_14_0= ruleChkVariables )
                    {
                    // InternalCheckerDsl.g:1755:5: (lv_var3_14_0= ruleChkVariables )
                    // InternalCheckerDsl.g:1756:6: lv_var3_14_0= ruleChkVariables
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getHelperAccess().getVar3ChkVariablesParserRuleCall_3_2_0());
                      					
                    }
                    pushFollow(FOLLOW_15);
                    lv_var3_14_0=ruleChkVariables();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getHelperRule());
                      						}
                      						set(
                      							current,
                      							"var3",
                      							lv_var3_14_0,
                      							"org.xtext.example.checkerdsl.CheckerDsl.ChkVariables");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_15=(Token)match(input,21,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_15, grammarAccess.getHelperAccess().getRightParenthesisKeyword_3_3());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalCheckerDsl.g:1779:3: ( ( (lv_swap_16_0= 'swap' ) ) otherlv_17= '(' ( (lv_var_18_0= ruleChkVariable ) ) otherlv_19= ',' ( (lv_var1_20_0= ruleValidID ) ) otherlv_21= ',' ( (lv_var2_22_0= ruleValidID ) ) otherlv_23= ')' )
                    {
                    // InternalCheckerDsl.g:1779:3: ( ( (lv_swap_16_0= 'swap' ) ) otherlv_17= '(' ( (lv_var_18_0= ruleChkVariable ) ) otherlv_19= ',' ( (lv_var1_20_0= ruleValidID ) ) otherlv_21= ',' ( (lv_var2_22_0= ruleValidID ) ) otherlv_23= ')' )
                    // InternalCheckerDsl.g:1780:4: ( (lv_swap_16_0= 'swap' ) ) otherlv_17= '(' ( (lv_var_18_0= ruleChkVariable ) ) otherlv_19= ',' ( (lv_var1_20_0= ruleValidID ) ) otherlv_21= ',' ( (lv_var2_22_0= ruleValidID ) ) otherlv_23= ')'
                    {
                    // InternalCheckerDsl.g:1780:4: ( (lv_swap_16_0= 'swap' ) )
                    // InternalCheckerDsl.g:1781:5: (lv_swap_16_0= 'swap' )
                    {
                    // InternalCheckerDsl.g:1781:5: (lv_swap_16_0= 'swap' )
                    // InternalCheckerDsl.g:1782:6: lv_swap_16_0= 'swap'
                    {
                    lv_swap_16_0=(Token)match(input,52,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_swap_16_0, grammarAccess.getHelperAccess().getSwapSwapKeyword_4_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getHelperRule());
                      						}
                      						setWithLastConsumed(current, "swap", lv_swap_16_0, "swap");
                      					
                    }

                    }


                    }

                    otherlv_17=(Token)match(input,19,FOLLOW_33); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_17, grammarAccess.getHelperAccess().getLeftParenthesisKeyword_4_1());
                      			
                    }
                    // InternalCheckerDsl.g:1798:4: ( (lv_var_18_0= ruleChkVariable ) )
                    // InternalCheckerDsl.g:1799:5: (lv_var_18_0= ruleChkVariable )
                    {
                    // InternalCheckerDsl.g:1799:5: (lv_var_18_0= ruleChkVariable )
                    // InternalCheckerDsl.g:1800:6: lv_var_18_0= ruleChkVariable
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getHelperAccess().getVarChkVariableParserRuleCall_4_2_0());
                      					
                    }
                    pushFollow(FOLLOW_36);
                    lv_var_18_0=ruleChkVariable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getHelperRule());
                      						}
                      						set(
                      							current,
                      							"var",
                      							lv_var_18_0,
                      							"org.xtext.example.checkerdsl.CheckerDsl.ChkVariable");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_19=(Token)match(input,20,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_19, grammarAccess.getHelperAccess().getCommaKeyword_4_3());
                      			
                    }
                    // InternalCheckerDsl.g:1821:4: ( (lv_var1_20_0= ruleValidID ) )
                    // InternalCheckerDsl.g:1822:5: (lv_var1_20_0= ruleValidID )
                    {
                    // InternalCheckerDsl.g:1822:5: (lv_var1_20_0= ruleValidID )
                    // InternalCheckerDsl.g:1823:6: lv_var1_20_0= ruleValidID
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getHelperAccess().getVar1ValidIDParserRuleCall_4_4_0());
                      					
                    }
                    pushFollow(FOLLOW_36);
                    lv_var1_20_0=ruleValidID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getHelperRule());
                      						}
                      						set(
                      							current,
                      							"var1",
                      							lv_var1_20_0,
                      							"org.eclipse.xtext.xbase.Xtype.ValidID");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_21=(Token)match(input,20,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_21, grammarAccess.getHelperAccess().getCommaKeyword_4_5());
                      			
                    }
                    // InternalCheckerDsl.g:1844:4: ( (lv_var2_22_0= ruleValidID ) )
                    // InternalCheckerDsl.g:1845:5: (lv_var2_22_0= ruleValidID )
                    {
                    // InternalCheckerDsl.g:1845:5: (lv_var2_22_0= ruleValidID )
                    // InternalCheckerDsl.g:1846:6: lv_var2_22_0= ruleValidID
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getHelperAccess().getVar2ValidIDParserRuleCall_4_6_0());
                      					
                    }
                    pushFollow(FOLLOW_15);
                    lv_var2_22_0=ruleValidID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getHelperRule());
                      						}
                      						set(
                      							current,
                      							"var2",
                      							lv_var2_22_0,
                      							"org.eclipse.xtext.xbase.Xtype.ValidID");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_23=(Token)match(input,21,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_23, grammarAccess.getHelperAccess().getRightParenthesisKeyword_4_7());
                      			
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalCheckerDsl.g:1869:3: ( ( (lv_select_24_0= 'select' ) ) otherlv_25= '(' ( (lv_vars_26_0= ruleValidID ) ) (otherlv_27= ',' ( (lv_vars_28_0= ruleValidID ) ) )* otherlv_29= ':' ( ( (lv_var3_30_0= ruleChkVariables ) ) otherlv_31= '..' ( (lv_var4_32_0= ruleChkVariables ) ) ) otherlv_33= ')' )
                    {
                    // InternalCheckerDsl.g:1869:3: ( ( (lv_select_24_0= 'select' ) ) otherlv_25= '(' ( (lv_vars_26_0= ruleValidID ) ) (otherlv_27= ',' ( (lv_vars_28_0= ruleValidID ) ) )* otherlv_29= ':' ( ( (lv_var3_30_0= ruleChkVariables ) ) otherlv_31= '..' ( (lv_var4_32_0= ruleChkVariables ) ) ) otherlv_33= ')' )
                    // InternalCheckerDsl.g:1870:4: ( (lv_select_24_0= 'select' ) ) otherlv_25= '(' ( (lv_vars_26_0= ruleValidID ) ) (otherlv_27= ',' ( (lv_vars_28_0= ruleValidID ) ) )* otherlv_29= ':' ( ( (lv_var3_30_0= ruleChkVariables ) ) otherlv_31= '..' ( (lv_var4_32_0= ruleChkVariables ) ) ) otherlv_33= ')'
                    {
                    // InternalCheckerDsl.g:1870:4: ( (lv_select_24_0= 'select' ) )
                    // InternalCheckerDsl.g:1871:5: (lv_select_24_0= 'select' )
                    {
                    // InternalCheckerDsl.g:1871:5: (lv_select_24_0= 'select' )
                    // InternalCheckerDsl.g:1872:6: lv_select_24_0= 'select'
                    {
                    lv_select_24_0=(Token)match(input,53,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_select_24_0, grammarAccess.getHelperAccess().getSelectSelectKeyword_5_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getHelperRule());
                      						}
                      						setWithLastConsumed(current, "select", lv_select_24_0, "select");
                      					
                    }

                    }


                    }

                    otherlv_25=(Token)match(input,19,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_25, grammarAccess.getHelperAccess().getLeftParenthesisKeyword_5_1());
                      			
                    }
                    // InternalCheckerDsl.g:1888:4: ( (lv_vars_26_0= ruleValidID ) )
                    // InternalCheckerDsl.g:1889:5: (lv_vars_26_0= ruleValidID )
                    {
                    // InternalCheckerDsl.g:1889:5: (lv_vars_26_0= ruleValidID )
                    // InternalCheckerDsl.g:1890:6: lv_vars_26_0= ruleValidID
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getHelperAccess().getVarsValidIDParserRuleCall_5_2_0());
                      					
                    }
                    pushFollow(FOLLOW_37);
                    lv_vars_26_0=ruleValidID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getHelperRule());
                      						}
                      						add(
                      							current,
                      							"vars",
                      							lv_vars_26_0,
                      							"org.eclipse.xtext.xbase.Xtype.ValidID");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalCheckerDsl.g:1907:4: (otherlv_27= ',' ( (lv_vars_28_0= ruleValidID ) ) )*
                    loop30:
                    do {
                        int alt30=2;
                        int LA30_0 = input.LA(1);

                        if ( (LA30_0==20) ) {
                            alt30=1;
                        }


                        switch (alt30) {
                    	case 1 :
                    	    // InternalCheckerDsl.g:1908:5: otherlv_27= ',' ( (lv_vars_28_0= ruleValidID ) )
                    	    {
                    	    otherlv_27=(Token)match(input,20,FOLLOW_4); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_27, grammarAccess.getHelperAccess().getCommaKeyword_5_3_0());
                    	      				
                    	    }
                    	    // InternalCheckerDsl.g:1912:5: ( (lv_vars_28_0= ruleValidID ) )
                    	    // InternalCheckerDsl.g:1913:6: (lv_vars_28_0= ruleValidID )
                    	    {
                    	    // InternalCheckerDsl.g:1913:6: (lv_vars_28_0= ruleValidID )
                    	    // InternalCheckerDsl.g:1914:7: lv_vars_28_0= ruleValidID
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getHelperAccess().getVarsValidIDParserRuleCall_5_3_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_37);
                    	    lv_vars_28_0=ruleValidID();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getHelperRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"vars",
                    	      								lv_vars_28_0,
                    	      								"org.eclipse.xtext.xbase.Xtype.ValidID");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop30;
                        }
                    } while (true);

                    otherlv_29=(Token)match(input,22,FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_29, grammarAccess.getHelperAccess().getColonKeyword_5_4());
                      			
                    }
                    // InternalCheckerDsl.g:1936:4: ( ( (lv_var3_30_0= ruleChkVariables ) ) otherlv_31= '..' ( (lv_var4_32_0= ruleChkVariables ) ) )
                    // InternalCheckerDsl.g:1937:5: ( (lv_var3_30_0= ruleChkVariables ) ) otherlv_31= '..' ( (lv_var4_32_0= ruleChkVariables ) )
                    {
                    // InternalCheckerDsl.g:1937:5: ( (lv_var3_30_0= ruleChkVariables ) )
                    // InternalCheckerDsl.g:1938:6: (lv_var3_30_0= ruleChkVariables )
                    {
                    // InternalCheckerDsl.g:1938:6: (lv_var3_30_0= ruleChkVariables )
                    // InternalCheckerDsl.g:1939:7: lv_var3_30_0= ruleChkVariables
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getHelperAccess().getVar3ChkVariablesParserRuleCall_5_5_0_0());
                      						
                    }
                    pushFollow(FOLLOW_38);
                    lv_var3_30_0=ruleChkVariables();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getHelperRule());
                      							}
                      							set(
                      								current,
                      								"var3",
                      								lv_var3_30_0,
                      								"org.xtext.example.checkerdsl.CheckerDsl.ChkVariables");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_31=(Token)match(input,54,FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_31, grammarAccess.getHelperAccess().getFullStopFullStopKeyword_5_5_1());
                      				
                    }
                    // InternalCheckerDsl.g:1960:5: ( (lv_var4_32_0= ruleChkVariables ) )
                    // InternalCheckerDsl.g:1961:6: (lv_var4_32_0= ruleChkVariables )
                    {
                    // InternalCheckerDsl.g:1961:6: (lv_var4_32_0= ruleChkVariables )
                    // InternalCheckerDsl.g:1962:7: lv_var4_32_0= ruleChkVariables
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getHelperAccess().getVar4ChkVariablesParserRuleCall_5_5_2_0());
                      						
                    }
                    pushFollow(FOLLOW_15);
                    lv_var4_32_0=ruleChkVariables();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getHelperRule());
                      							}
                      							set(
                      								current,
                      								"var4",
                      								lv_var4_32_0,
                      								"org.xtext.example.checkerdsl.CheckerDsl.ChkVariables");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }

                    otherlv_33=(Token)match(input,21,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_33, grammarAccess.getHelperAccess().getRightParenthesisKeyword_5_6());
                      			
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalCheckerDsl.g:1986:3: ( ( (lv_add_34_0= 'add' ) ) otherlv_35= '(' ( (lv_var_36_0= ruleChkVariable ) ) otherlv_37= ',' ( (lv_var3_38_0= ruleChkVariables ) ) otherlv_39= ')' )
                    {
                    // InternalCheckerDsl.g:1986:3: ( ( (lv_add_34_0= 'add' ) ) otherlv_35= '(' ( (lv_var_36_0= ruleChkVariable ) ) otherlv_37= ',' ( (lv_var3_38_0= ruleChkVariables ) ) otherlv_39= ')' )
                    // InternalCheckerDsl.g:1987:4: ( (lv_add_34_0= 'add' ) ) otherlv_35= '(' ( (lv_var_36_0= ruleChkVariable ) ) otherlv_37= ',' ( (lv_var3_38_0= ruleChkVariables ) ) otherlv_39= ')'
                    {
                    // InternalCheckerDsl.g:1987:4: ( (lv_add_34_0= 'add' ) )
                    // InternalCheckerDsl.g:1988:5: (lv_add_34_0= 'add' )
                    {
                    // InternalCheckerDsl.g:1988:5: (lv_add_34_0= 'add' )
                    // InternalCheckerDsl.g:1989:6: lv_add_34_0= 'add'
                    {
                    lv_add_34_0=(Token)match(input,55,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_add_34_0, grammarAccess.getHelperAccess().getAddAddKeyword_6_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getHelperRule());
                      						}
                      						setWithLastConsumed(current, "add", lv_add_34_0, "add");
                      					
                    }

                    }


                    }

                    otherlv_35=(Token)match(input,19,FOLLOW_33); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_35, grammarAccess.getHelperAccess().getLeftParenthesisKeyword_6_1());
                      			
                    }
                    // InternalCheckerDsl.g:2005:4: ( (lv_var_36_0= ruleChkVariable ) )
                    // InternalCheckerDsl.g:2006:5: (lv_var_36_0= ruleChkVariable )
                    {
                    // InternalCheckerDsl.g:2006:5: (lv_var_36_0= ruleChkVariable )
                    // InternalCheckerDsl.g:2007:6: lv_var_36_0= ruleChkVariable
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getHelperAccess().getVarChkVariableParserRuleCall_6_2_0());
                      					
                    }
                    pushFollow(FOLLOW_36);
                    lv_var_36_0=ruleChkVariable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getHelperRule());
                      						}
                      						set(
                      							current,
                      							"var",
                      							lv_var_36_0,
                      							"org.xtext.example.checkerdsl.CheckerDsl.ChkVariable");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_37=(Token)match(input,20,FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_37, grammarAccess.getHelperAccess().getCommaKeyword_6_3());
                      			
                    }
                    // InternalCheckerDsl.g:2028:4: ( (lv_var3_38_0= ruleChkVariables ) )
                    // InternalCheckerDsl.g:2029:5: (lv_var3_38_0= ruleChkVariables )
                    {
                    // InternalCheckerDsl.g:2029:5: (lv_var3_38_0= ruleChkVariables )
                    // InternalCheckerDsl.g:2030:6: lv_var3_38_0= ruleChkVariables
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getHelperAccess().getVar3ChkVariablesParserRuleCall_6_4_0());
                      					
                    }
                    pushFollow(FOLLOW_15);
                    lv_var3_38_0=ruleChkVariables();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getHelperRule());
                      						}
                      						set(
                      							current,
                      							"var3",
                      							lv_var3_38_0,
                      							"org.xtext.example.checkerdsl.CheckerDsl.ChkVariables");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_39=(Token)match(input,21,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_39, grammarAccess.getHelperAccess().getRightParenthesisKeyword_6_5());
                      			
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalCheckerDsl.g:2053:3: ( ( (lv_remove_40_0= 'remove' ) ) otherlv_41= '(' ( (lv_var_42_0= ruleChkVariable ) ) (otherlv_43= ',' ( (lv_var3_44_0= ruleChkVariables ) ) )? otherlv_45= ')' )
                    {
                    // InternalCheckerDsl.g:2053:3: ( ( (lv_remove_40_0= 'remove' ) ) otherlv_41= '(' ( (lv_var_42_0= ruleChkVariable ) ) (otherlv_43= ',' ( (lv_var3_44_0= ruleChkVariables ) ) )? otherlv_45= ')' )
                    // InternalCheckerDsl.g:2054:4: ( (lv_remove_40_0= 'remove' ) ) otherlv_41= '(' ( (lv_var_42_0= ruleChkVariable ) ) (otherlv_43= ',' ( (lv_var3_44_0= ruleChkVariables ) ) )? otherlv_45= ')'
                    {
                    // InternalCheckerDsl.g:2054:4: ( (lv_remove_40_0= 'remove' ) )
                    // InternalCheckerDsl.g:2055:5: (lv_remove_40_0= 'remove' )
                    {
                    // InternalCheckerDsl.g:2055:5: (lv_remove_40_0= 'remove' )
                    // InternalCheckerDsl.g:2056:6: lv_remove_40_0= 'remove'
                    {
                    lv_remove_40_0=(Token)match(input,56,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_remove_40_0, grammarAccess.getHelperAccess().getRemoveRemoveKeyword_7_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getHelperRule());
                      						}
                      						setWithLastConsumed(current, "remove", lv_remove_40_0, "remove");
                      					
                    }

                    }


                    }

                    otherlv_41=(Token)match(input,19,FOLLOW_33); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_41, grammarAccess.getHelperAccess().getLeftParenthesisKeyword_7_1());
                      			
                    }
                    // InternalCheckerDsl.g:2072:4: ( (lv_var_42_0= ruleChkVariable ) )
                    // InternalCheckerDsl.g:2073:5: (lv_var_42_0= ruleChkVariable )
                    {
                    // InternalCheckerDsl.g:2073:5: (lv_var_42_0= ruleChkVariable )
                    // InternalCheckerDsl.g:2074:6: lv_var_42_0= ruleChkVariable
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getHelperAccess().getVarChkVariableParserRuleCall_7_2_0());
                      					
                    }
                    pushFollow(FOLLOW_12);
                    lv_var_42_0=ruleChkVariable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getHelperRule());
                      						}
                      						set(
                      							current,
                      							"var",
                      							lv_var_42_0,
                      							"org.xtext.example.checkerdsl.CheckerDsl.ChkVariable");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalCheckerDsl.g:2091:4: (otherlv_43= ',' ( (lv_var3_44_0= ruleChkVariables ) ) )?
                    int alt31=2;
                    int LA31_0 = input.LA(1);

                    if ( (LA31_0==20) ) {
                        alt31=1;
                    }
                    switch (alt31) {
                        case 1 :
                            // InternalCheckerDsl.g:2092:5: otherlv_43= ',' ( (lv_var3_44_0= ruleChkVariables ) )
                            {
                            otherlv_43=(Token)match(input,20,FOLLOW_35); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_43, grammarAccess.getHelperAccess().getCommaKeyword_7_3_0());
                              				
                            }
                            // InternalCheckerDsl.g:2096:5: ( (lv_var3_44_0= ruleChkVariables ) )
                            // InternalCheckerDsl.g:2097:6: (lv_var3_44_0= ruleChkVariables )
                            {
                            // InternalCheckerDsl.g:2097:6: (lv_var3_44_0= ruleChkVariables )
                            // InternalCheckerDsl.g:2098:7: lv_var3_44_0= ruleChkVariables
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getHelperAccess().getVar3ChkVariablesParserRuleCall_7_3_1_0());
                              						
                            }
                            pushFollow(FOLLOW_15);
                            lv_var3_44_0=ruleChkVariables();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getHelperRule());
                              							}
                              							set(
                              								current,
                              								"var3",
                              								lv_var3_44_0,
                              								"org.xtext.example.checkerdsl.CheckerDsl.ChkVariables");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    otherlv_45=(Token)match(input,21,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_45, grammarAccess.getHelperAccess().getRightParenthesisKeyword_7_4());
                      			
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalCheckerDsl.g:2122:3: ( ( (lv_random_46_0= 'random' ) ) otherlv_47= '(' ( ( (lv_var3_48_0= ruleChkVariables ) ) otherlv_49= '..' ( (lv_var4_50_0= ruleChkVariables ) ) )? otherlv_51= ')' )
                    {
                    // InternalCheckerDsl.g:2122:3: ( ( (lv_random_46_0= 'random' ) ) otherlv_47= '(' ( ( (lv_var3_48_0= ruleChkVariables ) ) otherlv_49= '..' ( (lv_var4_50_0= ruleChkVariables ) ) )? otherlv_51= ')' )
                    // InternalCheckerDsl.g:2123:4: ( (lv_random_46_0= 'random' ) ) otherlv_47= '(' ( ( (lv_var3_48_0= ruleChkVariables ) ) otherlv_49= '..' ( (lv_var4_50_0= ruleChkVariables ) ) )? otherlv_51= ')'
                    {
                    // InternalCheckerDsl.g:2123:4: ( (lv_random_46_0= 'random' ) )
                    // InternalCheckerDsl.g:2124:5: (lv_random_46_0= 'random' )
                    {
                    // InternalCheckerDsl.g:2124:5: (lv_random_46_0= 'random' )
                    // InternalCheckerDsl.g:2125:6: lv_random_46_0= 'random'
                    {
                    lv_random_46_0=(Token)match(input,57,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_random_46_0, grammarAccess.getHelperAccess().getRandomRandomKeyword_8_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getHelperRule());
                      						}
                      						setWithLastConsumed(current, "random", lv_random_46_0, "random");
                      					
                    }

                    }


                    }

                    otherlv_47=(Token)match(input,19,FOLLOW_39); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_47, grammarAccess.getHelperAccess().getLeftParenthesisKeyword_8_1());
                      			
                    }
                    // InternalCheckerDsl.g:2141:4: ( ( (lv_var3_48_0= ruleChkVariables ) ) otherlv_49= '..' ( (lv_var4_50_0= ruleChkVariables ) ) )?
                    int alt32=2;
                    int LA32_0 = input.LA(1);

                    if ( (LA32_0==RULE_INT||LA32_0==RULE_ID||(LA32_0>=41 && LA32_0<=43)||LA32_0==46||LA32_0==77) ) {
                        alt32=1;
                    }
                    switch (alt32) {
                        case 1 :
                            // InternalCheckerDsl.g:2142:5: ( (lv_var3_48_0= ruleChkVariables ) ) otherlv_49= '..' ( (lv_var4_50_0= ruleChkVariables ) )
                            {
                            // InternalCheckerDsl.g:2142:5: ( (lv_var3_48_0= ruleChkVariables ) )
                            // InternalCheckerDsl.g:2143:6: (lv_var3_48_0= ruleChkVariables )
                            {
                            // InternalCheckerDsl.g:2143:6: (lv_var3_48_0= ruleChkVariables )
                            // InternalCheckerDsl.g:2144:7: lv_var3_48_0= ruleChkVariables
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getHelperAccess().getVar3ChkVariablesParserRuleCall_8_2_0_0());
                              						
                            }
                            pushFollow(FOLLOW_38);
                            lv_var3_48_0=ruleChkVariables();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getHelperRule());
                              							}
                              							set(
                              								current,
                              								"var3",
                              								lv_var3_48_0,
                              								"org.xtext.example.checkerdsl.CheckerDsl.ChkVariables");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            otherlv_49=(Token)match(input,54,FOLLOW_35); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_49, grammarAccess.getHelperAccess().getFullStopFullStopKeyword_8_2_1());
                              				
                            }
                            // InternalCheckerDsl.g:2165:5: ( (lv_var4_50_0= ruleChkVariables ) )
                            // InternalCheckerDsl.g:2166:6: (lv_var4_50_0= ruleChkVariables )
                            {
                            // InternalCheckerDsl.g:2166:6: (lv_var4_50_0= ruleChkVariables )
                            // InternalCheckerDsl.g:2167:7: lv_var4_50_0= ruleChkVariables
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getHelperAccess().getVar4ChkVariablesParserRuleCall_8_2_2_0());
                              						
                            }
                            pushFollow(FOLLOW_15);
                            lv_var4_50_0=ruleChkVariables();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getHelperRule());
                              							}
                              							set(
                              								current,
                              								"var4",
                              								lv_var4_50_0,
                              								"org.xtext.example.checkerdsl.CheckerDsl.ChkVariables");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    otherlv_51=(Token)match(input,21,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_51, grammarAccess.getHelperAccess().getRightParenthesisKeyword_8_3());
                      			
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalCheckerDsl.g:2191:3: ( ( (lv_size_52_0= 'size' ) ) otherlv_53= '(' ( (lv_var_54_0= ruleChkVariable ) ) otherlv_55= ')' )
                    {
                    // InternalCheckerDsl.g:2191:3: ( ( (lv_size_52_0= 'size' ) ) otherlv_53= '(' ( (lv_var_54_0= ruleChkVariable ) ) otherlv_55= ')' )
                    // InternalCheckerDsl.g:2192:4: ( (lv_size_52_0= 'size' ) ) otherlv_53= '(' ( (lv_var_54_0= ruleChkVariable ) ) otherlv_55= ')'
                    {
                    // InternalCheckerDsl.g:2192:4: ( (lv_size_52_0= 'size' ) )
                    // InternalCheckerDsl.g:2193:5: (lv_size_52_0= 'size' )
                    {
                    // InternalCheckerDsl.g:2193:5: (lv_size_52_0= 'size' )
                    // InternalCheckerDsl.g:2194:6: lv_size_52_0= 'size'
                    {
                    lv_size_52_0=(Token)match(input,58,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_size_52_0, grammarAccess.getHelperAccess().getSizeSizeKeyword_9_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getHelperRule());
                      						}
                      						setWithLastConsumed(current, "size", lv_size_52_0, "size");
                      					
                    }

                    }


                    }

                    otherlv_53=(Token)match(input,19,FOLLOW_33); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_53, grammarAccess.getHelperAccess().getLeftParenthesisKeyword_9_1());
                      			
                    }
                    // InternalCheckerDsl.g:2210:4: ( (lv_var_54_0= ruleChkVariable ) )
                    // InternalCheckerDsl.g:2211:5: (lv_var_54_0= ruleChkVariable )
                    {
                    // InternalCheckerDsl.g:2211:5: (lv_var_54_0= ruleChkVariable )
                    // InternalCheckerDsl.g:2212:6: lv_var_54_0= ruleChkVariable
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getHelperAccess().getVarChkVariableParserRuleCall_9_2_0());
                      					
                    }
                    pushFollow(FOLLOW_15);
                    lv_var_54_0=ruleChkVariable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getHelperRule());
                      						}
                      						set(
                      							current,
                      							"var",
                      							lv_var_54_0,
                      							"org.xtext.example.checkerdsl.CheckerDsl.ChkVariable");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_55=(Token)match(input,21,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_55, grammarAccess.getHelperAccess().getRightParenthesisKeyword_9_3());
                      			
                    }

                    }


                    }
                    break;
                case 11 :
                    // InternalCheckerDsl.g:2235:3: ( ( (lv_reverse_56_0= 'reverse' ) ) otherlv_57= '(' ( (lv_var_58_0= ruleChkVariable ) ) otherlv_59= ')' )
                    {
                    // InternalCheckerDsl.g:2235:3: ( ( (lv_reverse_56_0= 'reverse' ) ) otherlv_57= '(' ( (lv_var_58_0= ruleChkVariable ) ) otherlv_59= ')' )
                    // InternalCheckerDsl.g:2236:4: ( (lv_reverse_56_0= 'reverse' ) ) otherlv_57= '(' ( (lv_var_58_0= ruleChkVariable ) ) otherlv_59= ')'
                    {
                    // InternalCheckerDsl.g:2236:4: ( (lv_reverse_56_0= 'reverse' ) )
                    // InternalCheckerDsl.g:2237:5: (lv_reverse_56_0= 'reverse' )
                    {
                    // InternalCheckerDsl.g:2237:5: (lv_reverse_56_0= 'reverse' )
                    // InternalCheckerDsl.g:2238:6: lv_reverse_56_0= 'reverse'
                    {
                    lv_reverse_56_0=(Token)match(input,59,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_reverse_56_0, grammarAccess.getHelperAccess().getReverseReverseKeyword_10_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getHelperRule());
                      						}
                      						setWithLastConsumed(current, "reverse", lv_reverse_56_0, "reverse");
                      					
                    }

                    }


                    }

                    otherlv_57=(Token)match(input,19,FOLLOW_33); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_57, grammarAccess.getHelperAccess().getLeftParenthesisKeyword_10_1());
                      			
                    }
                    // InternalCheckerDsl.g:2254:4: ( (lv_var_58_0= ruleChkVariable ) )
                    // InternalCheckerDsl.g:2255:5: (lv_var_58_0= ruleChkVariable )
                    {
                    // InternalCheckerDsl.g:2255:5: (lv_var_58_0= ruleChkVariable )
                    // InternalCheckerDsl.g:2256:6: lv_var_58_0= ruleChkVariable
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getHelperAccess().getVarChkVariableParserRuleCall_10_2_0());
                      					
                    }
                    pushFollow(FOLLOW_15);
                    lv_var_58_0=ruleChkVariable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getHelperRule());
                      						}
                      						set(
                      							current,
                      							"var",
                      							lv_var_58_0,
                      							"org.xtext.example.checkerdsl.CheckerDsl.ChkVariable");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_59=(Token)match(input,21,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_59, grammarAccess.getHelperAccess().getRightParenthesisKeyword_10_3());
                      			
                    }

                    }


                    }
                    break;
                case 12 :
                    // InternalCheckerDsl.g:2279:3: ( ( (lv_contains_60_0= 'contain' ) ) otherlv_61= '(' ( (lv_var_62_0= ruleChkVariable ) ) otherlv_63= ',' ( (lv_var3_64_0= ruleChkVariables ) ) otherlv_65= ')' )
                    {
                    // InternalCheckerDsl.g:2279:3: ( ( (lv_contains_60_0= 'contain' ) ) otherlv_61= '(' ( (lv_var_62_0= ruleChkVariable ) ) otherlv_63= ',' ( (lv_var3_64_0= ruleChkVariables ) ) otherlv_65= ')' )
                    // InternalCheckerDsl.g:2280:4: ( (lv_contains_60_0= 'contain' ) ) otherlv_61= '(' ( (lv_var_62_0= ruleChkVariable ) ) otherlv_63= ',' ( (lv_var3_64_0= ruleChkVariables ) ) otherlv_65= ')'
                    {
                    // InternalCheckerDsl.g:2280:4: ( (lv_contains_60_0= 'contain' ) )
                    // InternalCheckerDsl.g:2281:5: (lv_contains_60_0= 'contain' )
                    {
                    // InternalCheckerDsl.g:2281:5: (lv_contains_60_0= 'contain' )
                    // InternalCheckerDsl.g:2282:6: lv_contains_60_0= 'contain'
                    {
                    lv_contains_60_0=(Token)match(input,60,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_contains_60_0, grammarAccess.getHelperAccess().getContainsContainKeyword_11_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getHelperRule());
                      						}
                      						setWithLastConsumed(current, "contains", lv_contains_60_0, "contain");
                      					
                    }

                    }


                    }

                    otherlv_61=(Token)match(input,19,FOLLOW_33); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_61, grammarAccess.getHelperAccess().getLeftParenthesisKeyword_11_1());
                      			
                    }
                    // InternalCheckerDsl.g:2298:4: ( (lv_var_62_0= ruleChkVariable ) )
                    // InternalCheckerDsl.g:2299:5: (lv_var_62_0= ruleChkVariable )
                    {
                    // InternalCheckerDsl.g:2299:5: (lv_var_62_0= ruleChkVariable )
                    // InternalCheckerDsl.g:2300:6: lv_var_62_0= ruleChkVariable
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getHelperAccess().getVarChkVariableParserRuleCall_11_2_0());
                      					
                    }
                    pushFollow(FOLLOW_36);
                    lv_var_62_0=ruleChkVariable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getHelperRule());
                      						}
                      						set(
                      							current,
                      							"var",
                      							lv_var_62_0,
                      							"org.xtext.example.checkerdsl.CheckerDsl.ChkVariable");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_63=(Token)match(input,20,FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_63, grammarAccess.getHelperAccess().getCommaKeyword_11_3());
                      			
                    }
                    // InternalCheckerDsl.g:2321:4: ( (lv_var3_64_0= ruleChkVariables ) )
                    // InternalCheckerDsl.g:2322:5: (lv_var3_64_0= ruleChkVariables )
                    {
                    // InternalCheckerDsl.g:2322:5: (lv_var3_64_0= ruleChkVariables )
                    // InternalCheckerDsl.g:2323:6: lv_var3_64_0= ruleChkVariables
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getHelperAccess().getVar3ChkVariablesParserRuleCall_11_4_0());
                      					
                    }
                    pushFollow(FOLLOW_15);
                    lv_var3_64_0=ruleChkVariables();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getHelperRule());
                      						}
                      						set(
                      							current,
                      							"var3",
                      							lv_var3_64_0,
                      							"org.xtext.example.checkerdsl.CheckerDsl.ChkVariables");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_65=(Token)match(input,21,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_65, grammarAccess.getHelperAccess().getRightParenthesisKeyword_11_5());
                      			
                    }

                    }


                    }
                    break;
                case 13 :
                    // InternalCheckerDsl.g:2346:3: ( ( (lv_addRow_66_0= 'addRow' ) ) otherlv_67= '(' ( (lv_var_68_0= ruleChkVariable ) ) otherlv_69= ')' )
                    {
                    // InternalCheckerDsl.g:2346:3: ( ( (lv_addRow_66_0= 'addRow' ) ) otherlv_67= '(' ( (lv_var_68_0= ruleChkVariable ) ) otherlv_69= ')' )
                    // InternalCheckerDsl.g:2347:4: ( (lv_addRow_66_0= 'addRow' ) ) otherlv_67= '(' ( (lv_var_68_0= ruleChkVariable ) ) otherlv_69= ')'
                    {
                    // InternalCheckerDsl.g:2347:4: ( (lv_addRow_66_0= 'addRow' ) )
                    // InternalCheckerDsl.g:2348:5: (lv_addRow_66_0= 'addRow' )
                    {
                    // InternalCheckerDsl.g:2348:5: (lv_addRow_66_0= 'addRow' )
                    // InternalCheckerDsl.g:2349:6: lv_addRow_66_0= 'addRow'
                    {
                    lv_addRow_66_0=(Token)match(input,61,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_addRow_66_0, grammarAccess.getHelperAccess().getAddRowAddRowKeyword_12_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getHelperRule());
                      						}
                      						setWithLastConsumed(current, "addRow", lv_addRow_66_0, "addRow");
                      					
                    }

                    }


                    }

                    otherlv_67=(Token)match(input,19,FOLLOW_33); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_67, grammarAccess.getHelperAccess().getLeftParenthesisKeyword_12_1());
                      			
                    }
                    // InternalCheckerDsl.g:2365:4: ( (lv_var_68_0= ruleChkVariable ) )
                    // InternalCheckerDsl.g:2366:5: (lv_var_68_0= ruleChkVariable )
                    {
                    // InternalCheckerDsl.g:2366:5: (lv_var_68_0= ruleChkVariable )
                    // InternalCheckerDsl.g:2367:6: lv_var_68_0= ruleChkVariable
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getHelperAccess().getVarChkVariableParserRuleCall_12_2_0());
                      					
                    }
                    pushFollow(FOLLOW_15);
                    lv_var_68_0=ruleChkVariable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getHelperRule());
                      						}
                      						set(
                      							current,
                      							"var",
                      							lv_var_68_0,
                      							"org.xtext.example.checkerdsl.CheckerDsl.ChkVariable");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_69=(Token)match(input,21,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_69, grammarAccess.getHelperAccess().getRightParenthesisKeyword_12_3());
                      			
                    }

                    }


                    }
                    break;
                case 14 :
                    // InternalCheckerDsl.g:2390:3: ( ( (lv_addCol_70_0= 'addColumn' ) ) otherlv_71= '(' ( (lv_var_72_0= ruleChkVariable ) ) otherlv_73= ')' )
                    {
                    // InternalCheckerDsl.g:2390:3: ( ( (lv_addCol_70_0= 'addColumn' ) ) otherlv_71= '(' ( (lv_var_72_0= ruleChkVariable ) ) otherlv_73= ')' )
                    // InternalCheckerDsl.g:2391:4: ( (lv_addCol_70_0= 'addColumn' ) ) otherlv_71= '(' ( (lv_var_72_0= ruleChkVariable ) ) otherlv_73= ')'
                    {
                    // InternalCheckerDsl.g:2391:4: ( (lv_addCol_70_0= 'addColumn' ) )
                    // InternalCheckerDsl.g:2392:5: (lv_addCol_70_0= 'addColumn' )
                    {
                    // InternalCheckerDsl.g:2392:5: (lv_addCol_70_0= 'addColumn' )
                    // InternalCheckerDsl.g:2393:6: lv_addCol_70_0= 'addColumn'
                    {
                    lv_addCol_70_0=(Token)match(input,62,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_addCol_70_0, grammarAccess.getHelperAccess().getAddColAddColumnKeyword_13_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getHelperRule());
                      						}
                      						setWithLastConsumed(current, "addCol", lv_addCol_70_0, "addColumn");
                      					
                    }

                    }


                    }

                    otherlv_71=(Token)match(input,19,FOLLOW_33); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_71, grammarAccess.getHelperAccess().getLeftParenthesisKeyword_13_1());
                      			
                    }
                    // InternalCheckerDsl.g:2409:4: ( (lv_var_72_0= ruleChkVariable ) )
                    // InternalCheckerDsl.g:2410:5: (lv_var_72_0= ruleChkVariable )
                    {
                    // InternalCheckerDsl.g:2410:5: (lv_var_72_0= ruleChkVariable )
                    // InternalCheckerDsl.g:2411:6: lv_var_72_0= ruleChkVariable
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getHelperAccess().getVarChkVariableParserRuleCall_13_2_0());
                      					
                    }
                    pushFollow(FOLLOW_15);
                    lv_var_72_0=ruleChkVariable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getHelperRule());
                      						}
                      						set(
                      							current,
                      							"var",
                      							lv_var_72_0,
                      							"org.xtext.example.checkerdsl.CheckerDsl.ChkVariable");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_73=(Token)match(input,21,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_73, grammarAccess.getHelperAccess().getRightParenthesisKeyword_13_3());
                      			
                    }

                    }


                    }
                    break;
                case 15 :
                    // InternalCheckerDsl.g:2434:3: ( ( (lv_swapRow_74_0= 'swapRow' ) ) otherlv_75= '(' ( (lv_var_76_0= ruleChkVariable ) ) otherlv_77= ',' ( (lv_var1_78_0= ruleValidID ) ) otherlv_79= ',' ( (lv_var2_80_0= ruleValidID ) ) otherlv_81= ')' )
                    {
                    // InternalCheckerDsl.g:2434:3: ( ( (lv_swapRow_74_0= 'swapRow' ) ) otherlv_75= '(' ( (lv_var_76_0= ruleChkVariable ) ) otherlv_77= ',' ( (lv_var1_78_0= ruleValidID ) ) otherlv_79= ',' ( (lv_var2_80_0= ruleValidID ) ) otherlv_81= ')' )
                    // InternalCheckerDsl.g:2435:4: ( (lv_swapRow_74_0= 'swapRow' ) ) otherlv_75= '(' ( (lv_var_76_0= ruleChkVariable ) ) otherlv_77= ',' ( (lv_var1_78_0= ruleValidID ) ) otherlv_79= ',' ( (lv_var2_80_0= ruleValidID ) ) otherlv_81= ')'
                    {
                    // InternalCheckerDsl.g:2435:4: ( (lv_swapRow_74_0= 'swapRow' ) )
                    // InternalCheckerDsl.g:2436:5: (lv_swapRow_74_0= 'swapRow' )
                    {
                    // InternalCheckerDsl.g:2436:5: (lv_swapRow_74_0= 'swapRow' )
                    // InternalCheckerDsl.g:2437:6: lv_swapRow_74_0= 'swapRow'
                    {
                    lv_swapRow_74_0=(Token)match(input,63,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_swapRow_74_0, grammarAccess.getHelperAccess().getSwapRowSwapRowKeyword_14_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getHelperRule());
                      						}
                      						setWithLastConsumed(current, "swapRow", lv_swapRow_74_0, "swapRow");
                      					
                    }

                    }


                    }

                    otherlv_75=(Token)match(input,19,FOLLOW_33); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_75, grammarAccess.getHelperAccess().getLeftParenthesisKeyword_14_1());
                      			
                    }
                    // InternalCheckerDsl.g:2453:4: ( (lv_var_76_0= ruleChkVariable ) )
                    // InternalCheckerDsl.g:2454:5: (lv_var_76_0= ruleChkVariable )
                    {
                    // InternalCheckerDsl.g:2454:5: (lv_var_76_0= ruleChkVariable )
                    // InternalCheckerDsl.g:2455:6: lv_var_76_0= ruleChkVariable
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getHelperAccess().getVarChkVariableParserRuleCall_14_2_0());
                      					
                    }
                    pushFollow(FOLLOW_36);
                    lv_var_76_0=ruleChkVariable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getHelperRule());
                      						}
                      						set(
                      							current,
                      							"var",
                      							lv_var_76_0,
                      							"org.xtext.example.checkerdsl.CheckerDsl.ChkVariable");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_77=(Token)match(input,20,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_77, grammarAccess.getHelperAccess().getCommaKeyword_14_3());
                      			
                    }
                    // InternalCheckerDsl.g:2476:4: ( (lv_var1_78_0= ruleValidID ) )
                    // InternalCheckerDsl.g:2477:5: (lv_var1_78_0= ruleValidID )
                    {
                    // InternalCheckerDsl.g:2477:5: (lv_var1_78_0= ruleValidID )
                    // InternalCheckerDsl.g:2478:6: lv_var1_78_0= ruleValidID
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getHelperAccess().getVar1ValidIDParserRuleCall_14_4_0());
                      					
                    }
                    pushFollow(FOLLOW_36);
                    lv_var1_78_0=ruleValidID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getHelperRule());
                      						}
                      						set(
                      							current,
                      							"var1",
                      							lv_var1_78_0,
                      							"org.eclipse.xtext.xbase.Xtype.ValidID");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_79=(Token)match(input,20,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_79, grammarAccess.getHelperAccess().getCommaKeyword_14_5());
                      			
                    }
                    // InternalCheckerDsl.g:2499:4: ( (lv_var2_80_0= ruleValidID ) )
                    // InternalCheckerDsl.g:2500:5: (lv_var2_80_0= ruleValidID )
                    {
                    // InternalCheckerDsl.g:2500:5: (lv_var2_80_0= ruleValidID )
                    // InternalCheckerDsl.g:2501:6: lv_var2_80_0= ruleValidID
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getHelperAccess().getVar2ValidIDParserRuleCall_14_6_0());
                      					
                    }
                    pushFollow(FOLLOW_15);
                    lv_var2_80_0=ruleValidID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getHelperRule());
                      						}
                      						set(
                      							current,
                      							"var2",
                      							lv_var2_80_0,
                      							"org.eclipse.xtext.xbase.Xtype.ValidID");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_81=(Token)match(input,21,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_81, grammarAccess.getHelperAccess().getRightParenthesisKeyword_14_7());
                      			
                    }

                    }


                    }
                    break;
                case 16 :
                    // InternalCheckerDsl.g:2524:3: ( ( (lv_swapCol_82_0= 'swapColumn' ) ) otherlv_83= '(' ( (lv_var_84_0= ruleChkVariable ) ) otherlv_85= ',' ( (lv_var1_86_0= ruleValidID ) ) otherlv_87= ',' ( (lv_var2_88_0= ruleValidID ) ) otherlv_89= ')' )
                    {
                    // InternalCheckerDsl.g:2524:3: ( ( (lv_swapCol_82_0= 'swapColumn' ) ) otherlv_83= '(' ( (lv_var_84_0= ruleChkVariable ) ) otherlv_85= ',' ( (lv_var1_86_0= ruleValidID ) ) otherlv_87= ',' ( (lv_var2_88_0= ruleValidID ) ) otherlv_89= ')' )
                    // InternalCheckerDsl.g:2525:4: ( (lv_swapCol_82_0= 'swapColumn' ) ) otherlv_83= '(' ( (lv_var_84_0= ruleChkVariable ) ) otherlv_85= ',' ( (lv_var1_86_0= ruleValidID ) ) otherlv_87= ',' ( (lv_var2_88_0= ruleValidID ) ) otherlv_89= ')'
                    {
                    // InternalCheckerDsl.g:2525:4: ( (lv_swapCol_82_0= 'swapColumn' ) )
                    // InternalCheckerDsl.g:2526:5: (lv_swapCol_82_0= 'swapColumn' )
                    {
                    // InternalCheckerDsl.g:2526:5: (lv_swapCol_82_0= 'swapColumn' )
                    // InternalCheckerDsl.g:2527:6: lv_swapCol_82_0= 'swapColumn'
                    {
                    lv_swapCol_82_0=(Token)match(input,64,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_swapCol_82_0, grammarAccess.getHelperAccess().getSwapColSwapColumnKeyword_15_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getHelperRule());
                      						}
                      						setWithLastConsumed(current, "swapCol", lv_swapCol_82_0, "swapColumn");
                      					
                    }

                    }


                    }

                    otherlv_83=(Token)match(input,19,FOLLOW_33); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_83, grammarAccess.getHelperAccess().getLeftParenthesisKeyword_15_1());
                      			
                    }
                    // InternalCheckerDsl.g:2543:4: ( (lv_var_84_0= ruleChkVariable ) )
                    // InternalCheckerDsl.g:2544:5: (lv_var_84_0= ruleChkVariable )
                    {
                    // InternalCheckerDsl.g:2544:5: (lv_var_84_0= ruleChkVariable )
                    // InternalCheckerDsl.g:2545:6: lv_var_84_0= ruleChkVariable
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getHelperAccess().getVarChkVariableParserRuleCall_15_2_0());
                      					
                    }
                    pushFollow(FOLLOW_36);
                    lv_var_84_0=ruleChkVariable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getHelperRule());
                      						}
                      						set(
                      							current,
                      							"var",
                      							lv_var_84_0,
                      							"org.xtext.example.checkerdsl.CheckerDsl.ChkVariable");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_85=(Token)match(input,20,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_85, grammarAccess.getHelperAccess().getCommaKeyword_15_3());
                      			
                    }
                    // InternalCheckerDsl.g:2566:4: ( (lv_var1_86_0= ruleValidID ) )
                    // InternalCheckerDsl.g:2567:5: (lv_var1_86_0= ruleValidID )
                    {
                    // InternalCheckerDsl.g:2567:5: (lv_var1_86_0= ruleValidID )
                    // InternalCheckerDsl.g:2568:6: lv_var1_86_0= ruleValidID
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getHelperAccess().getVar1ValidIDParserRuleCall_15_4_0());
                      					
                    }
                    pushFollow(FOLLOW_36);
                    lv_var1_86_0=ruleValidID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getHelperRule());
                      						}
                      						set(
                      							current,
                      							"var1",
                      							lv_var1_86_0,
                      							"org.eclipse.xtext.xbase.Xtype.ValidID");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_87=(Token)match(input,20,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_87, grammarAccess.getHelperAccess().getCommaKeyword_15_5());
                      			
                    }
                    // InternalCheckerDsl.g:2589:4: ( (lv_var2_88_0= ruleValidID ) )
                    // InternalCheckerDsl.g:2590:5: (lv_var2_88_0= ruleValidID )
                    {
                    // InternalCheckerDsl.g:2590:5: (lv_var2_88_0= ruleValidID )
                    // InternalCheckerDsl.g:2591:6: lv_var2_88_0= ruleValidID
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getHelperAccess().getVar2ValidIDParserRuleCall_15_6_0());
                      					
                    }
                    pushFollow(FOLLOW_15);
                    lv_var2_88_0=ruleValidID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getHelperRule());
                      						}
                      						set(
                      							current,
                      							"var2",
                      							lv_var2_88_0,
                      							"org.eclipse.xtext.xbase.Xtype.ValidID");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_89=(Token)match(input,21,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_89, grammarAccess.getHelperAccess().getRightParenthesisKeyword_15_7());
                      			
                    }

                    }


                    }
                    break;
                case 17 :
                    // InternalCheckerDsl.g:2614:3: ( ( (lv_removeRow_90_0= 'removeRow' ) ) otherlv_91= '(' ( (lv_var_92_0= ruleChkVariable ) ) otherlv_93= ',' ( (lv_var3_94_0= ruleChkVariables ) ) otherlv_95= ')' )
                    {
                    // InternalCheckerDsl.g:2614:3: ( ( (lv_removeRow_90_0= 'removeRow' ) ) otherlv_91= '(' ( (lv_var_92_0= ruleChkVariable ) ) otherlv_93= ',' ( (lv_var3_94_0= ruleChkVariables ) ) otherlv_95= ')' )
                    // InternalCheckerDsl.g:2615:4: ( (lv_removeRow_90_0= 'removeRow' ) ) otherlv_91= '(' ( (lv_var_92_0= ruleChkVariable ) ) otherlv_93= ',' ( (lv_var3_94_0= ruleChkVariables ) ) otherlv_95= ')'
                    {
                    // InternalCheckerDsl.g:2615:4: ( (lv_removeRow_90_0= 'removeRow' ) )
                    // InternalCheckerDsl.g:2616:5: (lv_removeRow_90_0= 'removeRow' )
                    {
                    // InternalCheckerDsl.g:2616:5: (lv_removeRow_90_0= 'removeRow' )
                    // InternalCheckerDsl.g:2617:6: lv_removeRow_90_0= 'removeRow'
                    {
                    lv_removeRow_90_0=(Token)match(input,65,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_removeRow_90_0, grammarAccess.getHelperAccess().getRemoveRowRemoveRowKeyword_16_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getHelperRule());
                      						}
                      						setWithLastConsumed(current, "removeRow", lv_removeRow_90_0, "removeRow");
                      					
                    }

                    }


                    }

                    otherlv_91=(Token)match(input,19,FOLLOW_33); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_91, grammarAccess.getHelperAccess().getLeftParenthesisKeyword_16_1());
                      			
                    }
                    // InternalCheckerDsl.g:2633:4: ( (lv_var_92_0= ruleChkVariable ) )
                    // InternalCheckerDsl.g:2634:5: (lv_var_92_0= ruleChkVariable )
                    {
                    // InternalCheckerDsl.g:2634:5: (lv_var_92_0= ruleChkVariable )
                    // InternalCheckerDsl.g:2635:6: lv_var_92_0= ruleChkVariable
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getHelperAccess().getVarChkVariableParserRuleCall_16_2_0());
                      					
                    }
                    pushFollow(FOLLOW_36);
                    lv_var_92_0=ruleChkVariable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getHelperRule());
                      						}
                      						set(
                      							current,
                      							"var",
                      							lv_var_92_0,
                      							"org.xtext.example.checkerdsl.CheckerDsl.ChkVariable");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_93=(Token)match(input,20,FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_93, grammarAccess.getHelperAccess().getCommaKeyword_16_3());
                      			
                    }
                    // InternalCheckerDsl.g:2656:4: ( (lv_var3_94_0= ruleChkVariables ) )
                    // InternalCheckerDsl.g:2657:5: (lv_var3_94_0= ruleChkVariables )
                    {
                    // InternalCheckerDsl.g:2657:5: (lv_var3_94_0= ruleChkVariables )
                    // InternalCheckerDsl.g:2658:6: lv_var3_94_0= ruleChkVariables
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getHelperAccess().getVar3ChkVariablesParserRuleCall_16_4_0());
                      					
                    }
                    pushFollow(FOLLOW_15);
                    lv_var3_94_0=ruleChkVariables();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getHelperRule());
                      						}
                      						set(
                      							current,
                      							"var3",
                      							lv_var3_94_0,
                      							"org.xtext.example.checkerdsl.CheckerDsl.ChkVariables");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_95=(Token)match(input,21,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_95, grammarAccess.getHelperAccess().getRightParenthesisKeyword_16_5());
                      			
                    }

                    }


                    }
                    break;
                case 18 :
                    // InternalCheckerDsl.g:2681:3: ( ( (lv_removeCol_96_0= 'removeColumn' ) ) otherlv_97= '(' ( (lv_var_98_0= ruleChkVariable ) ) otherlv_99= ',' ( (lv_var3_100_0= ruleChkVariables ) ) otherlv_101= ')' )
                    {
                    // InternalCheckerDsl.g:2681:3: ( ( (lv_removeCol_96_0= 'removeColumn' ) ) otherlv_97= '(' ( (lv_var_98_0= ruleChkVariable ) ) otherlv_99= ',' ( (lv_var3_100_0= ruleChkVariables ) ) otherlv_101= ')' )
                    // InternalCheckerDsl.g:2682:4: ( (lv_removeCol_96_0= 'removeColumn' ) ) otherlv_97= '(' ( (lv_var_98_0= ruleChkVariable ) ) otherlv_99= ',' ( (lv_var3_100_0= ruleChkVariables ) ) otherlv_101= ')'
                    {
                    // InternalCheckerDsl.g:2682:4: ( (lv_removeCol_96_0= 'removeColumn' ) )
                    // InternalCheckerDsl.g:2683:5: (lv_removeCol_96_0= 'removeColumn' )
                    {
                    // InternalCheckerDsl.g:2683:5: (lv_removeCol_96_0= 'removeColumn' )
                    // InternalCheckerDsl.g:2684:6: lv_removeCol_96_0= 'removeColumn'
                    {
                    lv_removeCol_96_0=(Token)match(input,66,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_removeCol_96_0, grammarAccess.getHelperAccess().getRemoveColRemoveColumnKeyword_17_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getHelperRule());
                      						}
                      						setWithLastConsumed(current, "removeCol", lv_removeCol_96_0, "removeColumn");
                      					
                    }

                    }


                    }

                    otherlv_97=(Token)match(input,19,FOLLOW_33); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_97, grammarAccess.getHelperAccess().getLeftParenthesisKeyword_17_1());
                      			
                    }
                    // InternalCheckerDsl.g:2700:4: ( (lv_var_98_0= ruleChkVariable ) )
                    // InternalCheckerDsl.g:2701:5: (lv_var_98_0= ruleChkVariable )
                    {
                    // InternalCheckerDsl.g:2701:5: (lv_var_98_0= ruleChkVariable )
                    // InternalCheckerDsl.g:2702:6: lv_var_98_0= ruleChkVariable
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getHelperAccess().getVarChkVariableParserRuleCall_17_2_0());
                      					
                    }
                    pushFollow(FOLLOW_36);
                    lv_var_98_0=ruleChkVariable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getHelperRule());
                      						}
                      						set(
                      							current,
                      							"var",
                      							lv_var_98_0,
                      							"org.xtext.example.checkerdsl.CheckerDsl.ChkVariable");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_99=(Token)match(input,20,FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_99, grammarAccess.getHelperAccess().getCommaKeyword_17_3());
                      			
                    }
                    // InternalCheckerDsl.g:2723:4: ( (lv_var3_100_0= ruleChkVariables ) )
                    // InternalCheckerDsl.g:2724:5: (lv_var3_100_0= ruleChkVariables )
                    {
                    // InternalCheckerDsl.g:2724:5: (lv_var3_100_0= ruleChkVariables )
                    // InternalCheckerDsl.g:2725:6: lv_var3_100_0= ruleChkVariables
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getHelperAccess().getVar3ChkVariablesParserRuleCall_17_4_0());
                      					
                    }
                    pushFollow(FOLLOW_15);
                    lv_var3_100_0=ruleChkVariables();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getHelperRule());
                      						}
                      						set(
                      							current,
                      							"var3",
                      							lv_var3_100_0,
                      							"org.xtext.example.checkerdsl.CheckerDsl.ChkVariables");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_101=(Token)match(input,21,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_101, grammarAccess.getHelperAccess().getRightParenthesisKeyword_17_5());
                      			
                    }

                    }


                    }
                    break;
                case 19 :
                    // InternalCheckerDsl.g:2748:3: ( ( (lv_permute_102_0= 'permute' ) ) otherlv_103= '(' ( (lv_var_104_0= ruleChkVariable ) ) otherlv_105= ')' )
                    {
                    // InternalCheckerDsl.g:2748:3: ( ( (lv_permute_102_0= 'permute' ) ) otherlv_103= '(' ( (lv_var_104_0= ruleChkVariable ) ) otherlv_105= ')' )
                    // InternalCheckerDsl.g:2749:4: ( (lv_permute_102_0= 'permute' ) ) otherlv_103= '(' ( (lv_var_104_0= ruleChkVariable ) ) otherlv_105= ')'
                    {
                    // InternalCheckerDsl.g:2749:4: ( (lv_permute_102_0= 'permute' ) )
                    // InternalCheckerDsl.g:2750:5: (lv_permute_102_0= 'permute' )
                    {
                    // InternalCheckerDsl.g:2750:5: (lv_permute_102_0= 'permute' )
                    // InternalCheckerDsl.g:2751:6: lv_permute_102_0= 'permute'
                    {
                    lv_permute_102_0=(Token)match(input,67,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_permute_102_0, grammarAccess.getHelperAccess().getPermutePermuteKeyword_18_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getHelperRule());
                      						}
                      						setWithLastConsumed(current, "permute", lv_permute_102_0, "permute");
                      					
                    }

                    }


                    }

                    otherlv_103=(Token)match(input,19,FOLLOW_33); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_103, grammarAccess.getHelperAccess().getLeftParenthesisKeyword_18_1());
                      			
                    }
                    // InternalCheckerDsl.g:2767:4: ( (lv_var_104_0= ruleChkVariable ) )
                    // InternalCheckerDsl.g:2768:5: (lv_var_104_0= ruleChkVariable )
                    {
                    // InternalCheckerDsl.g:2768:5: (lv_var_104_0= ruleChkVariable )
                    // InternalCheckerDsl.g:2769:6: lv_var_104_0= ruleChkVariable
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getHelperAccess().getVarChkVariableParserRuleCall_18_2_0());
                      					
                    }
                    pushFollow(FOLLOW_15);
                    lv_var_104_0=ruleChkVariable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getHelperRule());
                      						}
                      						set(
                      							current,
                      							"var",
                      							lv_var_104_0,
                      							"org.xtext.example.checkerdsl.CheckerDsl.ChkVariable");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_105=(Token)match(input,21,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_105, grammarAccess.getHelperAccess().getRightParenthesisKeyword_18_3());
                      			
                    }

                    }


                    }
                    break;
                case 20 :
                    // InternalCheckerDsl.g:2792:3: ( ( (lv_plus_106_0= 'plus' ) ) otherlv_107= '(' ( (lv_var_108_0= ruleChkVariable ) ) otherlv_109= ',' ( (lv_var3_110_0= ruleChkVariables ) ) otherlv_111= ')' )
                    {
                    // InternalCheckerDsl.g:2792:3: ( ( (lv_plus_106_0= 'plus' ) ) otherlv_107= '(' ( (lv_var_108_0= ruleChkVariable ) ) otherlv_109= ',' ( (lv_var3_110_0= ruleChkVariables ) ) otherlv_111= ')' )
                    // InternalCheckerDsl.g:2793:4: ( (lv_plus_106_0= 'plus' ) ) otherlv_107= '(' ( (lv_var_108_0= ruleChkVariable ) ) otherlv_109= ',' ( (lv_var3_110_0= ruleChkVariables ) ) otherlv_111= ')'
                    {
                    // InternalCheckerDsl.g:2793:4: ( (lv_plus_106_0= 'plus' ) )
                    // InternalCheckerDsl.g:2794:5: (lv_plus_106_0= 'plus' )
                    {
                    // InternalCheckerDsl.g:2794:5: (lv_plus_106_0= 'plus' )
                    // InternalCheckerDsl.g:2795:6: lv_plus_106_0= 'plus'
                    {
                    lv_plus_106_0=(Token)match(input,68,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_plus_106_0, grammarAccess.getHelperAccess().getPlusPlusKeyword_19_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getHelperRule());
                      						}
                      						setWithLastConsumed(current, "plus", lv_plus_106_0, "plus");
                      					
                    }

                    }


                    }

                    otherlv_107=(Token)match(input,19,FOLLOW_33); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_107, grammarAccess.getHelperAccess().getLeftParenthesisKeyword_19_1());
                      			
                    }
                    // InternalCheckerDsl.g:2811:4: ( (lv_var_108_0= ruleChkVariable ) )
                    // InternalCheckerDsl.g:2812:5: (lv_var_108_0= ruleChkVariable )
                    {
                    // InternalCheckerDsl.g:2812:5: (lv_var_108_0= ruleChkVariable )
                    // InternalCheckerDsl.g:2813:6: lv_var_108_0= ruleChkVariable
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getHelperAccess().getVarChkVariableParserRuleCall_19_2_0());
                      					
                    }
                    pushFollow(FOLLOW_36);
                    lv_var_108_0=ruleChkVariable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getHelperRule());
                      						}
                      						set(
                      							current,
                      							"var",
                      							lv_var_108_0,
                      							"org.xtext.example.checkerdsl.CheckerDsl.ChkVariable");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_109=(Token)match(input,20,FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_109, grammarAccess.getHelperAccess().getCommaKeyword_19_3());
                      			
                    }
                    // InternalCheckerDsl.g:2834:4: ( (lv_var3_110_0= ruleChkVariables ) )
                    // InternalCheckerDsl.g:2835:5: (lv_var3_110_0= ruleChkVariables )
                    {
                    // InternalCheckerDsl.g:2835:5: (lv_var3_110_0= ruleChkVariables )
                    // InternalCheckerDsl.g:2836:6: lv_var3_110_0= ruleChkVariables
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getHelperAccess().getVar3ChkVariablesParserRuleCall_19_4_0());
                      					
                    }
                    pushFollow(FOLLOW_15);
                    lv_var3_110_0=ruleChkVariables();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getHelperRule());
                      						}
                      						set(
                      							current,
                      							"var3",
                      							lv_var3_110_0,
                      							"org.xtext.example.checkerdsl.CheckerDsl.ChkVariables");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_111=(Token)match(input,21,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_111, grammarAccess.getHelperAccess().getRightParenthesisKeyword_19_5());
                      			
                    }

                    }


                    }
                    break;
                case 21 :
                    // InternalCheckerDsl.g:2859:3: ( ( (lv_multiply_112_0= 'multiply' ) ) otherlv_113= '(' ( (lv_var_114_0= ruleChkVariable ) ) otherlv_115= ',' ( (lv_var3_116_0= ruleChkVariables ) ) otherlv_117= ')' )
                    {
                    // InternalCheckerDsl.g:2859:3: ( ( (lv_multiply_112_0= 'multiply' ) ) otherlv_113= '(' ( (lv_var_114_0= ruleChkVariable ) ) otherlv_115= ',' ( (lv_var3_116_0= ruleChkVariables ) ) otherlv_117= ')' )
                    // InternalCheckerDsl.g:2860:4: ( (lv_multiply_112_0= 'multiply' ) ) otherlv_113= '(' ( (lv_var_114_0= ruleChkVariable ) ) otherlv_115= ',' ( (lv_var3_116_0= ruleChkVariables ) ) otherlv_117= ')'
                    {
                    // InternalCheckerDsl.g:2860:4: ( (lv_multiply_112_0= 'multiply' ) )
                    // InternalCheckerDsl.g:2861:5: (lv_multiply_112_0= 'multiply' )
                    {
                    // InternalCheckerDsl.g:2861:5: (lv_multiply_112_0= 'multiply' )
                    // InternalCheckerDsl.g:2862:6: lv_multiply_112_0= 'multiply'
                    {
                    lv_multiply_112_0=(Token)match(input,69,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_multiply_112_0, grammarAccess.getHelperAccess().getMultiplyMultiplyKeyword_20_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getHelperRule());
                      						}
                      						setWithLastConsumed(current, "multiply", lv_multiply_112_0, "multiply");
                      					
                    }

                    }


                    }

                    otherlv_113=(Token)match(input,19,FOLLOW_33); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_113, grammarAccess.getHelperAccess().getLeftParenthesisKeyword_20_1());
                      			
                    }
                    // InternalCheckerDsl.g:2878:4: ( (lv_var_114_0= ruleChkVariable ) )
                    // InternalCheckerDsl.g:2879:5: (lv_var_114_0= ruleChkVariable )
                    {
                    // InternalCheckerDsl.g:2879:5: (lv_var_114_0= ruleChkVariable )
                    // InternalCheckerDsl.g:2880:6: lv_var_114_0= ruleChkVariable
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getHelperAccess().getVarChkVariableParserRuleCall_20_2_0());
                      					
                    }
                    pushFollow(FOLLOW_36);
                    lv_var_114_0=ruleChkVariable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getHelperRule());
                      						}
                      						set(
                      							current,
                      							"var",
                      							lv_var_114_0,
                      							"org.xtext.example.checkerdsl.CheckerDsl.ChkVariable");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_115=(Token)match(input,20,FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_115, grammarAccess.getHelperAccess().getCommaKeyword_20_3());
                      			
                    }
                    // InternalCheckerDsl.g:2901:4: ( (lv_var3_116_0= ruleChkVariables ) )
                    // InternalCheckerDsl.g:2902:5: (lv_var3_116_0= ruleChkVariables )
                    {
                    // InternalCheckerDsl.g:2902:5: (lv_var3_116_0= ruleChkVariables )
                    // InternalCheckerDsl.g:2903:6: lv_var3_116_0= ruleChkVariables
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getHelperAccess().getVar3ChkVariablesParserRuleCall_20_4_0());
                      					
                    }
                    pushFollow(FOLLOW_15);
                    lv_var3_116_0=ruleChkVariables();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getHelperRule());
                      						}
                      						set(
                      							current,
                      							"var3",
                      							lv_var3_116_0,
                      							"org.xtext.example.checkerdsl.CheckerDsl.ChkVariables");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_117=(Token)match(input,21,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_117, grammarAccess.getHelperAccess().getRightParenthesisKeyword_20_5());
                      			
                    }

                    }


                    }
                    break;
                case 22 :
                    // InternalCheckerDsl.g:2926:3: ( ( (lv_invert_118_0= 'invert' ) ) otherlv_119= '(' ( (lv_var_120_0= ruleChkVariable ) ) otherlv_121= ')' )
                    {
                    // InternalCheckerDsl.g:2926:3: ( ( (lv_invert_118_0= 'invert' ) ) otherlv_119= '(' ( (lv_var_120_0= ruleChkVariable ) ) otherlv_121= ')' )
                    // InternalCheckerDsl.g:2927:4: ( (lv_invert_118_0= 'invert' ) ) otherlv_119= '(' ( (lv_var_120_0= ruleChkVariable ) ) otherlv_121= ')'
                    {
                    // InternalCheckerDsl.g:2927:4: ( (lv_invert_118_0= 'invert' ) )
                    // InternalCheckerDsl.g:2928:5: (lv_invert_118_0= 'invert' )
                    {
                    // InternalCheckerDsl.g:2928:5: (lv_invert_118_0= 'invert' )
                    // InternalCheckerDsl.g:2929:6: lv_invert_118_0= 'invert'
                    {
                    lv_invert_118_0=(Token)match(input,70,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_invert_118_0, grammarAccess.getHelperAccess().getInvertInvertKeyword_21_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getHelperRule());
                      						}
                      						setWithLastConsumed(current, "invert", lv_invert_118_0, "invert");
                      					
                    }

                    }


                    }

                    otherlv_119=(Token)match(input,19,FOLLOW_33); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_119, grammarAccess.getHelperAccess().getLeftParenthesisKeyword_21_1());
                      			
                    }
                    // InternalCheckerDsl.g:2945:4: ( (lv_var_120_0= ruleChkVariable ) )
                    // InternalCheckerDsl.g:2946:5: (lv_var_120_0= ruleChkVariable )
                    {
                    // InternalCheckerDsl.g:2946:5: (lv_var_120_0= ruleChkVariable )
                    // InternalCheckerDsl.g:2947:6: lv_var_120_0= ruleChkVariable
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getHelperAccess().getVarChkVariableParserRuleCall_21_2_0());
                      					
                    }
                    pushFollow(FOLLOW_15);
                    lv_var_120_0=ruleChkVariable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getHelperRule());
                      						}
                      						set(
                      							current,
                      							"var",
                      							lv_var_120_0,
                      							"org.xtext.example.checkerdsl.CheckerDsl.ChkVariable");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_121=(Token)match(input,21,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_121, grammarAccess.getHelperAccess().getRightParenthesisKeyword_21_3());
                      			
                    }

                    }


                    }
                    break;
                case 23 :
                    // InternalCheckerDsl.g:2970:3: ( ( (lv_include_122_0= 'include' ) ) otherlv_123= '(' ( (lv_var_124_0= ruleChkVariable ) ) otherlv_125= ',' ( (lv_var3_126_0= ruleChkVariables ) ) otherlv_127= ')' )
                    {
                    // InternalCheckerDsl.g:2970:3: ( ( (lv_include_122_0= 'include' ) ) otherlv_123= '(' ( (lv_var_124_0= ruleChkVariable ) ) otherlv_125= ',' ( (lv_var3_126_0= ruleChkVariables ) ) otherlv_127= ')' )
                    // InternalCheckerDsl.g:2971:4: ( (lv_include_122_0= 'include' ) ) otherlv_123= '(' ( (lv_var_124_0= ruleChkVariable ) ) otherlv_125= ',' ( (lv_var3_126_0= ruleChkVariables ) ) otherlv_127= ')'
                    {
                    // InternalCheckerDsl.g:2971:4: ( (lv_include_122_0= 'include' ) )
                    // InternalCheckerDsl.g:2972:5: (lv_include_122_0= 'include' )
                    {
                    // InternalCheckerDsl.g:2972:5: (lv_include_122_0= 'include' )
                    // InternalCheckerDsl.g:2973:6: lv_include_122_0= 'include'
                    {
                    lv_include_122_0=(Token)match(input,71,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_include_122_0, grammarAccess.getHelperAccess().getIncludeIncludeKeyword_22_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getHelperRule());
                      						}
                      						setWithLastConsumed(current, "include", lv_include_122_0, "include");
                      					
                    }

                    }


                    }

                    otherlv_123=(Token)match(input,19,FOLLOW_33); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_123, grammarAccess.getHelperAccess().getLeftParenthesisKeyword_22_1());
                      			
                    }
                    // InternalCheckerDsl.g:2989:4: ( (lv_var_124_0= ruleChkVariable ) )
                    // InternalCheckerDsl.g:2990:5: (lv_var_124_0= ruleChkVariable )
                    {
                    // InternalCheckerDsl.g:2990:5: (lv_var_124_0= ruleChkVariable )
                    // InternalCheckerDsl.g:2991:6: lv_var_124_0= ruleChkVariable
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getHelperAccess().getVarChkVariableParserRuleCall_22_2_0());
                      					
                    }
                    pushFollow(FOLLOW_36);
                    lv_var_124_0=ruleChkVariable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getHelperRule());
                      						}
                      						set(
                      							current,
                      							"var",
                      							lv_var_124_0,
                      							"org.xtext.example.checkerdsl.CheckerDsl.ChkVariable");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_125=(Token)match(input,20,FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_125, grammarAccess.getHelperAccess().getCommaKeyword_22_3());
                      			
                    }
                    // InternalCheckerDsl.g:3012:4: ( (lv_var3_126_0= ruleChkVariables ) )
                    // InternalCheckerDsl.g:3013:5: (lv_var3_126_0= ruleChkVariables )
                    {
                    // InternalCheckerDsl.g:3013:5: (lv_var3_126_0= ruleChkVariables )
                    // InternalCheckerDsl.g:3014:6: lv_var3_126_0= ruleChkVariables
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getHelperAccess().getVar3ChkVariablesParserRuleCall_22_4_0());
                      					
                    }
                    pushFollow(FOLLOW_15);
                    lv_var3_126_0=ruleChkVariables();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getHelperRule());
                      						}
                      						set(
                      							current,
                      							"var3",
                      							lv_var3_126_0,
                      							"org.xtext.example.checkerdsl.CheckerDsl.ChkVariables");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_127=(Token)match(input,21,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_127, grammarAccess.getHelperAccess().getRightParenthesisKeyword_22_5());
                      			
                    }

                    }


                    }
                    break;
                case 24 :
                    // InternalCheckerDsl.g:3037:3: ( ( (lv_exclude_128_0= 'exclude' ) ) otherlv_129= '(' ( (lv_var_130_0= ruleChkVariable ) ) otherlv_131= ',' ( (lv_var3_132_0= ruleChkVariables ) ) otherlv_133= ')' )
                    {
                    // InternalCheckerDsl.g:3037:3: ( ( (lv_exclude_128_0= 'exclude' ) ) otherlv_129= '(' ( (lv_var_130_0= ruleChkVariable ) ) otherlv_131= ',' ( (lv_var3_132_0= ruleChkVariables ) ) otherlv_133= ')' )
                    // InternalCheckerDsl.g:3038:4: ( (lv_exclude_128_0= 'exclude' ) ) otherlv_129= '(' ( (lv_var_130_0= ruleChkVariable ) ) otherlv_131= ',' ( (lv_var3_132_0= ruleChkVariables ) ) otherlv_133= ')'
                    {
                    // InternalCheckerDsl.g:3038:4: ( (lv_exclude_128_0= 'exclude' ) )
                    // InternalCheckerDsl.g:3039:5: (lv_exclude_128_0= 'exclude' )
                    {
                    // InternalCheckerDsl.g:3039:5: (lv_exclude_128_0= 'exclude' )
                    // InternalCheckerDsl.g:3040:6: lv_exclude_128_0= 'exclude'
                    {
                    lv_exclude_128_0=(Token)match(input,72,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_exclude_128_0, grammarAccess.getHelperAccess().getExcludeExcludeKeyword_23_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getHelperRule());
                      						}
                      						setWithLastConsumed(current, "exclude", lv_exclude_128_0, "exclude");
                      					
                    }

                    }


                    }

                    otherlv_129=(Token)match(input,19,FOLLOW_33); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_129, grammarAccess.getHelperAccess().getLeftParenthesisKeyword_23_1());
                      			
                    }
                    // InternalCheckerDsl.g:3056:4: ( (lv_var_130_0= ruleChkVariable ) )
                    // InternalCheckerDsl.g:3057:5: (lv_var_130_0= ruleChkVariable )
                    {
                    // InternalCheckerDsl.g:3057:5: (lv_var_130_0= ruleChkVariable )
                    // InternalCheckerDsl.g:3058:6: lv_var_130_0= ruleChkVariable
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getHelperAccess().getVarChkVariableParserRuleCall_23_2_0());
                      					
                    }
                    pushFollow(FOLLOW_36);
                    lv_var_130_0=ruleChkVariable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getHelperRule());
                      						}
                      						set(
                      							current,
                      							"var",
                      							lv_var_130_0,
                      							"org.xtext.example.checkerdsl.CheckerDsl.ChkVariable");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_131=(Token)match(input,20,FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_131, grammarAccess.getHelperAccess().getCommaKeyword_23_3());
                      			
                    }
                    // InternalCheckerDsl.g:3079:4: ( (lv_var3_132_0= ruleChkVariables ) )
                    // InternalCheckerDsl.g:3080:5: (lv_var3_132_0= ruleChkVariables )
                    {
                    // InternalCheckerDsl.g:3080:5: (lv_var3_132_0= ruleChkVariables )
                    // InternalCheckerDsl.g:3081:6: lv_var3_132_0= ruleChkVariables
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getHelperAccess().getVar3ChkVariablesParserRuleCall_23_4_0());
                      					
                    }
                    pushFollow(FOLLOW_15);
                    lv_var3_132_0=ruleChkVariables();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getHelperRule());
                      						}
                      						set(
                      							current,
                      							"var3",
                      							lv_var3_132_0,
                      							"org.xtext.example.checkerdsl.CheckerDsl.ChkVariables");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_133=(Token)match(input,21,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_133, grammarAccess.getHelperAccess().getRightParenthesisKeyword_23_5());
                      			
                    }

                    }


                    }
                    break;
                case 25 :
                    // InternalCheckerDsl.g:3104:3: ( ( (lv_compositional_134_0= 'compositional' ) ) otherlv_135= '(' ( (lv_var_136_0= ruleChkVariable ) ) otherlv_137= ')' )
                    {
                    // InternalCheckerDsl.g:3104:3: ( ( (lv_compositional_134_0= 'compositional' ) ) otherlv_135= '(' ( (lv_var_136_0= ruleChkVariable ) ) otherlv_137= ')' )
                    // InternalCheckerDsl.g:3105:4: ( (lv_compositional_134_0= 'compositional' ) ) otherlv_135= '(' ( (lv_var_136_0= ruleChkVariable ) ) otherlv_137= ')'
                    {
                    // InternalCheckerDsl.g:3105:4: ( (lv_compositional_134_0= 'compositional' ) )
                    // InternalCheckerDsl.g:3106:5: (lv_compositional_134_0= 'compositional' )
                    {
                    // InternalCheckerDsl.g:3106:5: (lv_compositional_134_0= 'compositional' )
                    // InternalCheckerDsl.g:3107:6: lv_compositional_134_0= 'compositional'
                    {
                    lv_compositional_134_0=(Token)match(input,73,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_compositional_134_0, grammarAccess.getHelperAccess().getCompositionalCompositionalKeyword_24_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getHelperRule());
                      						}
                      						setWithLastConsumed(current, "compositional", lv_compositional_134_0, "compositional");
                      					
                    }

                    }


                    }

                    otherlv_135=(Token)match(input,19,FOLLOW_33); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_135, grammarAccess.getHelperAccess().getLeftParenthesisKeyword_24_1());
                      			
                    }
                    // InternalCheckerDsl.g:3123:4: ( (lv_var_136_0= ruleChkVariable ) )
                    // InternalCheckerDsl.g:3124:5: (lv_var_136_0= ruleChkVariable )
                    {
                    // InternalCheckerDsl.g:3124:5: (lv_var_136_0= ruleChkVariable )
                    // InternalCheckerDsl.g:3125:6: lv_var_136_0= ruleChkVariable
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getHelperAccess().getVarChkVariableParserRuleCall_24_2_0());
                      					
                    }
                    pushFollow(FOLLOW_15);
                    lv_var_136_0=ruleChkVariable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getHelperRule());
                      						}
                      						set(
                      							current,
                      							"var",
                      							lv_var_136_0,
                      							"org.xtext.example.checkerdsl.CheckerDsl.ChkVariable");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_137=(Token)match(input,21,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_137, grammarAccess.getHelperAccess().getRightParenthesisKeyword_24_3());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleHelper"


    // $ANTLR start "entryRuleChkRelationalExpression"
    // InternalCheckerDsl.g:3151:1: entryRuleChkRelationalExpression returns [EObject current=null] : iv_ruleChkRelationalExpression= ruleChkRelationalExpression EOF ;
    public final EObject entryRuleChkRelationalExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleChkRelationalExpression = null;


        try {
            // InternalCheckerDsl.g:3151:64: (iv_ruleChkRelationalExpression= ruleChkRelationalExpression EOF )
            // InternalCheckerDsl.g:3152:2: iv_ruleChkRelationalExpression= ruleChkRelationalExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getChkRelationalExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleChkRelationalExpression=ruleChkRelationalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleChkRelationalExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleChkRelationalExpression"


    // $ANTLR start "ruleChkRelationalExpression"
    // InternalCheckerDsl.g:3158:1: ruleChkRelationalExpression returns [EObject current=null] : ( ( (lv_v1_0_0= ruleChkVariables ) ) ( (lv_opr_1_0= ruleChkOpRelational ) ) ( (lv_v2_2_0= ruleChkVariables ) ) ) ;
    public final EObject ruleChkRelationalExpression() throws RecognitionException {
        EObject current = null;

        EObject lv_v1_0_0 = null;

        AntlrDatatypeRuleToken lv_opr_1_0 = null;

        EObject lv_v2_2_0 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:3164:2: ( ( ( (lv_v1_0_0= ruleChkVariables ) ) ( (lv_opr_1_0= ruleChkOpRelational ) ) ( (lv_v2_2_0= ruleChkVariables ) ) ) )
            // InternalCheckerDsl.g:3165:2: ( ( (lv_v1_0_0= ruleChkVariables ) ) ( (lv_opr_1_0= ruleChkOpRelational ) ) ( (lv_v2_2_0= ruleChkVariables ) ) )
            {
            // InternalCheckerDsl.g:3165:2: ( ( (lv_v1_0_0= ruleChkVariables ) ) ( (lv_opr_1_0= ruleChkOpRelational ) ) ( (lv_v2_2_0= ruleChkVariables ) ) )
            // InternalCheckerDsl.g:3166:3: ( (lv_v1_0_0= ruleChkVariables ) ) ( (lv_opr_1_0= ruleChkOpRelational ) ) ( (lv_v2_2_0= ruleChkVariables ) )
            {
            // InternalCheckerDsl.g:3166:3: ( (lv_v1_0_0= ruleChkVariables ) )
            // InternalCheckerDsl.g:3167:4: (lv_v1_0_0= ruleChkVariables )
            {
            // InternalCheckerDsl.g:3167:4: (lv_v1_0_0= ruleChkVariables )
            // InternalCheckerDsl.g:3168:5: lv_v1_0_0= ruleChkVariables
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getChkRelationalExpressionAccess().getV1ChkVariablesParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_40);
            lv_v1_0_0=ruleChkVariables();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getChkRelationalExpressionRule());
              					}
              					set(
              						current,
              						"v1",
              						lv_v1_0_0,
              						"org.xtext.example.checkerdsl.CheckerDsl.ChkVariables");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalCheckerDsl.g:3185:3: ( (lv_opr_1_0= ruleChkOpRelational ) )
            // InternalCheckerDsl.g:3186:4: (lv_opr_1_0= ruleChkOpRelational )
            {
            // InternalCheckerDsl.g:3186:4: (lv_opr_1_0= ruleChkOpRelational )
            // InternalCheckerDsl.g:3187:5: lv_opr_1_0= ruleChkOpRelational
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getChkRelationalExpressionAccess().getOprChkOpRelationalParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_35);
            lv_opr_1_0=ruleChkOpRelational();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getChkRelationalExpressionRule());
              					}
              					set(
              						current,
              						"opr",
              						lv_opr_1_0,
              						"org.xtext.example.checkerdsl.CheckerDsl.ChkOpRelational");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalCheckerDsl.g:3204:3: ( (lv_v2_2_0= ruleChkVariables ) )
            // InternalCheckerDsl.g:3205:4: (lv_v2_2_0= ruleChkVariables )
            {
            // InternalCheckerDsl.g:3205:4: (lv_v2_2_0= ruleChkVariables )
            // InternalCheckerDsl.g:3206:5: lv_v2_2_0= ruleChkVariables
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getChkRelationalExpressionAccess().getV2ChkVariablesParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_v2_2_0=ruleChkVariables();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getChkRelationalExpressionRule());
              					}
              					set(
              						current,
              						"v2",
              						lv_v2_2_0,
              						"org.xtext.example.checkerdsl.CheckerDsl.ChkVariables");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleChkRelationalExpression"


    // $ANTLR start "entryRuleChkAssignment"
    // InternalCheckerDsl.g:3227:1: entryRuleChkAssignment returns [EObject current=null] : iv_ruleChkAssignment= ruleChkAssignment EOF ;
    public final EObject entryRuleChkAssignment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleChkAssignment = null;


        try {
            // InternalCheckerDsl.g:3227:54: (iv_ruleChkAssignment= ruleChkAssignment EOF )
            // InternalCheckerDsl.g:3228:2: iv_ruleChkAssignment= ruleChkAssignment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getChkAssignmentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleChkAssignment=ruleChkAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleChkAssignment; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleChkAssignment"


    // $ANTLR start "ruleChkAssignment"
    // InternalCheckerDsl.g:3234:1: ruleChkAssignment returns [EObject current=null] : ( ( (lv_def_0_0= 'def' ) )? ( (lv_v1_1_0= ruleChkVariable ) ) ( (lv_opr_2_0= ruleChkOpAssignment ) ) ( ( (lv_v2_3_1= ruleChkOperation | lv_v2_3_2= ruleHelper ) ) ) ) ;
    public final EObject ruleChkAssignment() throws RecognitionException {
        EObject current = null;

        Token lv_def_0_0=null;
        EObject lv_v1_1_0 = null;

        AntlrDatatypeRuleToken lv_opr_2_0 = null;

        EObject lv_v2_3_1 = null;

        EObject lv_v2_3_2 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:3240:2: ( ( ( (lv_def_0_0= 'def' ) )? ( (lv_v1_1_0= ruleChkVariable ) ) ( (lv_opr_2_0= ruleChkOpAssignment ) ) ( ( (lv_v2_3_1= ruleChkOperation | lv_v2_3_2= ruleHelper ) ) ) ) )
            // InternalCheckerDsl.g:3241:2: ( ( (lv_def_0_0= 'def' ) )? ( (lv_v1_1_0= ruleChkVariable ) ) ( (lv_opr_2_0= ruleChkOpAssignment ) ) ( ( (lv_v2_3_1= ruleChkOperation | lv_v2_3_2= ruleHelper ) ) ) )
            {
            // InternalCheckerDsl.g:3241:2: ( ( (lv_def_0_0= 'def' ) )? ( (lv_v1_1_0= ruleChkVariable ) ) ( (lv_opr_2_0= ruleChkOpAssignment ) ) ( ( (lv_v2_3_1= ruleChkOperation | lv_v2_3_2= ruleHelper ) ) ) )
            // InternalCheckerDsl.g:3242:3: ( (lv_def_0_0= 'def' ) )? ( (lv_v1_1_0= ruleChkVariable ) ) ( (lv_opr_2_0= ruleChkOpAssignment ) ) ( ( (lv_v2_3_1= ruleChkOperation | lv_v2_3_2= ruleHelper ) ) )
            {
            // InternalCheckerDsl.g:3242:3: ( (lv_def_0_0= 'def' ) )?
            int alt34=2;
            int LA34_0 = input.LA(1);

            if ( (LA34_0==74) ) {
                alt34=1;
            }
            switch (alt34) {
                case 1 :
                    // InternalCheckerDsl.g:3243:4: (lv_def_0_0= 'def' )
                    {
                    // InternalCheckerDsl.g:3243:4: (lv_def_0_0= 'def' )
                    // InternalCheckerDsl.g:3244:5: lv_def_0_0= 'def'
                    {
                    lv_def_0_0=(Token)match(input,74,FOLLOW_33); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_def_0_0, grammarAccess.getChkAssignmentAccess().getDefDefKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getChkAssignmentRule());
                      					}
                      					setWithLastConsumed(current, "def", lv_def_0_0, "def");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalCheckerDsl.g:3256:3: ( (lv_v1_1_0= ruleChkVariable ) )
            // InternalCheckerDsl.g:3257:4: (lv_v1_1_0= ruleChkVariable )
            {
            // InternalCheckerDsl.g:3257:4: (lv_v1_1_0= ruleChkVariable )
            // InternalCheckerDsl.g:3258:5: lv_v1_1_0= ruleChkVariable
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getChkAssignmentAccess().getV1ChkVariableParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_41);
            lv_v1_1_0=ruleChkVariable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getChkAssignmentRule());
              					}
              					set(
              						current,
              						"v1",
              						lv_v1_1_0,
              						"org.xtext.example.checkerdsl.CheckerDsl.ChkVariable");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalCheckerDsl.g:3275:3: ( (lv_opr_2_0= ruleChkOpAssignment ) )
            // InternalCheckerDsl.g:3276:4: (lv_opr_2_0= ruleChkOpAssignment )
            {
            // InternalCheckerDsl.g:3276:4: (lv_opr_2_0= ruleChkOpAssignment )
            // InternalCheckerDsl.g:3277:5: lv_opr_2_0= ruleChkOpAssignment
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getChkAssignmentAccess().getOprChkOpAssignmentParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_42);
            lv_opr_2_0=ruleChkOpAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getChkAssignmentRule());
              					}
              					set(
              						current,
              						"opr",
              						lv_opr_2_0,
              						"org.xtext.example.checkerdsl.CheckerDsl.ChkOpAssignment");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalCheckerDsl.g:3294:3: ( ( (lv_v2_3_1= ruleChkOperation | lv_v2_3_2= ruleHelper ) ) )
            // InternalCheckerDsl.g:3295:4: ( (lv_v2_3_1= ruleChkOperation | lv_v2_3_2= ruleHelper ) )
            {
            // InternalCheckerDsl.g:3295:4: ( (lv_v2_3_1= ruleChkOperation | lv_v2_3_2= ruleHelper ) )
            // InternalCheckerDsl.g:3296:5: (lv_v2_3_1= ruleChkOperation | lv_v2_3_2= ruleHelper )
            {
            // InternalCheckerDsl.g:3296:5: (lv_v2_3_1= ruleChkOperation | lv_v2_3_2= ruleHelper )
            int alt35=2;
            int LA35_0 = input.LA(1);

            if ( (LA35_0==RULE_INT||LA35_0==RULE_ID||(LA35_0>=41 && LA35_0<=43)||LA35_0==46||LA35_0==77) ) {
                alt35=1;
            }
            else if ( ((LA35_0>=48 && LA35_0<=53)||(LA35_0>=55 && LA35_0<=73)) ) {
                alt35=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 35, 0, input);

                throw nvae;
            }
            switch (alt35) {
                case 1 :
                    // InternalCheckerDsl.g:3297:6: lv_v2_3_1= ruleChkOperation
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getChkAssignmentAccess().getV2ChkOperationParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_v2_3_1=ruleChkOperation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getChkAssignmentRule());
                      						}
                      						set(
                      							current,
                      							"v2",
                      							lv_v2_3_1,
                      							"org.xtext.example.checkerdsl.CheckerDsl.ChkOperation");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }
                    break;
                case 2 :
                    // InternalCheckerDsl.g:3313:6: lv_v2_3_2= ruleHelper
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getChkAssignmentAccess().getV2HelperParserRuleCall_3_0_1());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_v2_3_2=ruleHelper();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getChkAssignmentRule());
                      						}
                      						set(
                      							current,
                      							"v2",
                      							lv_v2_3_2,
                      							"org.xtext.example.checkerdsl.CheckerDsl.Helper");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }
                    break;

            }


            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleChkAssignment"


    // $ANTLR start "entryRuleChkGeneralExpressions"
    // InternalCheckerDsl.g:3335:1: entryRuleChkGeneralExpressions returns [EObject current=null] : iv_ruleChkGeneralExpressions= ruleChkGeneralExpressions EOF ;
    public final EObject entryRuleChkGeneralExpressions() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleChkGeneralExpressions = null;


        try {
            // InternalCheckerDsl.g:3335:62: (iv_ruleChkGeneralExpressions= ruleChkGeneralExpressions EOF )
            // InternalCheckerDsl.g:3336:2: iv_ruleChkGeneralExpressions= ruleChkGeneralExpressions EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getChkGeneralExpressionsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleChkGeneralExpressions=ruleChkGeneralExpressions();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleChkGeneralExpressions; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleChkGeneralExpressions"


    // $ANTLR start "ruleChkGeneralExpressions"
    // InternalCheckerDsl.g:3342:1: ruleChkGeneralExpressions returns [EObject current=null] : (this_Helper_0= ruleHelper | this_ChkRelationalExpression_1= ruleChkRelationalExpression | this_MethodCall_2= ruleMethodCall | this_ChkAssignment_3= ruleChkAssignment ) ;
    public final EObject ruleChkGeneralExpressions() throws RecognitionException {
        EObject current = null;

        EObject this_Helper_0 = null;

        EObject this_ChkRelationalExpression_1 = null;

        EObject this_MethodCall_2 = null;

        EObject this_ChkAssignment_3 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:3348:2: ( (this_Helper_0= ruleHelper | this_ChkRelationalExpression_1= ruleChkRelationalExpression | this_MethodCall_2= ruleMethodCall | this_ChkAssignment_3= ruleChkAssignment ) )
            // InternalCheckerDsl.g:3349:2: (this_Helper_0= ruleHelper | this_ChkRelationalExpression_1= ruleChkRelationalExpression | this_MethodCall_2= ruleMethodCall | this_ChkAssignment_3= ruleChkAssignment )
            {
            // InternalCheckerDsl.g:3349:2: (this_Helper_0= ruleHelper | this_ChkRelationalExpression_1= ruleChkRelationalExpression | this_MethodCall_2= ruleMethodCall | this_ChkAssignment_3= ruleChkAssignment )
            int alt36=4;
            alt36 = dfa36.predict(input);
            switch (alt36) {
                case 1 :
                    // InternalCheckerDsl.g:3350:3: this_Helper_0= ruleHelper
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getChkGeneralExpressionsAccess().getHelperParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Helper_0=ruleHelper();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Helper_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalCheckerDsl.g:3359:3: this_ChkRelationalExpression_1= ruleChkRelationalExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getChkGeneralExpressionsAccess().getChkRelationalExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ChkRelationalExpression_1=ruleChkRelationalExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ChkRelationalExpression_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalCheckerDsl.g:3368:3: this_MethodCall_2= ruleMethodCall
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getChkGeneralExpressionsAccess().getMethodCallParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_MethodCall_2=ruleMethodCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_MethodCall_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalCheckerDsl.g:3377:3: this_ChkAssignment_3= ruleChkAssignment
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getChkGeneralExpressionsAccess().getChkAssignmentParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ChkAssignment_3=ruleChkAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ChkAssignment_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleChkGeneralExpressions"


    // $ANTLR start "entryRuleChkOpAssignment"
    // InternalCheckerDsl.g:3389:1: entryRuleChkOpAssignment returns [String current=null] : iv_ruleChkOpAssignment= ruleChkOpAssignment EOF ;
    public final String entryRuleChkOpAssignment() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleChkOpAssignment = null;


        try {
            // InternalCheckerDsl.g:3389:55: (iv_ruleChkOpAssignment= ruleChkOpAssignment EOF )
            // InternalCheckerDsl.g:3390:2: iv_ruleChkOpAssignment= ruleChkOpAssignment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getChkOpAssignmentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleChkOpAssignment=ruleChkOpAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleChkOpAssignment.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleChkOpAssignment"


    // $ANTLR start "ruleChkOpAssignment"
    // InternalCheckerDsl.g:3396:1: ruleChkOpAssignment returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= '=' ;
    public final AntlrDatatypeRuleToken ruleChkOpAssignment() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalCheckerDsl.g:3402:2: (kw= '=' )
            // InternalCheckerDsl.g:3403:2: kw= '='
            {
            kw=(Token)match(input,75,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getChkOpAssignmentAccess().getEqualsSignKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleChkOpAssignment"


    // $ANTLR start "entryRuleChkOperator"
    // InternalCheckerDsl.g:3411:1: entryRuleChkOperator returns [String current=null] : iv_ruleChkOperator= ruleChkOperator EOF ;
    public final String entryRuleChkOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleChkOperator = null;


        try {
            // InternalCheckerDsl.g:3411:51: (iv_ruleChkOperator= ruleChkOperator EOF )
            // InternalCheckerDsl.g:3412:2: iv_ruleChkOperator= ruleChkOperator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getChkOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleChkOperator=ruleChkOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleChkOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleChkOperator"


    // $ANTLR start "ruleChkOperator"
    // InternalCheckerDsl.g:3418:1: ruleChkOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '+' | kw= '-' | kw= '*' | kw= '/' | kw= '|' | kw= '&' | kw= '^' ) ;
    public final AntlrDatatypeRuleToken ruleChkOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalCheckerDsl.g:3424:2: ( (kw= '+' | kw= '-' | kw= '*' | kw= '/' | kw= '|' | kw= '&' | kw= '^' ) )
            // InternalCheckerDsl.g:3425:2: (kw= '+' | kw= '-' | kw= '*' | kw= '/' | kw= '|' | kw= '&' | kw= '^' )
            {
            // InternalCheckerDsl.g:3425:2: (kw= '+' | kw= '-' | kw= '*' | kw= '/' | kw= '|' | kw= '&' | kw= '^' )
            int alt37=7;
            switch ( input.LA(1) ) {
            case 76:
                {
                alt37=1;
                }
                break;
            case 77:
                {
                alt37=2;
                }
                break;
            case 78:
                {
                alt37=3;
                }
                break;
            case 79:
                {
                alt37=4;
                }
                break;
            case 80:
                {
                alt37=5;
                }
                break;
            case 81:
                {
                alt37=6;
                }
                break;
            case 82:
                {
                alt37=7;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 37, 0, input);

                throw nvae;
            }

            switch (alt37) {
                case 1 :
                    // InternalCheckerDsl.g:3426:3: kw= '+'
                    {
                    kw=(Token)match(input,76,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getChkOperatorAccess().getPlusSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalCheckerDsl.g:3432:3: kw= '-'
                    {
                    kw=(Token)match(input,77,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getChkOperatorAccess().getHyphenMinusKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalCheckerDsl.g:3438:3: kw= '*'
                    {
                    kw=(Token)match(input,78,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getChkOperatorAccess().getAsteriskKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalCheckerDsl.g:3444:3: kw= '/'
                    {
                    kw=(Token)match(input,79,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getChkOperatorAccess().getSolidusKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalCheckerDsl.g:3450:3: kw= '|'
                    {
                    kw=(Token)match(input,80,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getChkOperatorAccess().getVerticalLineKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalCheckerDsl.g:3456:3: kw= '&'
                    {
                    kw=(Token)match(input,81,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getChkOperatorAccess().getAmpersandKeyword_5());
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalCheckerDsl.g:3462:3: kw= '^'
                    {
                    kw=(Token)match(input,82,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getChkOperatorAccess().getCircumflexAccentKeyword_6());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleChkOperator"


    // $ANTLR start "entryRuleChkOperation"
    // InternalCheckerDsl.g:3471:1: entryRuleChkOperation returns [EObject current=null] : iv_ruleChkOperation= ruleChkOperation EOF ;
    public final EObject entryRuleChkOperation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleChkOperation = null;


        try {
            // InternalCheckerDsl.g:3471:53: (iv_ruleChkOperation= ruleChkOperation EOF )
            // InternalCheckerDsl.g:3472:2: iv_ruleChkOperation= ruleChkOperation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getChkOperationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleChkOperation=ruleChkOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleChkOperation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleChkOperation"


    // $ANTLR start "ruleChkOperation"
    // InternalCheckerDsl.g:3478:1: ruleChkOperation returns [EObject current=null] : ( ( (lv_operand_0_0= ruleChkVariables ) ) ( ( (lv_operator_1_0= ruleChkOperator ) ) ( (lv_operand_2_0= ruleChkVariables ) ) )* ) ;
    public final EObject ruleChkOperation() throws RecognitionException {
        EObject current = null;

        EObject lv_operand_0_0 = null;

        AntlrDatatypeRuleToken lv_operator_1_0 = null;

        EObject lv_operand_2_0 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:3484:2: ( ( ( (lv_operand_0_0= ruleChkVariables ) ) ( ( (lv_operator_1_0= ruleChkOperator ) ) ( (lv_operand_2_0= ruleChkVariables ) ) )* ) )
            // InternalCheckerDsl.g:3485:2: ( ( (lv_operand_0_0= ruleChkVariables ) ) ( ( (lv_operator_1_0= ruleChkOperator ) ) ( (lv_operand_2_0= ruleChkVariables ) ) )* )
            {
            // InternalCheckerDsl.g:3485:2: ( ( (lv_operand_0_0= ruleChkVariables ) ) ( ( (lv_operator_1_0= ruleChkOperator ) ) ( (lv_operand_2_0= ruleChkVariables ) ) )* )
            // InternalCheckerDsl.g:3486:3: ( (lv_operand_0_0= ruleChkVariables ) ) ( ( (lv_operator_1_0= ruleChkOperator ) ) ( (lv_operand_2_0= ruleChkVariables ) ) )*
            {
            // InternalCheckerDsl.g:3486:3: ( (lv_operand_0_0= ruleChkVariables ) )
            // InternalCheckerDsl.g:3487:4: (lv_operand_0_0= ruleChkVariables )
            {
            // InternalCheckerDsl.g:3487:4: (lv_operand_0_0= ruleChkVariables )
            // InternalCheckerDsl.g:3488:5: lv_operand_0_0= ruleChkVariables
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getChkOperationAccess().getOperandChkVariablesParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_43);
            lv_operand_0_0=ruleChkVariables();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getChkOperationRule());
              					}
              					add(
              						current,
              						"operand",
              						lv_operand_0_0,
              						"org.xtext.example.checkerdsl.CheckerDsl.ChkVariables");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalCheckerDsl.g:3505:3: ( ( (lv_operator_1_0= ruleChkOperator ) ) ( (lv_operand_2_0= ruleChkVariables ) ) )*
            loop38:
            do {
                int alt38=2;
                int LA38_0 = input.LA(1);

                if ( ((LA38_0>=76 && LA38_0<=82)) ) {
                    alt38=1;
                }


                switch (alt38) {
            	case 1 :
            	    // InternalCheckerDsl.g:3506:4: ( (lv_operator_1_0= ruleChkOperator ) ) ( (lv_operand_2_0= ruleChkVariables ) )
            	    {
            	    // InternalCheckerDsl.g:3506:4: ( (lv_operator_1_0= ruleChkOperator ) )
            	    // InternalCheckerDsl.g:3507:5: (lv_operator_1_0= ruleChkOperator )
            	    {
            	    // InternalCheckerDsl.g:3507:5: (lv_operator_1_0= ruleChkOperator )
            	    // InternalCheckerDsl.g:3508:6: lv_operator_1_0= ruleChkOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getChkOperationAccess().getOperatorChkOperatorParserRuleCall_1_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_35);
            	    lv_operator_1_0=ruleChkOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getChkOperationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"operator",
            	      							lv_operator_1_0,
            	      							"org.xtext.example.checkerdsl.CheckerDsl.ChkOperator");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalCheckerDsl.g:3525:4: ( (lv_operand_2_0= ruleChkVariables ) )
            	    // InternalCheckerDsl.g:3526:5: (lv_operand_2_0= ruleChkVariables )
            	    {
            	    // InternalCheckerDsl.g:3526:5: (lv_operand_2_0= ruleChkVariables )
            	    // InternalCheckerDsl.g:3527:6: lv_operand_2_0= ruleChkVariables
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getChkOperationAccess().getOperandChkVariablesParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_43);
            	    lv_operand_2_0=ruleChkVariables();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getChkOperationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"operand",
            	      							lv_operand_2_0,
            	      							"org.xtext.example.checkerdsl.CheckerDsl.ChkVariables");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop38;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleChkOperation"


    // $ANTLR start "entryRuleChkOpRelational"
    // InternalCheckerDsl.g:3549:1: entryRuleChkOpRelational returns [String current=null] : iv_ruleChkOpRelational= ruleChkOpRelational EOF ;
    public final String entryRuleChkOpRelational() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleChkOpRelational = null;


        try {
            // InternalCheckerDsl.g:3549:55: (iv_ruleChkOpRelational= ruleChkOpRelational EOF )
            // InternalCheckerDsl.g:3550:2: iv_ruleChkOpRelational= ruleChkOpRelational EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getChkOpRelationalRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleChkOpRelational=ruleChkOpRelational();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleChkOpRelational.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleChkOpRelational"


    // $ANTLR start "ruleChkOpRelational"
    // InternalCheckerDsl.g:3556:1: ruleChkOpRelational returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '==' | kw= '!=' | kw= '>=' | kw= '<=' | kw= '>' | kw= '<' ) ;
    public final AntlrDatatypeRuleToken ruleChkOpRelational() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalCheckerDsl.g:3562:2: ( (kw= '==' | kw= '!=' | kw= '>=' | kw= '<=' | kw= '>' | kw= '<' ) )
            // InternalCheckerDsl.g:3563:2: (kw= '==' | kw= '!=' | kw= '>=' | kw= '<=' | kw= '>' | kw= '<' )
            {
            // InternalCheckerDsl.g:3563:2: (kw= '==' | kw= '!=' | kw= '>=' | kw= '<=' | kw= '>' | kw= '<' )
            int alt39=6;
            switch ( input.LA(1) ) {
            case 83:
                {
                alt39=1;
                }
                break;
            case 84:
                {
                alt39=2;
                }
                break;
            case 85:
                {
                alt39=3;
                }
                break;
            case 86:
                {
                alt39=4;
                }
                break;
            case 47:
                {
                alt39=5;
                }
                break;
            case 46:
                {
                alt39=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 39, 0, input);

                throw nvae;
            }

            switch (alt39) {
                case 1 :
                    // InternalCheckerDsl.g:3564:3: kw= '=='
                    {
                    kw=(Token)match(input,83,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getChkOpRelationalAccess().getEqualsSignEqualsSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalCheckerDsl.g:3570:3: kw= '!='
                    {
                    kw=(Token)match(input,84,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getChkOpRelationalAccess().getExclamationMarkEqualsSignKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalCheckerDsl.g:3576:3: kw= '>='
                    {
                    kw=(Token)match(input,85,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getChkOpRelationalAccess().getGreaterThanSignEqualsSignKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalCheckerDsl.g:3582:3: kw= '<='
                    {
                    kw=(Token)match(input,86,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getChkOpRelationalAccess().getLessThanSignEqualsSignKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalCheckerDsl.g:3588:3: kw= '>'
                    {
                    kw=(Token)match(input,47,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getChkOpRelationalAccess().getGreaterThanSignKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalCheckerDsl.g:3594:3: kw= '<'
                    {
                    kw=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getChkOpRelationalAccess().getLessThanSignKeyword_5());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleChkOpRelational"


    // $ANTLR start "entryRuleChkAndOr"
    // InternalCheckerDsl.g:3603:1: entryRuleChkAndOr returns [String current=null] : iv_ruleChkAndOr= ruleChkAndOr EOF ;
    public final String entryRuleChkAndOr() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleChkAndOr = null;


        try {
            // InternalCheckerDsl.g:3603:48: (iv_ruleChkAndOr= ruleChkAndOr EOF )
            // InternalCheckerDsl.g:3604:2: iv_ruleChkAndOr= ruleChkAndOr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getChkAndOrRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleChkAndOr=ruleChkAndOr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleChkAndOr.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleChkAndOr"


    // $ANTLR start "ruleChkAndOr"
    // InternalCheckerDsl.g:3610:1: ruleChkAndOr returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'and' | kw= 'or' ) ;
    public final AntlrDatatypeRuleToken ruleChkAndOr() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalCheckerDsl.g:3616:2: ( (kw= 'and' | kw= 'or' ) )
            // InternalCheckerDsl.g:3617:2: (kw= 'and' | kw= 'or' )
            {
            // InternalCheckerDsl.g:3617:2: (kw= 'and' | kw= 'or' )
            int alt40=2;
            int LA40_0 = input.LA(1);

            if ( (LA40_0==87) ) {
                alt40=1;
            }
            else if ( (LA40_0==88) ) {
                alt40=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 40, 0, input);

                throw nvae;
            }
            switch (alt40) {
                case 1 :
                    // InternalCheckerDsl.g:3618:3: kw= 'and'
                    {
                    kw=(Token)match(input,87,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getChkAndOrAccess().getAndKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalCheckerDsl.g:3624:3: kw= 'or'
                    {
                    kw=(Token)match(input,88,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getChkAndOrAccess().getOrKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleChkAndOr"


    // $ANTLR start "entryRuleChkLoopExpression"
    // InternalCheckerDsl.g:3633:1: entryRuleChkLoopExpression returns [EObject current=null] : iv_ruleChkLoopExpression= ruleChkLoopExpression EOF ;
    public final EObject entryRuleChkLoopExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleChkLoopExpression = null;


        try {
            // InternalCheckerDsl.g:3633:58: (iv_ruleChkLoopExpression= ruleChkLoopExpression EOF )
            // InternalCheckerDsl.g:3634:2: iv_ruleChkLoopExpression= ruleChkLoopExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getChkLoopExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleChkLoopExpression=ruleChkLoopExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleChkLoopExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleChkLoopExpression"


    // $ANTLR start "ruleChkLoopExpression"
    // InternalCheckerDsl.g:3640:1: ruleChkLoopExpression returns [EObject current=null] : (otherlv_0= 'for' otherlv_1= '(' ( (lv_index_2_0= ruleChkVariable ) ) otherlv_3= ',' ( (lv_maxIndex_4_0= ruleChkVariables ) ) otherlv_5= ')' otherlv_6= '{' ( (lv_ex_7_0= ruleChkExpression ) )* otherlv_8= '}' ) ;
    public final EObject ruleChkLoopExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        EObject lv_index_2_0 = null;

        EObject lv_maxIndex_4_0 = null;

        EObject lv_ex_7_0 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:3646:2: ( (otherlv_0= 'for' otherlv_1= '(' ( (lv_index_2_0= ruleChkVariable ) ) otherlv_3= ',' ( (lv_maxIndex_4_0= ruleChkVariables ) ) otherlv_5= ')' otherlv_6= '{' ( (lv_ex_7_0= ruleChkExpression ) )* otherlv_8= '}' ) )
            // InternalCheckerDsl.g:3647:2: (otherlv_0= 'for' otherlv_1= '(' ( (lv_index_2_0= ruleChkVariable ) ) otherlv_3= ',' ( (lv_maxIndex_4_0= ruleChkVariables ) ) otherlv_5= ')' otherlv_6= '{' ( (lv_ex_7_0= ruleChkExpression ) )* otherlv_8= '}' )
            {
            // InternalCheckerDsl.g:3647:2: (otherlv_0= 'for' otherlv_1= '(' ( (lv_index_2_0= ruleChkVariable ) ) otherlv_3= ',' ( (lv_maxIndex_4_0= ruleChkVariables ) ) otherlv_5= ')' otherlv_6= '{' ( (lv_ex_7_0= ruleChkExpression ) )* otherlv_8= '}' )
            // InternalCheckerDsl.g:3648:3: otherlv_0= 'for' otherlv_1= '(' ( (lv_index_2_0= ruleChkVariable ) ) otherlv_3= ',' ( (lv_maxIndex_4_0= ruleChkVariables ) ) otherlv_5= ')' otherlv_6= '{' ( (lv_ex_7_0= ruleChkExpression ) )* otherlv_8= '}'
            {
            otherlv_0=(Token)match(input,89,FOLLOW_10); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getChkLoopExpressionAccess().getForKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,19,FOLLOW_33); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getChkLoopExpressionAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalCheckerDsl.g:3656:3: ( (lv_index_2_0= ruleChkVariable ) )
            // InternalCheckerDsl.g:3657:4: (lv_index_2_0= ruleChkVariable )
            {
            // InternalCheckerDsl.g:3657:4: (lv_index_2_0= ruleChkVariable )
            // InternalCheckerDsl.g:3658:5: lv_index_2_0= ruleChkVariable
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getChkLoopExpressionAccess().getIndexChkVariableParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_36);
            lv_index_2_0=ruleChkVariable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getChkLoopExpressionRule());
              					}
              					set(
              						current,
              						"index",
              						lv_index_2_0,
              						"org.xtext.example.checkerdsl.CheckerDsl.ChkVariable");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,20,FOLLOW_35); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getChkLoopExpressionAccess().getCommaKeyword_3());
              		
            }
            // InternalCheckerDsl.g:3679:3: ( (lv_maxIndex_4_0= ruleChkVariables ) )
            // InternalCheckerDsl.g:3680:4: (lv_maxIndex_4_0= ruleChkVariables )
            {
            // InternalCheckerDsl.g:3680:4: (lv_maxIndex_4_0= ruleChkVariables )
            // InternalCheckerDsl.g:3681:5: lv_maxIndex_4_0= ruleChkVariables
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getChkLoopExpressionAccess().getMaxIndexChkVariablesParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_15);
            lv_maxIndex_4_0=ruleChkVariables();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getChkLoopExpressionRule());
              					}
              					set(
              						current,
              						"maxIndex",
              						lv_maxIndex_4_0,
              						"org.xtext.example.checkerdsl.CheckerDsl.ChkVariables");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_5=(Token)match(input,21,FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getChkLoopExpressionAccess().getRightParenthesisKeyword_5());
              		
            }
            otherlv_6=(Token)match(input,14,FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getChkLoopExpressionAccess().getLeftCurlyBracketKeyword_6());
              		
            }
            // InternalCheckerDsl.g:3706:3: ( (lv_ex_7_0= ruleChkExpression ) )*
            loop41:
            do {
                int alt41=2;
                int LA41_0 = input.LA(1);

                if ( (LA41_0==19) ) {
                    alt41=1;
                }


                switch (alt41) {
            	case 1 :
            	    // InternalCheckerDsl.g:3707:4: (lv_ex_7_0= ruleChkExpression )
            	    {
            	    // InternalCheckerDsl.g:3707:4: (lv_ex_7_0= ruleChkExpression )
            	    // InternalCheckerDsl.g:3708:5: lv_ex_7_0= ruleChkExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getChkLoopExpressionAccess().getExChkExpressionParserRuleCall_7_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_16);
            	    lv_ex_7_0=ruleChkExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getChkLoopExpressionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"ex",
            	      						lv_ex_7_0,
            	      						"org.xtext.example.checkerdsl.CheckerDsl.ChkExpression");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop41;
                }
            } while (true);

            otherlv_8=(Token)match(input,15,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_8, grammarAccess.getChkLoopExpressionAccess().getRightCurlyBracketKeyword_8());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleChkLoopExpression"


    // $ANTLR start "entryRuleChkExpression"
    // InternalCheckerDsl.g:3733:1: entryRuleChkExpression returns [EObject current=null] : iv_ruleChkExpression= ruleChkExpression EOF ;
    public final EObject entryRuleChkExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleChkExpression = null;


        try {
            // InternalCheckerDsl.g:3733:54: (iv_ruleChkExpression= ruleChkExpression EOF )
            // InternalCheckerDsl.g:3734:2: iv_ruleChkExpression= ruleChkExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getChkExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleChkExpression=ruleChkExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleChkExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleChkExpression"


    // $ANTLR start "ruleChkExpression"
    // InternalCheckerDsl.g:3740:1: ruleChkExpression returns [EObject current=null] : (otherlv_0= '(' ( (lv_exp_1_0= ruleChkGeneralExpressions ) ) ( ( (lv_where_2_0= 'where' ) ) ( (lv_not_3_0= 'not' ) )? ( ( (lv_cond_4_1= ruleChkRelationalExpression | lv_cond_4_2= ruleHelper ) ) ) ( ( (lv_type_5_0= ruleChkAndOr ) ) ( ( (lv_cond_6_1= ruleChkRelationalExpression | lv_cond_6_2= ruleHelper ) ) ) )* )? ( ( (lv_op_7_0= ruleChkOpRelational ) ) ( (lv_v_8_0= ruleChkVariable ) ) )? otherlv_9= ')' ) ;
    public final EObject ruleChkExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_where_2_0=null;
        Token lv_not_3_0=null;
        Token otherlv_9=null;
        EObject lv_exp_1_0 = null;

        EObject lv_cond_4_1 = null;

        EObject lv_cond_4_2 = null;

        AntlrDatatypeRuleToken lv_type_5_0 = null;

        EObject lv_cond_6_1 = null;

        EObject lv_cond_6_2 = null;

        AntlrDatatypeRuleToken lv_op_7_0 = null;

        EObject lv_v_8_0 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:3746:2: ( (otherlv_0= '(' ( (lv_exp_1_0= ruleChkGeneralExpressions ) ) ( ( (lv_where_2_0= 'where' ) ) ( (lv_not_3_0= 'not' ) )? ( ( (lv_cond_4_1= ruleChkRelationalExpression | lv_cond_4_2= ruleHelper ) ) ) ( ( (lv_type_5_0= ruleChkAndOr ) ) ( ( (lv_cond_6_1= ruleChkRelationalExpression | lv_cond_6_2= ruleHelper ) ) ) )* )? ( ( (lv_op_7_0= ruleChkOpRelational ) ) ( (lv_v_8_0= ruleChkVariable ) ) )? otherlv_9= ')' ) )
            // InternalCheckerDsl.g:3747:2: (otherlv_0= '(' ( (lv_exp_1_0= ruleChkGeneralExpressions ) ) ( ( (lv_where_2_0= 'where' ) ) ( (lv_not_3_0= 'not' ) )? ( ( (lv_cond_4_1= ruleChkRelationalExpression | lv_cond_4_2= ruleHelper ) ) ) ( ( (lv_type_5_0= ruleChkAndOr ) ) ( ( (lv_cond_6_1= ruleChkRelationalExpression | lv_cond_6_2= ruleHelper ) ) ) )* )? ( ( (lv_op_7_0= ruleChkOpRelational ) ) ( (lv_v_8_0= ruleChkVariable ) ) )? otherlv_9= ')' )
            {
            // InternalCheckerDsl.g:3747:2: (otherlv_0= '(' ( (lv_exp_1_0= ruleChkGeneralExpressions ) ) ( ( (lv_where_2_0= 'where' ) ) ( (lv_not_3_0= 'not' ) )? ( ( (lv_cond_4_1= ruleChkRelationalExpression | lv_cond_4_2= ruleHelper ) ) ) ( ( (lv_type_5_0= ruleChkAndOr ) ) ( ( (lv_cond_6_1= ruleChkRelationalExpression | lv_cond_6_2= ruleHelper ) ) ) )* )? ( ( (lv_op_7_0= ruleChkOpRelational ) ) ( (lv_v_8_0= ruleChkVariable ) ) )? otherlv_9= ')' )
            // InternalCheckerDsl.g:3748:3: otherlv_0= '(' ( (lv_exp_1_0= ruleChkGeneralExpressions ) ) ( ( (lv_where_2_0= 'where' ) ) ( (lv_not_3_0= 'not' ) )? ( ( (lv_cond_4_1= ruleChkRelationalExpression | lv_cond_4_2= ruleHelper ) ) ) ( ( (lv_type_5_0= ruleChkAndOr ) ) ( ( (lv_cond_6_1= ruleChkRelationalExpression | lv_cond_6_2= ruleHelper ) ) ) )* )? ( ( (lv_op_7_0= ruleChkOpRelational ) ) ( (lv_v_8_0= ruleChkVariable ) ) )? otherlv_9= ')'
            {
            otherlv_0=(Token)match(input,19,FOLLOW_44); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getChkExpressionAccess().getLeftParenthesisKeyword_0());
              		
            }
            // InternalCheckerDsl.g:3752:3: ( (lv_exp_1_0= ruleChkGeneralExpressions ) )
            // InternalCheckerDsl.g:3753:4: (lv_exp_1_0= ruleChkGeneralExpressions )
            {
            // InternalCheckerDsl.g:3753:4: (lv_exp_1_0= ruleChkGeneralExpressions )
            // InternalCheckerDsl.g:3754:5: lv_exp_1_0= ruleChkGeneralExpressions
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getChkExpressionAccess().getExpChkGeneralExpressionsParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_45);
            lv_exp_1_0=ruleChkGeneralExpressions();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getChkExpressionRule());
              					}
              					set(
              						current,
              						"exp",
              						lv_exp_1_0,
              						"org.xtext.example.checkerdsl.CheckerDsl.ChkGeneralExpressions");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalCheckerDsl.g:3771:3: ( ( (lv_where_2_0= 'where' ) ) ( (lv_not_3_0= 'not' ) )? ( ( (lv_cond_4_1= ruleChkRelationalExpression | lv_cond_4_2= ruleHelper ) ) ) ( ( (lv_type_5_0= ruleChkAndOr ) ) ( ( (lv_cond_6_1= ruleChkRelationalExpression | lv_cond_6_2= ruleHelper ) ) ) )* )?
            int alt46=2;
            int LA46_0 = input.LA(1);

            if ( (LA46_0==90) ) {
                alt46=1;
            }
            switch (alt46) {
                case 1 :
                    // InternalCheckerDsl.g:3772:4: ( (lv_where_2_0= 'where' ) ) ( (lv_not_3_0= 'not' ) )? ( ( (lv_cond_4_1= ruleChkRelationalExpression | lv_cond_4_2= ruleHelper ) ) ) ( ( (lv_type_5_0= ruleChkAndOr ) ) ( ( (lv_cond_6_1= ruleChkRelationalExpression | lv_cond_6_2= ruleHelper ) ) ) )*
                    {
                    // InternalCheckerDsl.g:3772:4: ( (lv_where_2_0= 'where' ) )
                    // InternalCheckerDsl.g:3773:5: (lv_where_2_0= 'where' )
                    {
                    // InternalCheckerDsl.g:3773:5: (lv_where_2_0= 'where' )
                    // InternalCheckerDsl.g:3774:6: lv_where_2_0= 'where'
                    {
                    lv_where_2_0=(Token)match(input,90,FOLLOW_46); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_where_2_0, grammarAccess.getChkExpressionAccess().getWhereWhereKeyword_2_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getChkExpressionRule());
                      						}
                      						setWithLastConsumed(current, "where", lv_where_2_0, "where");
                      					
                    }

                    }


                    }

                    // InternalCheckerDsl.g:3786:4: ( (lv_not_3_0= 'not' ) )?
                    int alt42=2;
                    int LA42_0 = input.LA(1);

                    if ( (LA42_0==91) ) {
                        alt42=1;
                    }
                    switch (alt42) {
                        case 1 :
                            // InternalCheckerDsl.g:3787:5: (lv_not_3_0= 'not' )
                            {
                            // InternalCheckerDsl.g:3787:5: (lv_not_3_0= 'not' )
                            // InternalCheckerDsl.g:3788:6: lv_not_3_0= 'not'
                            {
                            lv_not_3_0=(Token)match(input,91,FOLLOW_42); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_not_3_0, grammarAccess.getChkExpressionAccess().getNotNotKeyword_2_1_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getChkExpressionRule());
                              						}
                              						setWithLastConsumed(current, "not", lv_not_3_0, "not");
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalCheckerDsl.g:3800:4: ( ( (lv_cond_4_1= ruleChkRelationalExpression | lv_cond_4_2= ruleHelper ) ) )
                    // InternalCheckerDsl.g:3801:5: ( (lv_cond_4_1= ruleChkRelationalExpression | lv_cond_4_2= ruleHelper ) )
                    {
                    // InternalCheckerDsl.g:3801:5: ( (lv_cond_4_1= ruleChkRelationalExpression | lv_cond_4_2= ruleHelper ) )
                    // InternalCheckerDsl.g:3802:6: (lv_cond_4_1= ruleChkRelationalExpression | lv_cond_4_2= ruleHelper )
                    {
                    // InternalCheckerDsl.g:3802:6: (lv_cond_4_1= ruleChkRelationalExpression | lv_cond_4_2= ruleHelper )
                    int alt43=2;
                    int LA43_0 = input.LA(1);

                    if ( (LA43_0==RULE_INT||LA43_0==RULE_ID||(LA43_0>=41 && LA43_0<=43)||LA43_0==46||LA43_0==77) ) {
                        alt43=1;
                    }
                    else if ( ((LA43_0>=48 && LA43_0<=53)||(LA43_0>=55 && LA43_0<=73)) ) {
                        alt43=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 43, 0, input);

                        throw nvae;
                    }
                    switch (alt43) {
                        case 1 :
                            // InternalCheckerDsl.g:3803:7: lv_cond_4_1= ruleChkRelationalExpression
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getChkExpressionAccess().getCondChkRelationalExpressionParserRuleCall_2_2_0_0());
                              						
                            }
                            pushFollow(FOLLOW_47);
                            lv_cond_4_1=ruleChkRelationalExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getChkExpressionRule());
                              							}
                              							add(
                              								current,
                              								"cond",
                              								lv_cond_4_1,
                              								"org.xtext.example.checkerdsl.CheckerDsl.ChkRelationalExpression");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalCheckerDsl.g:3819:7: lv_cond_4_2= ruleHelper
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getChkExpressionAccess().getCondHelperParserRuleCall_2_2_0_1());
                              						
                            }
                            pushFollow(FOLLOW_47);
                            lv_cond_4_2=ruleHelper();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getChkExpressionRule());
                              							}
                              							add(
                              								current,
                              								"cond",
                              								lv_cond_4_2,
                              								"org.xtext.example.checkerdsl.CheckerDsl.Helper");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }
                            break;

                    }


                    }


                    }

                    // InternalCheckerDsl.g:3837:4: ( ( (lv_type_5_0= ruleChkAndOr ) ) ( ( (lv_cond_6_1= ruleChkRelationalExpression | lv_cond_6_2= ruleHelper ) ) ) )*
                    loop45:
                    do {
                        int alt45=2;
                        int LA45_0 = input.LA(1);

                        if ( ((LA45_0>=87 && LA45_0<=88)) ) {
                            alt45=1;
                        }


                        switch (alt45) {
                    	case 1 :
                    	    // InternalCheckerDsl.g:3838:5: ( (lv_type_5_0= ruleChkAndOr ) ) ( ( (lv_cond_6_1= ruleChkRelationalExpression | lv_cond_6_2= ruleHelper ) ) )
                    	    {
                    	    // InternalCheckerDsl.g:3838:5: ( (lv_type_5_0= ruleChkAndOr ) )
                    	    // InternalCheckerDsl.g:3839:6: (lv_type_5_0= ruleChkAndOr )
                    	    {
                    	    // InternalCheckerDsl.g:3839:6: (lv_type_5_0= ruleChkAndOr )
                    	    // InternalCheckerDsl.g:3840:7: lv_type_5_0= ruleChkAndOr
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getChkExpressionAccess().getTypeChkAndOrParserRuleCall_2_3_0_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_42);
                    	    lv_type_5_0=ruleChkAndOr();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getChkExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"type",
                    	      								lv_type_5_0,
                    	      								"org.xtext.example.checkerdsl.CheckerDsl.ChkAndOr");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }

                    	    // InternalCheckerDsl.g:3857:5: ( ( (lv_cond_6_1= ruleChkRelationalExpression | lv_cond_6_2= ruleHelper ) ) )
                    	    // InternalCheckerDsl.g:3858:6: ( (lv_cond_6_1= ruleChkRelationalExpression | lv_cond_6_2= ruleHelper ) )
                    	    {
                    	    // InternalCheckerDsl.g:3858:6: ( (lv_cond_6_1= ruleChkRelationalExpression | lv_cond_6_2= ruleHelper ) )
                    	    // InternalCheckerDsl.g:3859:7: (lv_cond_6_1= ruleChkRelationalExpression | lv_cond_6_2= ruleHelper )
                    	    {
                    	    // InternalCheckerDsl.g:3859:7: (lv_cond_6_1= ruleChkRelationalExpression | lv_cond_6_2= ruleHelper )
                    	    int alt44=2;
                    	    int LA44_0 = input.LA(1);

                    	    if ( (LA44_0==RULE_INT||LA44_0==RULE_ID||(LA44_0>=41 && LA44_0<=43)||LA44_0==46||LA44_0==77) ) {
                    	        alt44=1;
                    	    }
                    	    else if ( ((LA44_0>=48 && LA44_0<=53)||(LA44_0>=55 && LA44_0<=73)) ) {
                    	        alt44=2;
                    	    }
                    	    else {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 44, 0, input);

                    	        throw nvae;
                    	    }
                    	    switch (alt44) {
                    	        case 1 :
                    	            // InternalCheckerDsl.g:3860:8: lv_cond_6_1= ruleChkRelationalExpression
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              								newCompositeNode(grammarAccess.getChkExpressionAccess().getCondChkRelationalExpressionParserRuleCall_2_3_1_0_0());
                    	              							
                    	            }
                    	            pushFollow(FOLLOW_47);
                    	            lv_cond_6_1=ruleChkRelationalExpression();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              								if (current==null) {
                    	              									current = createModelElementForParent(grammarAccess.getChkExpressionRule());
                    	              								}
                    	              								add(
                    	              									current,
                    	              									"cond",
                    	              									lv_cond_6_1,
                    	              									"org.xtext.example.checkerdsl.CheckerDsl.ChkRelationalExpression");
                    	              								afterParserOrEnumRuleCall();
                    	              							
                    	            }

                    	            }
                    	            break;
                    	        case 2 :
                    	            // InternalCheckerDsl.g:3876:8: lv_cond_6_2= ruleHelper
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              								newCompositeNode(grammarAccess.getChkExpressionAccess().getCondHelperParserRuleCall_2_3_1_0_1());
                    	              							
                    	            }
                    	            pushFollow(FOLLOW_47);
                    	            lv_cond_6_2=ruleHelper();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              								if (current==null) {
                    	              									current = createModelElementForParent(grammarAccess.getChkExpressionRule());
                    	              								}
                    	              								add(
                    	              									current,
                    	              									"cond",
                    	              									lv_cond_6_2,
                    	              									"org.xtext.example.checkerdsl.CheckerDsl.Helper");
                    	              								afterParserOrEnumRuleCall();
                    	              							
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop45;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalCheckerDsl.g:3896:3: ( ( (lv_op_7_0= ruleChkOpRelational ) ) ( (lv_v_8_0= ruleChkVariable ) ) )?
            int alt47=2;
            int LA47_0 = input.LA(1);

            if ( ((LA47_0>=46 && LA47_0<=47)||(LA47_0>=83 && LA47_0<=86)) ) {
                alt47=1;
            }
            switch (alt47) {
                case 1 :
                    // InternalCheckerDsl.g:3897:4: ( (lv_op_7_0= ruleChkOpRelational ) ) ( (lv_v_8_0= ruleChkVariable ) )
                    {
                    // InternalCheckerDsl.g:3897:4: ( (lv_op_7_0= ruleChkOpRelational ) )
                    // InternalCheckerDsl.g:3898:5: (lv_op_7_0= ruleChkOpRelational )
                    {
                    // InternalCheckerDsl.g:3898:5: (lv_op_7_0= ruleChkOpRelational )
                    // InternalCheckerDsl.g:3899:6: lv_op_7_0= ruleChkOpRelational
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getChkExpressionAccess().getOpChkOpRelationalParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_33);
                    lv_op_7_0=ruleChkOpRelational();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getChkExpressionRule());
                      						}
                      						set(
                      							current,
                      							"op",
                      							lv_op_7_0,
                      							"org.xtext.example.checkerdsl.CheckerDsl.ChkOpRelational");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalCheckerDsl.g:3916:4: ( (lv_v_8_0= ruleChkVariable ) )
                    // InternalCheckerDsl.g:3917:5: (lv_v_8_0= ruleChkVariable )
                    {
                    // InternalCheckerDsl.g:3917:5: (lv_v_8_0= ruleChkVariable )
                    // InternalCheckerDsl.g:3918:6: lv_v_8_0= ruleChkVariable
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getChkExpressionAccess().getVChkVariableParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_15);
                    lv_v_8_0=ruleChkVariable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getChkExpressionRule());
                      						}
                      						set(
                      							current,
                      							"v",
                      							lv_v_8_0,
                      							"org.xtext.example.checkerdsl.CheckerDsl.ChkVariable");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_9=(Token)match(input,21,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_9, grammarAccess.getChkExpressionAccess().getRightParenthesisKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleChkExpression"


    // $ANTLR start "entryRuleCheck"
    // InternalCheckerDsl.g:3944:1: entryRuleCheck returns [EObject current=null] : iv_ruleCheck= ruleCheck EOF ;
    public final EObject entryRuleCheck() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCheck = null;


        try {
            // InternalCheckerDsl.g:3944:46: (iv_ruleCheck= ruleCheck EOF )
            // InternalCheckerDsl.g:3945:2: iv_ruleCheck= ruleCheck EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCheckRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCheck=ruleCheck();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCheck; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCheck"


    // $ANTLR start "ruleCheck"
    // InternalCheckerDsl.g:3951:1: ruleCheck returns [EObject current=null] : ( ( (lv_check_0_0= 'check' ) ) otherlv_1= '{' ( ( (lv_chk_2_1= ruleChkExpression | lv_chk_2_2= ruleChkLoopExpression ) ) )* otherlv_3= '}' ) ;
    public final EObject ruleCheck() throws RecognitionException {
        EObject current = null;

        Token lv_check_0_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_chk_2_1 = null;

        EObject lv_chk_2_2 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:3957:2: ( ( ( (lv_check_0_0= 'check' ) ) otherlv_1= '{' ( ( (lv_chk_2_1= ruleChkExpression | lv_chk_2_2= ruleChkLoopExpression ) ) )* otherlv_3= '}' ) )
            // InternalCheckerDsl.g:3958:2: ( ( (lv_check_0_0= 'check' ) ) otherlv_1= '{' ( ( (lv_chk_2_1= ruleChkExpression | lv_chk_2_2= ruleChkLoopExpression ) ) )* otherlv_3= '}' )
            {
            // InternalCheckerDsl.g:3958:2: ( ( (lv_check_0_0= 'check' ) ) otherlv_1= '{' ( ( (lv_chk_2_1= ruleChkExpression | lv_chk_2_2= ruleChkLoopExpression ) ) )* otherlv_3= '}' )
            // InternalCheckerDsl.g:3959:3: ( (lv_check_0_0= 'check' ) ) otherlv_1= '{' ( ( (lv_chk_2_1= ruleChkExpression | lv_chk_2_2= ruleChkLoopExpression ) ) )* otherlv_3= '}'
            {
            // InternalCheckerDsl.g:3959:3: ( (lv_check_0_0= 'check' ) )
            // InternalCheckerDsl.g:3960:4: (lv_check_0_0= 'check' )
            {
            // InternalCheckerDsl.g:3960:4: (lv_check_0_0= 'check' )
            // InternalCheckerDsl.g:3961:5: lv_check_0_0= 'check'
            {
            lv_check_0_0=(Token)match(input,25,FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_check_0_0, grammarAccess.getCheckAccess().getCheckCheckKeyword_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getCheckRule());
              					}
              					setWithLastConsumed(current, "check", lv_check_0_0, "check");
              				
            }

            }


            }

            otherlv_1=(Token)match(input,14,FOLLOW_17); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getCheckAccess().getLeftCurlyBracketKeyword_1());
              		
            }
            // InternalCheckerDsl.g:3977:3: ( ( (lv_chk_2_1= ruleChkExpression | lv_chk_2_2= ruleChkLoopExpression ) ) )*
            loop49:
            do {
                int alt49=2;
                int LA49_0 = input.LA(1);

                if ( (LA49_0==19||LA49_0==89) ) {
                    alt49=1;
                }


                switch (alt49) {
            	case 1 :
            	    // InternalCheckerDsl.g:3978:4: ( (lv_chk_2_1= ruleChkExpression | lv_chk_2_2= ruleChkLoopExpression ) )
            	    {
            	    // InternalCheckerDsl.g:3978:4: ( (lv_chk_2_1= ruleChkExpression | lv_chk_2_2= ruleChkLoopExpression ) )
            	    // InternalCheckerDsl.g:3979:5: (lv_chk_2_1= ruleChkExpression | lv_chk_2_2= ruleChkLoopExpression )
            	    {
            	    // InternalCheckerDsl.g:3979:5: (lv_chk_2_1= ruleChkExpression | lv_chk_2_2= ruleChkLoopExpression )
            	    int alt48=2;
            	    int LA48_0 = input.LA(1);

            	    if ( (LA48_0==19) ) {
            	        alt48=1;
            	    }
            	    else if ( (LA48_0==89) ) {
            	        alt48=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 48, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt48) {
            	        case 1 :
            	            // InternalCheckerDsl.g:3980:6: lv_chk_2_1= ruleChkExpression
            	            {
            	            if ( state.backtracking==0 ) {

            	              						newCompositeNode(grammarAccess.getCheckAccess().getChkChkExpressionParserRuleCall_2_0_0());
            	              					
            	            }
            	            pushFollow(FOLLOW_17);
            	            lv_chk_2_1=ruleChkExpression();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              						if (current==null) {
            	              							current = createModelElementForParent(grammarAccess.getCheckRule());
            	              						}
            	              						add(
            	              							current,
            	              							"chk",
            	              							lv_chk_2_1,
            	              							"org.xtext.example.checkerdsl.CheckerDsl.ChkExpression");
            	              						afterParserOrEnumRuleCall();
            	              					
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalCheckerDsl.g:3996:6: lv_chk_2_2= ruleChkLoopExpression
            	            {
            	            if ( state.backtracking==0 ) {

            	              						newCompositeNode(grammarAccess.getCheckAccess().getChkChkLoopExpressionParserRuleCall_2_0_1());
            	              					
            	            }
            	            pushFollow(FOLLOW_17);
            	            lv_chk_2_2=ruleChkLoopExpression();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              						if (current==null) {
            	              							current = createModelElementForParent(grammarAccess.getCheckRule());
            	              						}
            	              						add(
            	              							current,
            	              							"chk",
            	              							lv_chk_2_2,
            	              							"org.xtext.example.checkerdsl.CheckerDsl.ChkLoopExpression");
            	              						afterParserOrEnumRuleCall();
            	              					
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop49;
                }
            } while (true);

            otherlv_3=(Token)match(input,15,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getCheckAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCheck"


    // $ANTLR start "entryRuleSpValue"
    // InternalCheckerDsl.g:4022:1: entryRuleSpValue returns [EObject current=null] : iv_ruleSpValue= ruleSpValue EOF ;
    public final EObject entryRuleSpValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSpValue = null;


        try {
            // InternalCheckerDsl.g:4022:48: (iv_ruleSpValue= ruleSpValue EOF )
            // InternalCheckerDsl.g:4023:2: iv_ruleSpValue= ruleSpValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSpValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSpValue=ruleSpValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSpValue; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSpValue"


    // $ANTLR start "ruleSpValue"
    // InternalCheckerDsl.g:4029:1: ruleSpValue returns [EObject current=null] : ( ( (lv_val_0_0= ruleCHK_NUMBER ) ) (otherlv_1= ',' ( (lv_val_2_0= ruleCHK_NUMBER ) ) )* ) ;
    public final EObject ruleSpValue() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_val_0_0 = null;

        AntlrDatatypeRuleToken lv_val_2_0 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:4035:2: ( ( ( (lv_val_0_0= ruleCHK_NUMBER ) ) (otherlv_1= ',' ( (lv_val_2_0= ruleCHK_NUMBER ) ) )* ) )
            // InternalCheckerDsl.g:4036:2: ( ( (lv_val_0_0= ruleCHK_NUMBER ) ) (otherlv_1= ',' ( (lv_val_2_0= ruleCHK_NUMBER ) ) )* )
            {
            // InternalCheckerDsl.g:4036:2: ( ( (lv_val_0_0= ruleCHK_NUMBER ) ) (otherlv_1= ',' ( (lv_val_2_0= ruleCHK_NUMBER ) ) )* )
            // InternalCheckerDsl.g:4037:3: ( (lv_val_0_0= ruleCHK_NUMBER ) ) (otherlv_1= ',' ( (lv_val_2_0= ruleCHK_NUMBER ) ) )*
            {
            // InternalCheckerDsl.g:4037:3: ( (lv_val_0_0= ruleCHK_NUMBER ) )
            // InternalCheckerDsl.g:4038:4: (lv_val_0_0= ruleCHK_NUMBER )
            {
            // InternalCheckerDsl.g:4038:4: (lv_val_0_0= ruleCHK_NUMBER )
            // InternalCheckerDsl.g:4039:5: lv_val_0_0= ruleCHK_NUMBER
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSpValueAccess().getValCHK_NUMBERParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_48);
            lv_val_0_0=ruleCHK_NUMBER();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSpValueRule());
              					}
              					add(
              						current,
              						"val",
              						lv_val_0_0,
              						"org.xtext.example.checkerdsl.CheckerDsl.CHK_NUMBER");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalCheckerDsl.g:4056:3: (otherlv_1= ',' ( (lv_val_2_0= ruleCHK_NUMBER ) ) )*
            loop50:
            do {
                int alt50=2;
                int LA50_0 = input.LA(1);

                if ( (LA50_0==20) ) {
                    alt50=1;
                }


                switch (alt50) {
            	case 1 :
            	    // InternalCheckerDsl.g:4057:4: otherlv_1= ',' ( (lv_val_2_0= ruleCHK_NUMBER ) )
            	    {
            	    otherlv_1=(Token)match(input,20,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getSpValueAccess().getCommaKeyword_1_0());
            	      			
            	    }
            	    // InternalCheckerDsl.g:4061:4: ( (lv_val_2_0= ruleCHK_NUMBER ) )
            	    // InternalCheckerDsl.g:4062:5: (lv_val_2_0= ruleCHK_NUMBER )
            	    {
            	    // InternalCheckerDsl.g:4062:5: (lv_val_2_0= ruleCHK_NUMBER )
            	    // InternalCheckerDsl.g:4063:6: lv_val_2_0= ruleCHK_NUMBER
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getSpValueAccess().getValCHK_NUMBERParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_48);
            	    lv_val_2_0=ruleCHK_NUMBER();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getSpValueRule());
            	      						}
            	      						add(
            	      							current,
            	      							"val",
            	      							lv_val_2_0,
            	      							"org.xtext.example.checkerdsl.CheckerDsl.CHK_NUMBER");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop50;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSpValue"


    // $ANTLR start "entryRuleLimit"
    // InternalCheckerDsl.g:4085:1: entryRuleLimit returns [EObject current=null] : iv_ruleLimit= ruleLimit EOF ;
    public final EObject entryRuleLimit() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLimit = null;


        try {
            // InternalCheckerDsl.g:4085:46: (iv_ruleLimit= ruleLimit EOF )
            // InternalCheckerDsl.g:4086:2: iv_ruleLimit= ruleLimit EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLimitRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLimit=ruleLimit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLimit; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLimit"


    // $ANTLR start "ruleLimit"
    // InternalCheckerDsl.g:4092:1: ruleLimit returns [EObject current=null] : ( ( (lv_sub_0_0= ruleSubtask ) )? ( (lv_a_1_0= ruleCHK_ELEMENT ) ) otherlv_2= '..' ( (lv_b_3_0= ruleCHK_ELEMENT ) ) (otherlv_4= ',' ( (lv_a_5_0= ruleCHK_ELEMENT ) ) otherlv_6= '..' ( (lv_b_7_0= ruleCHK_ELEMENT ) ) )* ) ;
    public final EObject ruleLimit() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_sub_0_0 = null;

        AntlrDatatypeRuleToken lv_a_1_0 = null;

        AntlrDatatypeRuleToken lv_b_3_0 = null;

        AntlrDatatypeRuleToken lv_a_5_0 = null;

        AntlrDatatypeRuleToken lv_b_7_0 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:4098:2: ( ( ( (lv_sub_0_0= ruleSubtask ) )? ( (lv_a_1_0= ruleCHK_ELEMENT ) ) otherlv_2= '..' ( (lv_b_3_0= ruleCHK_ELEMENT ) ) (otherlv_4= ',' ( (lv_a_5_0= ruleCHK_ELEMENT ) ) otherlv_6= '..' ( (lv_b_7_0= ruleCHK_ELEMENT ) ) )* ) )
            // InternalCheckerDsl.g:4099:2: ( ( (lv_sub_0_0= ruleSubtask ) )? ( (lv_a_1_0= ruleCHK_ELEMENT ) ) otherlv_2= '..' ( (lv_b_3_0= ruleCHK_ELEMENT ) ) (otherlv_4= ',' ( (lv_a_5_0= ruleCHK_ELEMENT ) ) otherlv_6= '..' ( (lv_b_7_0= ruleCHK_ELEMENT ) ) )* )
            {
            // InternalCheckerDsl.g:4099:2: ( ( (lv_sub_0_0= ruleSubtask ) )? ( (lv_a_1_0= ruleCHK_ELEMENT ) ) otherlv_2= '..' ( (lv_b_3_0= ruleCHK_ELEMENT ) ) (otherlv_4= ',' ( (lv_a_5_0= ruleCHK_ELEMENT ) ) otherlv_6= '..' ( (lv_b_7_0= ruleCHK_ELEMENT ) ) )* )
            // InternalCheckerDsl.g:4100:3: ( (lv_sub_0_0= ruleSubtask ) )? ( (lv_a_1_0= ruleCHK_ELEMENT ) ) otherlv_2= '..' ( (lv_b_3_0= ruleCHK_ELEMENT ) ) (otherlv_4= ',' ( (lv_a_5_0= ruleCHK_ELEMENT ) ) otherlv_6= '..' ( (lv_b_7_0= ruleCHK_ELEMENT ) ) )*
            {
            // InternalCheckerDsl.g:4100:3: ( (lv_sub_0_0= ruleSubtask ) )?
            int alt51=2;
            int LA51_0 = input.LA(1);

            if ( (LA51_0==92) ) {
                alt51=1;
            }
            switch (alt51) {
                case 1 :
                    // InternalCheckerDsl.g:4101:4: (lv_sub_0_0= ruleSubtask )
                    {
                    // InternalCheckerDsl.g:4101:4: (lv_sub_0_0= ruleSubtask )
                    // InternalCheckerDsl.g:4102:5: lv_sub_0_0= ruleSubtask
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLimitAccess().getSubSubtaskParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_26);
                    lv_sub_0_0=ruleSubtask();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLimitRule());
                      					}
                      					set(
                      						current,
                      						"sub",
                      						lv_sub_0_0,
                      						"org.xtext.example.checkerdsl.CheckerDsl.Subtask");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalCheckerDsl.g:4119:3: ( (lv_a_1_0= ruleCHK_ELEMENT ) )
            // InternalCheckerDsl.g:4120:4: (lv_a_1_0= ruleCHK_ELEMENT )
            {
            // InternalCheckerDsl.g:4120:4: (lv_a_1_0= ruleCHK_ELEMENT )
            // InternalCheckerDsl.g:4121:5: lv_a_1_0= ruleCHK_ELEMENT
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getLimitAccess().getACHK_ELEMENTParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_38);
            lv_a_1_0=ruleCHK_ELEMENT();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getLimitRule());
              					}
              					add(
              						current,
              						"a",
              						lv_a_1_0,
              						"org.xtext.example.checkerdsl.CheckerDsl.CHK_ELEMENT");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,54,FOLLOW_26); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getLimitAccess().getFullStopFullStopKeyword_2());
              		
            }
            // InternalCheckerDsl.g:4142:3: ( (lv_b_3_0= ruleCHK_ELEMENT ) )
            // InternalCheckerDsl.g:4143:4: (lv_b_3_0= ruleCHK_ELEMENT )
            {
            // InternalCheckerDsl.g:4143:4: (lv_b_3_0= ruleCHK_ELEMENT )
            // InternalCheckerDsl.g:4144:5: lv_b_3_0= ruleCHK_ELEMENT
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getLimitAccess().getBCHK_ELEMENTParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_48);
            lv_b_3_0=ruleCHK_ELEMENT();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getLimitRule());
              					}
              					add(
              						current,
              						"b",
              						lv_b_3_0,
              						"org.xtext.example.checkerdsl.CheckerDsl.CHK_ELEMENT");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalCheckerDsl.g:4161:3: (otherlv_4= ',' ( (lv_a_5_0= ruleCHK_ELEMENT ) ) otherlv_6= '..' ( (lv_b_7_0= ruleCHK_ELEMENT ) ) )*
            loop52:
            do {
                int alt52=2;
                int LA52_0 = input.LA(1);

                if ( (LA52_0==20) ) {
                    alt52=1;
                }


                switch (alt52) {
            	case 1 :
            	    // InternalCheckerDsl.g:4162:4: otherlv_4= ',' ( (lv_a_5_0= ruleCHK_ELEMENT ) ) otherlv_6= '..' ( (lv_b_7_0= ruleCHK_ELEMENT ) )
            	    {
            	    otherlv_4=(Token)match(input,20,FOLLOW_26); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_4, grammarAccess.getLimitAccess().getCommaKeyword_4_0());
            	      			
            	    }
            	    // InternalCheckerDsl.g:4166:4: ( (lv_a_5_0= ruleCHK_ELEMENT ) )
            	    // InternalCheckerDsl.g:4167:5: (lv_a_5_0= ruleCHK_ELEMENT )
            	    {
            	    // InternalCheckerDsl.g:4167:5: (lv_a_5_0= ruleCHK_ELEMENT )
            	    // InternalCheckerDsl.g:4168:6: lv_a_5_0= ruleCHK_ELEMENT
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getLimitAccess().getACHK_ELEMENTParserRuleCall_4_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_38);
            	    lv_a_5_0=ruleCHK_ELEMENT();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getLimitRule());
            	      						}
            	      						add(
            	      							current,
            	      							"a",
            	      							lv_a_5_0,
            	      							"org.xtext.example.checkerdsl.CheckerDsl.CHK_ELEMENT");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_6=(Token)match(input,54,FOLLOW_26); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_6, grammarAccess.getLimitAccess().getFullStopFullStopKeyword_4_2());
            	      			
            	    }
            	    // InternalCheckerDsl.g:4189:4: ( (lv_b_7_0= ruleCHK_ELEMENT ) )
            	    // InternalCheckerDsl.g:4190:5: (lv_b_7_0= ruleCHK_ELEMENT )
            	    {
            	    // InternalCheckerDsl.g:4190:5: (lv_b_7_0= ruleCHK_ELEMENT )
            	    // InternalCheckerDsl.g:4191:6: lv_b_7_0= ruleCHK_ELEMENT
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getLimitAccess().getBCHK_ELEMENTParserRuleCall_4_3_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_48);
            	    lv_b_7_0=ruleCHK_ELEMENT();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getLimitRule());
            	      						}
            	      						add(
            	      							current,
            	      							"b",
            	      							lv_b_7_0,
            	      							"org.xtext.example.checkerdsl.CheckerDsl.CHK_ELEMENT");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop52;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLimit"


    // $ANTLR start "entryRuleSubtask"
    // InternalCheckerDsl.g:4213:1: entryRuleSubtask returns [EObject current=null] : iv_ruleSubtask= ruleSubtask EOF ;
    public final EObject entryRuleSubtask() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSubtask = null;


        try {
            // InternalCheckerDsl.g:4213:48: (iv_ruleSubtask= ruleSubtask EOF )
            // InternalCheckerDsl.g:4214:2: iv_ruleSubtask= ruleSubtask EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSubtaskRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSubtask=ruleSubtask();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSubtask; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSubtask"


    // $ANTLR start "ruleSubtask"
    // InternalCheckerDsl.g:4220:1: ruleSubtask returns [EObject current=null] : (otherlv_0= 'subtask' ( (lv_num_1_0= RULE_INT ) ) otherlv_2= ':' ) ;
    public final EObject ruleSubtask() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_num_1_0=null;
        Token otherlv_2=null;


        	enterRule();

        try {
            // InternalCheckerDsl.g:4226:2: ( (otherlv_0= 'subtask' ( (lv_num_1_0= RULE_INT ) ) otherlv_2= ':' ) )
            // InternalCheckerDsl.g:4227:2: (otherlv_0= 'subtask' ( (lv_num_1_0= RULE_INT ) ) otherlv_2= ':' )
            {
            // InternalCheckerDsl.g:4227:2: (otherlv_0= 'subtask' ( (lv_num_1_0= RULE_INT ) ) otherlv_2= ':' )
            // InternalCheckerDsl.g:4228:3: otherlv_0= 'subtask' ( (lv_num_1_0= RULE_INT ) ) otherlv_2= ':'
            {
            otherlv_0=(Token)match(input,92,FOLLOW_18); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getSubtaskAccess().getSubtaskKeyword_0());
              		
            }
            // InternalCheckerDsl.g:4232:3: ( (lv_num_1_0= RULE_INT ) )
            // InternalCheckerDsl.g:4233:4: (lv_num_1_0= RULE_INT )
            {
            // InternalCheckerDsl.g:4233:4: (lv_num_1_0= RULE_INT )
            // InternalCheckerDsl.g:4234:5: lv_num_1_0= RULE_INT
            {
            lv_num_1_0=(Token)match(input,RULE_INT,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_num_1_0, grammarAccess.getSubtaskAccess().getNumINTTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getSubtaskRule());
              					}
              					setWithLastConsumed(
              						current,
              						"num",
              						lv_num_1_0,
              						"org.eclipse.xtext.xbase.Xbase.INT");
              				
            }

            }


            }

            otherlv_2=(Token)match(input,22,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getSubtaskAccess().getColonKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSubtask"


    // $ANTLR start "entryRuleFormat"
    // InternalCheckerDsl.g:4258:1: entryRuleFormat returns [EObject current=null] : iv_ruleFormat= ruleFormat EOF ;
    public final EObject entryRuleFormat() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFormat = null;


        try {
            // InternalCheckerDsl.g:4258:47: (iv_ruleFormat= ruleFormat EOF )
            // InternalCheckerDsl.g:4259:2: iv_ruleFormat= ruleFormat EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFormatRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFormat=ruleFormat();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFormat; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFormat"


    // $ANTLR start "ruleFormat"
    // InternalCheckerDsl.g:4265:1: ruleFormat returns [EObject current=null] : (this_InputFormat_0= ruleInputFormat | this_OutputFormat_1= ruleOutputFormat | this_HiddenFormat_2= ruleHiddenFormat ) ;
    public final EObject ruleFormat() throws RecognitionException {
        EObject current = null;

        EObject this_InputFormat_0 = null;

        EObject this_OutputFormat_1 = null;

        EObject this_HiddenFormat_2 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:4271:2: ( (this_InputFormat_0= ruleInputFormat | this_OutputFormat_1= ruleOutputFormat | this_HiddenFormat_2= ruleHiddenFormat ) )
            // InternalCheckerDsl.g:4272:2: (this_InputFormat_0= ruleInputFormat | this_OutputFormat_1= ruleOutputFormat | this_HiddenFormat_2= ruleHiddenFormat )
            {
            // InternalCheckerDsl.g:4272:2: (this_InputFormat_0= ruleInputFormat | this_OutputFormat_1= ruleOutputFormat | this_HiddenFormat_2= ruleHiddenFormat )
            int alt53=3;
            switch ( input.LA(1) ) {
            case 93:
                {
                alt53=1;
                }
                break;
            case 94:
                {
                alt53=2;
                }
                break;
            case 95:
                {
                alt53=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 53, 0, input);

                throw nvae;
            }

            switch (alt53) {
                case 1 :
                    // InternalCheckerDsl.g:4273:3: this_InputFormat_0= ruleInputFormat
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFormatAccess().getInputFormatParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_InputFormat_0=ruleInputFormat();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_InputFormat_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalCheckerDsl.g:4282:3: this_OutputFormat_1= ruleOutputFormat
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFormatAccess().getOutputFormatParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_OutputFormat_1=ruleOutputFormat();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_OutputFormat_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalCheckerDsl.g:4291:3: this_HiddenFormat_2= ruleHiddenFormat
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFormatAccess().getHiddenFormatParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_HiddenFormat_2=ruleHiddenFormat();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_HiddenFormat_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFormat"


    // $ANTLR start "entryRuleForFormatExpression"
    // InternalCheckerDsl.g:4303:1: entryRuleForFormatExpression returns [EObject current=null] : iv_ruleForFormatExpression= ruleForFormatExpression EOF ;
    public final EObject entryRuleForFormatExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleForFormatExpression = null;


        try {
            // InternalCheckerDsl.g:4303:60: (iv_ruleForFormatExpression= ruleForFormatExpression EOF )
            // InternalCheckerDsl.g:4304:2: iv_ruleForFormatExpression= ruleForFormatExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getForFormatExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleForFormatExpression=ruleForFormatExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleForFormatExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleForFormatExpression"


    // $ANTLR start "ruleForFormatExpression"
    // InternalCheckerDsl.g:4310:1: ruleForFormatExpression returns [EObject current=null] : (otherlv_0= 'for' otherlv_1= '(' ( (lv_index_2_0= ruleChkVariable ) ) otherlv_3= ',' ( (lv_maxIndex_4_0= ruleChkVariables ) ) otherlv_5= ')' otherlv_6= '{' ( (lv_ex_7_0= ruleFormatExpression ) )* otherlv_8= '}' ) ;
    public final EObject ruleForFormatExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        EObject lv_index_2_0 = null;

        EObject lv_maxIndex_4_0 = null;

        EObject lv_ex_7_0 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:4316:2: ( (otherlv_0= 'for' otherlv_1= '(' ( (lv_index_2_0= ruleChkVariable ) ) otherlv_3= ',' ( (lv_maxIndex_4_0= ruleChkVariables ) ) otherlv_5= ')' otherlv_6= '{' ( (lv_ex_7_0= ruleFormatExpression ) )* otherlv_8= '}' ) )
            // InternalCheckerDsl.g:4317:2: (otherlv_0= 'for' otherlv_1= '(' ( (lv_index_2_0= ruleChkVariable ) ) otherlv_3= ',' ( (lv_maxIndex_4_0= ruleChkVariables ) ) otherlv_5= ')' otherlv_6= '{' ( (lv_ex_7_0= ruleFormatExpression ) )* otherlv_8= '}' )
            {
            // InternalCheckerDsl.g:4317:2: (otherlv_0= 'for' otherlv_1= '(' ( (lv_index_2_0= ruleChkVariable ) ) otherlv_3= ',' ( (lv_maxIndex_4_0= ruleChkVariables ) ) otherlv_5= ')' otherlv_6= '{' ( (lv_ex_7_0= ruleFormatExpression ) )* otherlv_8= '}' )
            // InternalCheckerDsl.g:4318:3: otherlv_0= 'for' otherlv_1= '(' ( (lv_index_2_0= ruleChkVariable ) ) otherlv_3= ',' ( (lv_maxIndex_4_0= ruleChkVariables ) ) otherlv_5= ')' otherlv_6= '{' ( (lv_ex_7_0= ruleFormatExpression ) )* otherlv_8= '}'
            {
            otherlv_0=(Token)match(input,89,FOLLOW_10); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getForFormatExpressionAccess().getForKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,19,FOLLOW_33); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getForFormatExpressionAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalCheckerDsl.g:4326:3: ( (lv_index_2_0= ruleChkVariable ) )
            // InternalCheckerDsl.g:4327:4: (lv_index_2_0= ruleChkVariable )
            {
            // InternalCheckerDsl.g:4327:4: (lv_index_2_0= ruleChkVariable )
            // InternalCheckerDsl.g:4328:5: lv_index_2_0= ruleChkVariable
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getForFormatExpressionAccess().getIndexChkVariableParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_36);
            lv_index_2_0=ruleChkVariable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getForFormatExpressionRule());
              					}
              					set(
              						current,
              						"index",
              						lv_index_2_0,
              						"org.xtext.example.checkerdsl.CheckerDsl.ChkVariable");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,20,FOLLOW_35); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getForFormatExpressionAccess().getCommaKeyword_3());
              		
            }
            // InternalCheckerDsl.g:4349:3: ( (lv_maxIndex_4_0= ruleChkVariables ) )
            // InternalCheckerDsl.g:4350:4: (lv_maxIndex_4_0= ruleChkVariables )
            {
            // InternalCheckerDsl.g:4350:4: (lv_maxIndex_4_0= ruleChkVariables )
            // InternalCheckerDsl.g:4351:5: lv_maxIndex_4_0= ruleChkVariables
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getForFormatExpressionAccess().getMaxIndexChkVariablesParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_15);
            lv_maxIndex_4_0=ruleChkVariables();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getForFormatExpressionRule());
              					}
              					set(
              						current,
              						"maxIndex",
              						lv_maxIndex_4_0,
              						"org.xtext.example.checkerdsl.CheckerDsl.ChkVariables");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_5=(Token)match(input,21,FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getForFormatExpressionAccess().getRightParenthesisKeyword_5());
              		
            }
            otherlv_6=(Token)match(input,14,FOLLOW_49); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getForFormatExpressionAccess().getLeftCurlyBracketKeyword_6());
              		
            }
            // InternalCheckerDsl.g:4376:3: ( (lv_ex_7_0= ruleFormatExpression ) )*
            loop54:
            do {
                int alt54=2;
                int LA54_0 = input.LA(1);

                if ( (LA54_0==RULE_INT||LA54_0==RULE_ID||LA54_0==77) ) {
                    alt54=1;
                }


                switch (alt54) {
            	case 1 :
            	    // InternalCheckerDsl.g:4377:4: (lv_ex_7_0= ruleFormatExpression )
            	    {
            	    // InternalCheckerDsl.g:4377:4: (lv_ex_7_0= ruleFormatExpression )
            	    // InternalCheckerDsl.g:4378:5: lv_ex_7_0= ruleFormatExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getForFormatExpressionAccess().getExFormatExpressionParserRuleCall_7_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_49);
            	    lv_ex_7_0=ruleFormatExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getForFormatExpressionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"ex",
            	      						lv_ex_7_0,
            	      						"org.xtext.example.checkerdsl.CheckerDsl.FormatExpression");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop54;
                }
            } while (true);

            otherlv_8=(Token)match(input,15,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_8, grammarAccess.getForFormatExpressionAccess().getRightCurlyBracketKeyword_8());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleForFormatExpression"


    // $ANTLR start "entryRuleInputFormat"
    // InternalCheckerDsl.g:4403:1: entryRuleInputFormat returns [EObject current=null] : iv_ruleInputFormat= ruleInputFormat EOF ;
    public final EObject entryRuleInputFormat() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInputFormat = null;


        try {
            // InternalCheckerDsl.g:4403:52: (iv_ruleInputFormat= ruleInputFormat EOF )
            // InternalCheckerDsl.g:4404:2: iv_ruleInputFormat= ruleInputFormat EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInputFormatRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleInputFormat=ruleInputFormat();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInputFormat; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInputFormat"


    // $ANTLR start "ruleInputFormat"
    // InternalCheckerDsl.g:4410:1: ruleInputFormat returns [EObject current=null] : ( ( (lv_input_0_0= 'input' ) ) otherlv_1= '{' ( ( (lv_exp_2_1= ruleFormatExpression | lv_exp_2_2= ruleForFormatExpression ) ) )* otherlv_3= '}' ) ;
    public final EObject ruleInputFormat() throws RecognitionException {
        EObject current = null;

        Token lv_input_0_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_exp_2_1 = null;

        EObject lv_exp_2_2 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:4416:2: ( ( ( (lv_input_0_0= 'input' ) ) otherlv_1= '{' ( ( (lv_exp_2_1= ruleFormatExpression | lv_exp_2_2= ruleForFormatExpression ) ) )* otherlv_3= '}' ) )
            // InternalCheckerDsl.g:4417:2: ( ( (lv_input_0_0= 'input' ) ) otherlv_1= '{' ( ( (lv_exp_2_1= ruleFormatExpression | lv_exp_2_2= ruleForFormatExpression ) ) )* otherlv_3= '}' )
            {
            // InternalCheckerDsl.g:4417:2: ( ( (lv_input_0_0= 'input' ) ) otherlv_1= '{' ( ( (lv_exp_2_1= ruleFormatExpression | lv_exp_2_2= ruleForFormatExpression ) ) )* otherlv_3= '}' )
            // InternalCheckerDsl.g:4418:3: ( (lv_input_0_0= 'input' ) ) otherlv_1= '{' ( ( (lv_exp_2_1= ruleFormatExpression | lv_exp_2_2= ruleForFormatExpression ) ) )* otherlv_3= '}'
            {
            // InternalCheckerDsl.g:4418:3: ( (lv_input_0_0= 'input' ) )
            // InternalCheckerDsl.g:4419:4: (lv_input_0_0= 'input' )
            {
            // InternalCheckerDsl.g:4419:4: (lv_input_0_0= 'input' )
            // InternalCheckerDsl.g:4420:5: lv_input_0_0= 'input'
            {
            lv_input_0_0=(Token)match(input,93,FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_input_0_0, grammarAccess.getInputFormatAccess().getInputInputKeyword_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getInputFormatRule());
              					}
              					setWithLastConsumed(current, "input", lv_input_0_0, "input");
              				
            }

            }


            }

            otherlv_1=(Token)match(input,14,FOLLOW_50); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getInputFormatAccess().getLeftCurlyBracketKeyword_1());
              		
            }
            // InternalCheckerDsl.g:4436:3: ( ( (lv_exp_2_1= ruleFormatExpression | lv_exp_2_2= ruleForFormatExpression ) ) )*
            loop56:
            do {
                int alt56=2;
                int LA56_0 = input.LA(1);

                if ( (LA56_0==RULE_INT||LA56_0==RULE_ID||LA56_0==77||LA56_0==89) ) {
                    alt56=1;
                }


                switch (alt56) {
            	case 1 :
            	    // InternalCheckerDsl.g:4437:4: ( (lv_exp_2_1= ruleFormatExpression | lv_exp_2_2= ruleForFormatExpression ) )
            	    {
            	    // InternalCheckerDsl.g:4437:4: ( (lv_exp_2_1= ruleFormatExpression | lv_exp_2_2= ruleForFormatExpression ) )
            	    // InternalCheckerDsl.g:4438:5: (lv_exp_2_1= ruleFormatExpression | lv_exp_2_2= ruleForFormatExpression )
            	    {
            	    // InternalCheckerDsl.g:4438:5: (lv_exp_2_1= ruleFormatExpression | lv_exp_2_2= ruleForFormatExpression )
            	    int alt55=2;
            	    int LA55_0 = input.LA(1);

            	    if ( (LA55_0==RULE_INT||LA55_0==RULE_ID||LA55_0==77) ) {
            	        alt55=1;
            	    }
            	    else if ( (LA55_0==89) ) {
            	        alt55=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 55, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt55) {
            	        case 1 :
            	            // InternalCheckerDsl.g:4439:6: lv_exp_2_1= ruleFormatExpression
            	            {
            	            if ( state.backtracking==0 ) {

            	              						newCompositeNode(grammarAccess.getInputFormatAccess().getExpFormatExpressionParserRuleCall_2_0_0());
            	              					
            	            }
            	            pushFollow(FOLLOW_50);
            	            lv_exp_2_1=ruleFormatExpression();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              						if (current==null) {
            	              							current = createModelElementForParent(grammarAccess.getInputFormatRule());
            	              						}
            	              						add(
            	              							current,
            	              							"exp",
            	              							lv_exp_2_1,
            	              							"org.xtext.example.checkerdsl.CheckerDsl.FormatExpression");
            	              						afterParserOrEnumRuleCall();
            	              					
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalCheckerDsl.g:4455:6: lv_exp_2_2= ruleForFormatExpression
            	            {
            	            if ( state.backtracking==0 ) {

            	              						newCompositeNode(grammarAccess.getInputFormatAccess().getExpForFormatExpressionParserRuleCall_2_0_1());
            	              					
            	            }
            	            pushFollow(FOLLOW_50);
            	            lv_exp_2_2=ruleForFormatExpression();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              						if (current==null) {
            	              							current = createModelElementForParent(grammarAccess.getInputFormatRule());
            	              						}
            	              						add(
            	              							current,
            	              							"exp",
            	              							lv_exp_2_2,
            	              							"org.xtext.example.checkerdsl.CheckerDsl.ForFormatExpression");
            	              						afterParserOrEnumRuleCall();
            	              					
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop56;
                }
            } while (true);

            otherlv_3=(Token)match(input,15,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getInputFormatAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInputFormat"


    // $ANTLR start "entryRuleOutputFormat"
    // InternalCheckerDsl.g:4481:1: entryRuleOutputFormat returns [EObject current=null] : iv_ruleOutputFormat= ruleOutputFormat EOF ;
    public final EObject entryRuleOutputFormat() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOutputFormat = null;


        try {
            // InternalCheckerDsl.g:4481:53: (iv_ruleOutputFormat= ruleOutputFormat EOF )
            // InternalCheckerDsl.g:4482:2: iv_ruleOutputFormat= ruleOutputFormat EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOutputFormatRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOutputFormat=ruleOutputFormat();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOutputFormat; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOutputFormat"


    // $ANTLR start "ruleOutputFormat"
    // InternalCheckerDsl.g:4488:1: ruleOutputFormat returns [EObject current=null] : ( ( (lv_output_0_0= 'output' ) ) otherlv_1= '{' ( ( (lv_exp_2_1= ruleFormatExpression | lv_exp_2_2= ruleForFormatExpression ) ) )* otherlv_3= '}' ) ;
    public final EObject ruleOutputFormat() throws RecognitionException {
        EObject current = null;

        Token lv_output_0_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_exp_2_1 = null;

        EObject lv_exp_2_2 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:4494:2: ( ( ( (lv_output_0_0= 'output' ) ) otherlv_1= '{' ( ( (lv_exp_2_1= ruleFormatExpression | lv_exp_2_2= ruleForFormatExpression ) ) )* otherlv_3= '}' ) )
            // InternalCheckerDsl.g:4495:2: ( ( (lv_output_0_0= 'output' ) ) otherlv_1= '{' ( ( (lv_exp_2_1= ruleFormatExpression | lv_exp_2_2= ruleForFormatExpression ) ) )* otherlv_3= '}' )
            {
            // InternalCheckerDsl.g:4495:2: ( ( (lv_output_0_0= 'output' ) ) otherlv_1= '{' ( ( (lv_exp_2_1= ruleFormatExpression | lv_exp_2_2= ruleForFormatExpression ) ) )* otherlv_3= '}' )
            // InternalCheckerDsl.g:4496:3: ( (lv_output_0_0= 'output' ) ) otherlv_1= '{' ( ( (lv_exp_2_1= ruleFormatExpression | lv_exp_2_2= ruleForFormatExpression ) ) )* otherlv_3= '}'
            {
            // InternalCheckerDsl.g:4496:3: ( (lv_output_0_0= 'output' ) )
            // InternalCheckerDsl.g:4497:4: (lv_output_0_0= 'output' )
            {
            // InternalCheckerDsl.g:4497:4: (lv_output_0_0= 'output' )
            // InternalCheckerDsl.g:4498:5: lv_output_0_0= 'output'
            {
            lv_output_0_0=(Token)match(input,94,FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_output_0_0, grammarAccess.getOutputFormatAccess().getOutputOutputKeyword_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getOutputFormatRule());
              					}
              					setWithLastConsumed(current, "output", lv_output_0_0, "output");
              				
            }

            }


            }

            otherlv_1=(Token)match(input,14,FOLLOW_50); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getOutputFormatAccess().getLeftCurlyBracketKeyword_1());
              		
            }
            // InternalCheckerDsl.g:4514:3: ( ( (lv_exp_2_1= ruleFormatExpression | lv_exp_2_2= ruleForFormatExpression ) ) )*
            loop58:
            do {
                int alt58=2;
                int LA58_0 = input.LA(1);

                if ( (LA58_0==RULE_INT||LA58_0==RULE_ID||LA58_0==77||LA58_0==89) ) {
                    alt58=1;
                }


                switch (alt58) {
            	case 1 :
            	    // InternalCheckerDsl.g:4515:4: ( (lv_exp_2_1= ruleFormatExpression | lv_exp_2_2= ruleForFormatExpression ) )
            	    {
            	    // InternalCheckerDsl.g:4515:4: ( (lv_exp_2_1= ruleFormatExpression | lv_exp_2_2= ruleForFormatExpression ) )
            	    // InternalCheckerDsl.g:4516:5: (lv_exp_2_1= ruleFormatExpression | lv_exp_2_2= ruleForFormatExpression )
            	    {
            	    // InternalCheckerDsl.g:4516:5: (lv_exp_2_1= ruleFormatExpression | lv_exp_2_2= ruleForFormatExpression )
            	    int alt57=2;
            	    int LA57_0 = input.LA(1);

            	    if ( (LA57_0==RULE_INT||LA57_0==RULE_ID||LA57_0==77) ) {
            	        alt57=1;
            	    }
            	    else if ( (LA57_0==89) ) {
            	        alt57=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 57, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt57) {
            	        case 1 :
            	            // InternalCheckerDsl.g:4517:6: lv_exp_2_1= ruleFormatExpression
            	            {
            	            if ( state.backtracking==0 ) {

            	              						newCompositeNode(grammarAccess.getOutputFormatAccess().getExpFormatExpressionParserRuleCall_2_0_0());
            	              					
            	            }
            	            pushFollow(FOLLOW_50);
            	            lv_exp_2_1=ruleFormatExpression();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              						if (current==null) {
            	              							current = createModelElementForParent(grammarAccess.getOutputFormatRule());
            	              						}
            	              						add(
            	              							current,
            	              							"exp",
            	              							lv_exp_2_1,
            	              							"org.xtext.example.checkerdsl.CheckerDsl.FormatExpression");
            	              						afterParserOrEnumRuleCall();
            	              					
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalCheckerDsl.g:4533:6: lv_exp_2_2= ruleForFormatExpression
            	            {
            	            if ( state.backtracking==0 ) {

            	              						newCompositeNode(grammarAccess.getOutputFormatAccess().getExpForFormatExpressionParserRuleCall_2_0_1());
            	              					
            	            }
            	            pushFollow(FOLLOW_50);
            	            lv_exp_2_2=ruleForFormatExpression();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              						if (current==null) {
            	              							current = createModelElementForParent(grammarAccess.getOutputFormatRule());
            	              						}
            	              						add(
            	              							current,
            	              							"exp",
            	              							lv_exp_2_2,
            	              							"org.xtext.example.checkerdsl.CheckerDsl.ForFormatExpression");
            	              						afterParserOrEnumRuleCall();
            	              					
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop58;
                }
            } while (true);

            otherlv_3=(Token)match(input,15,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getOutputFormatAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOutputFormat"


    // $ANTLR start "entryRuleHiddenFormat"
    // InternalCheckerDsl.g:4559:1: entryRuleHiddenFormat returns [EObject current=null] : iv_ruleHiddenFormat= ruleHiddenFormat EOF ;
    public final EObject entryRuleHiddenFormat() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleHiddenFormat = null;


        try {
            // InternalCheckerDsl.g:4559:53: (iv_ruleHiddenFormat= ruleHiddenFormat EOF )
            // InternalCheckerDsl.g:4560:2: iv_ruleHiddenFormat= ruleHiddenFormat EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getHiddenFormatRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleHiddenFormat=ruleHiddenFormat();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleHiddenFormat; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleHiddenFormat"


    // $ANTLR start "ruleHiddenFormat"
    // InternalCheckerDsl.g:4566:1: ruleHiddenFormat returns [EObject current=null] : ( ( (lv_hid_0_0= 'hidden' ) ) otherlv_1= '{' ( ( (lv_exp_2_1= ruleFormatExpression | lv_exp_2_2= ruleForFormatExpression ) ) )* otherlv_3= '}' ) ;
    public final EObject ruleHiddenFormat() throws RecognitionException {
        EObject current = null;

        Token lv_hid_0_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_exp_2_1 = null;

        EObject lv_exp_2_2 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:4572:2: ( ( ( (lv_hid_0_0= 'hidden' ) ) otherlv_1= '{' ( ( (lv_exp_2_1= ruleFormatExpression | lv_exp_2_2= ruleForFormatExpression ) ) )* otherlv_3= '}' ) )
            // InternalCheckerDsl.g:4573:2: ( ( (lv_hid_0_0= 'hidden' ) ) otherlv_1= '{' ( ( (lv_exp_2_1= ruleFormatExpression | lv_exp_2_2= ruleForFormatExpression ) ) )* otherlv_3= '}' )
            {
            // InternalCheckerDsl.g:4573:2: ( ( (lv_hid_0_0= 'hidden' ) ) otherlv_1= '{' ( ( (lv_exp_2_1= ruleFormatExpression | lv_exp_2_2= ruleForFormatExpression ) ) )* otherlv_3= '}' )
            // InternalCheckerDsl.g:4574:3: ( (lv_hid_0_0= 'hidden' ) ) otherlv_1= '{' ( ( (lv_exp_2_1= ruleFormatExpression | lv_exp_2_2= ruleForFormatExpression ) ) )* otherlv_3= '}'
            {
            // InternalCheckerDsl.g:4574:3: ( (lv_hid_0_0= 'hidden' ) )
            // InternalCheckerDsl.g:4575:4: (lv_hid_0_0= 'hidden' )
            {
            // InternalCheckerDsl.g:4575:4: (lv_hid_0_0= 'hidden' )
            // InternalCheckerDsl.g:4576:5: lv_hid_0_0= 'hidden'
            {
            lv_hid_0_0=(Token)match(input,95,FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_hid_0_0, grammarAccess.getHiddenFormatAccess().getHidHiddenKeyword_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getHiddenFormatRule());
              					}
              					setWithLastConsumed(current, "hid", lv_hid_0_0, "hidden");
              				
            }

            }


            }

            otherlv_1=(Token)match(input,14,FOLLOW_50); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getHiddenFormatAccess().getLeftCurlyBracketKeyword_1());
              		
            }
            // InternalCheckerDsl.g:4592:3: ( ( (lv_exp_2_1= ruleFormatExpression | lv_exp_2_2= ruleForFormatExpression ) ) )*
            loop60:
            do {
                int alt60=2;
                int LA60_0 = input.LA(1);

                if ( (LA60_0==RULE_INT||LA60_0==RULE_ID||LA60_0==77||LA60_0==89) ) {
                    alt60=1;
                }


                switch (alt60) {
            	case 1 :
            	    // InternalCheckerDsl.g:4593:4: ( (lv_exp_2_1= ruleFormatExpression | lv_exp_2_2= ruleForFormatExpression ) )
            	    {
            	    // InternalCheckerDsl.g:4593:4: ( (lv_exp_2_1= ruleFormatExpression | lv_exp_2_2= ruleForFormatExpression ) )
            	    // InternalCheckerDsl.g:4594:5: (lv_exp_2_1= ruleFormatExpression | lv_exp_2_2= ruleForFormatExpression )
            	    {
            	    // InternalCheckerDsl.g:4594:5: (lv_exp_2_1= ruleFormatExpression | lv_exp_2_2= ruleForFormatExpression )
            	    int alt59=2;
            	    int LA59_0 = input.LA(1);

            	    if ( (LA59_0==RULE_INT||LA59_0==RULE_ID||LA59_0==77) ) {
            	        alt59=1;
            	    }
            	    else if ( (LA59_0==89) ) {
            	        alt59=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 59, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt59) {
            	        case 1 :
            	            // InternalCheckerDsl.g:4595:6: lv_exp_2_1= ruleFormatExpression
            	            {
            	            if ( state.backtracking==0 ) {

            	              						newCompositeNode(grammarAccess.getHiddenFormatAccess().getExpFormatExpressionParserRuleCall_2_0_0());
            	              					
            	            }
            	            pushFollow(FOLLOW_50);
            	            lv_exp_2_1=ruleFormatExpression();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              						if (current==null) {
            	              							current = createModelElementForParent(grammarAccess.getHiddenFormatRule());
            	              						}
            	              						add(
            	              							current,
            	              							"exp",
            	              							lv_exp_2_1,
            	              							"org.xtext.example.checkerdsl.CheckerDsl.FormatExpression");
            	              						afterParserOrEnumRuleCall();
            	              					
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalCheckerDsl.g:4611:6: lv_exp_2_2= ruleForFormatExpression
            	            {
            	            if ( state.backtracking==0 ) {

            	              						newCompositeNode(grammarAccess.getHiddenFormatAccess().getExpForFormatExpressionParserRuleCall_2_0_1());
            	              					
            	            }
            	            pushFollow(FOLLOW_50);
            	            lv_exp_2_2=ruleForFormatExpression();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              						if (current==null) {
            	              							current = createModelElementForParent(grammarAccess.getHiddenFormatRule());
            	              						}
            	              						add(
            	              							current,
            	              							"exp",
            	              							lv_exp_2_2,
            	              							"org.xtext.example.checkerdsl.CheckerDsl.ForFormatExpression");
            	              						afterParserOrEnumRuleCall();
            	              					
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop60;
                }
            } while (true);

            otherlv_3=(Token)match(input,15,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getHiddenFormatAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleHiddenFormat"


    // $ANTLR start "entryRuleFormatExpression"
    // InternalCheckerDsl.g:4637:1: entryRuleFormatExpression returns [EObject current=null] : iv_ruleFormatExpression= ruleFormatExpression EOF ;
    public final EObject entryRuleFormatExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFormatExpression = null;


        try {
            // InternalCheckerDsl.g:4637:57: (iv_ruleFormatExpression= ruleFormatExpression EOF )
            // InternalCheckerDsl.g:4638:2: iv_ruleFormatExpression= ruleFormatExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFormatExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFormatExpression=ruleFormatExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFormatExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFormatExpression"


    // $ANTLR start "ruleFormatExpression"
    // InternalCheckerDsl.g:4644:1: ruleFormatExpression returns [EObject current=null] : ( ( (lv_num_0_0= ruleCHK_NUMBER ) ) otherlv_1= '(' ( ( (lv_var_2_0= ruleFormatVariable ) ) (otherlv_3= ',' ( (lv_var_4_0= ruleFormatVariable ) ) )* )? otherlv_5= ')' ) ;
    public final EObject ruleFormatExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        AntlrDatatypeRuleToken lv_num_0_0 = null;

        EObject lv_var_2_0 = null;

        EObject lv_var_4_0 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:4650:2: ( ( ( (lv_num_0_0= ruleCHK_NUMBER ) ) otherlv_1= '(' ( ( (lv_var_2_0= ruleFormatVariable ) ) (otherlv_3= ',' ( (lv_var_4_0= ruleFormatVariable ) ) )* )? otherlv_5= ')' ) )
            // InternalCheckerDsl.g:4651:2: ( ( (lv_num_0_0= ruleCHK_NUMBER ) ) otherlv_1= '(' ( ( (lv_var_2_0= ruleFormatVariable ) ) (otherlv_3= ',' ( (lv_var_4_0= ruleFormatVariable ) ) )* )? otherlv_5= ')' )
            {
            // InternalCheckerDsl.g:4651:2: ( ( (lv_num_0_0= ruleCHK_NUMBER ) ) otherlv_1= '(' ( ( (lv_var_2_0= ruleFormatVariable ) ) (otherlv_3= ',' ( (lv_var_4_0= ruleFormatVariable ) ) )* )? otherlv_5= ')' )
            // InternalCheckerDsl.g:4652:3: ( (lv_num_0_0= ruleCHK_NUMBER ) ) otherlv_1= '(' ( ( (lv_var_2_0= ruleFormatVariable ) ) (otherlv_3= ',' ( (lv_var_4_0= ruleFormatVariable ) ) )* )? otherlv_5= ')'
            {
            // InternalCheckerDsl.g:4652:3: ( (lv_num_0_0= ruleCHK_NUMBER ) )
            // InternalCheckerDsl.g:4653:4: (lv_num_0_0= ruleCHK_NUMBER )
            {
            // InternalCheckerDsl.g:4653:4: (lv_num_0_0= ruleCHK_NUMBER )
            // InternalCheckerDsl.g:4654:5: lv_num_0_0= ruleCHK_NUMBER
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFormatExpressionAccess().getNumCHK_NUMBERParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_10);
            lv_num_0_0=ruleCHK_NUMBER();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFormatExpressionRule());
              					}
              					set(
              						current,
              						"num",
              						lv_num_0_0,
              						"org.xtext.example.checkerdsl.CheckerDsl.CHK_NUMBER");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,19,FOLLOW_51); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getFormatExpressionAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalCheckerDsl.g:4675:3: ( ( (lv_var_2_0= ruleFormatVariable ) ) (otherlv_3= ',' ( (lv_var_4_0= ruleFormatVariable ) ) )* )?
            int alt62=2;
            int LA62_0 = input.LA(1);

            if ( (LA62_0==RULE_ID||(LA62_0>=41 && LA62_0<=43)) ) {
                alt62=1;
            }
            switch (alt62) {
                case 1 :
                    // InternalCheckerDsl.g:4676:4: ( (lv_var_2_0= ruleFormatVariable ) ) (otherlv_3= ',' ( (lv_var_4_0= ruleFormatVariable ) ) )*
                    {
                    // InternalCheckerDsl.g:4676:4: ( (lv_var_2_0= ruleFormatVariable ) )
                    // InternalCheckerDsl.g:4677:5: (lv_var_2_0= ruleFormatVariable )
                    {
                    // InternalCheckerDsl.g:4677:5: (lv_var_2_0= ruleFormatVariable )
                    // InternalCheckerDsl.g:4678:6: lv_var_2_0= ruleFormatVariable
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFormatExpressionAccess().getVarFormatVariableParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_12);
                    lv_var_2_0=ruleFormatVariable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getFormatExpressionRule());
                      						}
                      						add(
                      							current,
                      							"var",
                      							lv_var_2_0,
                      							"org.xtext.example.checkerdsl.CheckerDsl.FormatVariable");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalCheckerDsl.g:4695:4: (otherlv_3= ',' ( (lv_var_4_0= ruleFormatVariable ) ) )*
                    loop61:
                    do {
                        int alt61=2;
                        int LA61_0 = input.LA(1);

                        if ( (LA61_0==20) ) {
                            alt61=1;
                        }


                        switch (alt61) {
                    	case 1 :
                    	    // InternalCheckerDsl.g:4696:5: otherlv_3= ',' ( (lv_var_4_0= ruleFormatVariable ) )
                    	    {
                    	    otherlv_3=(Token)match(input,20,FOLLOW_33); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_3, grammarAccess.getFormatExpressionAccess().getCommaKeyword_2_1_0());
                    	      				
                    	    }
                    	    // InternalCheckerDsl.g:4700:5: ( (lv_var_4_0= ruleFormatVariable ) )
                    	    // InternalCheckerDsl.g:4701:6: (lv_var_4_0= ruleFormatVariable )
                    	    {
                    	    // InternalCheckerDsl.g:4701:6: (lv_var_4_0= ruleFormatVariable )
                    	    // InternalCheckerDsl.g:4702:7: lv_var_4_0= ruleFormatVariable
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getFormatExpressionAccess().getVarFormatVariableParserRuleCall_2_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_12);
                    	    lv_var_4_0=ruleFormatVariable();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getFormatExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"var",
                    	      								lv_var_4_0,
                    	      								"org.xtext.example.checkerdsl.CheckerDsl.FormatVariable");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop61;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,21,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getFormatExpressionAccess().getRightParenthesisKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFormatExpression"


    // $ANTLR start "entryRuleFormatVariable"
    // InternalCheckerDsl.g:4729:1: entryRuleFormatVariable returns [EObject current=null] : iv_ruleFormatVariable= ruleFormatVariable EOF ;
    public final EObject entryRuleFormatVariable() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFormatVariable = null;


        try {
            // InternalCheckerDsl.g:4729:55: (iv_ruleFormatVariable= ruleFormatVariable EOF )
            // InternalCheckerDsl.g:4730:2: iv_ruleFormatVariable= ruleFormatVariable EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFormatVariableRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFormatVariable=ruleFormatVariable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFormatVariable; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFormatVariable"


    // $ANTLR start "ruleFormatVariable"
    // InternalCheckerDsl.g:4736:1: ruleFormatVariable returns [EObject current=null] : ( ( (lv_fv_0_0= ruleChkVariable ) ) (otherlv_1= '<' ( (lv_count_2_0= ruleCHK_NUMBER ) ) otherlv_3= '>' )? ) ;
    public final EObject ruleFormatVariable() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_fv_0_0 = null;

        AntlrDatatypeRuleToken lv_count_2_0 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:4742:2: ( ( ( (lv_fv_0_0= ruleChkVariable ) ) (otherlv_1= '<' ( (lv_count_2_0= ruleCHK_NUMBER ) ) otherlv_3= '>' )? ) )
            // InternalCheckerDsl.g:4743:2: ( ( (lv_fv_0_0= ruleChkVariable ) ) (otherlv_1= '<' ( (lv_count_2_0= ruleCHK_NUMBER ) ) otherlv_3= '>' )? )
            {
            // InternalCheckerDsl.g:4743:2: ( ( (lv_fv_0_0= ruleChkVariable ) ) (otherlv_1= '<' ( (lv_count_2_0= ruleCHK_NUMBER ) ) otherlv_3= '>' )? )
            // InternalCheckerDsl.g:4744:3: ( (lv_fv_0_0= ruleChkVariable ) ) (otherlv_1= '<' ( (lv_count_2_0= ruleCHK_NUMBER ) ) otherlv_3= '>' )?
            {
            // InternalCheckerDsl.g:4744:3: ( (lv_fv_0_0= ruleChkVariable ) )
            // InternalCheckerDsl.g:4745:4: (lv_fv_0_0= ruleChkVariable )
            {
            // InternalCheckerDsl.g:4745:4: (lv_fv_0_0= ruleChkVariable )
            // InternalCheckerDsl.g:4746:5: lv_fv_0_0= ruleChkVariable
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFormatVariableAccess().getFvChkVariableParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_52);
            lv_fv_0_0=ruleChkVariable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFormatVariableRule());
              					}
              					set(
              						current,
              						"fv",
              						lv_fv_0_0,
              						"org.xtext.example.checkerdsl.CheckerDsl.ChkVariable");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalCheckerDsl.g:4763:3: (otherlv_1= '<' ( (lv_count_2_0= ruleCHK_NUMBER ) ) otherlv_3= '>' )?
            int alt63=2;
            int LA63_0 = input.LA(1);

            if ( (LA63_0==46) ) {
                alt63=1;
            }
            switch (alt63) {
                case 1 :
                    // InternalCheckerDsl.g:4764:4: otherlv_1= '<' ( (lv_count_2_0= ruleCHK_NUMBER ) ) otherlv_3= '>'
                    {
                    otherlv_1=(Token)match(input,46,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getFormatVariableAccess().getLessThanSignKeyword_1_0());
                      			
                    }
                    // InternalCheckerDsl.g:4768:4: ( (lv_count_2_0= ruleCHK_NUMBER ) )
                    // InternalCheckerDsl.g:4769:5: (lv_count_2_0= ruleCHK_NUMBER )
                    {
                    // InternalCheckerDsl.g:4769:5: (lv_count_2_0= ruleCHK_NUMBER )
                    // InternalCheckerDsl.g:4770:6: lv_count_2_0= ruleCHK_NUMBER
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFormatVariableAccess().getCountCHK_NUMBERParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_53);
                    lv_count_2_0=ruleCHK_NUMBER();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getFormatVariableRule());
                      						}
                      						set(
                      							current,
                      							"count",
                      							lv_count_2_0,
                      							"org.xtext.example.checkerdsl.CheckerDsl.CHK_NUMBER");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,47,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getFormatVariableAccess().getGreaterThanSignKeyword_1_2());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFormatVariable"


    // $ANTLR start "entryRuleCHK_INT"
    // InternalCheckerDsl.g:4796:1: entryRuleCHK_INT returns [String current=null] : iv_ruleCHK_INT= ruleCHK_INT EOF ;
    public final String entryRuleCHK_INT() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleCHK_INT = null;


        try {
            // InternalCheckerDsl.g:4796:47: (iv_ruleCHK_INT= ruleCHK_INT EOF )
            // InternalCheckerDsl.g:4797:2: iv_ruleCHK_INT= ruleCHK_INT EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCHK_INTRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCHK_INT=ruleCHK_INT();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCHK_INT.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCHK_INT"


    // $ANTLR start "ruleCHK_INT"
    // InternalCheckerDsl.g:4803:1: ruleCHK_INT returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (kw= '-' )? this_INT_1= RULE_INT ) ;
    public final AntlrDatatypeRuleToken ruleCHK_INT() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_INT_1=null;


        	enterRule();

        try {
            // InternalCheckerDsl.g:4809:2: ( ( (kw= '-' )? this_INT_1= RULE_INT ) )
            // InternalCheckerDsl.g:4810:2: ( (kw= '-' )? this_INT_1= RULE_INT )
            {
            // InternalCheckerDsl.g:4810:2: ( (kw= '-' )? this_INT_1= RULE_INT )
            // InternalCheckerDsl.g:4811:3: (kw= '-' )? this_INT_1= RULE_INT
            {
            // InternalCheckerDsl.g:4811:3: (kw= '-' )?
            int alt64=2;
            int LA64_0 = input.LA(1);

            if ( (LA64_0==77) ) {
                alt64=1;
            }
            switch (alt64) {
                case 1 :
                    // InternalCheckerDsl.g:4812:4: kw= '-'
                    {
                    kw=(Token)match(input,77,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getCHK_INTAccess().getHyphenMinusKeyword_0());
                      			
                    }

                    }
                    break;

            }

            this_INT_1=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_INT_1);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_INT_1, grammarAccess.getCHK_INTAccess().getINTTerminalRuleCall_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCHK_INT"


    // $ANTLR start "entryRuleCHK_ELEMENT"
    // InternalCheckerDsl.g:4829:1: entryRuleCHK_ELEMENT returns [String current=null] : iv_ruleCHK_ELEMENT= ruleCHK_ELEMENT EOF ;
    public final String entryRuleCHK_ELEMENT() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleCHK_ELEMENT = null;


        try {
            // InternalCheckerDsl.g:4829:51: (iv_ruleCHK_ELEMENT= ruleCHK_ELEMENT EOF )
            // InternalCheckerDsl.g:4830:2: iv_ruleCHK_ELEMENT= ruleCHK_ELEMENT EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCHK_ELEMENTRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCHK_ELEMENT=ruleCHK_ELEMENT();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCHK_ELEMENT.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCHK_ELEMENT"


    // $ANTLR start "ruleCHK_ELEMENT"
    // InternalCheckerDsl.g:4836:1: ruleCHK_ELEMENT returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_CHK_NUMBER_0= ruleCHK_NUMBER | this_STRING_1= RULE_STRING ) ;
    public final AntlrDatatypeRuleToken ruleCHK_ELEMENT() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_STRING_1=null;
        AntlrDatatypeRuleToken this_CHK_NUMBER_0 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:4842:2: ( (this_CHK_NUMBER_0= ruleCHK_NUMBER | this_STRING_1= RULE_STRING ) )
            // InternalCheckerDsl.g:4843:2: (this_CHK_NUMBER_0= ruleCHK_NUMBER | this_STRING_1= RULE_STRING )
            {
            // InternalCheckerDsl.g:4843:2: (this_CHK_NUMBER_0= ruleCHK_NUMBER | this_STRING_1= RULE_STRING )
            int alt65=2;
            int LA65_0 = input.LA(1);

            if ( (LA65_0==RULE_INT||LA65_0==RULE_ID||LA65_0==77) ) {
                alt65=1;
            }
            else if ( (LA65_0==RULE_STRING) ) {
                alt65=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 65, 0, input);

                throw nvae;
            }
            switch (alt65) {
                case 1 :
                    // InternalCheckerDsl.g:4844:3: this_CHK_NUMBER_0= ruleCHK_NUMBER
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getCHK_ELEMENTAccess().getCHK_NUMBERParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_CHK_NUMBER_0=ruleCHK_NUMBER();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_CHK_NUMBER_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalCheckerDsl.g:4855:3: this_STRING_1= RULE_STRING
                    {
                    this_STRING_1=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_STRING_1);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_STRING_1, grammarAccess.getCHK_ELEMENTAccess().getSTRINGTerminalRuleCall_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCHK_ELEMENT"


    // $ANTLR start "entryRuleCHK_NUMBER"
    // InternalCheckerDsl.g:4866:1: entryRuleCHK_NUMBER returns [String current=null] : iv_ruleCHK_NUMBER= ruleCHK_NUMBER EOF ;
    public final String entryRuleCHK_NUMBER() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleCHK_NUMBER = null;


        try {
            // InternalCheckerDsl.g:4866:50: (iv_ruleCHK_NUMBER= ruleCHK_NUMBER EOF )
            // InternalCheckerDsl.g:4867:2: iv_ruleCHK_NUMBER= ruleCHK_NUMBER EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCHK_NUMBERRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCHK_NUMBER=ruleCHK_NUMBER();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCHK_NUMBER.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCHK_NUMBER"


    // $ANTLR start "ruleCHK_NUMBER"
    // InternalCheckerDsl.g:4873:1: ruleCHK_NUMBER returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_CHK_INT_0= ruleCHK_INT | this_ValidID_1= ruleValidID ) ;
    public final AntlrDatatypeRuleToken ruleCHK_NUMBER() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_CHK_INT_0 = null;

        AntlrDatatypeRuleToken this_ValidID_1 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:4879:2: ( (this_CHK_INT_0= ruleCHK_INT | this_ValidID_1= ruleValidID ) )
            // InternalCheckerDsl.g:4880:2: (this_CHK_INT_0= ruleCHK_INT | this_ValidID_1= ruleValidID )
            {
            // InternalCheckerDsl.g:4880:2: (this_CHK_INT_0= ruleCHK_INT | this_ValidID_1= ruleValidID )
            int alt66=2;
            int LA66_0 = input.LA(1);

            if ( (LA66_0==RULE_INT||LA66_0==77) ) {
                alt66=1;
            }
            else if ( (LA66_0==RULE_ID) ) {
                alt66=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 66, 0, input);

                throw nvae;
            }
            switch (alt66) {
                case 1 :
                    // InternalCheckerDsl.g:4881:3: this_CHK_INT_0= ruleCHK_INT
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getCHK_NUMBERAccess().getCHK_INTParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_CHK_INT_0=ruleCHK_INT();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_CHK_INT_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalCheckerDsl.g:4892:3: this_ValidID_1= ruleValidID
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getCHK_NUMBERAccess().getValidIDParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ValidID_1=ruleValidID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_ValidID_1);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCHK_NUMBER"


    // $ANTLR start "entryRuleXExpression"
    // InternalCheckerDsl.g:4906:1: entryRuleXExpression returns [EObject current=null] : iv_ruleXExpression= ruleXExpression EOF ;
    public final EObject entryRuleXExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXExpression = null;


        try {
            // InternalCheckerDsl.g:4906:52: (iv_ruleXExpression= ruleXExpression EOF )
            // InternalCheckerDsl.g:4907:2: iv_ruleXExpression= ruleXExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXExpression=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXExpression"


    // $ANTLR start "ruleXExpression"
    // InternalCheckerDsl.g:4913:1: ruleXExpression returns [EObject current=null] : this_XAssignment_0= ruleXAssignment ;
    public final EObject ruleXExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XAssignment_0 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:4919:2: (this_XAssignment_0= ruleXAssignment )
            // InternalCheckerDsl.g:4920:2: this_XAssignment_0= ruleXAssignment
            {
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getXExpressionAccess().getXAssignmentParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_XAssignment_0=ruleXAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_XAssignment_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXExpression"


    // $ANTLR start "entryRuleXAssignment"
    // InternalCheckerDsl.g:4931:1: entryRuleXAssignment returns [EObject current=null] : iv_ruleXAssignment= ruleXAssignment EOF ;
    public final EObject entryRuleXAssignment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXAssignment = null;


        try {
            // InternalCheckerDsl.g:4931:52: (iv_ruleXAssignment= ruleXAssignment EOF )
            // InternalCheckerDsl.g:4932:2: iv_ruleXAssignment= ruleXAssignment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXAssignmentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXAssignment=ruleXAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAssignment; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXAssignment"


    // $ANTLR start "ruleXAssignment"
    // InternalCheckerDsl.g:4938:1: ruleXAssignment returns [EObject current=null] : ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) ) | (this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? ) ) ;
    public final EObject ruleXAssignment() throws RecognitionException {
        EObject current = null;

        EObject lv_value_3_0 = null;

        EObject this_XOrExpression_4 = null;

        EObject lv_rightOperand_7_0 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:4944:2: ( ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) ) | (this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? ) ) )
            // InternalCheckerDsl.g:4945:2: ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) ) | (this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? ) )
            {
            // InternalCheckerDsl.g:4945:2: ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) ) | (this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? ) )
            int alt68=2;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                int LA68_1 = input.LA(2);

                if ( (LA68_1==75) ) {
                    alt68=1;
                }
                else if ( (LA68_1==EOF||(LA68_1>=RULE_INT && LA68_1<=RULE_ID)||(LA68_1>=14 && LA68_1<=15)||LA68_1==17||(LA68_1>=19 && LA68_1<=22)||(LA68_1>=27 && LA68_1<=29)||LA68_1==44||(LA68_1>=46 && LA68_1<=47)||LA68_1==54||(LA68_1>=76 && LA68_1<=79)||(LA68_1>=83 && LA68_1<=85)||LA68_1==89||(LA68_1>=96 && LA68_1<=143)) ) {
                    alt68=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 68, 1, input);

                    throw nvae;
                }
                }
                break;
            case 17:
                {
                int LA68_2 = input.LA(2);

                if ( (LA68_2==EOF||(LA68_2>=RULE_INT && LA68_2<=RULE_ID)||(LA68_2>=14 && LA68_2<=15)||LA68_2==17||(LA68_2>=19 && LA68_2<=22)||(LA68_2>=27 && LA68_2<=29)||LA68_2==44||(LA68_2>=46 && LA68_2<=47)||LA68_2==54||(LA68_2>=76 && LA68_2<=79)||(LA68_2>=83 && LA68_2<=85)||LA68_2==89||(LA68_2>=96 && LA68_2<=143)) ) {
                    alt68=2;
                }
                else if ( (LA68_2==75) ) {
                    alt68=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 68, 2, input);

                    throw nvae;
                }
                }
                break;
            case 129:
                {
                int LA68_3 = input.LA(2);

                if ( (LA68_3==EOF||(LA68_3>=RULE_INT && LA68_3<=RULE_ID)||(LA68_3>=14 && LA68_3<=15)||LA68_3==17||(LA68_3>=19 && LA68_3<=22)||(LA68_3>=27 && LA68_3<=29)||LA68_3==44||(LA68_3>=46 && LA68_3<=47)||LA68_3==54||(LA68_3>=76 && LA68_3<=79)||(LA68_3>=83 && LA68_3<=85)||LA68_3==89||(LA68_3>=96 && LA68_3<=143)) ) {
                    alt68=2;
                }
                else if ( (LA68_3==75) ) {
                    alt68=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 68, 3, input);

                    throw nvae;
                }
                }
                break;
            case 130:
                {
                int LA68_4 = input.LA(2);

                if ( (LA68_4==75) ) {
                    alt68=1;
                }
                else if ( (LA68_4==EOF||(LA68_4>=RULE_INT && LA68_4<=RULE_ID)||(LA68_4>=14 && LA68_4<=15)||LA68_4==17||(LA68_4>=19 && LA68_4<=22)||(LA68_4>=27 && LA68_4<=29)||LA68_4==44||(LA68_4>=46 && LA68_4<=47)||LA68_4==54||(LA68_4>=76 && LA68_4<=79)||(LA68_4>=83 && LA68_4<=85)||LA68_4==89||(LA68_4>=96 && LA68_4<=143)) ) {
                    alt68=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 68, 4, input);

                    throw nvae;
                }
                }
                break;
            case 131:
                {
                int LA68_5 = input.LA(2);

                if ( (LA68_5==EOF||(LA68_5>=RULE_INT && LA68_5<=RULE_ID)||(LA68_5>=14 && LA68_5<=15)||LA68_5==17||(LA68_5>=19 && LA68_5<=22)||(LA68_5>=27 && LA68_5<=29)||LA68_5==44||(LA68_5>=46 && LA68_5<=47)||LA68_5==54||(LA68_5>=76 && LA68_5<=79)||(LA68_5>=83 && LA68_5<=85)||LA68_5==89||(LA68_5>=96 && LA68_5<=143)) ) {
                    alt68=2;
                }
                else if ( (LA68_5==75) ) {
                    alt68=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 68, 5, input);

                    throw nvae;
                }
                }
                break;
            case RULE_INT:
            case RULE_STRING:
            case RULE_HEX:
            case RULE_DECIMAL:
            case 14:
            case 19:
            case 27:
            case 46:
            case 76:
            case 77:
            case 89:
            case 113:
            case 119:
            case 120:
            case 122:
            case 125:
            case 126:
            case 132:
            case 133:
            case 134:
            case 135:
            case 136:
            case 137:
            case 138:
            case 139:
            case 140:
            case 142:
                {
                alt68=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 68, 0, input);

                throw nvae;
            }

            switch (alt68) {
                case 1 :
                    // InternalCheckerDsl.g:4946:3: ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) )
                    {
                    // InternalCheckerDsl.g:4946:3: ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) )
                    // InternalCheckerDsl.g:4947:4: () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) )
                    {
                    // InternalCheckerDsl.g:4947:4: ()
                    // InternalCheckerDsl.g:4948:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getXAssignmentAccess().getXAssignmentAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalCheckerDsl.g:4954:4: ( ( ruleFeatureCallID ) )
                    // InternalCheckerDsl.g:4955:5: ( ruleFeatureCallID )
                    {
                    // InternalCheckerDsl.g:4955:5: ( ruleFeatureCallID )
                    // InternalCheckerDsl.g:4956:6: ruleFeatureCallID
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getXAssignmentRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXAssignmentAccess().getFeatureJvmIdentifiableElementCrossReference_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_41);
                    ruleFeatureCallID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getXAssignmentAccess().getOpSingleAssignParserRuleCall_0_2());
                      			
                    }
                    pushFollow(FOLLOW_54);
                    ruleOpSingleAssign();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalCheckerDsl.g:4977:4: ( (lv_value_3_0= ruleXAssignment ) )
                    // InternalCheckerDsl.g:4978:5: (lv_value_3_0= ruleXAssignment )
                    {
                    // InternalCheckerDsl.g:4978:5: (lv_value_3_0= ruleXAssignment )
                    // InternalCheckerDsl.g:4979:6: lv_value_3_0= ruleXAssignment
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXAssignmentAccess().getValueXAssignmentParserRuleCall_0_3_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_value_3_0=ruleXAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXAssignmentRule());
                      						}
                      						set(
                      							current,
                      							"value",
                      							lv_value_3_0,
                      							"org.eclipse.xtext.xbase.Xbase.XAssignment");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalCheckerDsl.g:4998:3: (this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? )
                    {
                    // InternalCheckerDsl.g:4998:3: (this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? )
                    // InternalCheckerDsl.g:4999:4: this_XOrExpression_4= ruleXOrExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )?
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getXAssignmentAccess().getXOrExpressionParserRuleCall_1_0());
                      			
                    }
                    pushFollow(FOLLOW_55);
                    this_XOrExpression_4=ruleXOrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_XOrExpression_4;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalCheckerDsl.g:5007:4: ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )?
                    int alt67=2;
                    alt67 = dfa67.predict(input);
                    switch (alt67) {
                        case 1 :
                            // InternalCheckerDsl.g:5008:5: ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) )
                            {
                            // InternalCheckerDsl.g:5008:5: ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) )
                            // InternalCheckerDsl.g:5009:6: ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) )
                            {
                            // InternalCheckerDsl.g:5019:6: ( () ( ( ruleOpMultiAssign ) ) )
                            // InternalCheckerDsl.g:5020:7: () ( ( ruleOpMultiAssign ) )
                            {
                            // InternalCheckerDsl.g:5020:7: ()
                            // InternalCheckerDsl.g:5021:8: 
                            {
                            if ( state.backtracking==0 ) {

                              								current = forceCreateModelElementAndSet(
                              									grammarAccess.getXAssignmentAccess().getXBinaryOperationLeftOperandAction_1_1_0_0_0(),
                              									current);
                              							
                            }

                            }

                            // InternalCheckerDsl.g:5027:7: ( ( ruleOpMultiAssign ) )
                            // InternalCheckerDsl.g:5028:8: ( ruleOpMultiAssign )
                            {
                            // InternalCheckerDsl.g:5028:8: ( ruleOpMultiAssign )
                            // InternalCheckerDsl.g:5029:9: ruleOpMultiAssign
                            {
                            if ( state.backtracking==0 ) {

                              									if (current==null) {
                              										current = createModelElement(grammarAccess.getXAssignmentRule());
                              									}
                              								
                            }
                            if ( state.backtracking==0 ) {

                              									newCompositeNode(grammarAccess.getXAssignmentAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_0_0_1_0());
                              								
                            }
                            pushFollow(FOLLOW_54);
                            ruleOpMultiAssign();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              									afterParserOrEnumRuleCall();
                              								
                            }

                            }


                            }


                            }


                            }

                            // InternalCheckerDsl.g:5045:5: ( (lv_rightOperand_7_0= ruleXAssignment ) )
                            // InternalCheckerDsl.g:5046:6: (lv_rightOperand_7_0= ruleXAssignment )
                            {
                            // InternalCheckerDsl.g:5046:6: (lv_rightOperand_7_0= ruleXAssignment )
                            // InternalCheckerDsl.g:5047:7: lv_rightOperand_7_0= ruleXAssignment
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getXAssignmentAccess().getRightOperandXAssignmentParserRuleCall_1_1_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_rightOperand_7_0=ruleXAssignment();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getXAssignmentRule());
                              							}
                              							set(
                              								current,
                              								"rightOperand",
                              								lv_rightOperand_7_0,
                              								"org.eclipse.xtext.xbase.Xbase.XAssignment");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXAssignment"


    // $ANTLR start "entryRuleOpSingleAssign"
    // InternalCheckerDsl.g:5070:1: entryRuleOpSingleAssign returns [String current=null] : iv_ruleOpSingleAssign= ruleOpSingleAssign EOF ;
    public final String entryRuleOpSingleAssign() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpSingleAssign = null;


        try {
            // InternalCheckerDsl.g:5070:54: (iv_ruleOpSingleAssign= ruleOpSingleAssign EOF )
            // InternalCheckerDsl.g:5071:2: iv_ruleOpSingleAssign= ruleOpSingleAssign EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpSingleAssignRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpSingleAssign=ruleOpSingleAssign();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpSingleAssign.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpSingleAssign"


    // $ANTLR start "ruleOpSingleAssign"
    // InternalCheckerDsl.g:5077:1: ruleOpSingleAssign returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= '=' ;
    public final AntlrDatatypeRuleToken ruleOpSingleAssign() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalCheckerDsl.g:5083:2: (kw= '=' )
            // InternalCheckerDsl.g:5084:2: kw= '='
            {
            kw=(Token)match(input,75,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getOpSingleAssignAccess().getEqualsSignKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpSingleAssign"


    // $ANTLR start "entryRuleOpMultiAssign"
    // InternalCheckerDsl.g:5092:1: entryRuleOpMultiAssign returns [String current=null] : iv_ruleOpMultiAssign= ruleOpMultiAssign EOF ;
    public final String entryRuleOpMultiAssign() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpMultiAssign = null;


        try {
            // InternalCheckerDsl.g:5092:53: (iv_ruleOpMultiAssign= ruleOpMultiAssign EOF )
            // InternalCheckerDsl.g:5093:2: iv_ruleOpMultiAssign= ruleOpMultiAssign EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpMultiAssignRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpMultiAssign=ruleOpMultiAssign();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpMultiAssign.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpMultiAssign"


    // $ANTLR start "ruleOpMultiAssign"
    // InternalCheckerDsl.g:5099:1: ruleOpMultiAssign returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '+=' | kw= '-=' | kw= '*=' | kw= '/=' | kw= '%=' | (kw= '<' kw= '<' kw= '=' ) | (kw= '>' (kw= '>' )? kw= '>=' ) ) ;
    public final AntlrDatatypeRuleToken ruleOpMultiAssign() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalCheckerDsl.g:5105:2: ( (kw= '+=' | kw= '-=' | kw= '*=' | kw= '/=' | kw= '%=' | (kw= '<' kw= '<' kw= '=' ) | (kw= '>' (kw= '>' )? kw= '>=' ) ) )
            // InternalCheckerDsl.g:5106:2: (kw= '+=' | kw= '-=' | kw= '*=' | kw= '/=' | kw= '%=' | (kw= '<' kw= '<' kw= '=' ) | (kw= '>' (kw= '>' )? kw= '>=' ) )
            {
            // InternalCheckerDsl.g:5106:2: (kw= '+=' | kw= '-=' | kw= '*=' | kw= '/=' | kw= '%=' | (kw= '<' kw= '<' kw= '=' ) | (kw= '>' (kw= '>' )? kw= '>=' ) )
            int alt70=7;
            switch ( input.LA(1) ) {
            case 96:
                {
                alt70=1;
                }
                break;
            case 97:
                {
                alt70=2;
                }
                break;
            case 98:
                {
                alt70=3;
                }
                break;
            case 99:
                {
                alt70=4;
                }
                break;
            case 100:
                {
                alt70=5;
                }
                break;
            case 46:
                {
                alt70=6;
                }
                break;
            case 47:
                {
                alt70=7;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 70, 0, input);

                throw nvae;
            }

            switch (alt70) {
                case 1 :
                    // InternalCheckerDsl.g:5107:3: kw= '+='
                    {
                    kw=(Token)match(input,96,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getPlusSignEqualsSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalCheckerDsl.g:5113:3: kw= '-='
                    {
                    kw=(Token)match(input,97,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getHyphenMinusEqualsSignKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalCheckerDsl.g:5119:3: kw= '*='
                    {
                    kw=(Token)match(input,98,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getAsteriskEqualsSignKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalCheckerDsl.g:5125:3: kw= '/='
                    {
                    kw=(Token)match(input,99,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getSolidusEqualsSignKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalCheckerDsl.g:5131:3: kw= '%='
                    {
                    kw=(Token)match(input,100,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getPercentSignEqualsSignKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalCheckerDsl.g:5137:3: (kw= '<' kw= '<' kw= '=' )
                    {
                    // InternalCheckerDsl.g:5137:3: (kw= '<' kw= '<' kw= '=' )
                    // InternalCheckerDsl.g:5138:4: kw= '<' kw= '<' kw= '='
                    {
                    kw=(Token)match(input,46,FOLLOW_56); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getLessThanSignKeyword_5_0());
                      			
                    }
                    kw=(Token)match(input,46,FOLLOW_41); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getLessThanSignKeyword_5_1());
                      			
                    }
                    kw=(Token)match(input,75,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getEqualsSignKeyword_5_2());
                      			
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalCheckerDsl.g:5155:3: (kw= '>' (kw= '>' )? kw= '>=' )
                    {
                    // InternalCheckerDsl.g:5155:3: (kw= '>' (kw= '>' )? kw= '>=' )
                    // InternalCheckerDsl.g:5156:4: kw= '>' (kw= '>' )? kw= '>='
                    {
                    kw=(Token)match(input,47,FOLLOW_57); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getGreaterThanSignKeyword_6_0());
                      			
                    }
                    // InternalCheckerDsl.g:5161:4: (kw= '>' )?
                    int alt69=2;
                    int LA69_0 = input.LA(1);

                    if ( (LA69_0==47) ) {
                        alt69=1;
                    }
                    switch (alt69) {
                        case 1 :
                            // InternalCheckerDsl.g:5162:5: kw= '>'
                            {
                            kw=(Token)match(input,47,FOLLOW_58); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getGreaterThanSignKeyword_6_1());
                              				
                            }

                            }
                            break;

                    }

                    kw=(Token)match(input,85,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getGreaterThanSignEqualsSignKeyword_6_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpMultiAssign"


    // $ANTLR start "entryRuleXOrExpression"
    // InternalCheckerDsl.g:5178:1: entryRuleXOrExpression returns [EObject current=null] : iv_ruleXOrExpression= ruleXOrExpression EOF ;
    public final EObject entryRuleXOrExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXOrExpression = null;


        try {
            // InternalCheckerDsl.g:5178:54: (iv_ruleXOrExpression= ruleXOrExpression EOF )
            // InternalCheckerDsl.g:5179:2: iv_ruleXOrExpression= ruleXOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXOrExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXOrExpression=ruleXOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXOrExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXOrExpression"


    // $ANTLR start "ruleXOrExpression"
    // InternalCheckerDsl.g:5185:1: ruleXOrExpression returns [EObject current=null] : (this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )* ) ;
    public final EObject ruleXOrExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XAndExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:5191:2: ( (this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )* ) )
            // InternalCheckerDsl.g:5192:2: (this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )* )
            {
            // InternalCheckerDsl.g:5192:2: (this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )* )
            // InternalCheckerDsl.g:5193:3: this_XAndExpression_0= ruleXAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXOrExpressionAccess().getXAndExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_59);
            this_XAndExpression_0=ruleXAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XAndExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalCheckerDsl.g:5201:3: ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) ) )*
            loop71:
            do {
                int alt71=2;
                int LA71_0 = input.LA(1);

                if ( (LA71_0==101) ) {
                    int LA71_2 = input.LA(2);

                    if ( (synpred2_InternalCheckerDsl()) ) {
                        alt71=1;
                    }


                }


                switch (alt71) {
            	case 1 :
            	    // InternalCheckerDsl.g:5202:4: ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) ) ( (lv_rightOperand_3_0= ruleXAndExpression ) )
            	    {
            	    // InternalCheckerDsl.g:5202:4: ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) ) )
            	    // InternalCheckerDsl.g:5203:5: ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( ( ruleOpOr ) ) )
            	    {
            	    // InternalCheckerDsl.g:5213:5: ( () ( ( ruleOpOr ) ) )
            	    // InternalCheckerDsl.g:5214:6: () ( ( ruleOpOr ) )
            	    {
            	    // InternalCheckerDsl.g:5214:6: ()
            	    // InternalCheckerDsl.g:5215:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXOrExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalCheckerDsl.g:5221:6: ( ( ruleOpOr ) )
            	    // InternalCheckerDsl.g:5222:7: ( ruleOpOr )
            	    {
            	    // InternalCheckerDsl.g:5222:7: ( ruleOpOr )
            	    // InternalCheckerDsl.g:5223:8: ruleOpOr
            	    {
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElement(grammarAccess.getXOrExpressionRule());
            	      								}
            	      							
            	    }
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getXOrExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_54);
            	    ruleOpOr();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalCheckerDsl.g:5239:4: ( (lv_rightOperand_3_0= ruleXAndExpression ) )
            	    // InternalCheckerDsl.g:5240:5: (lv_rightOperand_3_0= ruleXAndExpression )
            	    {
            	    // InternalCheckerDsl.g:5240:5: (lv_rightOperand_3_0= ruleXAndExpression )
            	    // InternalCheckerDsl.g:5241:6: lv_rightOperand_3_0= ruleXAndExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXOrExpressionAccess().getRightOperandXAndExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_59);
            	    lv_rightOperand_3_0=ruleXAndExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXOrExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"org.eclipse.xtext.xbase.Xbase.XAndExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop71;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXOrExpression"


    // $ANTLR start "entryRuleOpOr"
    // InternalCheckerDsl.g:5263:1: entryRuleOpOr returns [String current=null] : iv_ruleOpOr= ruleOpOr EOF ;
    public final String entryRuleOpOr() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpOr = null;


        try {
            // InternalCheckerDsl.g:5263:44: (iv_ruleOpOr= ruleOpOr EOF )
            // InternalCheckerDsl.g:5264:2: iv_ruleOpOr= ruleOpOr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpOrRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpOr=ruleOpOr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpOr.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpOr"


    // $ANTLR start "ruleOpOr"
    // InternalCheckerDsl.g:5270:1: ruleOpOr returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= '||' ;
    public final AntlrDatatypeRuleToken ruleOpOr() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalCheckerDsl.g:5276:2: (kw= '||' )
            // InternalCheckerDsl.g:5277:2: kw= '||'
            {
            kw=(Token)match(input,101,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getOpOrAccess().getVerticalLineVerticalLineKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpOr"


    // $ANTLR start "entryRuleXAndExpression"
    // InternalCheckerDsl.g:5285:1: entryRuleXAndExpression returns [EObject current=null] : iv_ruleXAndExpression= ruleXAndExpression EOF ;
    public final EObject entryRuleXAndExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXAndExpression = null;


        try {
            // InternalCheckerDsl.g:5285:55: (iv_ruleXAndExpression= ruleXAndExpression EOF )
            // InternalCheckerDsl.g:5286:2: iv_ruleXAndExpression= ruleXAndExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXAndExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXAndExpression=ruleXAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAndExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXAndExpression"


    // $ANTLR start "ruleXAndExpression"
    // InternalCheckerDsl.g:5292:1: ruleXAndExpression returns [EObject current=null] : (this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )* ) ;
    public final EObject ruleXAndExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XEqualityExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:5298:2: ( (this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )* ) )
            // InternalCheckerDsl.g:5299:2: (this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )* )
            {
            // InternalCheckerDsl.g:5299:2: (this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )* )
            // InternalCheckerDsl.g:5300:3: this_XEqualityExpression_0= ruleXEqualityExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXAndExpressionAccess().getXEqualityExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_60);
            this_XEqualityExpression_0=ruleXEqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XEqualityExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalCheckerDsl.g:5308:3: ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) ) )*
            loop72:
            do {
                int alt72=2;
                int LA72_0 = input.LA(1);

                if ( (LA72_0==102) ) {
                    int LA72_2 = input.LA(2);

                    if ( (synpred3_InternalCheckerDsl()) ) {
                        alt72=1;
                    }


                }


                switch (alt72) {
            	case 1 :
            	    // InternalCheckerDsl.g:5309:4: ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) ) ( (lv_rightOperand_3_0= ruleXEqualityExpression ) )
            	    {
            	    // InternalCheckerDsl.g:5309:4: ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) ) )
            	    // InternalCheckerDsl.g:5310:5: ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( ( ruleOpAnd ) ) )
            	    {
            	    // InternalCheckerDsl.g:5320:5: ( () ( ( ruleOpAnd ) ) )
            	    // InternalCheckerDsl.g:5321:6: () ( ( ruleOpAnd ) )
            	    {
            	    // InternalCheckerDsl.g:5321:6: ()
            	    // InternalCheckerDsl.g:5322:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXAndExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalCheckerDsl.g:5328:6: ( ( ruleOpAnd ) )
            	    // InternalCheckerDsl.g:5329:7: ( ruleOpAnd )
            	    {
            	    // InternalCheckerDsl.g:5329:7: ( ruleOpAnd )
            	    // InternalCheckerDsl.g:5330:8: ruleOpAnd
            	    {
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElement(grammarAccess.getXAndExpressionRule());
            	      								}
            	      							
            	    }
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getXAndExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_54);
            	    ruleOpAnd();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalCheckerDsl.g:5346:4: ( (lv_rightOperand_3_0= ruleXEqualityExpression ) )
            	    // InternalCheckerDsl.g:5347:5: (lv_rightOperand_3_0= ruleXEqualityExpression )
            	    {
            	    // InternalCheckerDsl.g:5347:5: (lv_rightOperand_3_0= ruleXEqualityExpression )
            	    // InternalCheckerDsl.g:5348:6: lv_rightOperand_3_0= ruleXEqualityExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXAndExpressionAccess().getRightOperandXEqualityExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_60);
            	    lv_rightOperand_3_0=ruleXEqualityExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXAndExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"org.eclipse.xtext.xbase.Xbase.XEqualityExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop72;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXAndExpression"


    // $ANTLR start "entryRuleOpAnd"
    // InternalCheckerDsl.g:5370:1: entryRuleOpAnd returns [String current=null] : iv_ruleOpAnd= ruleOpAnd EOF ;
    public final String entryRuleOpAnd() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpAnd = null;


        try {
            // InternalCheckerDsl.g:5370:45: (iv_ruleOpAnd= ruleOpAnd EOF )
            // InternalCheckerDsl.g:5371:2: iv_ruleOpAnd= ruleOpAnd EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpAndRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpAnd=ruleOpAnd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpAnd.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpAnd"


    // $ANTLR start "ruleOpAnd"
    // InternalCheckerDsl.g:5377:1: ruleOpAnd returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= '&&' ;
    public final AntlrDatatypeRuleToken ruleOpAnd() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalCheckerDsl.g:5383:2: (kw= '&&' )
            // InternalCheckerDsl.g:5384:2: kw= '&&'
            {
            kw=(Token)match(input,102,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getOpAndAccess().getAmpersandAmpersandKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpAnd"


    // $ANTLR start "entryRuleXEqualityExpression"
    // InternalCheckerDsl.g:5392:1: entryRuleXEqualityExpression returns [EObject current=null] : iv_ruleXEqualityExpression= ruleXEqualityExpression EOF ;
    public final EObject entryRuleXEqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXEqualityExpression = null;


        try {
            // InternalCheckerDsl.g:5392:60: (iv_ruleXEqualityExpression= ruleXEqualityExpression EOF )
            // InternalCheckerDsl.g:5393:2: iv_ruleXEqualityExpression= ruleXEqualityExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXEqualityExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXEqualityExpression=ruleXEqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXEqualityExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXEqualityExpression"


    // $ANTLR start "ruleXEqualityExpression"
    // InternalCheckerDsl.g:5399:1: ruleXEqualityExpression returns [EObject current=null] : (this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )* ) ;
    public final EObject ruleXEqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XRelationalExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:5405:2: ( (this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )* ) )
            // InternalCheckerDsl.g:5406:2: (this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )* )
            {
            // InternalCheckerDsl.g:5406:2: (this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )* )
            // InternalCheckerDsl.g:5407:3: this_XRelationalExpression_0= ruleXRelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXEqualityExpressionAccess().getXRelationalExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_61);
            this_XRelationalExpression_0=ruleXRelationalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XRelationalExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalCheckerDsl.g:5415:3: ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) ) )*
            loop73:
            do {
                int alt73=2;
                switch ( input.LA(1) ) {
                case 83:
                    {
                    int LA73_2 = input.LA(2);

                    if ( (synpred4_InternalCheckerDsl()) ) {
                        alt73=1;
                    }


                    }
                    break;
                case 84:
                    {
                    int LA73_3 = input.LA(2);

                    if ( (synpred4_InternalCheckerDsl()) ) {
                        alt73=1;
                    }


                    }
                    break;
                case 103:
                    {
                    int LA73_4 = input.LA(2);

                    if ( (synpred4_InternalCheckerDsl()) ) {
                        alt73=1;
                    }


                    }
                    break;
                case 104:
                    {
                    int LA73_5 = input.LA(2);

                    if ( (synpred4_InternalCheckerDsl()) ) {
                        alt73=1;
                    }


                    }
                    break;

                }

                switch (alt73) {
            	case 1 :
            	    // InternalCheckerDsl.g:5416:4: ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) ) ( (lv_rightOperand_3_0= ruleXRelationalExpression ) )
            	    {
            	    // InternalCheckerDsl.g:5416:4: ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) ) )
            	    // InternalCheckerDsl.g:5417:5: ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( ( ruleOpEquality ) ) )
            	    {
            	    // InternalCheckerDsl.g:5427:5: ( () ( ( ruleOpEquality ) ) )
            	    // InternalCheckerDsl.g:5428:6: () ( ( ruleOpEquality ) )
            	    {
            	    // InternalCheckerDsl.g:5428:6: ()
            	    // InternalCheckerDsl.g:5429:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXEqualityExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalCheckerDsl.g:5435:6: ( ( ruleOpEquality ) )
            	    // InternalCheckerDsl.g:5436:7: ( ruleOpEquality )
            	    {
            	    // InternalCheckerDsl.g:5436:7: ( ruleOpEquality )
            	    // InternalCheckerDsl.g:5437:8: ruleOpEquality
            	    {
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElement(grammarAccess.getXEqualityExpressionRule());
            	      								}
            	      							
            	    }
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getXEqualityExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_54);
            	    ruleOpEquality();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalCheckerDsl.g:5453:4: ( (lv_rightOperand_3_0= ruleXRelationalExpression ) )
            	    // InternalCheckerDsl.g:5454:5: (lv_rightOperand_3_0= ruleXRelationalExpression )
            	    {
            	    // InternalCheckerDsl.g:5454:5: (lv_rightOperand_3_0= ruleXRelationalExpression )
            	    // InternalCheckerDsl.g:5455:6: lv_rightOperand_3_0= ruleXRelationalExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXEqualityExpressionAccess().getRightOperandXRelationalExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_61);
            	    lv_rightOperand_3_0=ruleXRelationalExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXEqualityExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"org.eclipse.xtext.xbase.Xbase.XRelationalExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop73;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXEqualityExpression"


    // $ANTLR start "entryRuleOpEquality"
    // InternalCheckerDsl.g:5477:1: entryRuleOpEquality returns [String current=null] : iv_ruleOpEquality= ruleOpEquality EOF ;
    public final String entryRuleOpEquality() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpEquality = null;


        try {
            // InternalCheckerDsl.g:5477:50: (iv_ruleOpEquality= ruleOpEquality EOF )
            // InternalCheckerDsl.g:5478:2: iv_ruleOpEquality= ruleOpEquality EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpEqualityRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpEquality=ruleOpEquality();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpEquality.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpEquality"


    // $ANTLR start "ruleOpEquality"
    // InternalCheckerDsl.g:5484:1: ruleOpEquality returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '==' | kw= '!=' | kw= '===' | kw= '!==' ) ;
    public final AntlrDatatypeRuleToken ruleOpEquality() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalCheckerDsl.g:5490:2: ( (kw= '==' | kw= '!=' | kw= '===' | kw= '!==' ) )
            // InternalCheckerDsl.g:5491:2: (kw= '==' | kw= '!=' | kw= '===' | kw= '!==' )
            {
            // InternalCheckerDsl.g:5491:2: (kw= '==' | kw= '!=' | kw= '===' | kw= '!==' )
            int alt74=4;
            switch ( input.LA(1) ) {
            case 83:
                {
                alt74=1;
                }
                break;
            case 84:
                {
                alt74=2;
                }
                break;
            case 103:
                {
                alt74=3;
                }
                break;
            case 104:
                {
                alt74=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 74, 0, input);

                throw nvae;
            }

            switch (alt74) {
                case 1 :
                    // InternalCheckerDsl.g:5492:3: kw= '=='
                    {
                    kw=(Token)match(input,83,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpEqualityAccess().getEqualsSignEqualsSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalCheckerDsl.g:5498:3: kw= '!='
                    {
                    kw=(Token)match(input,84,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpEqualityAccess().getExclamationMarkEqualsSignKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalCheckerDsl.g:5504:3: kw= '==='
                    {
                    kw=(Token)match(input,103,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpEqualityAccess().getEqualsSignEqualsSignEqualsSignKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalCheckerDsl.g:5510:3: kw= '!=='
                    {
                    kw=(Token)match(input,104,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpEqualityAccess().getExclamationMarkEqualsSignEqualsSignKeyword_3());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpEquality"


    // $ANTLR start "entryRuleXRelationalExpression"
    // InternalCheckerDsl.g:5519:1: entryRuleXRelationalExpression returns [EObject current=null] : iv_ruleXRelationalExpression= ruleXRelationalExpression EOF ;
    public final EObject entryRuleXRelationalExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXRelationalExpression = null;


        try {
            // InternalCheckerDsl.g:5519:62: (iv_ruleXRelationalExpression= ruleXRelationalExpression EOF )
            // InternalCheckerDsl.g:5520:2: iv_ruleXRelationalExpression= ruleXRelationalExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXRelationalExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXRelationalExpression=ruleXRelationalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXRelationalExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXRelationalExpression"


    // $ANTLR start "ruleXRelationalExpression"
    // InternalCheckerDsl.g:5526:1: ruleXRelationalExpression returns [EObject current=null] : (this_XOtherOperatorExpression_0= ruleXOtherOperatorExpression ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )* ) ;
    public final EObject ruleXRelationalExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject this_XOtherOperatorExpression_0 = null;

        EObject lv_type_3_0 = null;

        EObject lv_rightOperand_6_0 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:5532:2: ( (this_XOtherOperatorExpression_0= ruleXOtherOperatorExpression ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )* ) )
            // InternalCheckerDsl.g:5533:2: (this_XOtherOperatorExpression_0= ruleXOtherOperatorExpression ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )* )
            {
            // InternalCheckerDsl.g:5533:2: (this_XOtherOperatorExpression_0= ruleXOtherOperatorExpression ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )* )
            // InternalCheckerDsl.g:5534:3: this_XOtherOperatorExpression_0= ruleXOtherOperatorExpression ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getXOtherOperatorExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_62);
            this_XOtherOperatorExpression_0=ruleXOtherOperatorExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XOtherOperatorExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalCheckerDsl.g:5542:3: ( ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) ) | ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) ) )*
            loop75:
            do {
                int alt75=3;
                switch ( input.LA(1) ) {
                case 46:
                    {
                    int LA75_2 = input.LA(2);

                    if ( (synpred6_InternalCheckerDsl()) ) {
                        alt75=2;
                    }


                    }
                    break;
                case 47:
                    {
                    int LA75_3 = input.LA(2);

                    if ( (synpred6_InternalCheckerDsl()) ) {
                        alt75=2;
                    }


                    }
                    break;
                case 105:
                    {
                    int LA75_4 = input.LA(2);

                    if ( (synpred5_InternalCheckerDsl()) ) {
                        alt75=1;
                    }


                    }
                    break;
                case 85:
                    {
                    int LA75_5 = input.LA(2);

                    if ( (synpred6_InternalCheckerDsl()) ) {
                        alt75=2;
                    }


                    }
                    break;

                }

                switch (alt75) {
            	case 1 :
            	    // InternalCheckerDsl.g:5543:4: ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )
            	    {
            	    // InternalCheckerDsl.g:5543:4: ( ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )
            	    // InternalCheckerDsl.g:5544:5: ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) )
            	    {
            	    // InternalCheckerDsl.g:5544:5: ( ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' ) )
            	    // InternalCheckerDsl.g:5545:6: ( ( () 'instanceof' ) )=> ( () otherlv_2= 'instanceof' )
            	    {
            	    // InternalCheckerDsl.g:5551:6: ( () otherlv_2= 'instanceof' )
            	    // InternalCheckerDsl.g:5552:7: () otherlv_2= 'instanceof'
            	    {
            	    // InternalCheckerDsl.g:5552:7: ()
            	    // InternalCheckerDsl.g:5553:8: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      								current = forceCreateModelElementAndSet(
            	      									grammarAccess.getXRelationalExpressionAccess().getXInstanceOfExpressionExpressionAction_1_0_0_0_0(),
            	      									current);
            	      							
            	    }

            	    }

            	    otherlv_2=(Token)match(input,105,FOLLOW_8); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							newLeafNode(otherlv_2, grammarAccess.getXRelationalExpressionAccess().getInstanceofKeyword_1_0_0_0_1());
            	      						
            	    }

            	    }


            	    }

            	    // InternalCheckerDsl.g:5565:5: ( (lv_type_3_0= ruleJvmTypeReference ) )
            	    // InternalCheckerDsl.g:5566:6: (lv_type_3_0= ruleJvmTypeReference )
            	    {
            	    // InternalCheckerDsl.g:5566:6: (lv_type_3_0= ruleJvmTypeReference )
            	    // InternalCheckerDsl.g:5567:7: lv_type_3_0= ruleJvmTypeReference
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getTypeJvmTypeReferenceParserRuleCall_1_0_1_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_62);
            	    lv_type_3_0=ruleJvmTypeReference();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getXRelationalExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"type",
            	      								lv_type_3_0,
            	      								"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalCheckerDsl.g:5586:4: ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) )
            	    {
            	    // InternalCheckerDsl.g:5586:4: ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) ) )
            	    // InternalCheckerDsl.g:5587:5: ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) ) ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) )
            	    {
            	    // InternalCheckerDsl.g:5587:5: ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) ) )
            	    // InternalCheckerDsl.g:5588:6: ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( ( ruleOpCompare ) ) )
            	    {
            	    // InternalCheckerDsl.g:5598:6: ( () ( ( ruleOpCompare ) ) )
            	    // InternalCheckerDsl.g:5599:7: () ( ( ruleOpCompare ) )
            	    {
            	    // InternalCheckerDsl.g:5599:7: ()
            	    // InternalCheckerDsl.g:5600:8: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      								current = forceCreateModelElementAndSet(
            	      									grammarAccess.getXRelationalExpressionAccess().getXBinaryOperationLeftOperandAction_1_1_0_0_0(),
            	      									current);
            	      							
            	    }

            	    }

            	    // InternalCheckerDsl.g:5606:7: ( ( ruleOpCompare ) )
            	    // InternalCheckerDsl.g:5607:8: ( ruleOpCompare )
            	    {
            	    // InternalCheckerDsl.g:5607:8: ( ruleOpCompare )
            	    // InternalCheckerDsl.g:5608:9: ruleOpCompare
            	    {
            	    if ( state.backtracking==0 ) {

            	      									if (current==null) {
            	      										current = createModelElement(grammarAccess.getXRelationalExpressionRule());
            	      									}
            	      								
            	    }
            	    if ( state.backtracking==0 ) {

            	      									newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_0_0_1_0());
            	      								
            	    }
            	    pushFollow(FOLLOW_54);
            	    ruleOpCompare();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									afterParserOrEnumRuleCall();
            	      								
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalCheckerDsl.g:5624:5: ( (lv_rightOperand_6_0= ruleXOtherOperatorExpression ) )
            	    // InternalCheckerDsl.g:5625:6: (lv_rightOperand_6_0= ruleXOtherOperatorExpression )
            	    {
            	    // InternalCheckerDsl.g:5625:6: (lv_rightOperand_6_0= ruleXOtherOperatorExpression )
            	    // InternalCheckerDsl.g:5626:7: lv_rightOperand_6_0= ruleXOtherOperatorExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getRightOperandXOtherOperatorExpressionParserRuleCall_1_1_1_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_62);
            	    lv_rightOperand_6_0=ruleXOtherOperatorExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getXRelationalExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"rightOperand",
            	      								lv_rightOperand_6_0,
            	      								"org.eclipse.xtext.xbase.Xbase.XOtherOperatorExpression");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop75;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXRelationalExpression"


    // $ANTLR start "entryRuleOpCompare"
    // InternalCheckerDsl.g:5649:1: entryRuleOpCompare returns [String current=null] : iv_ruleOpCompare= ruleOpCompare EOF ;
    public final String entryRuleOpCompare() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpCompare = null;


        try {
            // InternalCheckerDsl.g:5649:49: (iv_ruleOpCompare= ruleOpCompare EOF )
            // InternalCheckerDsl.g:5650:2: iv_ruleOpCompare= ruleOpCompare EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpCompareRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpCompare=ruleOpCompare();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpCompare.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpCompare"


    // $ANTLR start "ruleOpCompare"
    // InternalCheckerDsl.g:5656:1: ruleOpCompare returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '>=' | (kw= '<' kw= '=' ) | kw= '>' | kw= '<' ) ;
    public final AntlrDatatypeRuleToken ruleOpCompare() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalCheckerDsl.g:5662:2: ( (kw= '>=' | (kw= '<' kw= '=' ) | kw= '>' | kw= '<' ) )
            // InternalCheckerDsl.g:5663:2: (kw= '>=' | (kw= '<' kw= '=' ) | kw= '>' | kw= '<' )
            {
            // InternalCheckerDsl.g:5663:2: (kw= '>=' | (kw= '<' kw= '=' ) | kw= '>' | kw= '<' )
            int alt76=4;
            switch ( input.LA(1) ) {
            case 85:
                {
                alt76=1;
                }
                break;
            case 46:
                {
                int LA76_2 = input.LA(2);

                if ( (LA76_2==EOF||(LA76_2>=RULE_INT && LA76_2<=RULE_ID)||LA76_2==14||LA76_2==17||LA76_2==19||LA76_2==27||LA76_2==46||(LA76_2>=76 && LA76_2<=77)||LA76_2==89||LA76_2==113||(LA76_2>=119 && LA76_2<=120)||LA76_2==122||(LA76_2>=125 && LA76_2<=126)||(LA76_2>=129 && LA76_2<=140)||LA76_2==142) ) {
                    alt76=4;
                }
                else if ( (LA76_2==75) ) {
                    alt76=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 2, input);

                    throw nvae;
                }
                }
                break;
            case 47:
                {
                alt76=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 76, 0, input);

                throw nvae;
            }

            switch (alt76) {
                case 1 :
                    // InternalCheckerDsl.g:5664:3: kw= '>='
                    {
                    kw=(Token)match(input,85,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpCompareAccess().getGreaterThanSignEqualsSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalCheckerDsl.g:5670:3: (kw= '<' kw= '=' )
                    {
                    // InternalCheckerDsl.g:5670:3: (kw= '<' kw= '=' )
                    // InternalCheckerDsl.g:5671:4: kw= '<' kw= '='
                    {
                    kw=(Token)match(input,46,FOLLOW_41); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpCompareAccess().getLessThanSignKeyword_1_0());
                      			
                    }
                    kw=(Token)match(input,75,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpCompareAccess().getEqualsSignKeyword_1_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalCheckerDsl.g:5683:3: kw= '>'
                    {
                    kw=(Token)match(input,47,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpCompareAccess().getGreaterThanSignKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalCheckerDsl.g:5689:3: kw= '<'
                    {
                    kw=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpCompareAccess().getLessThanSignKeyword_3());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpCompare"


    // $ANTLR start "entryRuleXOtherOperatorExpression"
    // InternalCheckerDsl.g:5698:1: entryRuleXOtherOperatorExpression returns [EObject current=null] : iv_ruleXOtherOperatorExpression= ruleXOtherOperatorExpression EOF ;
    public final EObject entryRuleXOtherOperatorExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXOtherOperatorExpression = null;


        try {
            // InternalCheckerDsl.g:5698:65: (iv_ruleXOtherOperatorExpression= ruleXOtherOperatorExpression EOF )
            // InternalCheckerDsl.g:5699:2: iv_ruleXOtherOperatorExpression= ruleXOtherOperatorExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXOtherOperatorExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXOtherOperatorExpression=ruleXOtherOperatorExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXOtherOperatorExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXOtherOperatorExpression"


    // $ANTLR start "ruleXOtherOperatorExpression"
    // InternalCheckerDsl.g:5705:1: ruleXOtherOperatorExpression returns [EObject current=null] : (this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )* ) ;
    public final EObject ruleXOtherOperatorExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XAdditiveExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:5711:2: ( (this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )* ) )
            // InternalCheckerDsl.g:5712:2: (this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )* )
            {
            // InternalCheckerDsl.g:5712:2: (this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )* )
            // InternalCheckerDsl.g:5713:3: this_XAdditiveExpression_0= ruleXAdditiveExpression ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXOtherOperatorExpressionAccess().getXAdditiveExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_63);
            this_XAdditiveExpression_0=ruleXAdditiveExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XAdditiveExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalCheckerDsl.g:5721:3: ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )*
            loop77:
            do {
                int alt77=2;
                alt77 = dfa77.predict(input);
                switch (alt77) {
            	case 1 :
            	    // InternalCheckerDsl.g:5722:4: ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) )
            	    {
            	    // InternalCheckerDsl.g:5722:4: ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) )
            	    // InternalCheckerDsl.g:5723:5: ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) )
            	    {
            	    // InternalCheckerDsl.g:5733:5: ( () ( ( ruleOpOther ) ) )
            	    // InternalCheckerDsl.g:5734:6: () ( ( ruleOpOther ) )
            	    {
            	    // InternalCheckerDsl.g:5734:6: ()
            	    // InternalCheckerDsl.g:5735:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXOtherOperatorExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalCheckerDsl.g:5741:6: ( ( ruleOpOther ) )
            	    // InternalCheckerDsl.g:5742:7: ( ruleOpOther )
            	    {
            	    // InternalCheckerDsl.g:5742:7: ( ruleOpOther )
            	    // InternalCheckerDsl.g:5743:8: ruleOpOther
            	    {
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElement(grammarAccess.getXOtherOperatorExpressionRule());
            	      								}
            	      							
            	    }
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getXOtherOperatorExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_54);
            	    ruleOpOther();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalCheckerDsl.g:5759:4: ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) )
            	    // InternalCheckerDsl.g:5760:5: (lv_rightOperand_3_0= ruleXAdditiveExpression )
            	    {
            	    // InternalCheckerDsl.g:5760:5: (lv_rightOperand_3_0= ruleXAdditiveExpression )
            	    // InternalCheckerDsl.g:5761:6: lv_rightOperand_3_0= ruleXAdditiveExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXOtherOperatorExpressionAccess().getRightOperandXAdditiveExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_63);
            	    lv_rightOperand_3_0=ruleXAdditiveExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXOtherOperatorExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"org.eclipse.xtext.xbase.Xbase.XAdditiveExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop77;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXOtherOperatorExpression"


    // $ANTLR start "entryRuleOpOther"
    // InternalCheckerDsl.g:5783:1: entryRuleOpOther returns [String current=null] : iv_ruleOpOther= ruleOpOther EOF ;
    public final String entryRuleOpOther() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpOther = null;


        try {
            // InternalCheckerDsl.g:5783:47: (iv_ruleOpOther= ruleOpOther EOF )
            // InternalCheckerDsl.g:5784:2: iv_ruleOpOther= ruleOpOther EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpOtherRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpOther=ruleOpOther();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpOther.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpOther"


    // $ANTLR start "ruleOpOther"
    // InternalCheckerDsl.g:5790:1: ruleOpOther returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '->' | kw= '..<' | (kw= '>' kw= '..' ) | kw= '..' | kw= '=>' | (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) ) | (kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' ) ) | kw= '<>' | kw= '?:' ) ;
    public final AntlrDatatypeRuleToken ruleOpOther() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalCheckerDsl.g:5796:2: ( (kw= '->' | kw= '..<' | (kw= '>' kw= '..' ) | kw= '..' | kw= '=>' | (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) ) | (kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' ) ) | kw= '<>' | kw= '?:' ) )
            // InternalCheckerDsl.g:5797:2: (kw= '->' | kw= '..<' | (kw= '>' kw= '..' ) | kw= '..' | kw= '=>' | (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) ) | (kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' ) ) | kw= '<>' | kw= '?:' )
            {
            // InternalCheckerDsl.g:5797:2: (kw= '->' | kw= '..<' | (kw= '>' kw= '..' ) | kw= '..' | kw= '=>' | (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) ) | (kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' ) ) | kw= '<>' | kw= '?:' )
            int alt80=9;
            alt80 = dfa80.predict(input);
            switch (alt80) {
                case 1 :
                    // InternalCheckerDsl.g:5798:3: kw= '->'
                    {
                    kw=(Token)match(input,106,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpOtherAccess().getHyphenMinusGreaterThanSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalCheckerDsl.g:5804:3: kw= '..<'
                    {
                    kw=(Token)match(input,107,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpOtherAccess().getFullStopFullStopLessThanSignKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalCheckerDsl.g:5810:3: (kw= '>' kw= '..' )
                    {
                    // InternalCheckerDsl.g:5810:3: (kw= '>' kw= '..' )
                    // InternalCheckerDsl.g:5811:4: kw= '>' kw= '..'
                    {
                    kw=(Token)match(input,47,FOLLOW_38); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_2_0());
                      			
                    }
                    kw=(Token)match(input,54,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpOtherAccess().getFullStopFullStopKeyword_2_1());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalCheckerDsl.g:5823:3: kw= '..'
                    {
                    kw=(Token)match(input,54,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpOtherAccess().getFullStopFullStopKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalCheckerDsl.g:5829:3: kw= '=>'
                    {
                    kw=(Token)match(input,108,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpOtherAccess().getEqualsSignGreaterThanSignKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalCheckerDsl.g:5835:3: (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) )
                    {
                    // InternalCheckerDsl.g:5835:3: (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) )
                    // InternalCheckerDsl.g:5836:4: kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' )
                    {
                    kw=(Token)match(input,47,FOLLOW_53); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_0());
                      			
                    }
                    // InternalCheckerDsl.g:5841:4: ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' )
                    int alt78=2;
                    int LA78_0 = input.LA(1);

                    if ( (LA78_0==47) ) {
                        int LA78_1 = input.LA(2);

                        if ( (LA78_1==47) && (synpred8_InternalCheckerDsl())) {
                            alt78=1;
                        }
                        else if ( (LA78_1==EOF||(LA78_1>=RULE_INT && LA78_1<=RULE_ID)||LA78_1==14||LA78_1==17||LA78_1==19||LA78_1==27||LA78_1==46||(LA78_1>=76 && LA78_1<=77)||LA78_1==89||LA78_1==113||(LA78_1>=119 && LA78_1<=120)||LA78_1==122||(LA78_1>=125 && LA78_1<=126)||(LA78_1>=129 && LA78_1<=140)||LA78_1==142) ) {
                            alt78=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 78, 1, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 78, 0, input);

                        throw nvae;
                    }
                    switch (alt78) {
                        case 1 :
                            // InternalCheckerDsl.g:5842:5: ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) )
                            {
                            // InternalCheckerDsl.g:5842:5: ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) )
                            // InternalCheckerDsl.g:5843:6: ( ( '>' '>' ) )=> (kw= '>' kw= '>' )
                            {
                            // InternalCheckerDsl.g:5848:6: (kw= '>' kw= '>' )
                            // InternalCheckerDsl.g:5849:7: kw= '>' kw= '>'
                            {
                            kw=(Token)match(input,47,FOLLOW_53); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							current.merge(kw);
                              							newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_1_0_0_0());
                              						
                            }
                            kw=(Token)match(input,47,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							current.merge(kw);
                              							newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_1_0_0_1());
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalCheckerDsl.g:5862:5: kw= '>'
                            {
                            kw=(Token)match(input,47,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_1_1());
                              				
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalCheckerDsl.g:5870:3: (kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' ) )
                    {
                    // InternalCheckerDsl.g:5870:3: (kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' ) )
                    // InternalCheckerDsl.g:5871:4: kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' )
                    {
                    kw=(Token)match(input,46,FOLLOW_64); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_0());
                      			
                    }
                    // InternalCheckerDsl.g:5876:4: ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' )
                    int alt79=3;
                    int LA79_0 = input.LA(1);

                    if ( (LA79_0==46) ) {
                        int LA79_1 = input.LA(2);

                        if ( (synpred9_InternalCheckerDsl()) ) {
                            alt79=1;
                        }
                        else if ( (true) ) {
                            alt79=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 79, 1, input);

                            throw nvae;
                        }
                    }
                    else if ( (LA79_0==108) ) {
                        alt79=3;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 79, 0, input);

                        throw nvae;
                    }
                    switch (alt79) {
                        case 1 :
                            // InternalCheckerDsl.g:5877:5: ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) )
                            {
                            // InternalCheckerDsl.g:5877:5: ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) )
                            // InternalCheckerDsl.g:5878:6: ( ( '<' '<' ) )=> (kw= '<' kw= '<' )
                            {
                            // InternalCheckerDsl.g:5883:6: (kw= '<' kw= '<' )
                            // InternalCheckerDsl.g:5884:7: kw= '<' kw= '<'
                            {
                            kw=(Token)match(input,46,FOLLOW_56); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							current.merge(kw);
                              							newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_1_0_0_0());
                              						
                            }
                            kw=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							current.merge(kw);
                              							newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_1_0_0_1());
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalCheckerDsl.g:5897:5: kw= '<'
                            {
                            kw=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_1_1());
                              				
                            }

                            }
                            break;
                        case 3 :
                            // InternalCheckerDsl.g:5903:5: kw= '=>'
                            {
                            kw=(Token)match(input,108,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getOpOtherAccess().getEqualsSignGreaterThanSignKeyword_6_1_2());
                              				
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalCheckerDsl.g:5911:3: kw= '<>'
                    {
                    kw=(Token)match(input,109,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignGreaterThanSignKeyword_7());
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalCheckerDsl.g:5917:3: kw= '?:'
                    {
                    kw=(Token)match(input,110,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpOtherAccess().getQuestionMarkColonKeyword_8());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpOther"


    // $ANTLR start "entryRuleXAdditiveExpression"
    // InternalCheckerDsl.g:5926:1: entryRuleXAdditiveExpression returns [EObject current=null] : iv_ruleXAdditiveExpression= ruleXAdditiveExpression EOF ;
    public final EObject entryRuleXAdditiveExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXAdditiveExpression = null;


        try {
            // InternalCheckerDsl.g:5926:60: (iv_ruleXAdditiveExpression= ruleXAdditiveExpression EOF )
            // InternalCheckerDsl.g:5927:2: iv_ruleXAdditiveExpression= ruleXAdditiveExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXAdditiveExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXAdditiveExpression=ruleXAdditiveExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAdditiveExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXAdditiveExpression"


    // $ANTLR start "ruleXAdditiveExpression"
    // InternalCheckerDsl.g:5933:1: ruleXAdditiveExpression returns [EObject current=null] : (this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )* ) ;
    public final EObject ruleXAdditiveExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XMultiplicativeExpression_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:5939:2: ( (this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )* ) )
            // InternalCheckerDsl.g:5940:2: (this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )* )
            {
            // InternalCheckerDsl.g:5940:2: (this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )* )
            // InternalCheckerDsl.g:5941:3: this_XMultiplicativeExpression_0= ruleXMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXAdditiveExpressionAccess().getXMultiplicativeExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_65);
            this_XMultiplicativeExpression_0=ruleXMultiplicativeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XMultiplicativeExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalCheckerDsl.g:5949:3: ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) ) )*
            loop81:
            do {
                int alt81=2;
                int LA81_0 = input.LA(1);

                if ( (LA81_0==76) ) {
                    int LA81_2 = input.LA(2);

                    if ( (synpred10_InternalCheckerDsl()) ) {
                        alt81=1;
                    }


                }
                else if ( (LA81_0==77) ) {
                    int LA81_3 = input.LA(2);

                    if ( (synpred10_InternalCheckerDsl()) ) {
                        alt81=1;
                    }


                }


                switch (alt81) {
            	case 1 :
            	    // InternalCheckerDsl.g:5950:4: ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) ) ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) )
            	    {
            	    // InternalCheckerDsl.g:5950:4: ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) ) )
            	    // InternalCheckerDsl.g:5951:5: ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( ( ruleOpAdd ) ) )
            	    {
            	    // InternalCheckerDsl.g:5961:5: ( () ( ( ruleOpAdd ) ) )
            	    // InternalCheckerDsl.g:5962:6: () ( ( ruleOpAdd ) )
            	    {
            	    // InternalCheckerDsl.g:5962:6: ()
            	    // InternalCheckerDsl.g:5963:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXAdditiveExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalCheckerDsl.g:5969:6: ( ( ruleOpAdd ) )
            	    // InternalCheckerDsl.g:5970:7: ( ruleOpAdd )
            	    {
            	    // InternalCheckerDsl.g:5970:7: ( ruleOpAdd )
            	    // InternalCheckerDsl.g:5971:8: ruleOpAdd
            	    {
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElement(grammarAccess.getXAdditiveExpressionRule());
            	      								}
            	      							
            	    }
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getXAdditiveExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_54);
            	    ruleOpAdd();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalCheckerDsl.g:5987:4: ( (lv_rightOperand_3_0= ruleXMultiplicativeExpression ) )
            	    // InternalCheckerDsl.g:5988:5: (lv_rightOperand_3_0= ruleXMultiplicativeExpression )
            	    {
            	    // InternalCheckerDsl.g:5988:5: (lv_rightOperand_3_0= ruleXMultiplicativeExpression )
            	    // InternalCheckerDsl.g:5989:6: lv_rightOperand_3_0= ruleXMultiplicativeExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXAdditiveExpressionAccess().getRightOperandXMultiplicativeExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_65);
            	    lv_rightOperand_3_0=ruleXMultiplicativeExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXAdditiveExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"org.eclipse.xtext.xbase.Xbase.XMultiplicativeExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop81;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXAdditiveExpression"


    // $ANTLR start "entryRuleOpAdd"
    // InternalCheckerDsl.g:6011:1: entryRuleOpAdd returns [String current=null] : iv_ruleOpAdd= ruleOpAdd EOF ;
    public final String entryRuleOpAdd() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpAdd = null;


        try {
            // InternalCheckerDsl.g:6011:45: (iv_ruleOpAdd= ruleOpAdd EOF )
            // InternalCheckerDsl.g:6012:2: iv_ruleOpAdd= ruleOpAdd EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpAddRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpAdd=ruleOpAdd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpAdd.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpAdd"


    // $ANTLR start "ruleOpAdd"
    // InternalCheckerDsl.g:6018:1: ruleOpAdd returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '+' | kw= '-' ) ;
    public final AntlrDatatypeRuleToken ruleOpAdd() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalCheckerDsl.g:6024:2: ( (kw= '+' | kw= '-' ) )
            // InternalCheckerDsl.g:6025:2: (kw= '+' | kw= '-' )
            {
            // InternalCheckerDsl.g:6025:2: (kw= '+' | kw= '-' )
            int alt82=2;
            int LA82_0 = input.LA(1);

            if ( (LA82_0==76) ) {
                alt82=1;
            }
            else if ( (LA82_0==77) ) {
                alt82=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 82, 0, input);

                throw nvae;
            }
            switch (alt82) {
                case 1 :
                    // InternalCheckerDsl.g:6026:3: kw= '+'
                    {
                    kw=(Token)match(input,76,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpAddAccess().getPlusSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalCheckerDsl.g:6032:3: kw= '-'
                    {
                    kw=(Token)match(input,77,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpAddAccess().getHyphenMinusKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpAdd"


    // $ANTLR start "entryRuleXMultiplicativeExpression"
    // InternalCheckerDsl.g:6041:1: entryRuleXMultiplicativeExpression returns [EObject current=null] : iv_ruleXMultiplicativeExpression= ruleXMultiplicativeExpression EOF ;
    public final EObject entryRuleXMultiplicativeExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXMultiplicativeExpression = null;


        try {
            // InternalCheckerDsl.g:6041:66: (iv_ruleXMultiplicativeExpression= ruleXMultiplicativeExpression EOF )
            // InternalCheckerDsl.g:6042:2: iv_ruleXMultiplicativeExpression= ruleXMultiplicativeExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXMultiplicativeExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXMultiplicativeExpression=ruleXMultiplicativeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXMultiplicativeExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXMultiplicativeExpression"


    // $ANTLR start "ruleXMultiplicativeExpression"
    // InternalCheckerDsl.g:6048:1: ruleXMultiplicativeExpression returns [EObject current=null] : (this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )* ) ;
    public final EObject ruleXMultiplicativeExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XUnaryOperation_0 = null;

        EObject lv_rightOperand_3_0 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:6054:2: ( (this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )* ) )
            // InternalCheckerDsl.g:6055:2: (this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )* )
            {
            // InternalCheckerDsl.g:6055:2: (this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )* )
            // InternalCheckerDsl.g:6056:3: this_XUnaryOperation_0= ruleXUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXMultiplicativeExpressionAccess().getXUnaryOperationParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_66);
            this_XUnaryOperation_0=ruleXUnaryOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XUnaryOperation_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalCheckerDsl.g:6064:3: ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) ) )*
            loop83:
            do {
                int alt83=2;
                switch ( input.LA(1) ) {
                case 78:
                    {
                    int LA83_2 = input.LA(2);

                    if ( (synpred11_InternalCheckerDsl()) ) {
                        alt83=1;
                    }


                    }
                    break;
                case 111:
                    {
                    int LA83_3 = input.LA(2);

                    if ( (synpred11_InternalCheckerDsl()) ) {
                        alt83=1;
                    }


                    }
                    break;
                case 79:
                    {
                    int LA83_4 = input.LA(2);

                    if ( (synpred11_InternalCheckerDsl()) ) {
                        alt83=1;
                    }


                    }
                    break;
                case 112:
                    {
                    int LA83_5 = input.LA(2);

                    if ( (synpred11_InternalCheckerDsl()) ) {
                        alt83=1;
                    }


                    }
                    break;

                }

                switch (alt83) {
            	case 1 :
            	    // InternalCheckerDsl.g:6065:4: ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) ) ( (lv_rightOperand_3_0= ruleXUnaryOperation ) )
            	    {
            	    // InternalCheckerDsl.g:6065:4: ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) ) )
            	    // InternalCheckerDsl.g:6066:5: ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( ( ruleOpMulti ) ) )
            	    {
            	    // InternalCheckerDsl.g:6076:5: ( () ( ( ruleOpMulti ) ) )
            	    // InternalCheckerDsl.g:6077:6: () ( ( ruleOpMulti ) )
            	    {
            	    // InternalCheckerDsl.g:6077:6: ()
            	    // InternalCheckerDsl.g:6078:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXMultiplicativeExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalCheckerDsl.g:6084:6: ( ( ruleOpMulti ) )
            	    // InternalCheckerDsl.g:6085:7: ( ruleOpMulti )
            	    {
            	    // InternalCheckerDsl.g:6085:7: ( ruleOpMulti )
            	    // InternalCheckerDsl.g:6086:8: ruleOpMulti
            	    {
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElement(grammarAccess.getXMultiplicativeExpressionRule());
            	      								}
            	      							
            	    }
            	    if ( state.backtracking==0 ) {

            	      								newCompositeNode(grammarAccess.getXMultiplicativeExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0());
            	      							
            	    }
            	    pushFollow(FOLLOW_54);
            	    ruleOpMulti();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								afterParserOrEnumRuleCall();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalCheckerDsl.g:6102:4: ( (lv_rightOperand_3_0= ruleXUnaryOperation ) )
            	    // InternalCheckerDsl.g:6103:5: (lv_rightOperand_3_0= ruleXUnaryOperation )
            	    {
            	    // InternalCheckerDsl.g:6103:5: (lv_rightOperand_3_0= ruleXUnaryOperation )
            	    // InternalCheckerDsl.g:6104:6: lv_rightOperand_3_0= ruleXUnaryOperation
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXMultiplicativeExpressionAccess().getRightOperandXUnaryOperationParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_66);
            	    lv_rightOperand_3_0=ruleXUnaryOperation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXMultiplicativeExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"rightOperand",
            	      							lv_rightOperand_3_0,
            	      							"org.eclipse.xtext.xbase.Xbase.XUnaryOperation");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop83;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXMultiplicativeExpression"


    // $ANTLR start "entryRuleOpMulti"
    // InternalCheckerDsl.g:6126:1: entryRuleOpMulti returns [String current=null] : iv_ruleOpMulti= ruleOpMulti EOF ;
    public final String entryRuleOpMulti() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpMulti = null;


        try {
            // InternalCheckerDsl.g:6126:47: (iv_ruleOpMulti= ruleOpMulti EOF )
            // InternalCheckerDsl.g:6127:2: iv_ruleOpMulti= ruleOpMulti EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpMultiRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpMulti=ruleOpMulti();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpMulti.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpMulti"


    // $ANTLR start "ruleOpMulti"
    // InternalCheckerDsl.g:6133:1: ruleOpMulti returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '*' | kw= '**' | kw= '/' | kw= '%' ) ;
    public final AntlrDatatypeRuleToken ruleOpMulti() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalCheckerDsl.g:6139:2: ( (kw= '*' | kw= '**' | kw= '/' | kw= '%' ) )
            // InternalCheckerDsl.g:6140:2: (kw= '*' | kw= '**' | kw= '/' | kw= '%' )
            {
            // InternalCheckerDsl.g:6140:2: (kw= '*' | kw= '**' | kw= '/' | kw= '%' )
            int alt84=4;
            switch ( input.LA(1) ) {
            case 78:
                {
                alt84=1;
                }
                break;
            case 111:
                {
                alt84=2;
                }
                break;
            case 79:
                {
                alt84=3;
                }
                break;
            case 112:
                {
                alt84=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 84, 0, input);

                throw nvae;
            }

            switch (alt84) {
                case 1 :
                    // InternalCheckerDsl.g:6141:3: kw= '*'
                    {
                    kw=(Token)match(input,78,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAccess().getAsteriskKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalCheckerDsl.g:6147:3: kw= '**'
                    {
                    kw=(Token)match(input,111,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAccess().getAsteriskAsteriskKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalCheckerDsl.g:6153:3: kw= '/'
                    {
                    kw=(Token)match(input,79,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAccess().getSolidusKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalCheckerDsl.g:6159:3: kw= '%'
                    {
                    kw=(Token)match(input,112,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpMultiAccess().getPercentSignKeyword_3());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpMulti"


    // $ANTLR start "entryRuleXUnaryOperation"
    // InternalCheckerDsl.g:6168:1: entryRuleXUnaryOperation returns [EObject current=null] : iv_ruleXUnaryOperation= ruleXUnaryOperation EOF ;
    public final EObject entryRuleXUnaryOperation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXUnaryOperation = null;


        try {
            // InternalCheckerDsl.g:6168:56: (iv_ruleXUnaryOperation= ruleXUnaryOperation EOF )
            // InternalCheckerDsl.g:6169:2: iv_ruleXUnaryOperation= ruleXUnaryOperation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXUnaryOperationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXUnaryOperation=ruleXUnaryOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXUnaryOperation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXUnaryOperation"


    // $ANTLR start "ruleXUnaryOperation"
    // InternalCheckerDsl.g:6175:1: ruleXUnaryOperation returns [EObject current=null] : ( ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) ) | this_XCastedExpression_3= ruleXCastedExpression ) ;
    public final EObject ruleXUnaryOperation() throws RecognitionException {
        EObject current = null;

        EObject lv_operand_2_0 = null;

        EObject this_XCastedExpression_3 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:6181:2: ( ( ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) ) | this_XCastedExpression_3= ruleXCastedExpression ) )
            // InternalCheckerDsl.g:6182:2: ( ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) ) | this_XCastedExpression_3= ruleXCastedExpression )
            {
            // InternalCheckerDsl.g:6182:2: ( ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) ) | this_XCastedExpression_3= ruleXCastedExpression )
            int alt85=2;
            int LA85_0 = input.LA(1);

            if ( ((LA85_0>=76 && LA85_0<=77)||LA85_0==113) ) {
                alt85=1;
            }
            else if ( ((LA85_0>=RULE_INT && LA85_0<=RULE_ID)||LA85_0==14||LA85_0==17||LA85_0==19||LA85_0==27||LA85_0==46||LA85_0==89||(LA85_0>=119 && LA85_0<=120)||LA85_0==122||(LA85_0>=125 && LA85_0<=126)||(LA85_0>=129 && LA85_0<=140)||LA85_0==142) ) {
                alt85=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 85, 0, input);

                throw nvae;
            }
            switch (alt85) {
                case 1 :
                    // InternalCheckerDsl.g:6183:3: ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) )
                    {
                    // InternalCheckerDsl.g:6183:3: ( () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) ) )
                    // InternalCheckerDsl.g:6184:4: () ( ( ruleOpUnary ) ) ( (lv_operand_2_0= ruleXUnaryOperation ) )
                    {
                    // InternalCheckerDsl.g:6184:4: ()
                    // InternalCheckerDsl.g:6185:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getXUnaryOperationAccess().getXUnaryOperationAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalCheckerDsl.g:6191:4: ( ( ruleOpUnary ) )
                    // InternalCheckerDsl.g:6192:5: ( ruleOpUnary )
                    {
                    // InternalCheckerDsl.g:6192:5: ( ruleOpUnary )
                    // InternalCheckerDsl.g:6193:6: ruleOpUnary
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getXUnaryOperationRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXUnaryOperationAccess().getFeatureJvmIdentifiableElementCrossReference_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_54);
                    ruleOpUnary();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalCheckerDsl.g:6207:4: ( (lv_operand_2_0= ruleXUnaryOperation ) )
                    // InternalCheckerDsl.g:6208:5: (lv_operand_2_0= ruleXUnaryOperation )
                    {
                    // InternalCheckerDsl.g:6208:5: (lv_operand_2_0= ruleXUnaryOperation )
                    // InternalCheckerDsl.g:6209:6: lv_operand_2_0= ruleXUnaryOperation
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXUnaryOperationAccess().getOperandXUnaryOperationParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_operand_2_0=ruleXUnaryOperation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXUnaryOperationRule());
                      						}
                      						set(
                      							current,
                      							"operand",
                      							lv_operand_2_0,
                      							"org.eclipse.xtext.xbase.Xbase.XUnaryOperation");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalCheckerDsl.g:6228:3: this_XCastedExpression_3= ruleXCastedExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXUnaryOperationAccess().getXCastedExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XCastedExpression_3=ruleXCastedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XCastedExpression_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXUnaryOperation"


    // $ANTLR start "entryRuleOpUnary"
    // InternalCheckerDsl.g:6240:1: entryRuleOpUnary returns [String current=null] : iv_ruleOpUnary= ruleOpUnary EOF ;
    public final String entryRuleOpUnary() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpUnary = null;


        try {
            // InternalCheckerDsl.g:6240:47: (iv_ruleOpUnary= ruleOpUnary EOF )
            // InternalCheckerDsl.g:6241:2: iv_ruleOpUnary= ruleOpUnary EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpUnaryRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpUnary=ruleOpUnary();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpUnary.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpUnary"


    // $ANTLR start "ruleOpUnary"
    // InternalCheckerDsl.g:6247:1: ruleOpUnary returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '!' | kw= '-' | kw= '+' ) ;
    public final AntlrDatatypeRuleToken ruleOpUnary() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalCheckerDsl.g:6253:2: ( (kw= '!' | kw= '-' | kw= '+' ) )
            // InternalCheckerDsl.g:6254:2: (kw= '!' | kw= '-' | kw= '+' )
            {
            // InternalCheckerDsl.g:6254:2: (kw= '!' | kw= '-' | kw= '+' )
            int alt86=3;
            switch ( input.LA(1) ) {
            case 113:
                {
                alt86=1;
                }
                break;
            case 77:
                {
                alt86=2;
                }
                break;
            case 76:
                {
                alt86=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 86, 0, input);

                throw nvae;
            }

            switch (alt86) {
                case 1 :
                    // InternalCheckerDsl.g:6255:3: kw= '!'
                    {
                    kw=(Token)match(input,113,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpUnaryAccess().getExclamationMarkKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalCheckerDsl.g:6261:3: kw= '-'
                    {
                    kw=(Token)match(input,77,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpUnaryAccess().getHyphenMinusKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalCheckerDsl.g:6267:3: kw= '+'
                    {
                    kw=(Token)match(input,76,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpUnaryAccess().getPlusSignKeyword_2());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpUnary"


    // $ANTLR start "entryRuleXCastedExpression"
    // InternalCheckerDsl.g:6276:1: entryRuleXCastedExpression returns [EObject current=null] : iv_ruleXCastedExpression= ruleXCastedExpression EOF ;
    public final EObject entryRuleXCastedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXCastedExpression = null;


        try {
            // InternalCheckerDsl.g:6276:58: (iv_ruleXCastedExpression= ruleXCastedExpression EOF )
            // InternalCheckerDsl.g:6277:2: iv_ruleXCastedExpression= ruleXCastedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXCastedExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXCastedExpression=ruleXCastedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXCastedExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXCastedExpression"


    // $ANTLR start "ruleXCastedExpression"
    // InternalCheckerDsl.g:6283:1: ruleXCastedExpression returns [EObject current=null] : (this_XPostfixOperation_0= ruleXPostfixOperation ( ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )* ) ;
    public final EObject ruleXCastedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject this_XPostfixOperation_0 = null;

        EObject lv_type_3_0 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:6289:2: ( (this_XPostfixOperation_0= ruleXPostfixOperation ( ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )* ) )
            // InternalCheckerDsl.g:6290:2: (this_XPostfixOperation_0= ruleXPostfixOperation ( ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )* )
            {
            // InternalCheckerDsl.g:6290:2: (this_XPostfixOperation_0= ruleXPostfixOperation ( ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )* )
            // InternalCheckerDsl.g:6291:3: this_XPostfixOperation_0= ruleXPostfixOperation ( ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXCastedExpressionAccess().getXPostfixOperationParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_67);
            this_XPostfixOperation_0=ruleXPostfixOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XPostfixOperation_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalCheckerDsl.g:6299:3: ( ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) ) )*
            loop87:
            do {
                int alt87=2;
                int LA87_0 = input.LA(1);

                if ( (LA87_0==114) ) {
                    int LA87_2 = input.LA(2);

                    if ( (synpred12_InternalCheckerDsl()) ) {
                        alt87=1;
                    }


                }


                switch (alt87) {
            	case 1 :
            	    // InternalCheckerDsl.g:6300:4: ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) ) ( (lv_type_3_0= ruleJvmTypeReference ) )
            	    {
            	    // InternalCheckerDsl.g:6300:4: ( ( ( () 'as' ) )=> ( () otherlv_2= 'as' ) )
            	    // InternalCheckerDsl.g:6301:5: ( ( () 'as' ) )=> ( () otherlv_2= 'as' )
            	    {
            	    // InternalCheckerDsl.g:6307:5: ( () otherlv_2= 'as' )
            	    // InternalCheckerDsl.g:6308:6: () otherlv_2= 'as'
            	    {
            	    // InternalCheckerDsl.g:6308:6: ()
            	    // InternalCheckerDsl.g:6309:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXCastedExpressionAccess().getXCastedExpressionTargetAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    otherlv_2=(Token)match(input,114,FOLLOW_8); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(otherlv_2, grammarAccess.getXCastedExpressionAccess().getAsKeyword_1_0_0_1());
            	      					
            	    }

            	    }


            	    }

            	    // InternalCheckerDsl.g:6321:4: ( (lv_type_3_0= ruleJvmTypeReference ) )
            	    // InternalCheckerDsl.g:6322:5: (lv_type_3_0= ruleJvmTypeReference )
            	    {
            	    // InternalCheckerDsl.g:6322:5: (lv_type_3_0= ruleJvmTypeReference )
            	    // InternalCheckerDsl.g:6323:6: lv_type_3_0= ruleJvmTypeReference
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXCastedExpressionAccess().getTypeJvmTypeReferenceParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_67);
            	    lv_type_3_0=ruleJvmTypeReference();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXCastedExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"type",
            	      							lv_type_3_0,
            	      							"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop87;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXCastedExpression"


    // $ANTLR start "entryRuleXPostfixOperation"
    // InternalCheckerDsl.g:6345:1: entryRuleXPostfixOperation returns [EObject current=null] : iv_ruleXPostfixOperation= ruleXPostfixOperation EOF ;
    public final EObject entryRuleXPostfixOperation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXPostfixOperation = null;


        try {
            // InternalCheckerDsl.g:6345:58: (iv_ruleXPostfixOperation= ruleXPostfixOperation EOF )
            // InternalCheckerDsl.g:6346:2: iv_ruleXPostfixOperation= ruleXPostfixOperation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXPostfixOperationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXPostfixOperation=ruleXPostfixOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXPostfixOperation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXPostfixOperation"


    // $ANTLR start "ruleXPostfixOperation"
    // InternalCheckerDsl.g:6352:1: ruleXPostfixOperation returns [EObject current=null] : (this_XMemberFeatureCall_0= ruleXMemberFeatureCall ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )? ) ;
    public final EObject ruleXPostfixOperation() throws RecognitionException {
        EObject current = null;

        EObject this_XMemberFeatureCall_0 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:6358:2: ( (this_XMemberFeatureCall_0= ruleXMemberFeatureCall ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )? ) )
            // InternalCheckerDsl.g:6359:2: (this_XMemberFeatureCall_0= ruleXMemberFeatureCall ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )? )
            {
            // InternalCheckerDsl.g:6359:2: (this_XMemberFeatureCall_0= ruleXMemberFeatureCall ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )? )
            // InternalCheckerDsl.g:6360:3: this_XMemberFeatureCall_0= ruleXMemberFeatureCall ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )?
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXPostfixOperationAccess().getXMemberFeatureCallParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_68);
            this_XMemberFeatureCall_0=ruleXMemberFeatureCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XMemberFeatureCall_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalCheckerDsl.g:6368:3: ( ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) ) )?
            int alt88=2;
            int LA88_0 = input.LA(1);

            if ( (LA88_0==115) ) {
                int LA88_1 = input.LA(2);

                if ( (synpred13_InternalCheckerDsl()) ) {
                    alt88=1;
                }
            }
            else if ( (LA88_0==116) ) {
                int LA88_2 = input.LA(2);

                if ( (synpred13_InternalCheckerDsl()) ) {
                    alt88=1;
                }
            }
            switch (alt88) {
                case 1 :
                    // InternalCheckerDsl.g:6369:4: ( ( () ( ( ruleOpPostfix ) ) ) )=> ( () ( ( ruleOpPostfix ) ) )
                    {
                    // InternalCheckerDsl.g:6379:4: ( () ( ( ruleOpPostfix ) ) )
                    // InternalCheckerDsl.g:6380:5: () ( ( ruleOpPostfix ) )
                    {
                    // InternalCheckerDsl.g:6380:5: ()
                    // InternalCheckerDsl.g:6381:6: 
                    {
                    if ( state.backtracking==0 ) {

                      						current = forceCreateModelElementAndSet(
                      							grammarAccess.getXPostfixOperationAccess().getXPostfixOperationOperandAction_1_0_0(),
                      							current);
                      					
                    }

                    }

                    // InternalCheckerDsl.g:6387:5: ( ( ruleOpPostfix ) )
                    // InternalCheckerDsl.g:6388:6: ( ruleOpPostfix )
                    {
                    // InternalCheckerDsl.g:6388:6: ( ruleOpPostfix )
                    // InternalCheckerDsl.g:6389:7: ruleOpPostfix
                    {
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getXPostfixOperationRule());
                      							}
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getXPostfixOperationAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_1_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    ruleOpPostfix();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXPostfixOperation"


    // $ANTLR start "entryRuleOpPostfix"
    // InternalCheckerDsl.g:6409:1: entryRuleOpPostfix returns [String current=null] : iv_ruleOpPostfix= ruleOpPostfix EOF ;
    public final String entryRuleOpPostfix() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpPostfix = null;


        try {
            // InternalCheckerDsl.g:6409:49: (iv_ruleOpPostfix= ruleOpPostfix EOF )
            // InternalCheckerDsl.g:6410:2: iv_ruleOpPostfix= ruleOpPostfix EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpPostfixRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpPostfix=ruleOpPostfix();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpPostfix.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpPostfix"


    // $ANTLR start "ruleOpPostfix"
    // InternalCheckerDsl.g:6416:1: ruleOpPostfix returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '++' | kw= '--' ) ;
    public final AntlrDatatypeRuleToken ruleOpPostfix() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalCheckerDsl.g:6422:2: ( (kw= '++' | kw= '--' ) )
            // InternalCheckerDsl.g:6423:2: (kw= '++' | kw= '--' )
            {
            // InternalCheckerDsl.g:6423:2: (kw= '++' | kw= '--' )
            int alt89=2;
            int LA89_0 = input.LA(1);

            if ( (LA89_0==115) ) {
                alt89=1;
            }
            else if ( (LA89_0==116) ) {
                alt89=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 89, 0, input);

                throw nvae;
            }
            switch (alt89) {
                case 1 :
                    // InternalCheckerDsl.g:6424:3: kw= '++'
                    {
                    kw=(Token)match(input,115,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpPostfixAccess().getPlusSignPlusSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalCheckerDsl.g:6430:3: kw= '--'
                    {
                    kw=(Token)match(input,116,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpPostfixAccess().getHyphenMinusHyphenMinusKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpPostfix"


    // $ANTLR start "entryRuleXMemberFeatureCall"
    // InternalCheckerDsl.g:6439:1: entryRuleXMemberFeatureCall returns [EObject current=null] : iv_ruleXMemberFeatureCall= ruleXMemberFeatureCall EOF ;
    public final EObject entryRuleXMemberFeatureCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXMemberFeatureCall = null;


        try {
            // InternalCheckerDsl.g:6439:59: (iv_ruleXMemberFeatureCall= ruleXMemberFeatureCall EOF )
            // InternalCheckerDsl.g:6440:2: iv_ruleXMemberFeatureCall= ruleXMemberFeatureCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXMemberFeatureCallRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXMemberFeatureCall=ruleXMemberFeatureCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXMemberFeatureCall; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXMemberFeatureCall"


    // $ANTLR start "ruleXMemberFeatureCall"
    // InternalCheckerDsl.g:6446:1: ruleXMemberFeatureCall returns [EObject current=null] : (this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )* ) ;
    public final EObject ruleXMemberFeatureCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_explicitStatic_3_0=null;
        Token otherlv_8=null;
        Token lv_nullSafe_9_0=null;
        Token lv_explicitStatic_10_0=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token lv_explicitOperationCall_17_0=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        EObject this_XPrimaryExpression_0 = null;

        EObject lv_value_6_0 = null;

        EObject lv_typeArguments_12_0 = null;

        EObject lv_typeArguments_14_0 = null;

        EObject lv_memberCallArguments_18_0 = null;

        EObject lv_memberCallArguments_19_0 = null;

        EObject lv_memberCallArguments_21_0 = null;

        EObject lv_memberCallArguments_23_0 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:6452:2: ( (this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )* ) )
            // InternalCheckerDsl.g:6453:2: (this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )* )
            {
            // InternalCheckerDsl.g:6453:2: (this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )* )
            // InternalCheckerDsl.g:6454:3: this_XPrimaryExpression_0= ruleXPrimaryExpression ( ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getXPrimaryExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_69);
            this_XPrimaryExpression_0=ruleXPrimaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XPrimaryExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalCheckerDsl.g:6462:3: ( ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) ) | ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? ) )*
            loop98:
            do {
                int alt98=3;
                switch ( input.LA(1) ) {
                case 44:
                    {
                    int LA98_2 = input.LA(2);

                    if ( (synpred14_InternalCheckerDsl()) ) {
                        alt98=1;
                    }
                    else if ( (synpred15_InternalCheckerDsl()) ) {
                        alt98=2;
                    }


                    }
                    break;
                case 117:
                    {
                    int LA98_3 = input.LA(2);

                    if ( (synpred14_InternalCheckerDsl()) ) {
                        alt98=1;
                    }
                    else if ( (synpred15_InternalCheckerDsl()) ) {
                        alt98=2;
                    }


                    }
                    break;
                case 118:
                    {
                    int LA98_4 = input.LA(2);

                    if ( (synpred15_InternalCheckerDsl()) ) {
                        alt98=2;
                    }


                    }
                    break;

                }

                switch (alt98) {
            	case 1 :
            	    // InternalCheckerDsl.g:6463:4: ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) )
            	    {
            	    // InternalCheckerDsl.g:6463:4: ( ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) ) )
            	    // InternalCheckerDsl.g:6464:5: ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) ) ( (lv_value_6_0= ruleXAssignment ) )
            	    {
            	    // InternalCheckerDsl.g:6464:5: ( ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )
            	    // InternalCheckerDsl.g:6465:6: ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )=> ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
            	    {
            	    // InternalCheckerDsl.g:6485:6: ( () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
            	    // InternalCheckerDsl.g:6486:7: () (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign
            	    {
            	    // InternalCheckerDsl.g:6486:7: ()
            	    // InternalCheckerDsl.g:6487:8: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      								current = forceCreateModelElementAndSet(
            	      									grammarAccess.getXMemberFeatureCallAccess().getXAssignmentAssignableAction_1_0_0_0_0(),
            	      									current);
            	      							
            	    }

            	    }

            	    // InternalCheckerDsl.g:6493:7: (otherlv_2= '.' | ( (lv_explicitStatic_3_0= '::' ) ) )
            	    int alt90=2;
            	    int LA90_0 = input.LA(1);

            	    if ( (LA90_0==44) ) {
            	        alt90=1;
            	    }
            	    else if ( (LA90_0==117) ) {
            	        alt90=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 90, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt90) {
            	        case 1 :
            	            // InternalCheckerDsl.g:6494:8: otherlv_2= '.'
            	            {
            	            otherlv_2=(Token)match(input,44,FOLLOW_70); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								newLeafNode(otherlv_2, grammarAccess.getXMemberFeatureCallAccess().getFullStopKeyword_1_0_0_0_1_0());
            	              							
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalCheckerDsl.g:6499:8: ( (lv_explicitStatic_3_0= '::' ) )
            	            {
            	            // InternalCheckerDsl.g:6499:8: ( (lv_explicitStatic_3_0= '::' ) )
            	            // InternalCheckerDsl.g:6500:9: (lv_explicitStatic_3_0= '::' )
            	            {
            	            // InternalCheckerDsl.g:6500:9: (lv_explicitStatic_3_0= '::' )
            	            // InternalCheckerDsl.g:6501:10: lv_explicitStatic_3_0= '::'
            	            {
            	            lv_explicitStatic_3_0=(Token)match(input,117,FOLLOW_70); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(lv_explicitStatic_3_0, grammarAccess.getXMemberFeatureCallAccess().getExplicitStaticColonColonKeyword_1_0_0_0_1_1_0());
            	              									
            	            }
            	            if ( state.backtracking==0 ) {

            	              										if (current==null) {
            	              											current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	              										}
            	              										setWithLastConsumed(current, "explicitStatic", lv_explicitStatic_3_0 != null, "::");
            	              									
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }

            	    // InternalCheckerDsl.g:6514:7: ( ( ruleFeatureCallID ) )
            	    // InternalCheckerDsl.g:6515:8: ( ruleFeatureCallID )
            	    {
            	    // InternalCheckerDsl.g:6515:8: ( ruleFeatureCallID )
            	    // InternalCheckerDsl.g:6516:9: ruleFeatureCallID
            	    {
            	    if ( state.backtracking==0 ) {

            	      									if (current==null) {
            	      										current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	      									}
            	      								
            	    }
            	    if ( state.backtracking==0 ) {

            	      									newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_0_2_0());
            	      								
            	    }
            	    pushFollow(FOLLOW_41);
            	    ruleFeatureCallID();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									afterParserOrEnumRuleCall();
            	      								
            	    }

            	    }


            	    }

            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getOpSingleAssignParserRuleCall_1_0_0_0_3());
            	      						
            	    }
            	    pushFollow(FOLLOW_54);
            	    ruleOpSingleAssign();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalCheckerDsl.g:6539:5: ( (lv_value_6_0= ruleXAssignment ) )
            	    // InternalCheckerDsl.g:6540:6: (lv_value_6_0= ruleXAssignment )
            	    {
            	    // InternalCheckerDsl.g:6540:6: (lv_value_6_0= ruleXAssignment )
            	    // InternalCheckerDsl.g:6541:7: lv_value_6_0= ruleXAssignment
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getValueXAssignmentParserRuleCall_1_0_1_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_69);
            	    lv_value_6_0=ruleXAssignment();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	      							}
            	      							set(
            	      								current,
            	      								"value",
            	      								lv_value_6_0,
            	      								"org.eclipse.xtext.xbase.Xbase.XAssignment");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalCheckerDsl.g:6560:4: ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? )
            	    {
            	    // InternalCheckerDsl.g:6560:4: ( ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )? )
            	    // InternalCheckerDsl.g:6561:5: ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) ) (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )? ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )?
            	    {
            	    // InternalCheckerDsl.g:6561:5: ( ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) ) )
            	    // InternalCheckerDsl.g:6562:6: ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )=> ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) )
            	    {
            	    // InternalCheckerDsl.g:6582:6: ( () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) ) )
            	    // InternalCheckerDsl.g:6583:7: () (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) )
            	    {
            	    // InternalCheckerDsl.g:6583:7: ()
            	    // InternalCheckerDsl.g:6584:8: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      								current = forceCreateModelElementAndSet(
            	      									grammarAccess.getXMemberFeatureCallAccess().getXMemberFeatureCallMemberCallTargetAction_1_1_0_0_0(),
            	      									current);
            	      							
            	    }

            	    }

            	    // InternalCheckerDsl.g:6590:7: (otherlv_8= '.' | ( (lv_nullSafe_9_0= '?.' ) ) | ( (lv_explicitStatic_10_0= '::' ) ) )
            	    int alt91=3;
            	    switch ( input.LA(1) ) {
            	    case 44:
            	        {
            	        alt91=1;
            	        }
            	        break;
            	    case 118:
            	        {
            	        alt91=2;
            	        }
            	        break;
            	    case 117:
            	        {
            	        alt91=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 91, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt91) {
            	        case 1 :
            	            // InternalCheckerDsl.g:6591:8: otherlv_8= '.'
            	            {
            	            otherlv_8=(Token)match(input,44,FOLLOW_71); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								newLeafNode(otherlv_8, grammarAccess.getXMemberFeatureCallAccess().getFullStopKeyword_1_1_0_0_1_0());
            	              							
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalCheckerDsl.g:6596:8: ( (lv_nullSafe_9_0= '?.' ) )
            	            {
            	            // InternalCheckerDsl.g:6596:8: ( (lv_nullSafe_9_0= '?.' ) )
            	            // InternalCheckerDsl.g:6597:9: (lv_nullSafe_9_0= '?.' )
            	            {
            	            // InternalCheckerDsl.g:6597:9: (lv_nullSafe_9_0= '?.' )
            	            // InternalCheckerDsl.g:6598:10: lv_nullSafe_9_0= '?.'
            	            {
            	            lv_nullSafe_9_0=(Token)match(input,118,FOLLOW_71); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(lv_nullSafe_9_0, grammarAccess.getXMemberFeatureCallAccess().getNullSafeQuestionMarkFullStopKeyword_1_1_0_0_1_1_0());
            	              									
            	            }
            	            if ( state.backtracking==0 ) {

            	              										if (current==null) {
            	              											current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	              										}
            	              										setWithLastConsumed(current, "nullSafe", lv_nullSafe_9_0 != null, "?.");
            	              									
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 3 :
            	            // InternalCheckerDsl.g:6611:8: ( (lv_explicitStatic_10_0= '::' ) )
            	            {
            	            // InternalCheckerDsl.g:6611:8: ( (lv_explicitStatic_10_0= '::' ) )
            	            // InternalCheckerDsl.g:6612:9: (lv_explicitStatic_10_0= '::' )
            	            {
            	            // InternalCheckerDsl.g:6612:9: (lv_explicitStatic_10_0= '::' )
            	            // InternalCheckerDsl.g:6613:10: lv_explicitStatic_10_0= '::'
            	            {
            	            lv_explicitStatic_10_0=(Token)match(input,117,FOLLOW_71); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(lv_explicitStatic_10_0, grammarAccess.getXMemberFeatureCallAccess().getExplicitStaticColonColonKeyword_1_1_0_0_1_2_0());
            	              									
            	            }
            	            if ( state.backtracking==0 ) {

            	              										if (current==null) {
            	              											current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	              										}
            	              										setWithLastConsumed(current, "explicitStatic", lv_explicitStatic_10_0 != null, "::");
            	              									
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    // InternalCheckerDsl.g:6628:5: (otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>' )?
            	    int alt93=2;
            	    int LA93_0 = input.LA(1);

            	    if ( (LA93_0==46) ) {
            	        alt93=1;
            	    }
            	    switch (alt93) {
            	        case 1 :
            	            // InternalCheckerDsl.g:6629:6: otherlv_11= '<' ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) ) (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )* otherlv_15= '>'
            	            {
            	            otherlv_11=(Token)match(input,46,FOLLOW_72); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              						newLeafNode(otherlv_11, grammarAccess.getXMemberFeatureCallAccess().getLessThanSignKeyword_1_1_1_0());
            	              					
            	            }
            	            // InternalCheckerDsl.g:6633:6: ( (lv_typeArguments_12_0= ruleJvmArgumentTypeReference ) )
            	            // InternalCheckerDsl.g:6634:7: (lv_typeArguments_12_0= ruleJvmArgumentTypeReference )
            	            {
            	            // InternalCheckerDsl.g:6634:7: (lv_typeArguments_12_0= ruleJvmArgumentTypeReference )
            	            // InternalCheckerDsl.g:6635:8: lv_typeArguments_12_0= ruleJvmArgumentTypeReference
            	            {
            	            if ( state.backtracking==0 ) {

            	              								newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_1_1_0());
            	              							
            	            }
            	            pushFollow(FOLLOW_34);
            	            lv_typeArguments_12_0=ruleJvmArgumentTypeReference();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	              								}
            	              								add(
            	              									current,
            	              									"typeArguments",
            	              									lv_typeArguments_12_0,
            	              									"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
            	              								afterParserOrEnumRuleCall();
            	              							
            	            }

            	            }


            	            }

            	            // InternalCheckerDsl.g:6652:6: (otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) ) )*
            	            loop92:
            	            do {
            	                int alt92=2;
            	                int LA92_0 = input.LA(1);

            	                if ( (LA92_0==20) ) {
            	                    alt92=1;
            	                }


            	                switch (alt92) {
            	            	case 1 :
            	            	    // InternalCheckerDsl.g:6653:7: otherlv_13= ',' ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) )
            	            	    {
            	            	    otherlv_13=(Token)match(input,20,FOLLOW_72); if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      							newLeafNode(otherlv_13, grammarAccess.getXMemberFeatureCallAccess().getCommaKeyword_1_1_1_2_0());
            	            	      						
            	            	    }
            	            	    // InternalCheckerDsl.g:6657:7: ( (lv_typeArguments_14_0= ruleJvmArgumentTypeReference ) )
            	            	    // InternalCheckerDsl.g:6658:8: (lv_typeArguments_14_0= ruleJvmArgumentTypeReference )
            	            	    {
            	            	    // InternalCheckerDsl.g:6658:8: (lv_typeArguments_14_0= ruleJvmArgumentTypeReference )
            	            	    // InternalCheckerDsl.g:6659:9: lv_typeArguments_14_0= ruleJvmArgumentTypeReference
            	            	    {
            	            	    if ( state.backtracking==0 ) {

            	            	      									newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_1_2_1_0());
            	            	      								
            	            	    }
            	            	    pushFollow(FOLLOW_34);
            	            	    lv_typeArguments_14_0=ruleJvmArgumentTypeReference();

            	            	    state._fsp--;
            	            	    if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      									if (current==null) {
            	            	      										current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	            	      									}
            	            	      									add(
            	            	      										current,
            	            	      										"typeArguments",
            	            	      										lv_typeArguments_14_0,
            	            	      										"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
            	            	      									afterParserOrEnumRuleCall();
            	            	      								
            	            	    }

            	            	    }


            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop92;
            	                }
            	            } while (true);

            	            otherlv_15=(Token)match(input,47,FOLLOW_71); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              						newLeafNode(otherlv_15, grammarAccess.getXMemberFeatureCallAccess().getGreaterThanSignKeyword_1_1_1_3());
            	              					
            	            }

            	            }
            	            break;

            	    }

            	    // InternalCheckerDsl.g:6682:5: ( ( ruleIdOrSuper ) )
            	    // InternalCheckerDsl.g:6683:6: ( ruleIdOrSuper )
            	    {
            	    // InternalCheckerDsl.g:6683:6: ( ruleIdOrSuper )
            	    // InternalCheckerDsl.g:6684:7: ruleIdOrSuper
            	    {
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	      							}
            	      						
            	    }
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_2_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_73);
            	    ruleIdOrSuper();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalCheckerDsl.g:6698:5: ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )?
            	    int alt96=2;
            	    alt96 = dfa96.predict(input);
            	    switch (alt96) {
            	        case 1 :
            	            // InternalCheckerDsl.g:6699:6: ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')'
            	            {
            	            // InternalCheckerDsl.g:6699:6: ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) )
            	            // InternalCheckerDsl.g:6700:7: ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' )
            	            {
            	            // InternalCheckerDsl.g:6704:7: (lv_explicitOperationCall_17_0= '(' )
            	            // InternalCheckerDsl.g:6705:8: lv_explicitOperationCall_17_0= '('
            	            {
            	            lv_explicitOperationCall_17_0=(Token)match(input,19,FOLLOW_74); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								newLeafNode(lv_explicitOperationCall_17_0, grammarAccess.getXMemberFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_1_1_3_0_0());
            	              							
            	            }
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
            	              								}
            	              								setWithLastConsumed(current, "explicitOperationCall", lv_explicitOperationCall_17_0 != null, "(");
            	              							
            	            }

            	            }


            	            }

            	            // InternalCheckerDsl.g:6717:6: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )?
            	            int alt95=3;
            	            alt95 = dfa95.predict(input);
            	            switch (alt95) {
            	                case 1 :
            	                    // InternalCheckerDsl.g:6718:7: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) )
            	                    {
            	                    // InternalCheckerDsl.g:6718:7: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) )
            	                    // InternalCheckerDsl.g:6719:8: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure )
            	                    {
            	                    // InternalCheckerDsl.g:6744:8: (lv_memberCallArguments_18_0= ruleXShortClosure )
            	                    // InternalCheckerDsl.g:6745:9: lv_memberCallArguments_18_0= ruleXShortClosure
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      									newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXShortClosureParserRuleCall_1_1_3_1_0_0());
            	                      								
            	                    }
            	                    pushFollow(FOLLOW_15);
            	                    lv_memberCallArguments_18_0=ruleXShortClosure();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      									if (current==null) {
            	                      										current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	                      									}
            	                      									add(
            	                      										current,
            	                      										"memberCallArguments",
            	                      										lv_memberCallArguments_18_0,
            	                      										"org.eclipse.xtext.xbase.Xbase.XShortClosure");
            	                      									afterParserOrEnumRuleCall();
            	                      								
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalCheckerDsl.g:6763:7: ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* )
            	                    {
            	                    // InternalCheckerDsl.g:6763:7: ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* )
            	                    // InternalCheckerDsl.g:6764:8: ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )*
            	                    {
            	                    // InternalCheckerDsl.g:6764:8: ( (lv_memberCallArguments_19_0= ruleXExpression ) )
            	                    // InternalCheckerDsl.g:6765:9: (lv_memberCallArguments_19_0= ruleXExpression )
            	                    {
            	                    // InternalCheckerDsl.g:6765:9: (lv_memberCallArguments_19_0= ruleXExpression )
            	                    // InternalCheckerDsl.g:6766:10: lv_memberCallArguments_19_0= ruleXExpression
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      										newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXExpressionParserRuleCall_1_1_3_1_1_0_0());
            	                      									
            	                    }
            	                    pushFollow(FOLLOW_12);
            	                    lv_memberCallArguments_19_0=ruleXExpression();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      										if (current==null) {
            	                      											current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	                      										}
            	                      										add(
            	                      											current,
            	                      											"memberCallArguments",
            	                      											lv_memberCallArguments_19_0,
            	                      											"org.eclipse.xtext.xbase.Xbase.XExpression");
            	                      										afterParserOrEnumRuleCall();
            	                      									
            	                    }

            	                    }


            	                    }

            	                    // InternalCheckerDsl.g:6783:8: (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )*
            	                    loop94:
            	                    do {
            	                        int alt94=2;
            	                        int LA94_0 = input.LA(1);

            	                        if ( (LA94_0==20) ) {
            	                            alt94=1;
            	                        }


            	                        switch (alt94) {
            	                    	case 1 :
            	                    	    // InternalCheckerDsl.g:6784:9: otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) )
            	                    	    {
            	                    	    otherlv_20=(Token)match(input,20,FOLLOW_54); if (state.failed) return current;
            	                    	    if ( state.backtracking==0 ) {

            	                    	      									newLeafNode(otherlv_20, grammarAccess.getXMemberFeatureCallAccess().getCommaKeyword_1_1_3_1_1_1_0());
            	                    	      								
            	                    	    }
            	                    	    // InternalCheckerDsl.g:6788:9: ( (lv_memberCallArguments_21_0= ruleXExpression ) )
            	                    	    // InternalCheckerDsl.g:6789:10: (lv_memberCallArguments_21_0= ruleXExpression )
            	                    	    {
            	                    	    // InternalCheckerDsl.g:6789:10: (lv_memberCallArguments_21_0= ruleXExpression )
            	                    	    // InternalCheckerDsl.g:6790:11: lv_memberCallArguments_21_0= ruleXExpression
            	                    	    {
            	                    	    if ( state.backtracking==0 ) {

            	                    	      											newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXExpressionParserRuleCall_1_1_3_1_1_1_1_0());
            	                    	      										
            	                    	    }
            	                    	    pushFollow(FOLLOW_12);
            	                    	    lv_memberCallArguments_21_0=ruleXExpression();

            	                    	    state._fsp--;
            	                    	    if (state.failed) return current;
            	                    	    if ( state.backtracking==0 ) {

            	                    	      											if (current==null) {
            	                    	      												current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	                    	      											}
            	                    	      											add(
            	                    	      												current,
            	                    	      												"memberCallArguments",
            	                    	      												lv_memberCallArguments_21_0,
            	                    	      												"org.eclipse.xtext.xbase.Xbase.XExpression");
            	                    	      											afterParserOrEnumRuleCall();
            	                    	      										
            	                    	    }

            	                    	    }


            	                    	    }


            	                    	    }
            	                    	    break;

            	                    	default :
            	                    	    break loop94;
            	                        }
            	                    } while (true);


            	                    }


            	                    }
            	                    break;

            	            }

            	            otherlv_22=(Token)match(input,21,FOLLOW_75); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              						newLeafNode(otherlv_22, grammarAccess.getXMemberFeatureCallAccess().getRightParenthesisKeyword_1_1_3_2());
            	              					
            	            }

            	            }
            	            break;

            	    }

            	    // InternalCheckerDsl.g:6815:5: ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )?
            	    int alt97=2;
            	    alt97 = dfa97.predict(input);
            	    switch (alt97) {
            	        case 1 :
            	            // InternalCheckerDsl.g:6816:6: ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure )
            	            {
            	            // InternalCheckerDsl.g:6822:6: (lv_memberCallArguments_23_0= ruleXClosure )
            	            // InternalCheckerDsl.g:6823:7: lv_memberCallArguments_23_0= ruleXClosure
            	            {
            	            if ( state.backtracking==0 ) {

            	              							newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXClosureParserRuleCall_1_1_4_0());
            	              						
            	            }
            	            pushFollow(FOLLOW_69);
            	            lv_memberCallArguments_23_0=ruleXClosure();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
            	              							}
            	              							add(
            	              								current,
            	              								"memberCallArguments",
            	              								lv_memberCallArguments_23_0,
            	              								"org.eclipse.xtext.xbase.Xbase.XClosure");
            	              							afterParserOrEnumRuleCall();
            	              						
            	            }

            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop98;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXMemberFeatureCall"


    // $ANTLR start "entryRuleXPrimaryExpression"
    // InternalCheckerDsl.g:6846:1: entryRuleXPrimaryExpression returns [EObject current=null] : iv_ruleXPrimaryExpression= ruleXPrimaryExpression EOF ;
    public final EObject entryRuleXPrimaryExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXPrimaryExpression = null;


        try {
            // InternalCheckerDsl.g:6846:59: (iv_ruleXPrimaryExpression= ruleXPrimaryExpression EOF )
            // InternalCheckerDsl.g:6847:2: iv_ruleXPrimaryExpression= ruleXPrimaryExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXPrimaryExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXPrimaryExpression=ruleXPrimaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXPrimaryExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXPrimaryExpression"


    // $ANTLR start "ruleXPrimaryExpression"
    // InternalCheckerDsl.g:6853:1: ruleXPrimaryExpression returns [EObject current=null] : (this_XConstructorCall_0= ruleXConstructorCall | this_XBlockExpression_1= ruleXBlockExpression | this_XSwitchExpression_2= ruleXSwitchExpression | ( ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression ) | this_XFeatureCall_4= ruleXFeatureCall | this_XLiteral_5= ruleXLiteral | this_XIfExpression_6= ruleXIfExpression | ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_7= ruleXForLoopExpression ) | this_XBasicForLoopExpression_8= ruleXBasicForLoopExpression | this_XWhileExpression_9= ruleXWhileExpression | this_XDoWhileExpression_10= ruleXDoWhileExpression | this_XThrowExpression_11= ruleXThrowExpression | this_XReturnExpression_12= ruleXReturnExpression | this_XTryCatchFinallyExpression_13= ruleXTryCatchFinallyExpression | this_XParenthesizedExpression_14= ruleXParenthesizedExpression ) ;
    public final EObject ruleXPrimaryExpression() throws RecognitionException {
        EObject current = null;

        EObject this_XConstructorCall_0 = null;

        EObject this_XBlockExpression_1 = null;

        EObject this_XSwitchExpression_2 = null;

        EObject this_XSynchronizedExpression_3 = null;

        EObject this_XFeatureCall_4 = null;

        EObject this_XLiteral_5 = null;

        EObject this_XIfExpression_6 = null;

        EObject this_XForLoopExpression_7 = null;

        EObject this_XBasicForLoopExpression_8 = null;

        EObject this_XWhileExpression_9 = null;

        EObject this_XDoWhileExpression_10 = null;

        EObject this_XThrowExpression_11 = null;

        EObject this_XReturnExpression_12 = null;

        EObject this_XTryCatchFinallyExpression_13 = null;

        EObject this_XParenthesizedExpression_14 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:6859:2: ( (this_XConstructorCall_0= ruleXConstructorCall | this_XBlockExpression_1= ruleXBlockExpression | this_XSwitchExpression_2= ruleXSwitchExpression | ( ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression ) | this_XFeatureCall_4= ruleXFeatureCall | this_XLiteral_5= ruleXLiteral | this_XIfExpression_6= ruleXIfExpression | ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_7= ruleXForLoopExpression ) | this_XBasicForLoopExpression_8= ruleXBasicForLoopExpression | this_XWhileExpression_9= ruleXWhileExpression | this_XDoWhileExpression_10= ruleXDoWhileExpression | this_XThrowExpression_11= ruleXThrowExpression | this_XReturnExpression_12= ruleXReturnExpression | this_XTryCatchFinallyExpression_13= ruleXTryCatchFinallyExpression | this_XParenthesizedExpression_14= ruleXParenthesizedExpression ) )
            // InternalCheckerDsl.g:6860:2: (this_XConstructorCall_0= ruleXConstructorCall | this_XBlockExpression_1= ruleXBlockExpression | this_XSwitchExpression_2= ruleXSwitchExpression | ( ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression ) | this_XFeatureCall_4= ruleXFeatureCall | this_XLiteral_5= ruleXLiteral | this_XIfExpression_6= ruleXIfExpression | ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_7= ruleXForLoopExpression ) | this_XBasicForLoopExpression_8= ruleXBasicForLoopExpression | this_XWhileExpression_9= ruleXWhileExpression | this_XDoWhileExpression_10= ruleXDoWhileExpression | this_XThrowExpression_11= ruleXThrowExpression | this_XReturnExpression_12= ruleXReturnExpression | this_XTryCatchFinallyExpression_13= ruleXTryCatchFinallyExpression | this_XParenthesizedExpression_14= ruleXParenthesizedExpression )
            {
            // InternalCheckerDsl.g:6860:2: (this_XConstructorCall_0= ruleXConstructorCall | this_XBlockExpression_1= ruleXBlockExpression | this_XSwitchExpression_2= ruleXSwitchExpression | ( ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression ) | this_XFeatureCall_4= ruleXFeatureCall | this_XLiteral_5= ruleXLiteral | this_XIfExpression_6= ruleXIfExpression | ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_7= ruleXForLoopExpression ) | this_XBasicForLoopExpression_8= ruleXBasicForLoopExpression | this_XWhileExpression_9= ruleXWhileExpression | this_XDoWhileExpression_10= ruleXDoWhileExpression | this_XThrowExpression_11= ruleXThrowExpression | this_XReturnExpression_12= ruleXReturnExpression | this_XTryCatchFinallyExpression_13= ruleXTryCatchFinallyExpression | this_XParenthesizedExpression_14= ruleXParenthesizedExpression )
            int alt99=15;
            alt99 = dfa99.predict(input);
            switch (alt99) {
                case 1 :
                    // InternalCheckerDsl.g:6861:3: this_XConstructorCall_0= ruleXConstructorCall
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXConstructorCallParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XConstructorCall_0=ruleXConstructorCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XConstructorCall_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalCheckerDsl.g:6870:3: this_XBlockExpression_1= ruleXBlockExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXBlockExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XBlockExpression_1=ruleXBlockExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XBlockExpression_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalCheckerDsl.g:6879:3: this_XSwitchExpression_2= ruleXSwitchExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXSwitchExpressionParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XSwitchExpression_2=ruleXSwitchExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XSwitchExpression_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalCheckerDsl.g:6888:3: ( ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression )
                    {
                    // InternalCheckerDsl.g:6888:3: ( ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression )
                    // InternalCheckerDsl.g:6889:4: ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXSynchronizedExpressionParserRuleCall_3());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_XSynchronizedExpression_3=ruleXSynchronizedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_XSynchronizedExpression_3;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalCheckerDsl.g:6906:3: this_XFeatureCall_4= ruleXFeatureCall
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXFeatureCallParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XFeatureCall_4=ruleXFeatureCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XFeatureCall_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalCheckerDsl.g:6915:3: this_XLiteral_5= ruleXLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXLiteralParserRuleCall_5());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XLiteral_5=ruleXLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XLiteral_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalCheckerDsl.g:6924:3: this_XIfExpression_6= ruleXIfExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXIfExpressionParserRuleCall_6());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XIfExpression_6=ruleXIfExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XIfExpression_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalCheckerDsl.g:6933:3: ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_7= ruleXForLoopExpression )
                    {
                    // InternalCheckerDsl.g:6933:3: ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_7= ruleXForLoopExpression )
                    // InternalCheckerDsl.g:6934:4: ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_7= ruleXForLoopExpression
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXForLoopExpressionParserRuleCall_7());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_XForLoopExpression_7=ruleXForLoopExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_XForLoopExpression_7;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalCheckerDsl.g:6957:3: this_XBasicForLoopExpression_8= ruleXBasicForLoopExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXBasicForLoopExpressionParserRuleCall_8());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XBasicForLoopExpression_8=ruleXBasicForLoopExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XBasicForLoopExpression_8;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 10 :
                    // InternalCheckerDsl.g:6966:3: this_XWhileExpression_9= ruleXWhileExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXWhileExpressionParserRuleCall_9());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XWhileExpression_9=ruleXWhileExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XWhileExpression_9;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 11 :
                    // InternalCheckerDsl.g:6975:3: this_XDoWhileExpression_10= ruleXDoWhileExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXDoWhileExpressionParserRuleCall_10());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XDoWhileExpression_10=ruleXDoWhileExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XDoWhileExpression_10;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 12 :
                    // InternalCheckerDsl.g:6984:3: this_XThrowExpression_11= ruleXThrowExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXThrowExpressionParserRuleCall_11());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XThrowExpression_11=ruleXThrowExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XThrowExpression_11;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 13 :
                    // InternalCheckerDsl.g:6993:3: this_XReturnExpression_12= ruleXReturnExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXReturnExpressionParserRuleCall_12());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XReturnExpression_12=ruleXReturnExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XReturnExpression_12;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 14 :
                    // InternalCheckerDsl.g:7002:3: this_XTryCatchFinallyExpression_13= ruleXTryCatchFinallyExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXTryCatchFinallyExpressionParserRuleCall_13());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XTryCatchFinallyExpression_13=ruleXTryCatchFinallyExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XTryCatchFinallyExpression_13;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 15 :
                    // InternalCheckerDsl.g:7011:3: this_XParenthesizedExpression_14= ruleXParenthesizedExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXParenthesizedExpressionParserRuleCall_14());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XParenthesizedExpression_14=ruleXParenthesizedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XParenthesizedExpression_14;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXPrimaryExpression"


    // $ANTLR start "entryRuleXLiteral"
    // InternalCheckerDsl.g:7023:1: entryRuleXLiteral returns [EObject current=null] : iv_ruleXLiteral= ruleXLiteral EOF ;
    public final EObject entryRuleXLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXLiteral = null;


        try {
            // InternalCheckerDsl.g:7023:49: (iv_ruleXLiteral= ruleXLiteral EOF )
            // InternalCheckerDsl.g:7024:2: iv_ruleXLiteral= ruleXLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXLiteral=ruleXLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXLiteral"


    // $ANTLR start "ruleXLiteral"
    // InternalCheckerDsl.g:7030:1: ruleXLiteral returns [EObject current=null] : (this_XCollectionLiteral_0= ruleXCollectionLiteral | ( ( ( () '[' ) )=>this_XClosure_1= ruleXClosure ) | this_XBooleanLiteral_2= ruleXBooleanLiteral | this_XNumberLiteral_3= ruleXNumberLiteral | this_XNullLiteral_4= ruleXNullLiteral | this_XStringLiteral_5= ruleXStringLiteral | this_XTypeLiteral_6= ruleXTypeLiteral ) ;
    public final EObject ruleXLiteral() throws RecognitionException {
        EObject current = null;

        EObject this_XCollectionLiteral_0 = null;

        EObject this_XClosure_1 = null;

        EObject this_XBooleanLiteral_2 = null;

        EObject this_XNumberLiteral_3 = null;

        EObject this_XNullLiteral_4 = null;

        EObject this_XStringLiteral_5 = null;

        EObject this_XTypeLiteral_6 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:7036:2: ( (this_XCollectionLiteral_0= ruleXCollectionLiteral | ( ( ( () '[' ) )=>this_XClosure_1= ruleXClosure ) | this_XBooleanLiteral_2= ruleXBooleanLiteral | this_XNumberLiteral_3= ruleXNumberLiteral | this_XNullLiteral_4= ruleXNullLiteral | this_XStringLiteral_5= ruleXStringLiteral | this_XTypeLiteral_6= ruleXTypeLiteral ) )
            // InternalCheckerDsl.g:7037:2: (this_XCollectionLiteral_0= ruleXCollectionLiteral | ( ( ( () '[' ) )=>this_XClosure_1= ruleXClosure ) | this_XBooleanLiteral_2= ruleXBooleanLiteral | this_XNumberLiteral_3= ruleXNumberLiteral | this_XNullLiteral_4= ruleXNullLiteral | this_XStringLiteral_5= ruleXStringLiteral | this_XTypeLiteral_6= ruleXTypeLiteral )
            {
            // InternalCheckerDsl.g:7037:2: (this_XCollectionLiteral_0= ruleXCollectionLiteral | ( ( ( () '[' ) )=>this_XClosure_1= ruleXClosure ) | this_XBooleanLiteral_2= ruleXBooleanLiteral | this_XNumberLiteral_3= ruleXNumberLiteral | this_XNullLiteral_4= ruleXNullLiteral | this_XStringLiteral_5= ruleXStringLiteral | this_XTypeLiteral_6= ruleXTypeLiteral )
            int alt100=7;
            int LA100_0 = input.LA(1);

            if ( (LA100_0==119) ) {
                alt100=1;
            }
            else if ( (LA100_0==27) && (synpred21_InternalCheckerDsl())) {
                alt100=2;
            }
            else if ( ((LA100_0>=134 && LA100_0<=135)) ) {
                alt100=3;
            }
            else if ( (LA100_0==RULE_INT||(LA100_0>=RULE_HEX && LA100_0<=RULE_DECIMAL)) ) {
                alt100=4;
            }
            else if ( (LA100_0==136) ) {
                alt100=5;
            }
            else if ( (LA100_0==RULE_STRING) ) {
                alt100=6;
            }
            else if ( (LA100_0==137) ) {
                alt100=7;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 100, 0, input);

                throw nvae;
            }
            switch (alt100) {
                case 1 :
                    // InternalCheckerDsl.g:7038:3: this_XCollectionLiteral_0= ruleXCollectionLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXLiteralAccess().getXCollectionLiteralParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XCollectionLiteral_0=ruleXCollectionLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XCollectionLiteral_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalCheckerDsl.g:7047:3: ( ( ( () '[' ) )=>this_XClosure_1= ruleXClosure )
                    {
                    // InternalCheckerDsl.g:7047:3: ( ( ( () '[' ) )=>this_XClosure_1= ruleXClosure )
                    // InternalCheckerDsl.g:7048:4: ( ( () '[' ) )=>this_XClosure_1= ruleXClosure
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getXLiteralAccess().getXClosureParserRuleCall_1());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_XClosure_1=ruleXClosure();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_XClosure_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalCheckerDsl.g:7064:3: this_XBooleanLiteral_2= ruleXBooleanLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXLiteralAccess().getXBooleanLiteralParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XBooleanLiteral_2=ruleXBooleanLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XBooleanLiteral_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalCheckerDsl.g:7073:3: this_XNumberLiteral_3= ruleXNumberLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXLiteralAccess().getXNumberLiteralParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XNumberLiteral_3=ruleXNumberLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XNumberLiteral_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalCheckerDsl.g:7082:3: this_XNullLiteral_4= ruleXNullLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXLiteralAccess().getXNullLiteralParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XNullLiteral_4=ruleXNullLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XNullLiteral_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalCheckerDsl.g:7091:3: this_XStringLiteral_5= ruleXStringLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXLiteralAccess().getXStringLiteralParserRuleCall_5());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XStringLiteral_5=ruleXStringLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XStringLiteral_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalCheckerDsl.g:7100:3: this_XTypeLiteral_6= ruleXTypeLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXLiteralAccess().getXTypeLiteralParserRuleCall_6());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XTypeLiteral_6=ruleXTypeLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XTypeLiteral_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXLiteral"


    // $ANTLR start "entryRuleXCollectionLiteral"
    // InternalCheckerDsl.g:7112:1: entryRuleXCollectionLiteral returns [EObject current=null] : iv_ruleXCollectionLiteral= ruleXCollectionLiteral EOF ;
    public final EObject entryRuleXCollectionLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXCollectionLiteral = null;


        try {
            // InternalCheckerDsl.g:7112:59: (iv_ruleXCollectionLiteral= ruleXCollectionLiteral EOF )
            // InternalCheckerDsl.g:7113:2: iv_ruleXCollectionLiteral= ruleXCollectionLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXCollectionLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXCollectionLiteral=ruleXCollectionLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXCollectionLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXCollectionLiteral"


    // $ANTLR start "ruleXCollectionLiteral"
    // InternalCheckerDsl.g:7119:1: ruleXCollectionLiteral returns [EObject current=null] : (this_XSetLiteral_0= ruleXSetLiteral | this_XListLiteral_1= ruleXListLiteral ) ;
    public final EObject ruleXCollectionLiteral() throws RecognitionException {
        EObject current = null;

        EObject this_XSetLiteral_0 = null;

        EObject this_XListLiteral_1 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:7125:2: ( (this_XSetLiteral_0= ruleXSetLiteral | this_XListLiteral_1= ruleXListLiteral ) )
            // InternalCheckerDsl.g:7126:2: (this_XSetLiteral_0= ruleXSetLiteral | this_XListLiteral_1= ruleXListLiteral )
            {
            // InternalCheckerDsl.g:7126:2: (this_XSetLiteral_0= ruleXSetLiteral | this_XListLiteral_1= ruleXListLiteral )
            int alt101=2;
            int LA101_0 = input.LA(1);

            if ( (LA101_0==119) ) {
                int LA101_1 = input.LA(2);

                if ( (LA101_1==27) ) {
                    alt101=2;
                }
                else if ( (LA101_1==14) ) {
                    alt101=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 101, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 101, 0, input);

                throw nvae;
            }
            switch (alt101) {
                case 1 :
                    // InternalCheckerDsl.g:7127:3: this_XSetLiteral_0= ruleXSetLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXCollectionLiteralAccess().getXSetLiteralParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XSetLiteral_0=ruleXSetLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XSetLiteral_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalCheckerDsl.g:7136:3: this_XListLiteral_1= ruleXListLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXCollectionLiteralAccess().getXListLiteralParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XListLiteral_1=ruleXListLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XListLiteral_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXCollectionLiteral"


    // $ANTLR start "entryRuleXSetLiteral"
    // InternalCheckerDsl.g:7148:1: entryRuleXSetLiteral returns [EObject current=null] : iv_ruleXSetLiteral= ruleXSetLiteral EOF ;
    public final EObject entryRuleXSetLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXSetLiteral = null;


        try {
            // InternalCheckerDsl.g:7148:52: (iv_ruleXSetLiteral= ruleXSetLiteral EOF )
            // InternalCheckerDsl.g:7149:2: iv_ruleXSetLiteral= ruleXSetLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXSetLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXSetLiteral=ruleXSetLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXSetLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXSetLiteral"


    // $ANTLR start "ruleXSetLiteral"
    // InternalCheckerDsl.g:7155:1: ruleXSetLiteral returns [EObject current=null] : ( () otherlv_1= '#' otherlv_2= '{' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= '}' ) ;
    public final EObject ruleXSetLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_elements_3_0 = null;

        EObject lv_elements_5_0 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:7161:2: ( ( () otherlv_1= '#' otherlv_2= '{' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= '}' ) )
            // InternalCheckerDsl.g:7162:2: ( () otherlv_1= '#' otherlv_2= '{' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= '}' )
            {
            // InternalCheckerDsl.g:7162:2: ( () otherlv_1= '#' otherlv_2= '{' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= '}' )
            // InternalCheckerDsl.g:7163:3: () otherlv_1= '#' otherlv_2= '{' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= '}'
            {
            // InternalCheckerDsl.g:7163:3: ()
            // InternalCheckerDsl.g:7164:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXSetLiteralAccess().getXSetLiteralAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,119,FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXSetLiteralAccess().getNumberSignKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,14,FOLLOW_76); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getXSetLiteralAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalCheckerDsl.g:7178:3: ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )?
            int alt103=2;
            int LA103_0 = input.LA(1);

            if ( ((LA103_0>=RULE_INT && LA103_0<=RULE_ID)||LA103_0==14||LA103_0==17||LA103_0==19||LA103_0==27||LA103_0==46||(LA103_0>=76 && LA103_0<=77)||LA103_0==89||LA103_0==113||(LA103_0>=119 && LA103_0<=120)||LA103_0==122||(LA103_0>=125 && LA103_0<=126)||(LA103_0>=129 && LA103_0<=140)||LA103_0==142) ) {
                alt103=1;
            }
            switch (alt103) {
                case 1 :
                    // InternalCheckerDsl.g:7179:4: ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )*
                    {
                    // InternalCheckerDsl.g:7179:4: ( (lv_elements_3_0= ruleXExpression ) )
                    // InternalCheckerDsl.g:7180:5: (lv_elements_3_0= ruleXExpression )
                    {
                    // InternalCheckerDsl.g:7180:5: (lv_elements_3_0= ruleXExpression )
                    // InternalCheckerDsl.g:7181:6: lv_elements_3_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXSetLiteralAccess().getElementsXExpressionParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_77);
                    lv_elements_3_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXSetLiteralRule());
                      						}
                      						add(
                      							current,
                      							"elements",
                      							lv_elements_3_0,
                      							"org.eclipse.xtext.xbase.Xbase.XExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalCheckerDsl.g:7198:4: (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )*
                    loop102:
                    do {
                        int alt102=2;
                        int LA102_0 = input.LA(1);

                        if ( (LA102_0==20) ) {
                            alt102=1;
                        }


                        switch (alt102) {
                    	case 1 :
                    	    // InternalCheckerDsl.g:7199:5: otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,20,FOLLOW_54); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getXSetLiteralAccess().getCommaKeyword_3_1_0());
                    	      				
                    	    }
                    	    // InternalCheckerDsl.g:7203:5: ( (lv_elements_5_0= ruleXExpression ) )
                    	    // InternalCheckerDsl.g:7204:6: (lv_elements_5_0= ruleXExpression )
                    	    {
                    	    // InternalCheckerDsl.g:7204:6: (lv_elements_5_0= ruleXExpression )
                    	    // InternalCheckerDsl.g:7205:7: lv_elements_5_0= ruleXExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getXSetLiteralAccess().getElementsXExpressionParserRuleCall_3_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_77);
                    	    lv_elements_5_0=ruleXExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getXSetLiteralRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"elements",
                    	      								lv_elements_5_0,
                    	      								"org.eclipse.xtext.xbase.Xbase.XExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop102;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_6=(Token)match(input,15,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getXSetLiteralAccess().getRightCurlyBracketKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXSetLiteral"


    // $ANTLR start "entryRuleXListLiteral"
    // InternalCheckerDsl.g:7232:1: entryRuleXListLiteral returns [EObject current=null] : iv_ruleXListLiteral= ruleXListLiteral EOF ;
    public final EObject entryRuleXListLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXListLiteral = null;


        try {
            // InternalCheckerDsl.g:7232:53: (iv_ruleXListLiteral= ruleXListLiteral EOF )
            // InternalCheckerDsl.g:7233:2: iv_ruleXListLiteral= ruleXListLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXListLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXListLiteral=ruleXListLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXListLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXListLiteral"


    // $ANTLR start "ruleXListLiteral"
    // InternalCheckerDsl.g:7239:1: ruleXListLiteral returns [EObject current=null] : ( () otherlv_1= '#' otherlv_2= '[' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= ']' ) ;
    public final EObject ruleXListLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_elements_3_0 = null;

        EObject lv_elements_5_0 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:7245:2: ( ( () otherlv_1= '#' otherlv_2= '[' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= ']' ) )
            // InternalCheckerDsl.g:7246:2: ( () otherlv_1= '#' otherlv_2= '[' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= ']' )
            {
            // InternalCheckerDsl.g:7246:2: ( () otherlv_1= '#' otherlv_2= '[' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= ']' )
            // InternalCheckerDsl.g:7247:3: () otherlv_1= '#' otherlv_2= '[' ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )? otherlv_6= ']'
            {
            // InternalCheckerDsl.g:7247:3: ()
            // InternalCheckerDsl.g:7248:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXListLiteralAccess().getXListLiteralAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,119,FOLLOW_78); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXListLiteralAccess().getNumberSignKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,27,FOLLOW_79); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getXListLiteralAccess().getLeftSquareBracketKeyword_2());
              		
            }
            // InternalCheckerDsl.g:7262:3: ( ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )* )?
            int alt105=2;
            int LA105_0 = input.LA(1);

            if ( ((LA105_0>=RULE_INT && LA105_0<=RULE_ID)||LA105_0==14||LA105_0==17||LA105_0==19||LA105_0==27||LA105_0==46||(LA105_0>=76 && LA105_0<=77)||LA105_0==89||LA105_0==113||(LA105_0>=119 && LA105_0<=120)||LA105_0==122||(LA105_0>=125 && LA105_0<=126)||(LA105_0>=129 && LA105_0<=140)||LA105_0==142) ) {
                alt105=1;
            }
            switch (alt105) {
                case 1 :
                    // InternalCheckerDsl.g:7263:4: ( (lv_elements_3_0= ruleXExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )*
                    {
                    // InternalCheckerDsl.g:7263:4: ( (lv_elements_3_0= ruleXExpression ) )
                    // InternalCheckerDsl.g:7264:5: (lv_elements_3_0= ruleXExpression )
                    {
                    // InternalCheckerDsl.g:7264:5: (lv_elements_3_0= ruleXExpression )
                    // InternalCheckerDsl.g:7265:6: lv_elements_3_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXListLiteralAccess().getElementsXExpressionParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_80);
                    lv_elements_3_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXListLiteralRule());
                      						}
                      						add(
                      							current,
                      							"elements",
                      							lv_elements_3_0,
                      							"org.eclipse.xtext.xbase.Xbase.XExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalCheckerDsl.g:7282:4: (otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) ) )*
                    loop104:
                    do {
                        int alt104=2;
                        int LA104_0 = input.LA(1);

                        if ( (LA104_0==20) ) {
                            alt104=1;
                        }


                        switch (alt104) {
                    	case 1 :
                    	    // InternalCheckerDsl.g:7283:5: otherlv_4= ',' ( (lv_elements_5_0= ruleXExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,20,FOLLOW_54); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getXListLiteralAccess().getCommaKeyword_3_1_0());
                    	      				
                    	    }
                    	    // InternalCheckerDsl.g:7287:5: ( (lv_elements_5_0= ruleXExpression ) )
                    	    // InternalCheckerDsl.g:7288:6: (lv_elements_5_0= ruleXExpression )
                    	    {
                    	    // InternalCheckerDsl.g:7288:6: (lv_elements_5_0= ruleXExpression )
                    	    // InternalCheckerDsl.g:7289:7: lv_elements_5_0= ruleXExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getXListLiteralAccess().getElementsXExpressionParserRuleCall_3_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_80);
                    	    lv_elements_5_0=ruleXExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getXListLiteralRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"elements",
                    	      								lv_elements_5_0,
                    	      								"org.eclipse.xtext.xbase.Xbase.XExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop104;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_6=(Token)match(input,28,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getXListLiteralAccess().getRightSquareBracketKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXListLiteral"


    // $ANTLR start "entryRuleXClosure"
    // InternalCheckerDsl.g:7316:1: entryRuleXClosure returns [EObject current=null] : iv_ruleXClosure= ruleXClosure EOF ;
    public final EObject entryRuleXClosure() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXClosure = null;


        try {
            // InternalCheckerDsl.g:7316:49: (iv_ruleXClosure= ruleXClosure EOF )
            // InternalCheckerDsl.g:7317:2: iv_ruleXClosure= ruleXClosure EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXClosureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXClosure=ruleXClosure();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXClosure; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXClosure"


    // $ANTLR start "ruleXClosure"
    // InternalCheckerDsl.g:7323:1: ruleXClosure returns [EObject current=null] : ( ( ( ( () '[' ) )=> ( () otherlv_1= '[' ) ) ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) ) )? ( (lv_expression_6_0= ruleXExpressionInClosure ) ) otherlv_7= ']' ) ;
    public final EObject ruleXClosure() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token lv_explicitSyntax_5_0=null;
        Token otherlv_7=null;
        EObject lv_declaredFormalParameters_2_0 = null;

        EObject lv_declaredFormalParameters_4_0 = null;

        EObject lv_expression_6_0 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:7329:2: ( ( ( ( ( () '[' ) )=> ( () otherlv_1= '[' ) ) ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) ) )? ( (lv_expression_6_0= ruleXExpressionInClosure ) ) otherlv_7= ']' ) )
            // InternalCheckerDsl.g:7330:2: ( ( ( ( () '[' ) )=> ( () otherlv_1= '[' ) ) ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) ) )? ( (lv_expression_6_0= ruleXExpressionInClosure ) ) otherlv_7= ']' )
            {
            // InternalCheckerDsl.g:7330:2: ( ( ( ( () '[' ) )=> ( () otherlv_1= '[' ) ) ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) ) )? ( (lv_expression_6_0= ruleXExpressionInClosure ) ) otherlv_7= ']' )
            // InternalCheckerDsl.g:7331:3: ( ( ( () '[' ) )=> ( () otherlv_1= '[' ) ) ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) ) )? ( (lv_expression_6_0= ruleXExpressionInClosure ) ) otherlv_7= ']'
            {
            // InternalCheckerDsl.g:7331:3: ( ( ( () '[' ) )=> ( () otherlv_1= '[' ) )
            // InternalCheckerDsl.g:7332:4: ( ( () '[' ) )=> ( () otherlv_1= '[' )
            {
            // InternalCheckerDsl.g:7338:4: ( () otherlv_1= '[' )
            // InternalCheckerDsl.g:7339:5: () otherlv_1= '['
            {
            // InternalCheckerDsl.g:7339:5: ()
            // InternalCheckerDsl.g:7340:6: 
            {
            if ( state.backtracking==0 ) {

              						current = forceCreateModelElement(
              							grammarAccess.getXClosureAccess().getXClosureAction_0_0_0(),
              							current);
              					
            }

            }

            otherlv_1=(Token)match(input,27,FOLLOW_81); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_1, grammarAccess.getXClosureAccess().getLeftSquareBracketKeyword_0_0_1());
              				
            }

            }


            }

            // InternalCheckerDsl.g:7352:3: ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) ) )?
            int alt108=2;
            alt108 = dfa108.predict(input);
            switch (alt108) {
                case 1 :
                    // InternalCheckerDsl.g:7353:4: ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) )
                    {
                    // InternalCheckerDsl.g:7376:4: ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) )
                    // InternalCheckerDsl.g:7377:5: ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) )
                    {
                    // InternalCheckerDsl.g:7377:5: ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )?
                    int alt107=2;
                    int LA107_0 = input.LA(1);

                    if ( (LA107_0==RULE_ID||LA107_0==19||LA107_0==108) ) {
                        alt107=1;
                    }
                    switch (alt107) {
                        case 1 :
                            // InternalCheckerDsl.g:7378:6: ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )*
                            {
                            // InternalCheckerDsl.g:7378:6: ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) )
                            // InternalCheckerDsl.g:7379:7: (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter )
                            {
                            // InternalCheckerDsl.g:7379:7: (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter )
                            // InternalCheckerDsl.g:7380:8: lv_declaredFormalParameters_2_0= ruleJvmFormalParameter
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getXClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_1_0_0_0_0());
                              							
                            }
                            pushFollow(FOLLOW_82);
                            lv_declaredFormalParameters_2_0=ruleJvmFormalParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getXClosureRule());
                              								}
                              								add(
                              									current,
                              									"declaredFormalParameters",
                              									lv_declaredFormalParameters_2_0,
                              									"org.eclipse.xtext.xbase.Xbase.JvmFormalParameter");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalCheckerDsl.g:7397:6: (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )*
                            loop106:
                            do {
                                int alt106=2;
                                int LA106_0 = input.LA(1);

                                if ( (LA106_0==20) ) {
                                    alt106=1;
                                }


                                switch (alt106) {
                            	case 1 :
                            	    // InternalCheckerDsl.g:7398:7: otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) )
                            	    {
                            	    otherlv_3=(Token)match(input,20,FOLLOW_8); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_3, grammarAccess.getXClosureAccess().getCommaKeyword_1_0_0_1_0());
                            	      						
                            	    }
                            	    // InternalCheckerDsl.g:7402:7: ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) )
                            	    // InternalCheckerDsl.g:7403:8: (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter )
                            	    {
                            	    // InternalCheckerDsl.g:7403:8: (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter )
                            	    // InternalCheckerDsl.g:7404:9: lv_declaredFormalParameters_4_0= ruleJvmFormalParameter
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getXClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_1_0_0_1_1_0());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_82);
                            	    lv_declaredFormalParameters_4_0=ruleJvmFormalParameter();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getXClosureRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"declaredFormalParameters",
                            	      										lv_declaredFormalParameters_4_0,
                            	      										"org.eclipse.xtext.xbase.Xbase.JvmFormalParameter");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop106;
                                }
                            } while (true);


                            }
                            break;

                    }

                    // InternalCheckerDsl.g:7423:5: ( (lv_explicitSyntax_5_0= '|' ) )
                    // InternalCheckerDsl.g:7424:6: (lv_explicitSyntax_5_0= '|' )
                    {
                    // InternalCheckerDsl.g:7424:6: (lv_explicitSyntax_5_0= '|' )
                    // InternalCheckerDsl.g:7425:7: lv_explicitSyntax_5_0= '|'
                    {
                    lv_explicitSyntax_5_0=(Token)match(input,80,FOLLOW_83); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_explicitSyntax_5_0, grammarAccess.getXClosureAccess().getExplicitSyntaxVerticalLineKeyword_1_0_1_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getXClosureRule());
                      							}
                      							setWithLastConsumed(current, "explicitSyntax", lv_explicitSyntax_5_0 != null, "|");
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            // InternalCheckerDsl.g:7439:3: ( (lv_expression_6_0= ruleXExpressionInClosure ) )
            // InternalCheckerDsl.g:7440:4: (lv_expression_6_0= ruleXExpressionInClosure )
            {
            // InternalCheckerDsl.g:7440:4: (lv_expression_6_0= ruleXExpressionInClosure )
            // InternalCheckerDsl.g:7441:5: lv_expression_6_0= ruleXExpressionInClosure
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXClosureAccess().getExpressionXExpressionInClosureParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_24);
            lv_expression_6_0=ruleXExpressionInClosure();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXClosureRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_6_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpressionInClosure");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_7=(Token)match(input,28,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getXClosureAccess().getRightSquareBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXClosure"


    // $ANTLR start "entryRuleXExpressionInClosure"
    // InternalCheckerDsl.g:7466:1: entryRuleXExpressionInClosure returns [EObject current=null] : iv_ruleXExpressionInClosure= ruleXExpressionInClosure EOF ;
    public final EObject entryRuleXExpressionInClosure() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXExpressionInClosure = null;


        try {
            // InternalCheckerDsl.g:7466:61: (iv_ruleXExpressionInClosure= ruleXExpressionInClosure EOF )
            // InternalCheckerDsl.g:7467:2: iv_ruleXExpressionInClosure= ruleXExpressionInClosure EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXExpressionInClosureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXExpressionInClosure=ruleXExpressionInClosure();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXExpressionInClosure; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXExpressionInClosure"


    // $ANTLR start "ruleXExpressionInClosure"
    // InternalCheckerDsl.g:7473:1: ruleXExpressionInClosure returns [EObject current=null] : ( () ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )? )* ) ;
    public final EObject ruleXExpressionInClosure() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_expressions_1_0 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:7479:2: ( ( () ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )? )* ) )
            // InternalCheckerDsl.g:7480:2: ( () ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )? )* )
            {
            // InternalCheckerDsl.g:7480:2: ( () ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )? )* )
            // InternalCheckerDsl.g:7481:3: () ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )? )*
            {
            // InternalCheckerDsl.g:7481:3: ()
            // InternalCheckerDsl.g:7482:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXExpressionInClosureAccess().getXBlockExpressionAction_0(),
              					current);
              			
            }

            }

            // InternalCheckerDsl.g:7488:3: ( ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )? )*
            loop110:
            do {
                int alt110=2;
                int LA110_0 = input.LA(1);

                if ( ((LA110_0>=RULE_INT && LA110_0<=RULE_ID)||LA110_0==14||LA110_0==17||LA110_0==19||LA110_0==27||LA110_0==46||(LA110_0>=76 && LA110_0<=77)||LA110_0==89||LA110_0==113||(LA110_0>=119 && LA110_0<=120)||LA110_0==122||(LA110_0>=125 && LA110_0<=140)||LA110_0==142) ) {
                    alt110=1;
                }


                switch (alt110) {
            	case 1 :
            	    // InternalCheckerDsl.g:7489:4: ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_2= ';' )?
            	    {
            	    // InternalCheckerDsl.g:7489:4: ( (lv_expressions_1_0= ruleXExpressionOrVarDeclaration ) )
            	    // InternalCheckerDsl.g:7490:5: (lv_expressions_1_0= ruleXExpressionOrVarDeclaration )
            	    {
            	    // InternalCheckerDsl.g:7490:5: (lv_expressions_1_0= ruleXExpressionOrVarDeclaration )
            	    // InternalCheckerDsl.g:7491:6: lv_expressions_1_0= ruleXExpressionOrVarDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXExpressionInClosureAccess().getExpressionsXExpressionOrVarDeclarationParserRuleCall_1_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_84);
            	    lv_expressions_1_0=ruleXExpressionOrVarDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXExpressionInClosureRule());
            	      						}
            	      						add(
            	      							current,
            	      							"expressions",
            	      							lv_expressions_1_0,
            	      							"org.eclipse.xtext.xbase.Xbase.XExpressionOrVarDeclaration");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalCheckerDsl.g:7508:4: (otherlv_2= ';' )?
            	    int alt109=2;
            	    int LA109_0 = input.LA(1);

            	    if ( (LA109_0==29) ) {
            	        alt109=1;
            	    }
            	    switch (alt109) {
            	        case 1 :
            	            // InternalCheckerDsl.g:7509:5: otherlv_2= ';'
            	            {
            	            otherlv_2=(Token)match(input,29,FOLLOW_85); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(otherlv_2, grammarAccess.getXExpressionInClosureAccess().getSemicolonKeyword_1_1());
            	              				
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop110;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXExpressionInClosure"


    // $ANTLR start "entryRuleXShortClosure"
    // InternalCheckerDsl.g:7519:1: entryRuleXShortClosure returns [EObject current=null] : iv_ruleXShortClosure= ruleXShortClosure EOF ;
    public final EObject entryRuleXShortClosure() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXShortClosure = null;


        try {
            // InternalCheckerDsl.g:7519:54: (iv_ruleXShortClosure= ruleXShortClosure EOF )
            // InternalCheckerDsl.g:7520:2: iv_ruleXShortClosure= ruleXShortClosure EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXShortClosureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXShortClosure=ruleXShortClosure();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXShortClosure; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXShortClosure"


    // $ANTLR start "ruleXShortClosure"
    // InternalCheckerDsl.g:7526:1: ruleXShortClosure returns [EObject current=null] : ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) ) ) ( (lv_expression_5_0= ruleXExpression ) ) ) ;
    public final EObject ruleXShortClosure() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_explicitSyntax_4_0=null;
        EObject lv_declaredFormalParameters_1_0 = null;

        EObject lv_declaredFormalParameters_3_0 = null;

        EObject lv_expression_5_0 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:7532:2: ( ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) ) ) ( (lv_expression_5_0= ruleXExpression ) ) ) )
            // InternalCheckerDsl.g:7533:2: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) ) ) ( (lv_expression_5_0= ruleXExpression ) ) )
            {
            // InternalCheckerDsl.g:7533:2: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) ) ) ( (lv_expression_5_0= ruleXExpression ) ) )
            // InternalCheckerDsl.g:7534:3: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) ) ) ( (lv_expression_5_0= ruleXExpression ) )
            {
            // InternalCheckerDsl.g:7534:3: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) ) )
            // InternalCheckerDsl.g:7535:4: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) )
            {
            // InternalCheckerDsl.g:7560:4: ( () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) ) )
            // InternalCheckerDsl.g:7561:5: () ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_4_0= '|' ) )
            {
            // InternalCheckerDsl.g:7561:5: ()
            // InternalCheckerDsl.g:7562:6: 
            {
            if ( state.backtracking==0 ) {

              						current = forceCreateModelElement(
              							grammarAccess.getXShortClosureAccess().getXClosureAction_0_0_0(),
              							current);
              					
            }

            }

            // InternalCheckerDsl.g:7568:5: ( ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )* )?
            int alt112=2;
            int LA112_0 = input.LA(1);

            if ( (LA112_0==RULE_ID||LA112_0==19||LA112_0==108) ) {
                alt112=1;
            }
            switch (alt112) {
                case 1 :
                    // InternalCheckerDsl.g:7569:6: ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) ) (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )*
                    {
                    // InternalCheckerDsl.g:7569:6: ( (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter ) )
                    // InternalCheckerDsl.g:7570:7: (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter )
                    {
                    // InternalCheckerDsl.g:7570:7: (lv_declaredFormalParameters_1_0= ruleJvmFormalParameter )
                    // InternalCheckerDsl.g:7571:8: lv_declaredFormalParameters_1_0= ruleJvmFormalParameter
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getXShortClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_0_0_1_0_0());
                      							
                    }
                    pushFollow(FOLLOW_82);
                    lv_declaredFormalParameters_1_0=ruleJvmFormalParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getXShortClosureRule());
                      								}
                      								add(
                      									current,
                      									"declaredFormalParameters",
                      									lv_declaredFormalParameters_1_0,
                      									"org.eclipse.xtext.xbase.Xbase.JvmFormalParameter");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }

                    // InternalCheckerDsl.g:7588:6: (otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) ) )*
                    loop111:
                    do {
                        int alt111=2;
                        int LA111_0 = input.LA(1);

                        if ( (LA111_0==20) ) {
                            alt111=1;
                        }


                        switch (alt111) {
                    	case 1 :
                    	    // InternalCheckerDsl.g:7589:7: otherlv_2= ',' ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) )
                    	    {
                    	    otherlv_2=(Token)match(input,20,FOLLOW_8); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							newLeafNode(otherlv_2, grammarAccess.getXShortClosureAccess().getCommaKeyword_0_0_1_1_0());
                    	      						
                    	    }
                    	    // InternalCheckerDsl.g:7593:7: ( (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter ) )
                    	    // InternalCheckerDsl.g:7594:8: (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter )
                    	    {
                    	    // InternalCheckerDsl.g:7594:8: (lv_declaredFormalParameters_3_0= ruleJvmFormalParameter )
                    	    // InternalCheckerDsl.g:7595:9: lv_declaredFormalParameters_3_0= ruleJvmFormalParameter
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      									newCompositeNode(grammarAccess.getXShortClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_0_0_1_1_1_0());
                    	      								
                    	    }
                    	    pushFollow(FOLLOW_82);
                    	    lv_declaredFormalParameters_3_0=ruleJvmFormalParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									if (current==null) {
                    	      										current = createModelElementForParent(grammarAccess.getXShortClosureRule());
                    	      									}
                    	      									add(
                    	      										current,
                    	      										"declaredFormalParameters",
                    	      										lv_declaredFormalParameters_3_0,
                    	      										"org.eclipse.xtext.xbase.Xbase.JvmFormalParameter");
                    	      									afterParserOrEnumRuleCall();
                    	      								
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop111;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalCheckerDsl.g:7614:5: ( (lv_explicitSyntax_4_0= '|' ) )
            // InternalCheckerDsl.g:7615:6: (lv_explicitSyntax_4_0= '|' )
            {
            // InternalCheckerDsl.g:7615:6: (lv_explicitSyntax_4_0= '|' )
            // InternalCheckerDsl.g:7616:7: lv_explicitSyntax_4_0= '|'
            {
            lv_explicitSyntax_4_0=(Token)match(input,80,FOLLOW_54); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              							newLeafNode(lv_explicitSyntax_4_0, grammarAccess.getXShortClosureAccess().getExplicitSyntaxVerticalLineKeyword_0_0_2_0());
              						
            }
            if ( state.backtracking==0 ) {

              							if (current==null) {
              								current = createModelElement(grammarAccess.getXShortClosureRule());
              							}
              							setWithLastConsumed(current, "explicitSyntax", lv_explicitSyntax_4_0 != null, "|");
              						
            }

            }


            }


            }


            }

            // InternalCheckerDsl.g:7630:3: ( (lv_expression_5_0= ruleXExpression ) )
            // InternalCheckerDsl.g:7631:4: (lv_expression_5_0= ruleXExpression )
            {
            // InternalCheckerDsl.g:7631:4: (lv_expression_5_0= ruleXExpression )
            // InternalCheckerDsl.g:7632:5: lv_expression_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXShortClosureAccess().getExpressionXExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expression_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXShortClosureRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_5_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXShortClosure"


    // $ANTLR start "entryRuleXParenthesizedExpression"
    // InternalCheckerDsl.g:7653:1: entryRuleXParenthesizedExpression returns [EObject current=null] : iv_ruleXParenthesizedExpression= ruleXParenthesizedExpression EOF ;
    public final EObject entryRuleXParenthesizedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXParenthesizedExpression = null;


        try {
            // InternalCheckerDsl.g:7653:65: (iv_ruleXParenthesizedExpression= ruleXParenthesizedExpression EOF )
            // InternalCheckerDsl.g:7654:2: iv_ruleXParenthesizedExpression= ruleXParenthesizedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXParenthesizedExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXParenthesizedExpression=ruleXParenthesizedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXParenthesizedExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXParenthesizedExpression"


    // $ANTLR start "ruleXParenthesizedExpression"
    // InternalCheckerDsl.g:7660:1: ruleXParenthesizedExpression returns [EObject current=null] : (otherlv_0= '(' this_XExpression_1= ruleXExpression otherlv_2= ')' ) ;
    public final EObject ruleXParenthesizedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject this_XExpression_1 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:7666:2: ( (otherlv_0= '(' this_XExpression_1= ruleXExpression otherlv_2= ')' ) )
            // InternalCheckerDsl.g:7667:2: (otherlv_0= '(' this_XExpression_1= ruleXExpression otherlv_2= ')' )
            {
            // InternalCheckerDsl.g:7667:2: (otherlv_0= '(' this_XExpression_1= ruleXExpression otherlv_2= ')' )
            // InternalCheckerDsl.g:7668:3: otherlv_0= '(' this_XExpression_1= ruleXExpression otherlv_2= ')'
            {
            otherlv_0=(Token)match(input,19,FOLLOW_54); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getXParenthesizedExpressionAccess().getLeftParenthesisKeyword_0());
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXParenthesizedExpressionAccess().getXExpressionParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_15);
            this_XExpression_1=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XExpression_1;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_2=(Token)match(input,21,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getXParenthesizedExpressionAccess().getRightParenthesisKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXParenthesizedExpression"


    // $ANTLR start "entryRuleXIfExpression"
    // InternalCheckerDsl.g:7688:1: entryRuleXIfExpression returns [EObject current=null] : iv_ruleXIfExpression= ruleXIfExpression EOF ;
    public final EObject entryRuleXIfExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXIfExpression = null;


        try {
            // InternalCheckerDsl.g:7688:54: (iv_ruleXIfExpression= ruleXIfExpression EOF )
            // InternalCheckerDsl.g:7689:2: iv_ruleXIfExpression= ruleXIfExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXIfExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXIfExpression=ruleXIfExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXIfExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXIfExpression"


    // $ANTLR start "ruleXIfExpression"
    // InternalCheckerDsl.g:7695:1: ruleXIfExpression returns [EObject current=null] : ( () otherlv_1= 'if' otherlv_2= '(' ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_then_5_0= ruleXExpression ) ) ( ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXExpression ) ) )? ) ;
    public final EObject ruleXIfExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_if_3_0 = null;

        EObject lv_then_5_0 = null;

        EObject lv_else_7_0 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:7701:2: ( ( () otherlv_1= 'if' otherlv_2= '(' ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_then_5_0= ruleXExpression ) ) ( ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXExpression ) ) )? ) )
            // InternalCheckerDsl.g:7702:2: ( () otherlv_1= 'if' otherlv_2= '(' ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_then_5_0= ruleXExpression ) ) ( ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXExpression ) ) )? )
            {
            // InternalCheckerDsl.g:7702:2: ( () otherlv_1= 'if' otherlv_2= '(' ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_then_5_0= ruleXExpression ) ) ( ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXExpression ) ) )? )
            // InternalCheckerDsl.g:7703:3: () otherlv_1= 'if' otherlv_2= '(' ( (lv_if_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_then_5_0= ruleXExpression ) ) ( ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXExpression ) ) )?
            {
            // InternalCheckerDsl.g:7703:3: ()
            // InternalCheckerDsl.g:7704:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXIfExpressionAccess().getXIfExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,120,FOLLOW_10); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXIfExpressionAccess().getIfKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,19,FOLLOW_54); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getXIfExpressionAccess().getLeftParenthesisKeyword_2());
              		
            }
            // InternalCheckerDsl.g:7718:3: ( (lv_if_3_0= ruleXExpression ) )
            // InternalCheckerDsl.g:7719:4: (lv_if_3_0= ruleXExpression )
            {
            // InternalCheckerDsl.g:7719:4: (lv_if_3_0= ruleXExpression )
            // InternalCheckerDsl.g:7720:5: lv_if_3_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXIfExpressionAccess().getIfXExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_15);
            lv_if_3_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXIfExpressionRule());
              					}
              					set(
              						current,
              						"if",
              						lv_if_3_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,21,FOLLOW_54); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getXIfExpressionAccess().getRightParenthesisKeyword_4());
              		
            }
            // InternalCheckerDsl.g:7741:3: ( (lv_then_5_0= ruleXExpression ) )
            // InternalCheckerDsl.g:7742:4: (lv_then_5_0= ruleXExpression )
            {
            // InternalCheckerDsl.g:7742:4: (lv_then_5_0= ruleXExpression )
            // InternalCheckerDsl.g:7743:5: lv_then_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXIfExpressionAccess().getThenXExpressionParserRuleCall_5_0());
              				
            }
            pushFollow(FOLLOW_86);
            lv_then_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXIfExpressionRule());
              					}
              					set(
              						current,
              						"then",
              						lv_then_5_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalCheckerDsl.g:7760:3: ( ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXExpression ) ) )?
            int alt113=2;
            int LA113_0 = input.LA(1);

            if ( (LA113_0==121) ) {
                int LA113_1 = input.LA(2);

                if ( (synpred25_InternalCheckerDsl()) ) {
                    alt113=1;
                }
            }
            switch (alt113) {
                case 1 :
                    // InternalCheckerDsl.g:7761:4: ( ( 'else' )=>otherlv_6= 'else' ) ( (lv_else_7_0= ruleXExpression ) )
                    {
                    // InternalCheckerDsl.g:7761:4: ( ( 'else' )=>otherlv_6= 'else' )
                    // InternalCheckerDsl.g:7762:5: ( 'else' )=>otherlv_6= 'else'
                    {
                    otherlv_6=(Token)match(input,121,FOLLOW_54); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getXIfExpressionAccess().getElseKeyword_6_0());
                      				
                    }

                    }

                    // InternalCheckerDsl.g:7768:4: ( (lv_else_7_0= ruleXExpression ) )
                    // InternalCheckerDsl.g:7769:5: (lv_else_7_0= ruleXExpression )
                    {
                    // InternalCheckerDsl.g:7769:5: (lv_else_7_0= ruleXExpression )
                    // InternalCheckerDsl.g:7770:6: lv_else_7_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXIfExpressionAccess().getElseXExpressionParserRuleCall_6_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_else_7_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXIfExpressionRule());
                      						}
                      						set(
                      							current,
                      							"else",
                      							lv_else_7_0,
                      							"org.eclipse.xtext.xbase.Xbase.XExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXIfExpression"


    // $ANTLR start "entryRuleXSwitchExpression"
    // InternalCheckerDsl.g:7792:1: entryRuleXSwitchExpression returns [EObject current=null] : iv_ruleXSwitchExpression= ruleXSwitchExpression EOF ;
    public final EObject entryRuleXSwitchExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXSwitchExpression = null;


        try {
            // InternalCheckerDsl.g:7792:58: (iv_ruleXSwitchExpression= ruleXSwitchExpression EOF )
            // InternalCheckerDsl.g:7793:2: iv_ruleXSwitchExpression= ruleXSwitchExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXSwitchExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXSwitchExpression=ruleXSwitchExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXSwitchExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXSwitchExpression"


    // $ANTLR start "ruleXSwitchExpression"
    // InternalCheckerDsl.g:7799:1: ruleXSwitchExpression returns [EObject current=null] : ( () otherlv_1= 'switch' ( ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpression ) ) ) ) otherlv_10= '{' ( (lv_cases_11_0= ruleXCasePart ) )* (otherlv_12= 'default' otherlv_13= ':' ( (lv_default_14_0= ruleXExpression ) ) )? otherlv_15= '}' ) ;
    public final EObject ruleXSwitchExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        EObject lv_declaredParam_3_0 = null;

        EObject lv_switch_5_0 = null;

        EObject lv_declaredParam_7_0 = null;

        EObject lv_switch_9_0 = null;

        EObject lv_cases_11_0 = null;

        EObject lv_default_14_0 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:7805:2: ( ( () otherlv_1= 'switch' ( ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpression ) ) ) ) otherlv_10= '{' ( (lv_cases_11_0= ruleXCasePart ) )* (otherlv_12= 'default' otherlv_13= ':' ( (lv_default_14_0= ruleXExpression ) ) )? otherlv_15= '}' ) )
            // InternalCheckerDsl.g:7806:2: ( () otherlv_1= 'switch' ( ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpression ) ) ) ) otherlv_10= '{' ( (lv_cases_11_0= ruleXCasePart ) )* (otherlv_12= 'default' otherlv_13= ':' ( (lv_default_14_0= ruleXExpression ) ) )? otherlv_15= '}' )
            {
            // InternalCheckerDsl.g:7806:2: ( () otherlv_1= 'switch' ( ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpression ) ) ) ) otherlv_10= '{' ( (lv_cases_11_0= ruleXCasePart ) )* (otherlv_12= 'default' otherlv_13= ':' ( (lv_default_14_0= ruleXExpression ) ) )? otherlv_15= '}' )
            // InternalCheckerDsl.g:7807:3: () otherlv_1= 'switch' ( ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpression ) ) ) ) otherlv_10= '{' ( (lv_cases_11_0= ruleXCasePart ) )* (otherlv_12= 'default' otherlv_13= ':' ( (lv_default_14_0= ruleXExpression ) ) )? otherlv_15= '}'
            {
            // InternalCheckerDsl.g:7807:3: ()
            // InternalCheckerDsl.g:7808:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXSwitchExpressionAccess().getXSwitchExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,122,FOLLOW_87); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXSwitchExpressionAccess().getSwitchKeyword_1());
              		
            }
            // InternalCheckerDsl.g:7818:3: ( ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpression ) ) ) )
            int alt115=2;
            alt115 = dfa115.predict(input);
            switch (alt115) {
                case 1 :
                    // InternalCheckerDsl.g:7819:4: ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' )
                    {
                    // InternalCheckerDsl.g:7819:4: ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' )
                    // InternalCheckerDsl.g:7820:5: ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')'
                    {
                    // InternalCheckerDsl.g:7820:5: ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) )
                    // InternalCheckerDsl.g:7821:6: ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' )
                    {
                    // InternalCheckerDsl.g:7831:6: (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' )
                    // InternalCheckerDsl.g:7832:7: otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':'
                    {
                    otherlv_2=(Token)match(input,19,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(otherlv_2, grammarAccess.getXSwitchExpressionAccess().getLeftParenthesisKeyword_2_0_0_0_0());
                      						
                    }
                    // InternalCheckerDsl.g:7836:7: ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) )
                    // InternalCheckerDsl.g:7837:8: (lv_declaredParam_3_0= ruleJvmFormalParameter )
                    {
                    // InternalCheckerDsl.g:7837:8: (lv_declaredParam_3_0= ruleJvmFormalParameter )
                    // InternalCheckerDsl.g:7838:9: lv_declaredParam_3_0= ruleJvmFormalParameter
                    {
                    if ( state.backtracking==0 ) {

                      									newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getDeclaredParamJvmFormalParameterParserRuleCall_2_0_0_0_1_0());
                      								
                    }
                    pushFollow(FOLLOW_14);
                    lv_declaredParam_3_0=ruleJvmFormalParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      									if (current==null) {
                      										current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
                      									}
                      									set(
                      										current,
                      										"declaredParam",
                      										lv_declaredParam_3_0,
                      										"org.eclipse.xtext.xbase.Xbase.JvmFormalParameter");
                      									afterParserOrEnumRuleCall();
                      								
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,22,FOLLOW_54); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(otherlv_4, grammarAccess.getXSwitchExpressionAccess().getColonKeyword_2_0_0_0_2());
                      						
                    }

                    }


                    }

                    // InternalCheckerDsl.g:7861:5: ( (lv_switch_5_0= ruleXExpression ) )
                    // InternalCheckerDsl.g:7862:6: (lv_switch_5_0= ruleXExpression )
                    {
                    // InternalCheckerDsl.g:7862:6: (lv_switch_5_0= ruleXExpression )
                    // InternalCheckerDsl.g:7863:7: lv_switch_5_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getSwitchXExpressionParserRuleCall_2_0_1_0());
                      						
                    }
                    pushFollow(FOLLOW_15);
                    lv_switch_5_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
                      							}
                      							set(
                      								current,
                      								"switch",
                      								lv_switch_5_0,
                      								"org.eclipse.xtext.xbase.Xbase.XExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_6=(Token)match(input,21,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getXSwitchExpressionAccess().getRightParenthesisKeyword_2_0_2());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalCheckerDsl.g:7886:4: ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpression ) ) )
                    {
                    // InternalCheckerDsl.g:7886:4: ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpression ) ) )
                    // InternalCheckerDsl.g:7887:5: ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpression ) )
                    {
                    // InternalCheckerDsl.g:7887:5: ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )?
                    int alt114=2;
                    alt114 = dfa114.predict(input);
                    switch (alt114) {
                        case 1 :
                            // InternalCheckerDsl.g:7888:6: ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' )
                            {
                            // InternalCheckerDsl.g:7897:6: ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' )
                            // InternalCheckerDsl.g:7898:7: ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':'
                            {
                            // InternalCheckerDsl.g:7898:7: ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) )
                            // InternalCheckerDsl.g:7899:8: (lv_declaredParam_7_0= ruleJvmFormalParameter )
                            {
                            // InternalCheckerDsl.g:7899:8: (lv_declaredParam_7_0= ruleJvmFormalParameter )
                            // InternalCheckerDsl.g:7900:9: lv_declaredParam_7_0= ruleJvmFormalParameter
                            {
                            if ( state.backtracking==0 ) {

                              									newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getDeclaredParamJvmFormalParameterParserRuleCall_2_1_0_0_0_0());
                              								
                            }
                            pushFollow(FOLLOW_14);
                            lv_declaredParam_7_0=ruleJvmFormalParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              									if (current==null) {
                              										current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
                              									}
                              									set(
                              										current,
                              										"declaredParam",
                              										lv_declaredParam_7_0,
                              										"org.eclipse.xtext.xbase.Xbase.JvmFormalParameter");
                              									afterParserOrEnumRuleCall();
                              								
                            }

                            }


                            }

                            otherlv_8=(Token)match(input,22,FOLLOW_54); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_8, grammarAccess.getXSwitchExpressionAccess().getColonKeyword_2_1_0_0_1());
                              						
                            }

                            }


                            }
                            break;

                    }

                    // InternalCheckerDsl.g:7923:5: ( (lv_switch_9_0= ruleXExpression ) )
                    // InternalCheckerDsl.g:7924:6: (lv_switch_9_0= ruleXExpression )
                    {
                    // InternalCheckerDsl.g:7924:6: (lv_switch_9_0= ruleXExpression )
                    // InternalCheckerDsl.g:7925:7: lv_switch_9_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getSwitchXExpressionParserRuleCall_2_1_1_0());
                      						
                    }
                    pushFollow(FOLLOW_5);
                    lv_switch_9_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
                      							}
                      							set(
                      								current,
                      								"switch",
                      								lv_switch_9_0,
                      								"org.eclipse.xtext.xbase.Xbase.XExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            otherlv_10=(Token)match(input,14,FOLLOW_88); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_10, grammarAccess.getXSwitchExpressionAccess().getLeftCurlyBracketKeyword_3());
              		
            }
            // InternalCheckerDsl.g:7948:3: ( (lv_cases_11_0= ruleXCasePart ) )*
            loop116:
            do {
                int alt116=2;
                int LA116_0 = input.LA(1);

                if ( (LA116_0==RULE_ID||(LA116_0>=19 && LA116_0<=20)||LA116_0==22||LA116_0==108||LA116_0==124) ) {
                    alt116=1;
                }


                switch (alt116) {
            	case 1 :
            	    // InternalCheckerDsl.g:7949:4: (lv_cases_11_0= ruleXCasePart )
            	    {
            	    // InternalCheckerDsl.g:7949:4: (lv_cases_11_0= ruleXCasePart )
            	    // InternalCheckerDsl.g:7950:5: lv_cases_11_0= ruleXCasePart
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getCasesXCasePartParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_88);
            	    lv_cases_11_0=ruleXCasePart();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"cases",
            	      						lv_cases_11_0,
            	      						"org.eclipse.xtext.xbase.Xbase.XCasePart");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop116;
                }
            } while (true);

            // InternalCheckerDsl.g:7967:3: (otherlv_12= 'default' otherlv_13= ':' ( (lv_default_14_0= ruleXExpression ) ) )?
            int alt117=2;
            int LA117_0 = input.LA(1);

            if ( (LA117_0==123) ) {
                alt117=1;
            }
            switch (alt117) {
                case 1 :
                    // InternalCheckerDsl.g:7968:4: otherlv_12= 'default' otherlv_13= ':' ( (lv_default_14_0= ruleXExpression ) )
                    {
                    otherlv_12=(Token)match(input,123,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getXSwitchExpressionAccess().getDefaultKeyword_5_0());
                      			
                    }
                    otherlv_13=(Token)match(input,22,FOLLOW_54); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getXSwitchExpressionAccess().getColonKeyword_5_1());
                      			
                    }
                    // InternalCheckerDsl.g:7976:4: ( (lv_default_14_0= ruleXExpression ) )
                    // InternalCheckerDsl.g:7977:5: (lv_default_14_0= ruleXExpression )
                    {
                    // InternalCheckerDsl.g:7977:5: (lv_default_14_0= ruleXExpression )
                    // InternalCheckerDsl.g:7978:6: lv_default_14_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getDefaultXExpressionParserRuleCall_5_2_0());
                      					
                    }
                    pushFollow(FOLLOW_21);
                    lv_default_14_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
                      						}
                      						set(
                      							current,
                      							"default",
                      							lv_default_14_0,
                      							"org.eclipse.xtext.xbase.Xbase.XExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_15=(Token)match(input,15,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_15, grammarAccess.getXSwitchExpressionAccess().getRightCurlyBracketKeyword_6());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXSwitchExpression"


    // $ANTLR start "entryRuleXCasePart"
    // InternalCheckerDsl.g:8004:1: entryRuleXCasePart returns [EObject current=null] : iv_ruleXCasePart= ruleXCasePart EOF ;
    public final EObject entryRuleXCasePart() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXCasePart = null;


        try {
            // InternalCheckerDsl.g:8004:50: (iv_ruleXCasePart= ruleXCasePart EOF )
            // InternalCheckerDsl.g:8005:2: iv_ruleXCasePart= ruleXCasePart EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXCasePartRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXCasePart=ruleXCasePart();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXCasePart; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXCasePart"


    // $ANTLR start "ruleXCasePart"
    // InternalCheckerDsl.g:8011:1: ruleXCasePart returns [EObject current=null] : ( () ( (lv_typeGuard_1_0= ruleJvmTypeReference ) )? (otherlv_2= 'case' ( (lv_case_3_0= ruleXExpression ) ) )? ( (otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) ) ) | ( (lv_fallThrough_6_0= ',' ) ) ) ) ;
    public final EObject ruleXCasePart() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token lv_fallThrough_6_0=null;
        EObject lv_typeGuard_1_0 = null;

        EObject lv_case_3_0 = null;

        EObject lv_then_5_0 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:8017:2: ( ( () ( (lv_typeGuard_1_0= ruleJvmTypeReference ) )? (otherlv_2= 'case' ( (lv_case_3_0= ruleXExpression ) ) )? ( (otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) ) ) | ( (lv_fallThrough_6_0= ',' ) ) ) ) )
            // InternalCheckerDsl.g:8018:2: ( () ( (lv_typeGuard_1_0= ruleJvmTypeReference ) )? (otherlv_2= 'case' ( (lv_case_3_0= ruleXExpression ) ) )? ( (otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) ) ) | ( (lv_fallThrough_6_0= ',' ) ) ) )
            {
            // InternalCheckerDsl.g:8018:2: ( () ( (lv_typeGuard_1_0= ruleJvmTypeReference ) )? (otherlv_2= 'case' ( (lv_case_3_0= ruleXExpression ) ) )? ( (otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) ) ) | ( (lv_fallThrough_6_0= ',' ) ) ) )
            // InternalCheckerDsl.g:8019:3: () ( (lv_typeGuard_1_0= ruleJvmTypeReference ) )? (otherlv_2= 'case' ( (lv_case_3_0= ruleXExpression ) ) )? ( (otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) ) ) | ( (lv_fallThrough_6_0= ',' ) ) )
            {
            // InternalCheckerDsl.g:8019:3: ()
            // InternalCheckerDsl.g:8020:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXCasePartAccess().getXCasePartAction_0(),
              					current);
              			
            }

            }

            // InternalCheckerDsl.g:8026:3: ( (lv_typeGuard_1_0= ruleJvmTypeReference ) )?
            int alt118=2;
            int LA118_0 = input.LA(1);

            if ( (LA118_0==RULE_ID||LA118_0==19||LA118_0==108) ) {
                alt118=1;
            }
            switch (alt118) {
                case 1 :
                    // InternalCheckerDsl.g:8027:4: (lv_typeGuard_1_0= ruleJvmTypeReference )
                    {
                    // InternalCheckerDsl.g:8027:4: (lv_typeGuard_1_0= ruleJvmTypeReference )
                    // InternalCheckerDsl.g:8028:5: lv_typeGuard_1_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getXCasePartAccess().getTypeGuardJvmTypeReferenceParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_89);
                    lv_typeGuard_1_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getXCasePartRule());
                      					}
                      					set(
                      						current,
                      						"typeGuard",
                      						lv_typeGuard_1_0,
                      						"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalCheckerDsl.g:8045:3: (otherlv_2= 'case' ( (lv_case_3_0= ruleXExpression ) ) )?
            int alt119=2;
            int LA119_0 = input.LA(1);

            if ( (LA119_0==124) ) {
                alt119=1;
            }
            switch (alt119) {
                case 1 :
                    // InternalCheckerDsl.g:8046:4: otherlv_2= 'case' ( (lv_case_3_0= ruleXExpression ) )
                    {
                    otherlv_2=(Token)match(input,124,FOLLOW_54); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getXCasePartAccess().getCaseKeyword_2_0());
                      			
                    }
                    // InternalCheckerDsl.g:8050:4: ( (lv_case_3_0= ruleXExpression ) )
                    // InternalCheckerDsl.g:8051:5: (lv_case_3_0= ruleXExpression )
                    {
                    // InternalCheckerDsl.g:8051:5: (lv_case_3_0= ruleXExpression )
                    // InternalCheckerDsl.g:8052:6: lv_case_3_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXCasePartAccess().getCaseXExpressionParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_37);
                    lv_case_3_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXCasePartRule());
                      						}
                      						set(
                      							current,
                      							"case",
                      							lv_case_3_0,
                      							"org.eclipse.xtext.xbase.Xbase.XExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalCheckerDsl.g:8070:3: ( (otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) ) ) | ( (lv_fallThrough_6_0= ',' ) ) )
            int alt120=2;
            int LA120_0 = input.LA(1);

            if ( (LA120_0==22) ) {
                alt120=1;
            }
            else if ( (LA120_0==20) ) {
                alt120=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 120, 0, input);

                throw nvae;
            }
            switch (alt120) {
                case 1 :
                    // InternalCheckerDsl.g:8071:4: (otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) ) )
                    {
                    // InternalCheckerDsl.g:8071:4: (otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) ) )
                    // InternalCheckerDsl.g:8072:5: otherlv_4= ':' ( (lv_then_5_0= ruleXExpression ) )
                    {
                    otherlv_4=(Token)match(input,22,FOLLOW_54); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_4, grammarAccess.getXCasePartAccess().getColonKeyword_3_0_0());
                      				
                    }
                    // InternalCheckerDsl.g:8076:5: ( (lv_then_5_0= ruleXExpression ) )
                    // InternalCheckerDsl.g:8077:6: (lv_then_5_0= ruleXExpression )
                    {
                    // InternalCheckerDsl.g:8077:6: (lv_then_5_0= ruleXExpression )
                    // InternalCheckerDsl.g:8078:7: lv_then_5_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getXCasePartAccess().getThenXExpressionParserRuleCall_3_0_1_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    lv_then_5_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getXCasePartRule());
                      							}
                      							set(
                      								current,
                      								"then",
                      								lv_then_5_0,
                      								"org.eclipse.xtext.xbase.Xbase.XExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalCheckerDsl.g:8097:4: ( (lv_fallThrough_6_0= ',' ) )
                    {
                    // InternalCheckerDsl.g:8097:4: ( (lv_fallThrough_6_0= ',' ) )
                    // InternalCheckerDsl.g:8098:5: (lv_fallThrough_6_0= ',' )
                    {
                    // InternalCheckerDsl.g:8098:5: (lv_fallThrough_6_0= ',' )
                    // InternalCheckerDsl.g:8099:6: lv_fallThrough_6_0= ','
                    {
                    lv_fallThrough_6_0=(Token)match(input,20,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_fallThrough_6_0, grammarAccess.getXCasePartAccess().getFallThroughCommaKeyword_3_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getXCasePartRule());
                      						}
                      						setWithLastConsumed(current, "fallThrough", lv_fallThrough_6_0 != null, ",");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXCasePart"


    // $ANTLR start "entryRuleXForLoopExpression"
    // InternalCheckerDsl.g:8116:1: entryRuleXForLoopExpression returns [EObject current=null] : iv_ruleXForLoopExpression= ruleXForLoopExpression EOF ;
    public final EObject entryRuleXForLoopExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXForLoopExpression = null;


        try {
            // InternalCheckerDsl.g:8116:59: (iv_ruleXForLoopExpression= ruleXForLoopExpression EOF )
            // InternalCheckerDsl.g:8117:2: iv_ruleXForLoopExpression= ruleXForLoopExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXForLoopExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXForLoopExpression=ruleXForLoopExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXForLoopExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXForLoopExpression"


    // $ANTLR start "ruleXForLoopExpression"
    // InternalCheckerDsl.g:8123:1: ruleXForLoopExpression returns [EObject current=null] : ( ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= ')' ( (lv_eachExpression_7_0= ruleXExpression ) ) ) ;
    public final EObject ruleXForLoopExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_declaredParam_3_0 = null;

        EObject lv_forExpression_5_0 = null;

        EObject lv_eachExpression_7_0 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:8129:2: ( ( ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= ')' ( (lv_eachExpression_7_0= ruleXExpression ) ) ) )
            // InternalCheckerDsl.g:8130:2: ( ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= ')' ( (lv_eachExpression_7_0= ruleXExpression ) ) )
            {
            // InternalCheckerDsl.g:8130:2: ( ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= ')' ( (lv_eachExpression_7_0= ruleXExpression ) ) )
            // InternalCheckerDsl.g:8131:3: ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_forExpression_5_0= ruleXExpression ) ) otherlv_6= ')' ( (lv_eachExpression_7_0= ruleXExpression ) )
            {
            // InternalCheckerDsl.g:8131:3: ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) )
            // InternalCheckerDsl.g:8132:4: ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' )
            {
            // InternalCheckerDsl.g:8145:4: ( () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' )
            // InternalCheckerDsl.g:8146:5: () otherlv_1= 'for' otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':'
            {
            // InternalCheckerDsl.g:8146:5: ()
            // InternalCheckerDsl.g:8147:6: 
            {
            if ( state.backtracking==0 ) {

              						current = forceCreateModelElement(
              							grammarAccess.getXForLoopExpressionAccess().getXForLoopExpressionAction_0_0_0(),
              							current);
              					
            }

            }

            otherlv_1=(Token)match(input,89,FOLLOW_10); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_1, grammarAccess.getXForLoopExpressionAccess().getForKeyword_0_0_1());
              				
            }
            otherlv_2=(Token)match(input,19,FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_2, grammarAccess.getXForLoopExpressionAccess().getLeftParenthesisKeyword_0_0_2());
              				
            }
            // InternalCheckerDsl.g:8161:5: ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) )
            // InternalCheckerDsl.g:8162:6: (lv_declaredParam_3_0= ruleJvmFormalParameter )
            {
            // InternalCheckerDsl.g:8162:6: (lv_declaredParam_3_0= ruleJvmFormalParameter )
            // InternalCheckerDsl.g:8163:7: lv_declaredParam_3_0= ruleJvmFormalParameter
            {
            if ( state.backtracking==0 ) {

              							newCompositeNode(grammarAccess.getXForLoopExpressionAccess().getDeclaredParamJvmFormalParameterParserRuleCall_0_0_3_0());
              						
            }
            pushFollow(FOLLOW_14);
            lv_declaredParam_3_0=ruleJvmFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              							if (current==null) {
              								current = createModelElementForParent(grammarAccess.getXForLoopExpressionRule());
              							}
              							set(
              								current,
              								"declaredParam",
              								lv_declaredParam_3_0,
              								"org.eclipse.xtext.xbase.Xbase.JvmFormalParameter");
              							afterParserOrEnumRuleCall();
              						
            }

            }


            }

            otherlv_4=(Token)match(input,22,FOLLOW_54); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_4, grammarAccess.getXForLoopExpressionAccess().getColonKeyword_0_0_4());
              				
            }

            }


            }

            // InternalCheckerDsl.g:8186:3: ( (lv_forExpression_5_0= ruleXExpression ) )
            // InternalCheckerDsl.g:8187:4: (lv_forExpression_5_0= ruleXExpression )
            {
            // InternalCheckerDsl.g:8187:4: (lv_forExpression_5_0= ruleXExpression )
            // InternalCheckerDsl.g:8188:5: lv_forExpression_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXForLoopExpressionAccess().getForExpressionXExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_15);
            lv_forExpression_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXForLoopExpressionRule());
              					}
              					set(
              						current,
              						"forExpression",
              						lv_forExpression_5_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_6=(Token)match(input,21,FOLLOW_54); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getXForLoopExpressionAccess().getRightParenthesisKeyword_2());
              		
            }
            // InternalCheckerDsl.g:8209:3: ( (lv_eachExpression_7_0= ruleXExpression ) )
            // InternalCheckerDsl.g:8210:4: (lv_eachExpression_7_0= ruleXExpression )
            {
            // InternalCheckerDsl.g:8210:4: (lv_eachExpression_7_0= ruleXExpression )
            // InternalCheckerDsl.g:8211:5: lv_eachExpression_7_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXForLoopExpressionAccess().getEachExpressionXExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_eachExpression_7_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXForLoopExpressionRule());
              					}
              					set(
              						current,
              						"eachExpression",
              						lv_eachExpression_7_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXForLoopExpression"


    // $ANTLR start "entryRuleXBasicForLoopExpression"
    // InternalCheckerDsl.g:8232:1: entryRuleXBasicForLoopExpression returns [EObject current=null] : iv_ruleXBasicForLoopExpression= ruleXBasicForLoopExpression EOF ;
    public final EObject entryRuleXBasicForLoopExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXBasicForLoopExpression = null;


        try {
            // InternalCheckerDsl.g:8232:64: (iv_ruleXBasicForLoopExpression= ruleXBasicForLoopExpression EOF )
            // InternalCheckerDsl.g:8233:2: iv_ruleXBasicForLoopExpression= ruleXBasicForLoopExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXBasicForLoopExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXBasicForLoopExpression=ruleXBasicForLoopExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXBasicForLoopExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXBasicForLoopExpression"


    // $ANTLR start "ruleXBasicForLoopExpression"
    // InternalCheckerDsl.g:8239:1: ruleXBasicForLoopExpression returns [EObject current=null] : ( () otherlv_1= 'for' otherlv_2= '(' ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )? otherlv_6= ';' ( (lv_expression_7_0= ruleXExpression ) )? otherlv_8= ';' ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )? otherlv_12= ')' ( (lv_eachExpression_13_0= ruleXExpression ) ) ) ;
    public final EObject ruleXBasicForLoopExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_initExpressions_3_0 = null;

        EObject lv_initExpressions_5_0 = null;

        EObject lv_expression_7_0 = null;

        EObject lv_updateExpressions_9_0 = null;

        EObject lv_updateExpressions_11_0 = null;

        EObject lv_eachExpression_13_0 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:8245:2: ( ( () otherlv_1= 'for' otherlv_2= '(' ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )? otherlv_6= ';' ( (lv_expression_7_0= ruleXExpression ) )? otherlv_8= ';' ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )? otherlv_12= ')' ( (lv_eachExpression_13_0= ruleXExpression ) ) ) )
            // InternalCheckerDsl.g:8246:2: ( () otherlv_1= 'for' otherlv_2= '(' ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )? otherlv_6= ';' ( (lv_expression_7_0= ruleXExpression ) )? otherlv_8= ';' ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )? otherlv_12= ')' ( (lv_eachExpression_13_0= ruleXExpression ) ) )
            {
            // InternalCheckerDsl.g:8246:2: ( () otherlv_1= 'for' otherlv_2= '(' ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )? otherlv_6= ';' ( (lv_expression_7_0= ruleXExpression ) )? otherlv_8= ';' ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )? otherlv_12= ')' ( (lv_eachExpression_13_0= ruleXExpression ) ) )
            // InternalCheckerDsl.g:8247:3: () otherlv_1= 'for' otherlv_2= '(' ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )? otherlv_6= ';' ( (lv_expression_7_0= ruleXExpression ) )? otherlv_8= ';' ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )? otherlv_12= ')' ( (lv_eachExpression_13_0= ruleXExpression ) )
            {
            // InternalCheckerDsl.g:8247:3: ()
            // InternalCheckerDsl.g:8248:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXBasicForLoopExpressionAccess().getXBasicForLoopExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,89,FOLLOW_10); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXBasicForLoopExpressionAccess().getForKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,19,FOLLOW_90); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getXBasicForLoopExpressionAccess().getLeftParenthesisKeyword_2());
              		
            }
            // InternalCheckerDsl.g:8262:3: ( ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )* )?
            int alt122=2;
            int LA122_0 = input.LA(1);

            if ( ((LA122_0>=RULE_INT && LA122_0<=RULE_ID)||LA122_0==14||LA122_0==17||LA122_0==19||LA122_0==27||LA122_0==46||(LA122_0>=76 && LA122_0<=77)||LA122_0==89||LA122_0==113||(LA122_0>=119 && LA122_0<=120)||LA122_0==122||(LA122_0>=125 && LA122_0<=140)||LA122_0==142) ) {
                alt122=1;
            }
            switch (alt122) {
                case 1 :
                    // InternalCheckerDsl.g:8263:4: ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )*
                    {
                    // InternalCheckerDsl.g:8263:4: ( (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration ) )
                    // InternalCheckerDsl.g:8264:5: (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration )
                    {
                    // InternalCheckerDsl.g:8264:5: (lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration )
                    // InternalCheckerDsl.g:8265:6: lv_initExpressions_3_0= ruleXExpressionOrVarDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getInitExpressionsXExpressionOrVarDeclarationParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_91);
                    lv_initExpressions_3_0=ruleXExpressionOrVarDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
                      						}
                      						add(
                      							current,
                      							"initExpressions",
                      							lv_initExpressions_3_0,
                      							"org.eclipse.xtext.xbase.Xbase.XExpressionOrVarDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalCheckerDsl.g:8282:4: (otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) ) )*
                    loop121:
                    do {
                        int alt121=2;
                        int LA121_0 = input.LA(1);

                        if ( (LA121_0==20) ) {
                            alt121=1;
                        }


                        switch (alt121) {
                    	case 1 :
                    	    // InternalCheckerDsl.g:8283:5: otherlv_4= ',' ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) )
                    	    {
                    	    otherlv_4=(Token)match(input,20,FOLLOW_92); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getXBasicForLoopExpressionAccess().getCommaKeyword_3_1_0());
                    	      				
                    	    }
                    	    // InternalCheckerDsl.g:8287:5: ( (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration ) )
                    	    // InternalCheckerDsl.g:8288:6: (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration )
                    	    {
                    	    // InternalCheckerDsl.g:8288:6: (lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration )
                    	    // InternalCheckerDsl.g:8289:7: lv_initExpressions_5_0= ruleXExpressionOrVarDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getInitExpressionsXExpressionOrVarDeclarationParserRuleCall_3_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_91);
                    	    lv_initExpressions_5_0=ruleXExpressionOrVarDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"initExpressions",
                    	      								lv_initExpressions_5_0,
                    	      								"org.eclipse.xtext.xbase.Xbase.XExpressionOrVarDeclaration");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop121;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_6=(Token)match(input,29,FOLLOW_93); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getXBasicForLoopExpressionAccess().getSemicolonKeyword_4());
              		
            }
            // InternalCheckerDsl.g:8312:3: ( (lv_expression_7_0= ruleXExpression ) )?
            int alt123=2;
            int LA123_0 = input.LA(1);

            if ( ((LA123_0>=RULE_INT && LA123_0<=RULE_ID)||LA123_0==14||LA123_0==17||LA123_0==19||LA123_0==27||LA123_0==46||(LA123_0>=76 && LA123_0<=77)||LA123_0==89||LA123_0==113||(LA123_0>=119 && LA123_0<=120)||LA123_0==122||(LA123_0>=125 && LA123_0<=126)||(LA123_0>=129 && LA123_0<=140)||LA123_0==142) ) {
                alt123=1;
            }
            switch (alt123) {
                case 1 :
                    // InternalCheckerDsl.g:8313:4: (lv_expression_7_0= ruleXExpression )
                    {
                    // InternalCheckerDsl.g:8313:4: (lv_expression_7_0= ruleXExpression )
                    // InternalCheckerDsl.g:8314:5: lv_expression_7_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getExpressionXExpressionParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_94);
                    lv_expression_7_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
                      					}
                      					set(
                      						current,
                      						"expression",
                      						lv_expression_7_0,
                      						"org.eclipse.xtext.xbase.Xbase.XExpression");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_8=(Token)match(input,29,FOLLOW_95); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_8, grammarAccess.getXBasicForLoopExpressionAccess().getSemicolonKeyword_6());
              		
            }
            // InternalCheckerDsl.g:8335:3: ( ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )* )?
            int alt125=2;
            int LA125_0 = input.LA(1);

            if ( ((LA125_0>=RULE_INT && LA125_0<=RULE_ID)||LA125_0==14||LA125_0==17||LA125_0==19||LA125_0==27||LA125_0==46||(LA125_0>=76 && LA125_0<=77)||LA125_0==89||LA125_0==113||(LA125_0>=119 && LA125_0<=120)||LA125_0==122||(LA125_0>=125 && LA125_0<=126)||(LA125_0>=129 && LA125_0<=140)||LA125_0==142) ) {
                alt125=1;
            }
            switch (alt125) {
                case 1 :
                    // InternalCheckerDsl.g:8336:4: ( (lv_updateExpressions_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )*
                    {
                    // InternalCheckerDsl.g:8336:4: ( (lv_updateExpressions_9_0= ruleXExpression ) )
                    // InternalCheckerDsl.g:8337:5: (lv_updateExpressions_9_0= ruleXExpression )
                    {
                    // InternalCheckerDsl.g:8337:5: (lv_updateExpressions_9_0= ruleXExpression )
                    // InternalCheckerDsl.g:8338:6: lv_updateExpressions_9_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getUpdateExpressionsXExpressionParserRuleCall_7_0_0());
                      					
                    }
                    pushFollow(FOLLOW_12);
                    lv_updateExpressions_9_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
                      						}
                      						add(
                      							current,
                      							"updateExpressions",
                      							lv_updateExpressions_9_0,
                      							"org.eclipse.xtext.xbase.Xbase.XExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalCheckerDsl.g:8355:4: (otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) ) )*
                    loop124:
                    do {
                        int alt124=2;
                        int LA124_0 = input.LA(1);

                        if ( (LA124_0==20) ) {
                            alt124=1;
                        }


                        switch (alt124) {
                    	case 1 :
                    	    // InternalCheckerDsl.g:8356:5: otherlv_10= ',' ( (lv_updateExpressions_11_0= ruleXExpression ) )
                    	    {
                    	    otherlv_10=(Token)match(input,20,FOLLOW_54); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_10, grammarAccess.getXBasicForLoopExpressionAccess().getCommaKeyword_7_1_0());
                    	      				
                    	    }
                    	    // InternalCheckerDsl.g:8360:5: ( (lv_updateExpressions_11_0= ruleXExpression ) )
                    	    // InternalCheckerDsl.g:8361:6: (lv_updateExpressions_11_0= ruleXExpression )
                    	    {
                    	    // InternalCheckerDsl.g:8361:6: (lv_updateExpressions_11_0= ruleXExpression )
                    	    // InternalCheckerDsl.g:8362:7: lv_updateExpressions_11_0= ruleXExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getUpdateExpressionsXExpressionParserRuleCall_7_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_12);
                    	    lv_updateExpressions_11_0=ruleXExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"updateExpressions",
                    	      								lv_updateExpressions_11_0,
                    	      								"org.eclipse.xtext.xbase.Xbase.XExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop124;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_12=(Token)match(input,21,FOLLOW_54); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_12, grammarAccess.getXBasicForLoopExpressionAccess().getRightParenthesisKeyword_8());
              		
            }
            // InternalCheckerDsl.g:8385:3: ( (lv_eachExpression_13_0= ruleXExpression ) )
            // InternalCheckerDsl.g:8386:4: (lv_eachExpression_13_0= ruleXExpression )
            {
            // InternalCheckerDsl.g:8386:4: (lv_eachExpression_13_0= ruleXExpression )
            // InternalCheckerDsl.g:8387:5: lv_eachExpression_13_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXBasicForLoopExpressionAccess().getEachExpressionXExpressionParserRuleCall_9_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_eachExpression_13_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXBasicForLoopExpressionRule());
              					}
              					set(
              						current,
              						"eachExpression",
              						lv_eachExpression_13_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXBasicForLoopExpression"


    // $ANTLR start "entryRuleXWhileExpression"
    // InternalCheckerDsl.g:8408:1: entryRuleXWhileExpression returns [EObject current=null] : iv_ruleXWhileExpression= ruleXWhileExpression EOF ;
    public final EObject entryRuleXWhileExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXWhileExpression = null;


        try {
            // InternalCheckerDsl.g:8408:57: (iv_ruleXWhileExpression= ruleXWhileExpression EOF )
            // InternalCheckerDsl.g:8409:2: iv_ruleXWhileExpression= ruleXWhileExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXWhileExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXWhileExpression=ruleXWhileExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXWhileExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXWhileExpression"


    // $ANTLR start "ruleXWhileExpression"
    // InternalCheckerDsl.g:8415:1: ruleXWhileExpression returns [EObject current=null] : ( () otherlv_1= 'while' otherlv_2= '(' ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_body_5_0= ruleXExpression ) ) ) ;
    public final EObject ruleXWhileExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_predicate_3_0 = null;

        EObject lv_body_5_0 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:8421:2: ( ( () otherlv_1= 'while' otherlv_2= '(' ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_body_5_0= ruleXExpression ) ) ) )
            // InternalCheckerDsl.g:8422:2: ( () otherlv_1= 'while' otherlv_2= '(' ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_body_5_0= ruleXExpression ) ) )
            {
            // InternalCheckerDsl.g:8422:2: ( () otherlv_1= 'while' otherlv_2= '(' ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_body_5_0= ruleXExpression ) ) )
            // InternalCheckerDsl.g:8423:3: () otherlv_1= 'while' otherlv_2= '(' ( (lv_predicate_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_body_5_0= ruleXExpression ) )
            {
            // InternalCheckerDsl.g:8423:3: ()
            // InternalCheckerDsl.g:8424:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXWhileExpressionAccess().getXWhileExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,125,FOLLOW_10); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXWhileExpressionAccess().getWhileKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,19,FOLLOW_54); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getXWhileExpressionAccess().getLeftParenthesisKeyword_2());
              		
            }
            // InternalCheckerDsl.g:8438:3: ( (lv_predicate_3_0= ruleXExpression ) )
            // InternalCheckerDsl.g:8439:4: (lv_predicate_3_0= ruleXExpression )
            {
            // InternalCheckerDsl.g:8439:4: (lv_predicate_3_0= ruleXExpression )
            // InternalCheckerDsl.g:8440:5: lv_predicate_3_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXWhileExpressionAccess().getPredicateXExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_15);
            lv_predicate_3_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXWhileExpressionRule());
              					}
              					set(
              						current,
              						"predicate",
              						lv_predicate_3_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,21,FOLLOW_54); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getXWhileExpressionAccess().getRightParenthesisKeyword_4());
              		
            }
            // InternalCheckerDsl.g:8461:3: ( (lv_body_5_0= ruleXExpression ) )
            // InternalCheckerDsl.g:8462:4: (lv_body_5_0= ruleXExpression )
            {
            // InternalCheckerDsl.g:8462:4: (lv_body_5_0= ruleXExpression )
            // InternalCheckerDsl.g:8463:5: lv_body_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXWhileExpressionAccess().getBodyXExpressionParserRuleCall_5_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_body_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXWhileExpressionRule());
              					}
              					set(
              						current,
              						"body",
              						lv_body_5_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXWhileExpression"


    // $ANTLR start "entryRuleXDoWhileExpression"
    // InternalCheckerDsl.g:8484:1: entryRuleXDoWhileExpression returns [EObject current=null] : iv_ruleXDoWhileExpression= ruleXDoWhileExpression EOF ;
    public final EObject entryRuleXDoWhileExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXDoWhileExpression = null;


        try {
            // InternalCheckerDsl.g:8484:59: (iv_ruleXDoWhileExpression= ruleXDoWhileExpression EOF )
            // InternalCheckerDsl.g:8485:2: iv_ruleXDoWhileExpression= ruleXDoWhileExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXDoWhileExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXDoWhileExpression=ruleXDoWhileExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXDoWhileExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXDoWhileExpression"


    // $ANTLR start "ruleXDoWhileExpression"
    // InternalCheckerDsl.g:8491:1: ruleXDoWhileExpression returns [EObject current=null] : ( () otherlv_1= 'do' ( (lv_body_2_0= ruleXExpression ) ) otherlv_3= 'while' otherlv_4= '(' ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= ')' ) ;
    public final EObject ruleXDoWhileExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_body_2_0 = null;

        EObject lv_predicate_5_0 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:8497:2: ( ( () otherlv_1= 'do' ( (lv_body_2_0= ruleXExpression ) ) otherlv_3= 'while' otherlv_4= '(' ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= ')' ) )
            // InternalCheckerDsl.g:8498:2: ( () otherlv_1= 'do' ( (lv_body_2_0= ruleXExpression ) ) otherlv_3= 'while' otherlv_4= '(' ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= ')' )
            {
            // InternalCheckerDsl.g:8498:2: ( () otherlv_1= 'do' ( (lv_body_2_0= ruleXExpression ) ) otherlv_3= 'while' otherlv_4= '(' ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= ')' )
            // InternalCheckerDsl.g:8499:3: () otherlv_1= 'do' ( (lv_body_2_0= ruleXExpression ) ) otherlv_3= 'while' otherlv_4= '(' ( (lv_predicate_5_0= ruleXExpression ) ) otherlv_6= ')'
            {
            // InternalCheckerDsl.g:8499:3: ()
            // InternalCheckerDsl.g:8500:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXDoWhileExpressionAccess().getXDoWhileExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,126,FOLLOW_54); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXDoWhileExpressionAccess().getDoKeyword_1());
              		
            }
            // InternalCheckerDsl.g:8510:3: ( (lv_body_2_0= ruleXExpression ) )
            // InternalCheckerDsl.g:8511:4: (lv_body_2_0= ruleXExpression )
            {
            // InternalCheckerDsl.g:8511:4: (lv_body_2_0= ruleXExpression )
            // InternalCheckerDsl.g:8512:5: lv_body_2_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXDoWhileExpressionAccess().getBodyXExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_96);
            lv_body_2_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXDoWhileExpressionRule());
              					}
              					set(
              						current,
              						"body",
              						lv_body_2_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,125,FOLLOW_10); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getXDoWhileExpressionAccess().getWhileKeyword_3());
              		
            }
            otherlv_4=(Token)match(input,19,FOLLOW_54); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getXDoWhileExpressionAccess().getLeftParenthesisKeyword_4());
              		
            }
            // InternalCheckerDsl.g:8537:3: ( (lv_predicate_5_0= ruleXExpression ) )
            // InternalCheckerDsl.g:8538:4: (lv_predicate_5_0= ruleXExpression )
            {
            // InternalCheckerDsl.g:8538:4: (lv_predicate_5_0= ruleXExpression )
            // InternalCheckerDsl.g:8539:5: lv_predicate_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXDoWhileExpressionAccess().getPredicateXExpressionParserRuleCall_5_0());
              				
            }
            pushFollow(FOLLOW_15);
            lv_predicate_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXDoWhileExpressionRule());
              					}
              					set(
              						current,
              						"predicate",
              						lv_predicate_5_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_6=(Token)match(input,21,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getXDoWhileExpressionAccess().getRightParenthesisKeyword_6());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXDoWhileExpression"


    // $ANTLR start "entryRuleXBlockExpression"
    // InternalCheckerDsl.g:8564:1: entryRuleXBlockExpression returns [EObject current=null] : iv_ruleXBlockExpression= ruleXBlockExpression EOF ;
    public final EObject entryRuleXBlockExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXBlockExpression = null;


        try {
            // InternalCheckerDsl.g:8564:57: (iv_ruleXBlockExpression= ruleXBlockExpression EOF )
            // InternalCheckerDsl.g:8565:2: iv_ruleXBlockExpression= ruleXBlockExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXBlockExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXBlockExpression=ruleXBlockExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXBlockExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXBlockExpression"


    // $ANTLR start "ruleXBlockExpression"
    // InternalCheckerDsl.g:8571:1: ruleXBlockExpression returns [EObject current=null] : ( () otherlv_1= '{' ( ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= ';' )? )* otherlv_4= '}' ) ;
    public final EObject ruleXBlockExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        EObject lv_expressions_2_0 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:8577:2: ( ( () otherlv_1= '{' ( ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= ';' )? )* otherlv_4= '}' ) )
            // InternalCheckerDsl.g:8578:2: ( () otherlv_1= '{' ( ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= ';' )? )* otherlv_4= '}' )
            {
            // InternalCheckerDsl.g:8578:2: ( () otherlv_1= '{' ( ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= ';' )? )* otherlv_4= '}' )
            // InternalCheckerDsl.g:8579:3: () otherlv_1= '{' ( ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= ';' )? )* otherlv_4= '}'
            {
            // InternalCheckerDsl.g:8579:3: ()
            // InternalCheckerDsl.g:8580:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXBlockExpressionAccess().getXBlockExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,14,FOLLOW_97); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXBlockExpressionAccess().getLeftCurlyBracketKeyword_1());
              		
            }
            // InternalCheckerDsl.g:8590:3: ( ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= ';' )? )*
            loop127:
            do {
                int alt127=2;
                int LA127_0 = input.LA(1);

                if ( ((LA127_0>=RULE_INT && LA127_0<=RULE_ID)||LA127_0==14||LA127_0==17||LA127_0==19||LA127_0==27||LA127_0==46||(LA127_0>=76 && LA127_0<=77)||LA127_0==89||LA127_0==113||(LA127_0>=119 && LA127_0<=120)||LA127_0==122||(LA127_0>=125 && LA127_0<=140)||LA127_0==142) ) {
                    alt127=1;
                }


                switch (alt127) {
            	case 1 :
            	    // InternalCheckerDsl.g:8591:4: ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) ) (otherlv_3= ';' )?
            	    {
            	    // InternalCheckerDsl.g:8591:4: ( (lv_expressions_2_0= ruleXExpressionOrVarDeclaration ) )
            	    // InternalCheckerDsl.g:8592:5: (lv_expressions_2_0= ruleXExpressionOrVarDeclaration )
            	    {
            	    // InternalCheckerDsl.g:8592:5: (lv_expressions_2_0= ruleXExpressionOrVarDeclaration )
            	    // InternalCheckerDsl.g:8593:6: lv_expressions_2_0= ruleXExpressionOrVarDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXBlockExpressionAccess().getExpressionsXExpressionOrVarDeclarationParserRuleCall_2_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_98);
            	    lv_expressions_2_0=ruleXExpressionOrVarDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXBlockExpressionRule());
            	      						}
            	      						add(
            	      							current,
            	      							"expressions",
            	      							lv_expressions_2_0,
            	      							"org.eclipse.xtext.xbase.Xbase.XExpressionOrVarDeclaration");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalCheckerDsl.g:8610:4: (otherlv_3= ';' )?
            	    int alt126=2;
            	    int LA126_0 = input.LA(1);

            	    if ( (LA126_0==29) ) {
            	        alt126=1;
            	    }
            	    switch (alt126) {
            	        case 1 :
            	            // InternalCheckerDsl.g:8611:5: otherlv_3= ';'
            	            {
            	            otherlv_3=(Token)match(input,29,FOLLOW_97); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(otherlv_3, grammarAccess.getXBlockExpressionAccess().getSemicolonKeyword_2_1());
            	              				
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop127;
                }
            } while (true);

            otherlv_4=(Token)match(input,15,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getXBlockExpressionAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXBlockExpression"


    // $ANTLR start "entryRuleXExpressionOrVarDeclaration"
    // InternalCheckerDsl.g:8625:1: entryRuleXExpressionOrVarDeclaration returns [EObject current=null] : iv_ruleXExpressionOrVarDeclaration= ruleXExpressionOrVarDeclaration EOF ;
    public final EObject entryRuleXExpressionOrVarDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXExpressionOrVarDeclaration = null;


        try {
            // InternalCheckerDsl.g:8625:68: (iv_ruleXExpressionOrVarDeclaration= ruleXExpressionOrVarDeclaration EOF )
            // InternalCheckerDsl.g:8626:2: iv_ruleXExpressionOrVarDeclaration= ruleXExpressionOrVarDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXExpressionOrVarDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXExpressionOrVarDeclaration=ruleXExpressionOrVarDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXExpressionOrVarDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXExpressionOrVarDeclaration"


    // $ANTLR start "ruleXExpressionOrVarDeclaration"
    // InternalCheckerDsl.g:8632:1: ruleXExpressionOrVarDeclaration returns [EObject current=null] : (this_XVariableDeclaration_0= ruleXVariableDeclaration | this_XExpression_1= ruleXExpression ) ;
    public final EObject ruleXExpressionOrVarDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_XVariableDeclaration_0 = null;

        EObject this_XExpression_1 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:8638:2: ( (this_XVariableDeclaration_0= ruleXVariableDeclaration | this_XExpression_1= ruleXExpression ) )
            // InternalCheckerDsl.g:8639:2: (this_XVariableDeclaration_0= ruleXVariableDeclaration | this_XExpression_1= ruleXExpression )
            {
            // InternalCheckerDsl.g:8639:2: (this_XVariableDeclaration_0= ruleXVariableDeclaration | this_XExpression_1= ruleXExpression )
            int alt128=2;
            int LA128_0 = input.LA(1);

            if ( ((LA128_0>=127 && LA128_0<=128)) ) {
                alt128=1;
            }
            else if ( ((LA128_0>=RULE_INT && LA128_0<=RULE_ID)||LA128_0==14||LA128_0==17||LA128_0==19||LA128_0==27||LA128_0==46||(LA128_0>=76 && LA128_0<=77)||LA128_0==89||LA128_0==113||(LA128_0>=119 && LA128_0<=120)||LA128_0==122||(LA128_0>=125 && LA128_0<=126)||(LA128_0>=129 && LA128_0<=140)||LA128_0==142) ) {
                alt128=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 128, 0, input);

                throw nvae;
            }
            switch (alt128) {
                case 1 :
                    // InternalCheckerDsl.g:8640:3: this_XVariableDeclaration_0= ruleXVariableDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXExpressionOrVarDeclarationAccess().getXVariableDeclarationParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XVariableDeclaration_0=ruleXVariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XVariableDeclaration_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalCheckerDsl.g:8649:3: this_XExpression_1= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getXExpressionOrVarDeclarationAccess().getXExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XExpression_1=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XExpression_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXExpressionOrVarDeclaration"


    // $ANTLR start "entryRuleXVariableDeclaration"
    // InternalCheckerDsl.g:8661:1: entryRuleXVariableDeclaration returns [EObject current=null] : iv_ruleXVariableDeclaration= ruleXVariableDeclaration EOF ;
    public final EObject entryRuleXVariableDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXVariableDeclaration = null;


        try {
            // InternalCheckerDsl.g:8661:61: (iv_ruleXVariableDeclaration= ruleXVariableDeclaration EOF )
            // InternalCheckerDsl.g:8662:2: iv_ruleXVariableDeclaration= ruleXVariableDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXVariableDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXVariableDeclaration=ruleXVariableDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXVariableDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXVariableDeclaration"


    // $ANTLR start "ruleXVariableDeclaration"
    // InternalCheckerDsl.g:8668:1: ruleXVariableDeclaration returns [EObject current=null] : ( () ( ( (lv_writeable_1_0= 'var' ) ) | otherlv_2= 'val' ) ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) ) | ( (lv_name_5_0= ruleValidID ) ) ) (otherlv_6= '=' ( (lv_right_7_0= ruleXExpression ) ) )? ) ;
    public final EObject ruleXVariableDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_writeable_1_0=null;
        Token otherlv_2=null;
        Token otherlv_6=null;
        EObject lv_type_3_0 = null;

        AntlrDatatypeRuleToken lv_name_4_0 = null;

        AntlrDatatypeRuleToken lv_name_5_0 = null;

        EObject lv_right_7_0 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:8674:2: ( ( () ( ( (lv_writeable_1_0= 'var' ) ) | otherlv_2= 'val' ) ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) ) | ( (lv_name_5_0= ruleValidID ) ) ) (otherlv_6= '=' ( (lv_right_7_0= ruleXExpression ) ) )? ) )
            // InternalCheckerDsl.g:8675:2: ( () ( ( (lv_writeable_1_0= 'var' ) ) | otherlv_2= 'val' ) ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) ) | ( (lv_name_5_0= ruleValidID ) ) ) (otherlv_6= '=' ( (lv_right_7_0= ruleXExpression ) ) )? )
            {
            // InternalCheckerDsl.g:8675:2: ( () ( ( (lv_writeable_1_0= 'var' ) ) | otherlv_2= 'val' ) ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) ) | ( (lv_name_5_0= ruleValidID ) ) ) (otherlv_6= '=' ( (lv_right_7_0= ruleXExpression ) ) )? )
            // InternalCheckerDsl.g:8676:3: () ( ( (lv_writeable_1_0= 'var' ) ) | otherlv_2= 'val' ) ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) ) | ( (lv_name_5_0= ruleValidID ) ) ) (otherlv_6= '=' ( (lv_right_7_0= ruleXExpression ) ) )?
            {
            // InternalCheckerDsl.g:8676:3: ()
            // InternalCheckerDsl.g:8677:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXVariableDeclarationAccess().getXVariableDeclarationAction_0(),
              					current);
              			
            }

            }

            // InternalCheckerDsl.g:8683:3: ( ( (lv_writeable_1_0= 'var' ) ) | otherlv_2= 'val' )
            int alt129=2;
            int LA129_0 = input.LA(1);

            if ( (LA129_0==127) ) {
                alt129=1;
            }
            else if ( (LA129_0==128) ) {
                alt129=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 129, 0, input);

                throw nvae;
            }
            switch (alt129) {
                case 1 :
                    // InternalCheckerDsl.g:8684:4: ( (lv_writeable_1_0= 'var' ) )
                    {
                    // InternalCheckerDsl.g:8684:4: ( (lv_writeable_1_0= 'var' ) )
                    // InternalCheckerDsl.g:8685:5: (lv_writeable_1_0= 'var' )
                    {
                    // InternalCheckerDsl.g:8685:5: (lv_writeable_1_0= 'var' )
                    // InternalCheckerDsl.g:8686:6: lv_writeable_1_0= 'var'
                    {
                    lv_writeable_1_0=(Token)match(input,127,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_writeable_1_0, grammarAccess.getXVariableDeclarationAccess().getWriteableVarKeyword_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getXVariableDeclarationRule());
                      						}
                      						setWithLastConsumed(current, "writeable", lv_writeable_1_0 != null, "var");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalCheckerDsl.g:8699:4: otherlv_2= 'val'
                    {
                    otherlv_2=(Token)match(input,128,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getXVariableDeclarationAccess().getValKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalCheckerDsl.g:8704:3: ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) ) | ( (lv_name_5_0= ruleValidID ) ) )
            int alt130=2;
            int LA130_0 = input.LA(1);

            if ( (LA130_0==RULE_ID) ) {
                int LA130_1 = input.LA(2);

                if ( (synpred29_InternalCheckerDsl()) ) {
                    alt130=1;
                }
                else if ( (true) ) {
                    alt130=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 130, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA130_0==19) && (synpred29_InternalCheckerDsl())) {
                alt130=1;
            }
            else if ( (LA130_0==108) && (synpred29_InternalCheckerDsl())) {
                alt130=1;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 130, 0, input);

                throw nvae;
            }
            switch (alt130) {
                case 1 :
                    // InternalCheckerDsl.g:8705:4: ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) )
                    {
                    // InternalCheckerDsl.g:8705:4: ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) ) )
                    // InternalCheckerDsl.g:8706:5: ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )=> ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) )
                    {
                    // InternalCheckerDsl.g:8719:5: ( ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) ) )
                    // InternalCheckerDsl.g:8720:6: ( (lv_type_3_0= ruleJvmTypeReference ) ) ( (lv_name_4_0= ruleValidID ) )
                    {
                    // InternalCheckerDsl.g:8720:6: ( (lv_type_3_0= ruleJvmTypeReference ) )
                    // InternalCheckerDsl.g:8721:7: (lv_type_3_0= ruleJvmTypeReference )
                    {
                    // InternalCheckerDsl.g:8721:7: (lv_type_3_0= ruleJvmTypeReference )
                    // InternalCheckerDsl.g:8722:8: lv_type_3_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getTypeJvmTypeReferenceParserRuleCall_2_0_0_0_0());
                      							
                    }
                    pushFollow(FOLLOW_4);
                    lv_type_3_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
                      								}
                      								set(
                      									current,
                      									"type",
                      									lv_type_3_0,
                      									"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }

                    // InternalCheckerDsl.g:8739:6: ( (lv_name_4_0= ruleValidID ) )
                    // InternalCheckerDsl.g:8740:7: (lv_name_4_0= ruleValidID )
                    {
                    // InternalCheckerDsl.g:8740:7: (lv_name_4_0= ruleValidID )
                    // InternalCheckerDsl.g:8741:8: lv_name_4_0= ruleValidID
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getNameValidIDParserRuleCall_2_0_0_1_0());
                      							
                    }
                    pushFollow(FOLLOW_99);
                    lv_name_4_0=ruleValidID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
                      								}
                      								set(
                      									current,
                      									"name",
                      									lv_name_4_0,
                      									"org.eclipse.xtext.xbase.Xtype.ValidID");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalCheckerDsl.g:8761:4: ( (lv_name_5_0= ruleValidID ) )
                    {
                    // InternalCheckerDsl.g:8761:4: ( (lv_name_5_0= ruleValidID ) )
                    // InternalCheckerDsl.g:8762:5: (lv_name_5_0= ruleValidID )
                    {
                    // InternalCheckerDsl.g:8762:5: (lv_name_5_0= ruleValidID )
                    // InternalCheckerDsl.g:8763:6: lv_name_5_0= ruleValidID
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getNameValidIDParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_99);
                    lv_name_5_0=ruleValidID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
                      						}
                      						set(
                      							current,
                      							"name",
                      							lv_name_5_0,
                      							"org.eclipse.xtext.xbase.Xtype.ValidID");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalCheckerDsl.g:8781:3: (otherlv_6= '=' ( (lv_right_7_0= ruleXExpression ) ) )?
            int alt131=2;
            int LA131_0 = input.LA(1);

            if ( (LA131_0==75) ) {
                alt131=1;
            }
            switch (alt131) {
                case 1 :
                    // InternalCheckerDsl.g:8782:4: otherlv_6= '=' ( (lv_right_7_0= ruleXExpression ) )
                    {
                    otherlv_6=(Token)match(input,75,FOLLOW_54); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getXVariableDeclarationAccess().getEqualsSignKeyword_3_0());
                      			
                    }
                    // InternalCheckerDsl.g:8786:4: ( (lv_right_7_0= ruleXExpression ) )
                    // InternalCheckerDsl.g:8787:5: (lv_right_7_0= ruleXExpression )
                    {
                    // InternalCheckerDsl.g:8787:5: (lv_right_7_0= ruleXExpression )
                    // InternalCheckerDsl.g:8788:6: lv_right_7_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getRightXExpressionParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_right_7_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
                      						}
                      						set(
                      							current,
                      							"right",
                      							lv_right_7_0,
                      							"org.eclipse.xtext.xbase.Xbase.XExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXVariableDeclaration"


    // $ANTLR start "entryRuleJvmFormalParameter"
    // InternalCheckerDsl.g:8810:1: entryRuleJvmFormalParameter returns [EObject current=null] : iv_ruleJvmFormalParameter= ruleJvmFormalParameter EOF ;
    public final EObject entryRuleJvmFormalParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmFormalParameter = null;


        try {
            // InternalCheckerDsl.g:8810:59: (iv_ruleJvmFormalParameter= ruleJvmFormalParameter EOF )
            // InternalCheckerDsl.g:8811:2: iv_ruleJvmFormalParameter= ruleJvmFormalParameter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmFormalParameterRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmFormalParameter=ruleJvmFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmFormalParameter; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmFormalParameter"


    // $ANTLR start "ruleJvmFormalParameter"
    // InternalCheckerDsl.g:8817:1: ruleJvmFormalParameter returns [EObject current=null] : ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) ) ) ;
    public final EObject ruleJvmFormalParameter() throws RecognitionException {
        EObject current = null;

        EObject lv_parameterType_0_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:8823:2: ( ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) ) ) )
            // InternalCheckerDsl.g:8824:2: ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) ) )
            {
            // InternalCheckerDsl.g:8824:2: ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) ) )
            // InternalCheckerDsl.g:8825:3: ( (lv_parameterType_0_0= ruleJvmTypeReference ) )? ( (lv_name_1_0= ruleValidID ) )
            {
            // InternalCheckerDsl.g:8825:3: ( (lv_parameterType_0_0= ruleJvmTypeReference ) )?
            int alt132=2;
            int LA132_0 = input.LA(1);

            if ( (LA132_0==RULE_ID) ) {
                int LA132_1 = input.LA(2);

                if ( (LA132_1==RULE_ID||LA132_1==27||LA132_1==44||LA132_1==46) ) {
                    alt132=1;
                }
            }
            else if ( (LA132_0==19||LA132_0==108) ) {
                alt132=1;
            }
            switch (alt132) {
                case 1 :
                    // InternalCheckerDsl.g:8826:4: (lv_parameterType_0_0= ruleJvmTypeReference )
                    {
                    // InternalCheckerDsl.g:8826:4: (lv_parameterType_0_0= ruleJvmTypeReference )
                    // InternalCheckerDsl.g:8827:5: lv_parameterType_0_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getJvmFormalParameterAccess().getParameterTypeJvmTypeReferenceParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_4);
                    lv_parameterType_0_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getJvmFormalParameterRule());
                      					}
                      					set(
                      						current,
                      						"parameterType",
                      						lv_parameterType_0_0,
                      						"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalCheckerDsl.g:8844:3: ( (lv_name_1_0= ruleValidID ) )
            // InternalCheckerDsl.g:8845:4: (lv_name_1_0= ruleValidID )
            {
            // InternalCheckerDsl.g:8845:4: (lv_name_1_0= ruleValidID )
            // InternalCheckerDsl.g:8846:5: lv_name_1_0= ruleValidID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJvmFormalParameterAccess().getNameValidIDParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_name_1_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJvmFormalParameterRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xtype.ValidID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmFormalParameter"


    // $ANTLR start "entryRuleFullJvmFormalParameter"
    // InternalCheckerDsl.g:8867:1: entryRuleFullJvmFormalParameter returns [EObject current=null] : iv_ruleFullJvmFormalParameter= ruleFullJvmFormalParameter EOF ;
    public final EObject entryRuleFullJvmFormalParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFullJvmFormalParameter = null;


        try {
            // InternalCheckerDsl.g:8867:63: (iv_ruleFullJvmFormalParameter= ruleFullJvmFormalParameter EOF )
            // InternalCheckerDsl.g:8868:2: iv_ruleFullJvmFormalParameter= ruleFullJvmFormalParameter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFullJvmFormalParameterRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFullJvmFormalParameter=ruleFullJvmFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFullJvmFormalParameter; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFullJvmFormalParameter"


    // $ANTLR start "ruleFullJvmFormalParameter"
    // InternalCheckerDsl.g:8874:1: ruleFullJvmFormalParameter returns [EObject current=null] : ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) ) ( (lv_name_1_0= ruleValidID ) ) ) ;
    public final EObject ruleFullJvmFormalParameter() throws RecognitionException {
        EObject current = null;

        EObject lv_parameterType_0_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:8880:2: ( ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) ) ( (lv_name_1_0= ruleValidID ) ) ) )
            // InternalCheckerDsl.g:8881:2: ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) ) ( (lv_name_1_0= ruleValidID ) ) )
            {
            // InternalCheckerDsl.g:8881:2: ( ( (lv_parameterType_0_0= ruleJvmTypeReference ) ) ( (lv_name_1_0= ruleValidID ) ) )
            // InternalCheckerDsl.g:8882:3: ( (lv_parameterType_0_0= ruleJvmTypeReference ) ) ( (lv_name_1_0= ruleValidID ) )
            {
            // InternalCheckerDsl.g:8882:3: ( (lv_parameterType_0_0= ruleJvmTypeReference ) )
            // InternalCheckerDsl.g:8883:4: (lv_parameterType_0_0= ruleJvmTypeReference )
            {
            // InternalCheckerDsl.g:8883:4: (lv_parameterType_0_0= ruleJvmTypeReference )
            // InternalCheckerDsl.g:8884:5: lv_parameterType_0_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFullJvmFormalParameterAccess().getParameterTypeJvmTypeReferenceParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_4);
            lv_parameterType_0_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFullJvmFormalParameterRule());
              					}
              					set(
              						current,
              						"parameterType",
              						lv_parameterType_0_0,
              						"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalCheckerDsl.g:8901:3: ( (lv_name_1_0= ruleValidID ) )
            // InternalCheckerDsl.g:8902:4: (lv_name_1_0= ruleValidID )
            {
            // InternalCheckerDsl.g:8902:4: (lv_name_1_0= ruleValidID )
            // InternalCheckerDsl.g:8903:5: lv_name_1_0= ruleValidID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFullJvmFormalParameterAccess().getNameValidIDParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_name_1_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFullJvmFormalParameterRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.eclipse.xtext.xbase.Xtype.ValidID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFullJvmFormalParameter"


    // $ANTLR start "entryRuleXFeatureCall"
    // InternalCheckerDsl.g:8924:1: entryRuleXFeatureCall returns [EObject current=null] : iv_ruleXFeatureCall= ruleXFeatureCall EOF ;
    public final EObject entryRuleXFeatureCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXFeatureCall = null;


        try {
            // InternalCheckerDsl.g:8924:53: (iv_ruleXFeatureCall= ruleXFeatureCall EOF )
            // InternalCheckerDsl.g:8925:2: iv_ruleXFeatureCall= ruleXFeatureCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXFeatureCallRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXFeatureCall=ruleXFeatureCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXFeatureCall; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXFeatureCall"


    // $ANTLR start "ruleXFeatureCall"
    // InternalCheckerDsl.g:8931:1: ruleXFeatureCall returns [EObject current=null] : ( () (otherlv_1= '<' ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')' )? ( ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )? ) ;
    public final EObject ruleXFeatureCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token lv_explicitOperationCall_7_0=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_typeArguments_2_0 = null;

        EObject lv_typeArguments_4_0 = null;

        EObject lv_featureCallArguments_8_0 = null;

        EObject lv_featureCallArguments_9_0 = null;

        EObject lv_featureCallArguments_11_0 = null;

        EObject lv_featureCallArguments_13_0 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:8937:2: ( ( () (otherlv_1= '<' ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')' )? ( ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )? ) )
            // InternalCheckerDsl.g:8938:2: ( () (otherlv_1= '<' ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')' )? ( ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )? )
            {
            // InternalCheckerDsl.g:8938:2: ( () (otherlv_1= '<' ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')' )? ( ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )? )
            // InternalCheckerDsl.g:8939:3: () (otherlv_1= '<' ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' )? ( ( ruleIdOrSuper ) ) ( ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')' )? ( ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )?
            {
            // InternalCheckerDsl.g:8939:3: ()
            // InternalCheckerDsl.g:8940:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXFeatureCallAccess().getXFeatureCallAction_0(),
              					current);
              			
            }

            }

            // InternalCheckerDsl.g:8946:3: (otherlv_1= '<' ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' )?
            int alt134=2;
            int LA134_0 = input.LA(1);

            if ( (LA134_0==46) ) {
                alt134=1;
            }
            switch (alt134) {
                case 1 :
                    // InternalCheckerDsl.g:8947:4: otherlv_1= '<' ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>'
                    {
                    otherlv_1=(Token)match(input,46,FOLLOW_72); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getXFeatureCallAccess().getLessThanSignKeyword_1_0());
                      			
                    }
                    // InternalCheckerDsl.g:8951:4: ( (lv_typeArguments_2_0= ruleJvmArgumentTypeReference ) )
                    // InternalCheckerDsl.g:8952:5: (lv_typeArguments_2_0= ruleJvmArgumentTypeReference )
                    {
                    // InternalCheckerDsl.g:8952:5: (lv_typeArguments_2_0= ruleJvmArgumentTypeReference )
                    // InternalCheckerDsl.g:8953:6: lv_typeArguments_2_0= ruleJvmArgumentTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_34);
                    lv_typeArguments_2_0=ruleJvmArgumentTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                      						}
                      						add(
                      							current,
                      							"typeArguments",
                      							lv_typeArguments_2_0,
                      							"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalCheckerDsl.g:8970:4: (otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) )*
                    loop133:
                    do {
                        int alt133=2;
                        int LA133_0 = input.LA(1);

                        if ( (LA133_0==20) ) {
                            alt133=1;
                        }


                        switch (alt133) {
                    	case 1 :
                    	    // InternalCheckerDsl.g:8971:5: otherlv_3= ',' ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) )
                    	    {
                    	    otherlv_3=(Token)match(input,20,FOLLOW_72); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_3, grammarAccess.getXFeatureCallAccess().getCommaKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalCheckerDsl.g:8975:5: ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) )
                    	    // InternalCheckerDsl.g:8976:6: (lv_typeArguments_4_0= ruleJvmArgumentTypeReference )
                    	    {
                    	    // InternalCheckerDsl.g:8976:6: (lv_typeArguments_4_0= ruleJvmArgumentTypeReference )
                    	    // InternalCheckerDsl.g:8977:7: lv_typeArguments_4_0= ruleJvmArgumentTypeReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getXFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_34);
                    	    lv_typeArguments_4_0=ruleJvmArgumentTypeReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"typeArguments",
                    	      								lv_typeArguments_4_0,
                    	      								"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop133;
                        }
                    } while (true);

                    otherlv_5=(Token)match(input,47,FOLLOW_71); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getXFeatureCallAccess().getGreaterThanSignKeyword_1_3());
                      			
                    }

                    }
                    break;

            }

            // InternalCheckerDsl.g:9000:3: ( ( ruleIdOrSuper ) )
            // InternalCheckerDsl.g:9001:4: ( ruleIdOrSuper )
            {
            // InternalCheckerDsl.g:9001:4: ( ruleIdOrSuper )
            // InternalCheckerDsl.g:9002:5: ruleIdOrSuper
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getXFeatureCallRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_2_0());
              				
            }
            pushFollow(FOLLOW_100);
            ruleIdOrSuper();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalCheckerDsl.g:9016:3: ( ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')' )?
            int alt137=2;
            alt137 = dfa137.predict(input);
            switch (alt137) {
                case 1 :
                    // InternalCheckerDsl.g:9017:4: ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')'
                    {
                    // InternalCheckerDsl.g:9017:4: ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) )
                    // InternalCheckerDsl.g:9018:5: ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' )
                    {
                    // InternalCheckerDsl.g:9022:5: (lv_explicitOperationCall_7_0= '(' )
                    // InternalCheckerDsl.g:9023:6: lv_explicitOperationCall_7_0= '('
                    {
                    lv_explicitOperationCall_7_0=(Token)match(input,19,FOLLOW_74); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_explicitOperationCall_7_0, grammarAccess.getXFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_3_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getXFeatureCallRule());
                      						}
                      						setWithLastConsumed(current, "explicitOperationCall", lv_explicitOperationCall_7_0 != null, "(");
                      					
                    }

                    }


                    }

                    // InternalCheckerDsl.g:9035:4: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )?
                    int alt136=3;
                    alt136 = dfa136.predict(input);
                    switch (alt136) {
                        case 1 :
                            // InternalCheckerDsl.g:9036:5: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) )
                            {
                            // InternalCheckerDsl.g:9036:5: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) )
                            // InternalCheckerDsl.g:9037:6: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure )
                            {
                            // InternalCheckerDsl.g:9062:6: (lv_featureCallArguments_8_0= ruleXShortClosure )
                            // InternalCheckerDsl.g:9063:7: lv_featureCallArguments_8_0= ruleXShortClosure
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXShortClosureParserRuleCall_3_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_15);
                            lv_featureCallArguments_8_0=ruleXShortClosure();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                              							}
                              							add(
                              								current,
                              								"featureCallArguments",
                              								lv_featureCallArguments_8_0,
                              								"org.eclipse.xtext.xbase.Xbase.XShortClosure");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalCheckerDsl.g:9081:5: ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* )
                            {
                            // InternalCheckerDsl.g:9081:5: ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* )
                            // InternalCheckerDsl.g:9082:6: ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )*
                            {
                            // InternalCheckerDsl.g:9082:6: ( (lv_featureCallArguments_9_0= ruleXExpression ) )
                            // InternalCheckerDsl.g:9083:7: (lv_featureCallArguments_9_0= ruleXExpression )
                            {
                            // InternalCheckerDsl.g:9083:7: (lv_featureCallArguments_9_0= ruleXExpression )
                            // InternalCheckerDsl.g:9084:8: lv_featureCallArguments_9_0= ruleXExpression
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXExpressionParserRuleCall_3_1_1_0_0());
                              							
                            }
                            pushFollow(FOLLOW_12);
                            lv_featureCallArguments_9_0=ruleXExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                              								}
                              								add(
                              									current,
                              									"featureCallArguments",
                              									lv_featureCallArguments_9_0,
                              									"org.eclipse.xtext.xbase.Xbase.XExpression");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalCheckerDsl.g:9101:6: (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )*
                            loop135:
                            do {
                                int alt135=2;
                                int LA135_0 = input.LA(1);

                                if ( (LA135_0==20) ) {
                                    alt135=1;
                                }


                                switch (alt135) {
                            	case 1 :
                            	    // InternalCheckerDsl.g:9102:7: otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) )
                            	    {
                            	    otherlv_10=(Token)match(input,20,FOLLOW_54); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_10, grammarAccess.getXFeatureCallAccess().getCommaKeyword_3_1_1_1_0());
                            	      						
                            	    }
                            	    // InternalCheckerDsl.g:9106:7: ( (lv_featureCallArguments_11_0= ruleXExpression ) )
                            	    // InternalCheckerDsl.g:9107:8: (lv_featureCallArguments_11_0= ruleXExpression )
                            	    {
                            	    // InternalCheckerDsl.g:9107:8: (lv_featureCallArguments_11_0= ruleXExpression )
                            	    // InternalCheckerDsl.g:9108:9: lv_featureCallArguments_11_0= ruleXExpression
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXExpressionParserRuleCall_3_1_1_1_1_0());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_12);
                            	    lv_featureCallArguments_11_0=ruleXExpression();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"featureCallArguments",
                            	      										lv_featureCallArguments_11_0,
                            	      										"org.eclipse.xtext.xbase.Xbase.XExpression");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop135;
                                }
                            } while (true);


                            }


                            }
                            break;

                    }

                    otherlv_12=(Token)match(input,21,FOLLOW_32); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getXFeatureCallAccess().getRightParenthesisKeyword_3_2());
                      			
                    }

                    }
                    break;

            }

            // InternalCheckerDsl.g:9133:3: ( ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )?
            int alt138=2;
            alt138 = dfa138.predict(input);
            switch (alt138) {
                case 1 :
                    // InternalCheckerDsl.g:9134:4: ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure )
                    {
                    // InternalCheckerDsl.g:9140:4: (lv_featureCallArguments_13_0= ruleXClosure )
                    // InternalCheckerDsl.g:9141:5: lv_featureCallArguments_13_0= ruleXClosure
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXClosureParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_featureCallArguments_13_0=ruleXClosure();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
                      					}
                      					add(
                      						current,
                      						"featureCallArguments",
                      						lv_featureCallArguments_13_0,
                      						"org.eclipse.xtext.xbase.Xbase.XClosure");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXFeatureCall"


    // $ANTLR start "entryRuleFeatureCallID"
    // InternalCheckerDsl.g:9162:1: entryRuleFeatureCallID returns [String current=null] : iv_ruleFeatureCallID= ruleFeatureCallID EOF ;
    public final String entryRuleFeatureCallID() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleFeatureCallID = null;


        try {
            // InternalCheckerDsl.g:9162:53: (iv_ruleFeatureCallID= ruleFeatureCallID EOF )
            // InternalCheckerDsl.g:9163:2: iv_ruleFeatureCallID= ruleFeatureCallID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFeatureCallIDRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFeatureCallID=ruleFeatureCallID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFeatureCallID.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFeatureCallID"


    // $ANTLR start "ruleFeatureCallID"
    // InternalCheckerDsl.g:9169:1: ruleFeatureCallID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ValidID_0= ruleValidID | kw= 'extends' | kw= 'static' | kw= 'import' | kw= 'extension' ) ;
    public final AntlrDatatypeRuleToken ruleFeatureCallID() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_ValidID_0 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:9175:2: ( (this_ValidID_0= ruleValidID | kw= 'extends' | kw= 'static' | kw= 'import' | kw= 'extension' ) )
            // InternalCheckerDsl.g:9176:2: (this_ValidID_0= ruleValidID | kw= 'extends' | kw= 'static' | kw= 'import' | kw= 'extension' )
            {
            // InternalCheckerDsl.g:9176:2: (this_ValidID_0= ruleValidID | kw= 'extends' | kw= 'static' | kw= 'import' | kw= 'extension' )
            int alt139=5;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                alt139=1;
                }
                break;
            case 17:
                {
                alt139=2;
                }
                break;
            case 129:
                {
                alt139=3;
                }
                break;
            case 130:
                {
                alt139=4;
                }
                break;
            case 131:
                {
                alt139=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 139, 0, input);

                throw nvae;
            }

            switch (alt139) {
                case 1 :
                    // InternalCheckerDsl.g:9177:3: this_ValidID_0= ruleValidID
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFeatureCallIDAccess().getValidIDParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ValidID_0=ruleValidID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_ValidID_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalCheckerDsl.g:9188:3: kw= 'extends'
                    {
                    kw=(Token)match(input,17,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getExtendsKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalCheckerDsl.g:9194:3: kw= 'static'
                    {
                    kw=(Token)match(input,129,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getStaticKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalCheckerDsl.g:9200:3: kw= 'import'
                    {
                    kw=(Token)match(input,130,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getImportKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalCheckerDsl.g:9206:3: kw= 'extension'
                    {
                    kw=(Token)match(input,131,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getFeatureCallIDAccess().getExtensionKeyword_4());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFeatureCallID"


    // $ANTLR start "entryRuleIdOrSuper"
    // InternalCheckerDsl.g:9215:1: entryRuleIdOrSuper returns [String current=null] : iv_ruleIdOrSuper= ruleIdOrSuper EOF ;
    public final String entryRuleIdOrSuper() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleIdOrSuper = null;


        try {
            // InternalCheckerDsl.g:9215:49: (iv_ruleIdOrSuper= ruleIdOrSuper EOF )
            // InternalCheckerDsl.g:9216:2: iv_ruleIdOrSuper= ruleIdOrSuper EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIdOrSuperRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIdOrSuper=ruleIdOrSuper();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIdOrSuper.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIdOrSuper"


    // $ANTLR start "ruleIdOrSuper"
    // InternalCheckerDsl.g:9222:1: ruleIdOrSuper returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_FeatureCallID_0= ruleFeatureCallID | kw= 'super' ) ;
    public final AntlrDatatypeRuleToken ruleIdOrSuper() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_FeatureCallID_0 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:9228:2: ( (this_FeatureCallID_0= ruleFeatureCallID | kw= 'super' ) )
            // InternalCheckerDsl.g:9229:2: (this_FeatureCallID_0= ruleFeatureCallID | kw= 'super' )
            {
            // InternalCheckerDsl.g:9229:2: (this_FeatureCallID_0= ruleFeatureCallID | kw= 'super' )
            int alt140=2;
            int LA140_0 = input.LA(1);

            if ( (LA140_0==RULE_ID||LA140_0==17||(LA140_0>=129 && LA140_0<=131)) ) {
                alt140=1;
            }
            else if ( (LA140_0==132) ) {
                alt140=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 140, 0, input);

                throw nvae;
            }
            switch (alt140) {
                case 1 :
                    // InternalCheckerDsl.g:9230:3: this_FeatureCallID_0= ruleFeatureCallID
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getIdOrSuperAccess().getFeatureCallIDParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_FeatureCallID_0=ruleFeatureCallID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_FeatureCallID_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalCheckerDsl.g:9241:3: kw= 'super'
                    {
                    kw=(Token)match(input,132,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getIdOrSuperAccess().getSuperKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIdOrSuper"


    // $ANTLR start "entryRuleXConstructorCall"
    // InternalCheckerDsl.g:9250:1: entryRuleXConstructorCall returns [EObject current=null] : iv_ruleXConstructorCall= ruleXConstructorCall EOF ;
    public final EObject entryRuleXConstructorCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXConstructorCall = null;


        try {
            // InternalCheckerDsl.g:9250:57: (iv_ruleXConstructorCall= ruleXConstructorCall EOF )
            // InternalCheckerDsl.g:9251:2: iv_ruleXConstructorCall= ruleXConstructorCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXConstructorCallRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXConstructorCall=ruleXConstructorCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXConstructorCall; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXConstructorCall"


    // $ANTLR start "ruleXConstructorCall"
    // InternalCheckerDsl.g:9257:1: ruleXConstructorCall returns [EObject current=null] : ( () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>' )? ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')' )? ( ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure ) )? ) ;
    public final EObject ruleXConstructorCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token lv_explicitConstructorCall_8_0=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        EObject lv_typeArguments_4_0 = null;

        EObject lv_typeArguments_6_0 = null;

        EObject lv_arguments_9_0 = null;

        EObject lv_arguments_10_0 = null;

        EObject lv_arguments_12_0 = null;

        EObject lv_arguments_14_0 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:9263:2: ( ( () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>' )? ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')' )? ( ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure ) )? ) )
            // InternalCheckerDsl.g:9264:2: ( () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>' )? ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')' )? ( ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure ) )? )
            {
            // InternalCheckerDsl.g:9264:2: ( () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>' )? ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')' )? ( ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure ) )? )
            // InternalCheckerDsl.g:9265:3: () otherlv_1= 'new' ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>' )? ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')' )? ( ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure ) )?
            {
            // InternalCheckerDsl.g:9265:3: ()
            // InternalCheckerDsl.g:9266:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXConstructorCallAccess().getXConstructorCallAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,133,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXConstructorCallAccess().getNewKeyword_1());
              		
            }
            // InternalCheckerDsl.g:9276:3: ( ( ruleQualifiedName ) )
            // InternalCheckerDsl.g:9277:4: ( ruleQualifiedName )
            {
            // InternalCheckerDsl.g:9277:4: ( ruleQualifiedName )
            // InternalCheckerDsl.g:9278:5: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getXConstructorCallRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXConstructorCallAccess().getConstructorJvmConstructorCrossReference_2_0());
              				
            }
            pushFollow(FOLLOW_101);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalCheckerDsl.g:9292:3: ( ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>' )?
            int alt142=2;
            alt142 = dfa142.predict(input);
            switch (alt142) {
                case 1 :
                    // InternalCheckerDsl.g:9293:4: ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>'
                    {
                    // InternalCheckerDsl.g:9293:4: ( ( '<' )=>otherlv_3= '<' )
                    // InternalCheckerDsl.g:9294:5: ( '<' )=>otherlv_3= '<'
                    {
                    otherlv_3=(Token)match(input,46,FOLLOW_72); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getXConstructorCallAccess().getLessThanSignKeyword_3_0());
                      				
                    }

                    }

                    // InternalCheckerDsl.g:9300:4: ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) )
                    // InternalCheckerDsl.g:9301:5: (lv_typeArguments_4_0= ruleJvmArgumentTypeReference )
                    {
                    // InternalCheckerDsl.g:9301:5: (lv_typeArguments_4_0= ruleJvmArgumentTypeReference )
                    // InternalCheckerDsl.g:9302:6: lv_typeArguments_4_0= ruleJvmArgumentTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXConstructorCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_34);
                    lv_typeArguments_4_0=ruleJvmArgumentTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                      						}
                      						add(
                      							current,
                      							"typeArguments",
                      							lv_typeArguments_4_0,
                      							"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalCheckerDsl.g:9319:4: (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )*
                    loop141:
                    do {
                        int alt141=2;
                        int LA141_0 = input.LA(1);

                        if ( (LA141_0==20) ) {
                            alt141=1;
                        }


                        switch (alt141) {
                    	case 1 :
                    	    // InternalCheckerDsl.g:9320:5: otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) )
                    	    {
                    	    otherlv_5=(Token)match(input,20,FOLLOW_72); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_5, grammarAccess.getXConstructorCallAccess().getCommaKeyword_3_2_0());
                    	      				
                    	    }
                    	    // InternalCheckerDsl.g:9324:5: ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) )
                    	    // InternalCheckerDsl.g:9325:6: (lv_typeArguments_6_0= ruleJvmArgumentTypeReference )
                    	    {
                    	    // InternalCheckerDsl.g:9325:6: (lv_typeArguments_6_0= ruleJvmArgumentTypeReference )
                    	    // InternalCheckerDsl.g:9326:7: lv_typeArguments_6_0= ruleJvmArgumentTypeReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getXConstructorCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_3_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_34);
                    	    lv_typeArguments_6_0=ruleJvmArgumentTypeReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"typeArguments",
                    	      								lv_typeArguments_6_0,
                    	      								"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop141;
                        }
                    } while (true);

                    otherlv_7=(Token)match(input,47,FOLLOW_100); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getXConstructorCallAccess().getGreaterThanSignKeyword_3_3());
                      			
                    }

                    }
                    break;

            }

            // InternalCheckerDsl.g:9349:3: ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')' )?
            int alt145=2;
            alt145 = dfa145.predict(input);
            switch (alt145) {
                case 1 :
                    // InternalCheckerDsl.g:9350:4: ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')'
                    {
                    // InternalCheckerDsl.g:9350:4: ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) )
                    // InternalCheckerDsl.g:9351:5: ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' )
                    {
                    // InternalCheckerDsl.g:9355:5: (lv_explicitConstructorCall_8_0= '(' )
                    // InternalCheckerDsl.g:9356:6: lv_explicitConstructorCall_8_0= '('
                    {
                    lv_explicitConstructorCall_8_0=(Token)match(input,19,FOLLOW_74); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_explicitConstructorCall_8_0, grammarAccess.getXConstructorCallAccess().getExplicitConstructorCallLeftParenthesisKeyword_4_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getXConstructorCallRule());
                      						}
                      						setWithLastConsumed(current, "explicitConstructorCall", lv_explicitConstructorCall_8_0 != null, "(");
                      					
                    }

                    }


                    }

                    // InternalCheckerDsl.g:9368:4: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )?
                    int alt144=3;
                    alt144 = dfa144.predict(input);
                    switch (alt144) {
                        case 1 :
                            // InternalCheckerDsl.g:9369:5: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) )
                            {
                            // InternalCheckerDsl.g:9369:5: ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) )
                            // InternalCheckerDsl.g:9370:6: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure )
                            {
                            // InternalCheckerDsl.g:9395:6: (lv_arguments_9_0= ruleXShortClosure )
                            // InternalCheckerDsl.g:9396:7: lv_arguments_9_0= ruleXShortClosure
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXShortClosureParserRuleCall_4_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_15);
                            lv_arguments_9_0=ruleXShortClosure();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                              							}
                              							add(
                              								current,
                              								"arguments",
                              								lv_arguments_9_0,
                              								"org.eclipse.xtext.xbase.Xbase.XShortClosure");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalCheckerDsl.g:9414:5: ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* )
                            {
                            // InternalCheckerDsl.g:9414:5: ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* )
                            // InternalCheckerDsl.g:9415:6: ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )*
                            {
                            // InternalCheckerDsl.g:9415:6: ( (lv_arguments_10_0= ruleXExpression ) )
                            // InternalCheckerDsl.g:9416:7: (lv_arguments_10_0= ruleXExpression )
                            {
                            // InternalCheckerDsl.g:9416:7: (lv_arguments_10_0= ruleXExpression )
                            // InternalCheckerDsl.g:9417:8: lv_arguments_10_0= ruleXExpression
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXExpressionParserRuleCall_4_1_1_0_0());
                              							
                            }
                            pushFollow(FOLLOW_12);
                            lv_arguments_10_0=ruleXExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                              								}
                              								add(
                              									current,
                              									"arguments",
                              									lv_arguments_10_0,
                              									"org.eclipse.xtext.xbase.Xbase.XExpression");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalCheckerDsl.g:9434:6: (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )*
                            loop143:
                            do {
                                int alt143=2;
                                int LA143_0 = input.LA(1);

                                if ( (LA143_0==20) ) {
                                    alt143=1;
                                }


                                switch (alt143) {
                            	case 1 :
                            	    // InternalCheckerDsl.g:9435:7: otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) )
                            	    {
                            	    otherlv_11=(Token)match(input,20,FOLLOW_54); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_11, grammarAccess.getXConstructorCallAccess().getCommaKeyword_4_1_1_1_0());
                            	      						
                            	    }
                            	    // InternalCheckerDsl.g:9439:7: ( (lv_arguments_12_0= ruleXExpression ) )
                            	    // InternalCheckerDsl.g:9440:8: (lv_arguments_12_0= ruleXExpression )
                            	    {
                            	    // InternalCheckerDsl.g:9440:8: (lv_arguments_12_0= ruleXExpression )
                            	    // InternalCheckerDsl.g:9441:9: lv_arguments_12_0= ruleXExpression
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXExpressionParserRuleCall_4_1_1_1_1_0());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_12);
                            	    lv_arguments_12_0=ruleXExpression();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"arguments",
                            	      										lv_arguments_12_0,
                            	      										"org.eclipse.xtext.xbase.Xbase.XExpression");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop143;
                                }
                            } while (true);


                            }


                            }
                            break;

                    }

                    otherlv_13=(Token)match(input,21,FOLLOW_32); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getXConstructorCallAccess().getRightParenthesisKeyword_4_2());
                      			
                    }

                    }
                    break;

            }

            // InternalCheckerDsl.g:9466:3: ( ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure ) )?
            int alt146=2;
            alt146 = dfa146.predict(input);
            switch (alt146) {
                case 1 :
                    // InternalCheckerDsl.g:9467:4: ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure )
                    {
                    // InternalCheckerDsl.g:9473:4: (lv_arguments_14_0= ruleXClosure )
                    // InternalCheckerDsl.g:9474:5: lv_arguments_14_0= ruleXClosure
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXClosureParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_arguments_14_0=ruleXClosure();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
                      					}
                      					add(
                      						current,
                      						"arguments",
                      						lv_arguments_14_0,
                      						"org.eclipse.xtext.xbase.Xbase.XClosure");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXConstructorCall"


    // $ANTLR start "entryRuleXBooleanLiteral"
    // InternalCheckerDsl.g:9495:1: entryRuleXBooleanLiteral returns [EObject current=null] : iv_ruleXBooleanLiteral= ruleXBooleanLiteral EOF ;
    public final EObject entryRuleXBooleanLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXBooleanLiteral = null;


        try {
            // InternalCheckerDsl.g:9495:56: (iv_ruleXBooleanLiteral= ruleXBooleanLiteral EOF )
            // InternalCheckerDsl.g:9496:2: iv_ruleXBooleanLiteral= ruleXBooleanLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXBooleanLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXBooleanLiteral=ruleXBooleanLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXBooleanLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXBooleanLiteral"


    // $ANTLR start "ruleXBooleanLiteral"
    // InternalCheckerDsl.g:9502:1: ruleXBooleanLiteral returns [EObject current=null] : ( () (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) ) ) ;
    public final EObject ruleXBooleanLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_isTrue_2_0=null;


        	enterRule();

        try {
            // InternalCheckerDsl.g:9508:2: ( ( () (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) ) ) )
            // InternalCheckerDsl.g:9509:2: ( () (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) ) )
            {
            // InternalCheckerDsl.g:9509:2: ( () (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) ) )
            // InternalCheckerDsl.g:9510:3: () (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) )
            {
            // InternalCheckerDsl.g:9510:3: ()
            // InternalCheckerDsl.g:9511:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXBooleanLiteralAccess().getXBooleanLiteralAction_0(),
              					current);
              			
            }

            }

            // InternalCheckerDsl.g:9517:3: (otherlv_1= 'false' | ( (lv_isTrue_2_0= 'true' ) ) )
            int alt147=2;
            int LA147_0 = input.LA(1);

            if ( (LA147_0==134) ) {
                alt147=1;
            }
            else if ( (LA147_0==135) ) {
                alt147=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 147, 0, input);

                throw nvae;
            }
            switch (alt147) {
                case 1 :
                    // InternalCheckerDsl.g:9518:4: otherlv_1= 'false'
                    {
                    otherlv_1=(Token)match(input,134,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getXBooleanLiteralAccess().getFalseKeyword_1_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalCheckerDsl.g:9523:4: ( (lv_isTrue_2_0= 'true' ) )
                    {
                    // InternalCheckerDsl.g:9523:4: ( (lv_isTrue_2_0= 'true' ) )
                    // InternalCheckerDsl.g:9524:5: (lv_isTrue_2_0= 'true' )
                    {
                    // InternalCheckerDsl.g:9524:5: (lv_isTrue_2_0= 'true' )
                    // InternalCheckerDsl.g:9525:6: lv_isTrue_2_0= 'true'
                    {
                    lv_isTrue_2_0=(Token)match(input,135,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_isTrue_2_0, grammarAccess.getXBooleanLiteralAccess().getIsTrueTrueKeyword_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getXBooleanLiteralRule());
                      						}
                      						setWithLastConsumed(current, "isTrue", lv_isTrue_2_0 != null, "true");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXBooleanLiteral"


    // $ANTLR start "entryRuleXNullLiteral"
    // InternalCheckerDsl.g:9542:1: entryRuleXNullLiteral returns [EObject current=null] : iv_ruleXNullLiteral= ruleXNullLiteral EOF ;
    public final EObject entryRuleXNullLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXNullLiteral = null;


        try {
            // InternalCheckerDsl.g:9542:53: (iv_ruleXNullLiteral= ruleXNullLiteral EOF )
            // InternalCheckerDsl.g:9543:2: iv_ruleXNullLiteral= ruleXNullLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXNullLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXNullLiteral=ruleXNullLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXNullLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXNullLiteral"


    // $ANTLR start "ruleXNullLiteral"
    // InternalCheckerDsl.g:9549:1: ruleXNullLiteral returns [EObject current=null] : ( () otherlv_1= 'null' ) ;
    public final EObject ruleXNullLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;


        	enterRule();

        try {
            // InternalCheckerDsl.g:9555:2: ( ( () otherlv_1= 'null' ) )
            // InternalCheckerDsl.g:9556:2: ( () otherlv_1= 'null' )
            {
            // InternalCheckerDsl.g:9556:2: ( () otherlv_1= 'null' )
            // InternalCheckerDsl.g:9557:3: () otherlv_1= 'null'
            {
            // InternalCheckerDsl.g:9557:3: ()
            // InternalCheckerDsl.g:9558:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXNullLiteralAccess().getXNullLiteralAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,136,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXNullLiteralAccess().getNullKeyword_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXNullLiteral"


    // $ANTLR start "entryRuleXNumberLiteral"
    // InternalCheckerDsl.g:9572:1: entryRuleXNumberLiteral returns [EObject current=null] : iv_ruleXNumberLiteral= ruleXNumberLiteral EOF ;
    public final EObject entryRuleXNumberLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXNumberLiteral = null;


        try {
            // InternalCheckerDsl.g:9572:55: (iv_ruleXNumberLiteral= ruleXNumberLiteral EOF )
            // InternalCheckerDsl.g:9573:2: iv_ruleXNumberLiteral= ruleXNumberLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXNumberLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXNumberLiteral=ruleXNumberLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXNumberLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXNumberLiteral"


    // $ANTLR start "ruleXNumberLiteral"
    // InternalCheckerDsl.g:9579:1: ruleXNumberLiteral returns [EObject current=null] : ( () ( (lv_value_1_0= ruleNumber ) ) ) ;
    public final EObject ruleXNumberLiteral() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_value_1_0 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:9585:2: ( ( () ( (lv_value_1_0= ruleNumber ) ) ) )
            // InternalCheckerDsl.g:9586:2: ( () ( (lv_value_1_0= ruleNumber ) ) )
            {
            // InternalCheckerDsl.g:9586:2: ( () ( (lv_value_1_0= ruleNumber ) ) )
            // InternalCheckerDsl.g:9587:3: () ( (lv_value_1_0= ruleNumber ) )
            {
            // InternalCheckerDsl.g:9587:3: ()
            // InternalCheckerDsl.g:9588:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXNumberLiteralAccess().getXNumberLiteralAction_0(),
              					current);
              			
            }

            }

            // InternalCheckerDsl.g:9594:3: ( (lv_value_1_0= ruleNumber ) )
            // InternalCheckerDsl.g:9595:4: (lv_value_1_0= ruleNumber )
            {
            // InternalCheckerDsl.g:9595:4: (lv_value_1_0= ruleNumber )
            // InternalCheckerDsl.g:9596:5: lv_value_1_0= ruleNumber
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXNumberLiteralAccess().getValueNumberParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_value_1_0=ruleNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXNumberLiteralRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_1_0,
              						"org.eclipse.xtext.xbase.Xbase.Number");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXNumberLiteral"


    // $ANTLR start "entryRuleXStringLiteral"
    // InternalCheckerDsl.g:9617:1: entryRuleXStringLiteral returns [EObject current=null] : iv_ruleXStringLiteral= ruleXStringLiteral EOF ;
    public final EObject entryRuleXStringLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXStringLiteral = null;


        try {
            // InternalCheckerDsl.g:9617:55: (iv_ruleXStringLiteral= ruleXStringLiteral EOF )
            // InternalCheckerDsl.g:9618:2: iv_ruleXStringLiteral= ruleXStringLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXStringLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXStringLiteral=ruleXStringLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXStringLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXStringLiteral"


    // $ANTLR start "ruleXStringLiteral"
    // InternalCheckerDsl.g:9624:1: ruleXStringLiteral returns [EObject current=null] : ( () ( (lv_value_1_0= RULE_STRING ) ) ) ;
    public final EObject ruleXStringLiteral() throws RecognitionException {
        EObject current = null;

        Token lv_value_1_0=null;


        	enterRule();

        try {
            // InternalCheckerDsl.g:9630:2: ( ( () ( (lv_value_1_0= RULE_STRING ) ) ) )
            // InternalCheckerDsl.g:9631:2: ( () ( (lv_value_1_0= RULE_STRING ) ) )
            {
            // InternalCheckerDsl.g:9631:2: ( () ( (lv_value_1_0= RULE_STRING ) ) )
            // InternalCheckerDsl.g:9632:3: () ( (lv_value_1_0= RULE_STRING ) )
            {
            // InternalCheckerDsl.g:9632:3: ()
            // InternalCheckerDsl.g:9633:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXStringLiteralAccess().getXStringLiteralAction_0(),
              					current);
              			
            }

            }

            // InternalCheckerDsl.g:9639:3: ( (lv_value_1_0= RULE_STRING ) )
            // InternalCheckerDsl.g:9640:4: (lv_value_1_0= RULE_STRING )
            {
            // InternalCheckerDsl.g:9640:4: (lv_value_1_0= RULE_STRING )
            // InternalCheckerDsl.g:9641:5: lv_value_1_0= RULE_STRING
            {
            lv_value_1_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_value_1_0, grammarAccess.getXStringLiteralAccess().getValueSTRINGTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getXStringLiteralRule());
              					}
              					setWithLastConsumed(
              						current,
              						"value",
              						lv_value_1_0,
              						"org.eclipse.xtext.xbase.Xtype.STRING");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXStringLiteral"


    // $ANTLR start "entryRuleXTypeLiteral"
    // InternalCheckerDsl.g:9661:1: entryRuleXTypeLiteral returns [EObject current=null] : iv_ruleXTypeLiteral= ruleXTypeLiteral EOF ;
    public final EObject entryRuleXTypeLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXTypeLiteral = null;


        try {
            // InternalCheckerDsl.g:9661:53: (iv_ruleXTypeLiteral= ruleXTypeLiteral EOF )
            // InternalCheckerDsl.g:9662:2: iv_ruleXTypeLiteral= ruleXTypeLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXTypeLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXTypeLiteral=ruleXTypeLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXTypeLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXTypeLiteral"


    // $ANTLR start "ruleXTypeLiteral"
    // InternalCheckerDsl.g:9668:1: ruleXTypeLiteral returns [EObject current=null] : ( () otherlv_1= 'typeof' otherlv_2= '(' ( ( ruleQualifiedName ) ) ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )* otherlv_5= ')' ) ;
    public final EObject ruleXTypeLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        AntlrDatatypeRuleToken lv_arrayDimensions_4_0 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:9674:2: ( ( () otherlv_1= 'typeof' otherlv_2= '(' ( ( ruleQualifiedName ) ) ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )* otherlv_5= ')' ) )
            // InternalCheckerDsl.g:9675:2: ( () otherlv_1= 'typeof' otherlv_2= '(' ( ( ruleQualifiedName ) ) ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )* otherlv_5= ')' )
            {
            // InternalCheckerDsl.g:9675:2: ( () otherlv_1= 'typeof' otherlv_2= '(' ( ( ruleQualifiedName ) ) ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )* otherlv_5= ')' )
            // InternalCheckerDsl.g:9676:3: () otherlv_1= 'typeof' otherlv_2= '(' ( ( ruleQualifiedName ) ) ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )* otherlv_5= ')'
            {
            // InternalCheckerDsl.g:9676:3: ()
            // InternalCheckerDsl.g:9677:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXTypeLiteralAccess().getXTypeLiteralAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,137,FOLLOW_10); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXTypeLiteralAccess().getTypeofKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,19,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getXTypeLiteralAccess().getLeftParenthesisKeyword_2());
              		
            }
            // InternalCheckerDsl.g:9691:3: ( ( ruleQualifiedName ) )
            // InternalCheckerDsl.g:9692:4: ( ruleQualifiedName )
            {
            // InternalCheckerDsl.g:9692:4: ( ruleQualifiedName )
            // InternalCheckerDsl.g:9693:5: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getXTypeLiteralRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXTypeLiteralAccess().getTypeJvmTypeCrossReference_3_0());
              				
            }
            pushFollow(FOLLOW_102);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalCheckerDsl.g:9707:3: ( (lv_arrayDimensions_4_0= ruleArrayBrackets ) )*
            loop148:
            do {
                int alt148=2;
                int LA148_0 = input.LA(1);

                if ( (LA148_0==27) ) {
                    alt148=1;
                }


                switch (alt148) {
            	case 1 :
            	    // InternalCheckerDsl.g:9708:4: (lv_arrayDimensions_4_0= ruleArrayBrackets )
            	    {
            	    // InternalCheckerDsl.g:9708:4: (lv_arrayDimensions_4_0= ruleArrayBrackets )
            	    // InternalCheckerDsl.g:9709:5: lv_arrayDimensions_4_0= ruleArrayBrackets
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getXTypeLiteralAccess().getArrayDimensionsArrayBracketsParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_102);
            	    lv_arrayDimensions_4_0=ruleArrayBrackets();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getXTypeLiteralRule());
            	      					}
            	      					add(
            	      						current,
            	      						"arrayDimensions",
            	      						lv_arrayDimensions_4_0,
            	      						"org.eclipse.xtext.xbase.Xtype.ArrayBrackets");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop148;
                }
            } while (true);

            otherlv_5=(Token)match(input,21,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getXTypeLiteralAccess().getRightParenthesisKeyword_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXTypeLiteral"


    // $ANTLR start "entryRuleXThrowExpression"
    // InternalCheckerDsl.g:9734:1: entryRuleXThrowExpression returns [EObject current=null] : iv_ruleXThrowExpression= ruleXThrowExpression EOF ;
    public final EObject entryRuleXThrowExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXThrowExpression = null;


        try {
            // InternalCheckerDsl.g:9734:57: (iv_ruleXThrowExpression= ruleXThrowExpression EOF )
            // InternalCheckerDsl.g:9735:2: iv_ruleXThrowExpression= ruleXThrowExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXThrowExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXThrowExpression=ruleXThrowExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXThrowExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXThrowExpression"


    // $ANTLR start "ruleXThrowExpression"
    // InternalCheckerDsl.g:9741:1: ruleXThrowExpression returns [EObject current=null] : ( () otherlv_1= 'throw' ( (lv_expression_2_0= ruleXExpression ) ) ) ;
    public final EObject ruleXThrowExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_expression_2_0 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:9747:2: ( ( () otherlv_1= 'throw' ( (lv_expression_2_0= ruleXExpression ) ) ) )
            // InternalCheckerDsl.g:9748:2: ( () otherlv_1= 'throw' ( (lv_expression_2_0= ruleXExpression ) ) )
            {
            // InternalCheckerDsl.g:9748:2: ( () otherlv_1= 'throw' ( (lv_expression_2_0= ruleXExpression ) ) )
            // InternalCheckerDsl.g:9749:3: () otherlv_1= 'throw' ( (lv_expression_2_0= ruleXExpression ) )
            {
            // InternalCheckerDsl.g:9749:3: ()
            // InternalCheckerDsl.g:9750:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXThrowExpressionAccess().getXThrowExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,138,FOLLOW_54); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXThrowExpressionAccess().getThrowKeyword_1());
              		
            }
            // InternalCheckerDsl.g:9760:3: ( (lv_expression_2_0= ruleXExpression ) )
            // InternalCheckerDsl.g:9761:4: (lv_expression_2_0= ruleXExpression )
            {
            // InternalCheckerDsl.g:9761:4: (lv_expression_2_0= ruleXExpression )
            // InternalCheckerDsl.g:9762:5: lv_expression_2_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXThrowExpressionAccess().getExpressionXExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expression_2_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXThrowExpressionRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_2_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXThrowExpression"


    // $ANTLR start "entryRuleXReturnExpression"
    // InternalCheckerDsl.g:9783:1: entryRuleXReturnExpression returns [EObject current=null] : iv_ruleXReturnExpression= ruleXReturnExpression EOF ;
    public final EObject entryRuleXReturnExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXReturnExpression = null;


        try {
            // InternalCheckerDsl.g:9783:58: (iv_ruleXReturnExpression= ruleXReturnExpression EOF )
            // InternalCheckerDsl.g:9784:2: iv_ruleXReturnExpression= ruleXReturnExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXReturnExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXReturnExpression=ruleXReturnExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXReturnExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXReturnExpression"


    // $ANTLR start "ruleXReturnExpression"
    // InternalCheckerDsl.g:9790:1: ruleXReturnExpression returns [EObject current=null] : ( () otherlv_1= 'return' ( ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | 'synchronized' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )? ) ;
    public final EObject ruleXReturnExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_expression_2_0 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:9796:2: ( ( () otherlv_1= 'return' ( ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | 'synchronized' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )? ) )
            // InternalCheckerDsl.g:9797:2: ( () otherlv_1= 'return' ( ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | 'synchronized' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )? )
            {
            // InternalCheckerDsl.g:9797:2: ( () otherlv_1= 'return' ( ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | 'synchronized' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )? )
            // InternalCheckerDsl.g:9798:3: () otherlv_1= 'return' ( ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | 'synchronized' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )?
            {
            // InternalCheckerDsl.g:9798:3: ()
            // InternalCheckerDsl.g:9799:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXReturnExpressionAccess().getXReturnExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,139,FOLLOW_103); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXReturnExpressionAccess().getReturnKeyword_1());
              		
            }
            // InternalCheckerDsl.g:9809:3: ( ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | 'synchronized' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )?
            int alt149=2;
            alt149 = dfa149.predict(input);
            switch (alt149) {
                case 1 :
                    // InternalCheckerDsl.g:9810:4: ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | 'synchronized' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression )
                    {
                    // InternalCheckerDsl.g:9811:4: (lv_expression_2_0= ruleXExpression )
                    // InternalCheckerDsl.g:9812:5: lv_expression_2_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getXReturnExpressionAccess().getExpressionXExpressionParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_2_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getXReturnExpressionRule());
                      					}
                      					set(
                      						current,
                      						"expression",
                      						lv_expression_2_0,
                      						"org.eclipse.xtext.xbase.Xbase.XExpression");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXReturnExpression"


    // $ANTLR start "entryRuleXTryCatchFinallyExpression"
    // InternalCheckerDsl.g:9833:1: entryRuleXTryCatchFinallyExpression returns [EObject current=null] : iv_ruleXTryCatchFinallyExpression= ruleXTryCatchFinallyExpression EOF ;
    public final EObject entryRuleXTryCatchFinallyExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXTryCatchFinallyExpression = null;


        try {
            // InternalCheckerDsl.g:9833:67: (iv_ruleXTryCatchFinallyExpression= ruleXTryCatchFinallyExpression EOF )
            // InternalCheckerDsl.g:9834:2: iv_ruleXTryCatchFinallyExpression= ruleXTryCatchFinallyExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXTryCatchFinallyExpression=ruleXTryCatchFinallyExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXTryCatchFinallyExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXTryCatchFinallyExpression"


    // $ANTLR start "ruleXTryCatchFinallyExpression"
    // InternalCheckerDsl.g:9840:1: ruleXTryCatchFinallyExpression returns [EObject current=null] : ( () otherlv_1= 'try' ( (lv_expression_2_0= ruleXExpression ) ) ( ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) ) ) ;
    public final EObject ruleXTryCatchFinallyExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_expression_2_0 = null;

        EObject lv_catchClauses_3_0 = null;

        EObject lv_finallyExpression_5_0 = null;

        EObject lv_finallyExpression_7_0 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:9846:2: ( ( () otherlv_1= 'try' ( (lv_expression_2_0= ruleXExpression ) ) ( ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) ) ) )
            // InternalCheckerDsl.g:9847:2: ( () otherlv_1= 'try' ( (lv_expression_2_0= ruleXExpression ) ) ( ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) ) )
            {
            // InternalCheckerDsl.g:9847:2: ( () otherlv_1= 'try' ( (lv_expression_2_0= ruleXExpression ) ) ( ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) ) )
            // InternalCheckerDsl.g:9848:3: () otherlv_1= 'try' ( (lv_expression_2_0= ruleXExpression ) ) ( ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) )
            {
            // InternalCheckerDsl.g:9848:3: ()
            // InternalCheckerDsl.g:9849:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getXTryCatchFinallyExpressionAccess().getXTryCatchFinallyExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,140,FOLLOW_54); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXTryCatchFinallyExpressionAccess().getTryKeyword_1());
              		
            }
            // InternalCheckerDsl.g:9859:3: ( (lv_expression_2_0= ruleXExpression ) )
            // InternalCheckerDsl.g:9860:4: (lv_expression_2_0= ruleXExpression )
            {
            // InternalCheckerDsl.g:9860:4: (lv_expression_2_0= ruleXExpression )
            // InternalCheckerDsl.g:9861:5: lv_expression_2_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getExpressionXExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_104);
            lv_expression_2_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_2_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalCheckerDsl.g:9878:3: ( ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? ) | (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) ) )
            int alt152=2;
            int LA152_0 = input.LA(1);

            if ( (LA152_0==143) ) {
                alt152=1;
            }
            else if ( (LA152_0==141) ) {
                alt152=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 152, 0, input);

                throw nvae;
            }
            switch (alt152) {
                case 1 :
                    // InternalCheckerDsl.g:9879:4: ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? )
                    {
                    // InternalCheckerDsl.g:9879:4: ( ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )? )
                    // InternalCheckerDsl.g:9880:5: ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+ ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )?
                    {
                    // InternalCheckerDsl.g:9880:5: ( ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause ) )+
                    int cnt150=0;
                    loop150:
                    do {
                        int alt150=2;
                        int LA150_0 = input.LA(1);

                        if ( (LA150_0==143) ) {
                            int LA150_2 = input.LA(2);

                            if ( (synpred38_InternalCheckerDsl()) ) {
                                alt150=1;
                            }


                        }


                        switch (alt150) {
                    	case 1 :
                    	    // InternalCheckerDsl.g:9881:6: ( 'catch' )=> (lv_catchClauses_3_0= ruleXCatchClause )
                    	    {
                    	    // InternalCheckerDsl.g:9882:6: (lv_catchClauses_3_0= ruleXCatchClause )
                    	    // InternalCheckerDsl.g:9883:7: lv_catchClauses_3_0= ruleXCatchClause
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getCatchClausesXCatchClauseParserRuleCall_3_0_0_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_105);
                    	    lv_catchClauses_3_0=ruleXCatchClause();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"catchClauses",
                    	      								lv_catchClauses_3_0,
                    	      								"org.eclipse.xtext.xbase.Xbase.XCatchClause");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt150 >= 1 ) break loop150;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(150, input);
                                throw eee;
                        }
                        cnt150++;
                    } while (true);

                    // InternalCheckerDsl.g:9900:5: ( ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) ) )?
                    int alt151=2;
                    int LA151_0 = input.LA(1);

                    if ( (LA151_0==141) ) {
                        int LA151_1 = input.LA(2);

                        if ( (synpred39_InternalCheckerDsl()) ) {
                            alt151=1;
                        }
                    }
                    switch (alt151) {
                        case 1 :
                            // InternalCheckerDsl.g:9901:6: ( ( 'finally' )=>otherlv_4= 'finally' ) ( (lv_finallyExpression_5_0= ruleXExpression ) )
                            {
                            // InternalCheckerDsl.g:9901:6: ( ( 'finally' )=>otherlv_4= 'finally' )
                            // InternalCheckerDsl.g:9902:7: ( 'finally' )=>otherlv_4= 'finally'
                            {
                            otherlv_4=(Token)match(input,141,FOLLOW_54); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_4, grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyKeyword_3_0_1_0());
                              						
                            }

                            }

                            // InternalCheckerDsl.g:9908:6: ( (lv_finallyExpression_5_0= ruleXExpression ) )
                            // InternalCheckerDsl.g:9909:7: (lv_finallyExpression_5_0= ruleXExpression )
                            {
                            // InternalCheckerDsl.g:9909:7: (lv_finallyExpression_5_0= ruleXExpression )
                            // InternalCheckerDsl.g:9910:8: lv_finallyExpression_5_0= ruleXExpression
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyExpressionXExpressionParserRuleCall_3_0_1_1_0());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_finallyExpression_5_0=ruleXExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
                              								}
                              								set(
                              									current,
                              									"finallyExpression",
                              									lv_finallyExpression_5_0,
                              									"org.eclipse.xtext.xbase.Xbase.XExpression");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalCheckerDsl.g:9930:4: (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) )
                    {
                    // InternalCheckerDsl.g:9930:4: (otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) ) )
                    // InternalCheckerDsl.g:9931:5: otherlv_6= 'finally' ( (lv_finallyExpression_7_0= ruleXExpression ) )
                    {
                    otherlv_6=(Token)match(input,141,FOLLOW_54); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyKeyword_3_1_0());
                      				
                    }
                    // InternalCheckerDsl.g:9935:5: ( (lv_finallyExpression_7_0= ruleXExpression ) )
                    // InternalCheckerDsl.g:9936:6: (lv_finallyExpression_7_0= ruleXExpression )
                    {
                    // InternalCheckerDsl.g:9936:6: (lv_finallyExpression_7_0= ruleXExpression )
                    // InternalCheckerDsl.g:9937:7: lv_finallyExpression_7_0= ruleXExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyExpressionXExpressionParserRuleCall_3_1_1_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    lv_finallyExpression_7_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
                      							}
                      							set(
                      								current,
                      								"finallyExpression",
                      								lv_finallyExpression_7_0,
                      								"org.eclipse.xtext.xbase.Xbase.XExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXTryCatchFinallyExpression"


    // $ANTLR start "entryRuleXSynchronizedExpression"
    // InternalCheckerDsl.g:9960:1: entryRuleXSynchronizedExpression returns [EObject current=null] : iv_ruleXSynchronizedExpression= ruleXSynchronizedExpression EOF ;
    public final EObject entryRuleXSynchronizedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXSynchronizedExpression = null;


        try {
            // InternalCheckerDsl.g:9960:64: (iv_ruleXSynchronizedExpression= ruleXSynchronizedExpression EOF )
            // InternalCheckerDsl.g:9961:2: iv_ruleXSynchronizedExpression= ruleXSynchronizedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXSynchronizedExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXSynchronizedExpression=ruleXSynchronizedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXSynchronizedExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXSynchronizedExpression"


    // $ANTLR start "ruleXSynchronizedExpression"
    // InternalCheckerDsl.g:9967:1: ruleXSynchronizedExpression returns [EObject current=null] : ( ( ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' ) ) ( (lv_param_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_expression_5_0= ruleXExpression ) ) ) ;
    public final EObject ruleXSynchronizedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_param_3_0 = null;

        EObject lv_expression_5_0 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:9973:2: ( ( ( ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' ) ) ( (lv_param_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_expression_5_0= ruleXExpression ) ) ) )
            // InternalCheckerDsl.g:9974:2: ( ( ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' ) ) ( (lv_param_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_expression_5_0= ruleXExpression ) ) )
            {
            // InternalCheckerDsl.g:9974:2: ( ( ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' ) ) ( (lv_param_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_expression_5_0= ruleXExpression ) ) )
            // InternalCheckerDsl.g:9975:3: ( ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' ) ) ( (lv_param_3_0= ruleXExpression ) ) otherlv_4= ')' ( (lv_expression_5_0= ruleXExpression ) )
            {
            // InternalCheckerDsl.g:9975:3: ( ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' ) )
            // InternalCheckerDsl.g:9976:4: ( ( () 'synchronized' '(' ) )=> ( () otherlv_1= 'synchronized' otherlv_2= '(' )
            {
            // InternalCheckerDsl.g:9983:4: ( () otherlv_1= 'synchronized' otherlv_2= '(' )
            // InternalCheckerDsl.g:9984:5: () otherlv_1= 'synchronized' otherlv_2= '('
            {
            // InternalCheckerDsl.g:9984:5: ()
            // InternalCheckerDsl.g:9985:6: 
            {
            if ( state.backtracking==0 ) {

              						current = forceCreateModelElement(
              							grammarAccess.getXSynchronizedExpressionAccess().getXSynchronizedExpressionAction_0_0_0(),
              							current);
              					
            }

            }

            otherlv_1=(Token)match(input,142,FOLLOW_10); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_1, grammarAccess.getXSynchronizedExpressionAccess().getSynchronizedKeyword_0_0_1());
              				
            }
            otherlv_2=(Token)match(input,19,FOLLOW_54); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_2, grammarAccess.getXSynchronizedExpressionAccess().getLeftParenthesisKeyword_0_0_2());
              				
            }

            }


            }

            // InternalCheckerDsl.g:10001:3: ( (lv_param_3_0= ruleXExpression ) )
            // InternalCheckerDsl.g:10002:4: (lv_param_3_0= ruleXExpression )
            {
            // InternalCheckerDsl.g:10002:4: (lv_param_3_0= ruleXExpression )
            // InternalCheckerDsl.g:10003:5: lv_param_3_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXSynchronizedExpressionAccess().getParamXExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_15);
            lv_param_3_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXSynchronizedExpressionRule());
              					}
              					set(
              						current,
              						"param",
              						lv_param_3_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,21,FOLLOW_54); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getXSynchronizedExpressionAccess().getRightParenthesisKeyword_2());
              		
            }
            // InternalCheckerDsl.g:10024:3: ( (lv_expression_5_0= ruleXExpression ) )
            // InternalCheckerDsl.g:10025:4: (lv_expression_5_0= ruleXExpression )
            {
            // InternalCheckerDsl.g:10025:4: (lv_expression_5_0= ruleXExpression )
            // InternalCheckerDsl.g:10026:5: lv_expression_5_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXSynchronizedExpressionAccess().getExpressionXExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expression_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXSynchronizedExpressionRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_5_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXSynchronizedExpression"


    // $ANTLR start "entryRuleXCatchClause"
    // InternalCheckerDsl.g:10047:1: entryRuleXCatchClause returns [EObject current=null] : iv_ruleXCatchClause= ruleXCatchClause EOF ;
    public final EObject entryRuleXCatchClause() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXCatchClause = null;


        try {
            // InternalCheckerDsl.g:10047:53: (iv_ruleXCatchClause= ruleXCatchClause EOF )
            // InternalCheckerDsl.g:10048:2: iv_ruleXCatchClause= ruleXCatchClause EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXCatchClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXCatchClause=ruleXCatchClause();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXCatchClause; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXCatchClause"


    // $ANTLR start "ruleXCatchClause"
    // InternalCheckerDsl.g:10054:1: ruleXCatchClause returns [EObject current=null] : ( ( ( 'catch' )=>otherlv_0= 'catch' ) otherlv_1= '(' ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) ) otherlv_3= ')' ( (lv_expression_4_0= ruleXExpression ) ) ) ;
    public final EObject ruleXCatchClause() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_declaredParam_2_0 = null;

        EObject lv_expression_4_0 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:10060:2: ( ( ( ( 'catch' )=>otherlv_0= 'catch' ) otherlv_1= '(' ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) ) otherlv_3= ')' ( (lv_expression_4_0= ruleXExpression ) ) ) )
            // InternalCheckerDsl.g:10061:2: ( ( ( 'catch' )=>otherlv_0= 'catch' ) otherlv_1= '(' ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) ) otherlv_3= ')' ( (lv_expression_4_0= ruleXExpression ) ) )
            {
            // InternalCheckerDsl.g:10061:2: ( ( ( 'catch' )=>otherlv_0= 'catch' ) otherlv_1= '(' ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) ) otherlv_3= ')' ( (lv_expression_4_0= ruleXExpression ) ) )
            // InternalCheckerDsl.g:10062:3: ( ( 'catch' )=>otherlv_0= 'catch' ) otherlv_1= '(' ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) ) otherlv_3= ')' ( (lv_expression_4_0= ruleXExpression ) )
            {
            // InternalCheckerDsl.g:10062:3: ( ( 'catch' )=>otherlv_0= 'catch' )
            // InternalCheckerDsl.g:10063:4: ( 'catch' )=>otherlv_0= 'catch'
            {
            otherlv_0=(Token)match(input,143,FOLLOW_10); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_0, grammarAccess.getXCatchClauseAccess().getCatchKeyword_0());
              			
            }

            }

            otherlv_1=(Token)match(input,19,FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getXCatchClauseAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalCheckerDsl.g:10073:3: ( (lv_declaredParam_2_0= ruleFullJvmFormalParameter ) )
            // InternalCheckerDsl.g:10074:4: (lv_declaredParam_2_0= ruleFullJvmFormalParameter )
            {
            // InternalCheckerDsl.g:10074:4: (lv_declaredParam_2_0= ruleFullJvmFormalParameter )
            // InternalCheckerDsl.g:10075:5: lv_declaredParam_2_0= ruleFullJvmFormalParameter
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXCatchClauseAccess().getDeclaredParamFullJvmFormalParameterParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_15);
            lv_declaredParam_2_0=ruleFullJvmFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXCatchClauseRule());
              					}
              					set(
              						current,
              						"declaredParam",
              						lv_declaredParam_2_0,
              						"org.eclipse.xtext.xbase.Xbase.FullJvmFormalParameter");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,21,FOLLOW_54); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getXCatchClauseAccess().getRightParenthesisKeyword_3());
              		
            }
            // InternalCheckerDsl.g:10096:3: ( (lv_expression_4_0= ruleXExpression ) )
            // InternalCheckerDsl.g:10097:4: (lv_expression_4_0= ruleXExpression )
            {
            // InternalCheckerDsl.g:10097:4: (lv_expression_4_0= ruleXExpression )
            // InternalCheckerDsl.g:10098:5: lv_expression_4_0= ruleXExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXCatchClauseAccess().getExpressionXExpressionParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expression_4_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXCatchClauseRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_4_0,
              						"org.eclipse.xtext.xbase.Xbase.XExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXCatchClause"


    // $ANTLR start "entryRuleQualifiedName"
    // InternalCheckerDsl.g:10119:1: entryRuleQualifiedName returns [String current=null] : iv_ruleQualifiedName= ruleQualifiedName EOF ;
    public final String entryRuleQualifiedName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQualifiedName = null;


        try {
            // InternalCheckerDsl.g:10119:53: (iv_ruleQualifiedName= ruleQualifiedName EOF )
            // InternalCheckerDsl.g:10120:2: iv_ruleQualifiedName= ruleQualifiedName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQualifiedNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleQualifiedName=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQualifiedName.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQualifiedName"


    // $ANTLR start "ruleQualifiedName"
    // InternalCheckerDsl.g:10126:1: ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ValidID_0= ruleValidID ( ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID )* ) ;
    public final AntlrDatatypeRuleToken ruleQualifiedName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_ValidID_0 = null;

        AntlrDatatypeRuleToken this_ValidID_2 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:10132:2: ( (this_ValidID_0= ruleValidID ( ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID )* ) )
            // InternalCheckerDsl.g:10133:2: (this_ValidID_0= ruleValidID ( ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID )* )
            {
            // InternalCheckerDsl.g:10133:2: (this_ValidID_0= ruleValidID ( ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID )* )
            // InternalCheckerDsl.g:10134:3: this_ValidID_0= ruleValidID ( ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_106);
            this_ValidID_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_ValidID_0);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            // InternalCheckerDsl.g:10144:3: ( ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID )*
            loop153:
            do {
                int alt153=2;
                int LA153_0 = input.LA(1);

                if ( (LA153_0==44) ) {
                    int LA153_2 = input.LA(2);

                    if ( (LA153_2==RULE_ID) ) {
                        int LA153_3 = input.LA(3);

                        if ( (synpred42_InternalCheckerDsl()) ) {
                            alt153=1;
                        }


                    }


                }


                switch (alt153) {
            	case 1 :
            	    // InternalCheckerDsl.g:10145:4: ( ( '.' )=>kw= '.' ) this_ValidID_2= ruleValidID
            	    {
            	    // InternalCheckerDsl.g:10145:4: ( ( '.' )=>kw= '.' )
            	    // InternalCheckerDsl.g:10146:5: ( '.' )=>kw= '.'
            	    {
            	    kw=(Token)match(input,44,FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					current.merge(kw);
            	      					newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0());
            	      				
            	    }

            	    }

            	    if ( state.backtracking==0 ) {

            	      				newCompositeNode(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_1_1());
            	      			
            	    }
            	    pushFollow(FOLLOW_106);
            	    this_ValidID_2=ruleValidID();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(this_ValidID_2);
            	      			
            	    }
            	    if ( state.backtracking==0 ) {

            	      				afterParserOrEnumRuleCall();
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop153;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQualifiedName"


    // $ANTLR start "entryRuleNumber"
    // InternalCheckerDsl.g:10168:1: entryRuleNumber returns [String current=null] : iv_ruleNumber= ruleNumber EOF ;
    public final String entryRuleNumber() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleNumber = null;



        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalCheckerDsl.g:10170:2: (iv_ruleNumber= ruleNumber EOF )
            // InternalCheckerDsl.g:10171:2: iv_ruleNumber= ruleNumber EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNumberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNumber=ruleNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNumber.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleNumber"


    // $ANTLR start "ruleNumber"
    // InternalCheckerDsl.g:10180:1: ruleNumber returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_HEX_0= RULE_HEX | ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? ) ) ;
    public final AntlrDatatypeRuleToken ruleNumber() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_HEX_0=null;
        Token this_INT_1=null;
        Token this_DECIMAL_2=null;
        Token kw=null;
        Token this_INT_4=null;
        Token this_DECIMAL_5=null;


        	enterRule();
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalCheckerDsl.g:10187:2: ( (this_HEX_0= RULE_HEX | ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? ) ) )
            // InternalCheckerDsl.g:10188:2: (this_HEX_0= RULE_HEX | ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? ) )
            {
            // InternalCheckerDsl.g:10188:2: (this_HEX_0= RULE_HEX | ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? ) )
            int alt157=2;
            int LA157_0 = input.LA(1);

            if ( (LA157_0==RULE_HEX) ) {
                alt157=1;
            }
            else if ( (LA157_0==RULE_INT||LA157_0==RULE_DECIMAL) ) {
                alt157=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 157, 0, input);

                throw nvae;
            }
            switch (alt157) {
                case 1 :
                    // InternalCheckerDsl.g:10189:3: this_HEX_0= RULE_HEX
                    {
                    this_HEX_0=(Token)match(input,RULE_HEX,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_HEX_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_HEX_0, grammarAccess.getNumberAccess().getHEXTerminalRuleCall_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalCheckerDsl.g:10197:3: ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? )
                    {
                    // InternalCheckerDsl.g:10197:3: ( (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )? )
                    // InternalCheckerDsl.g:10198:4: (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL ) (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )?
                    {
                    // InternalCheckerDsl.g:10198:4: (this_INT_1= RULE_INT | this_DECIMAL_2= RULE_DECIMAL )
                    int alt154=2;
                    int LA154_0 = input.LA(1);

                    if ( (LA154_0==RULE_INT) ) {
                        alt154=1;
                    }
                    else if ( (LA154_0==RULE_DECIMAL) ) {
                        alt154=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 154, 0, input);

                        throw nvae;
                    }
                    switch (alt154) {
                        case 1 :
                            // InternalCheckerDsl.g:10199:5: this_INT_1= RULE_INT
                            {
                            this_INT_1=(Token)match(input,RULE_INT,FOLLOW_106); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_INT_1);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					newLeafNode(this_INT_1, grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_0_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalCheckerDsl.g:10207:5: this_DECIMAL_2= RULE_DECIMAL
                            {
                            this_DECIMAL_2=(Token)match(input,RULE_DECIMAL,FOLLOW_106); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_DECIMAL_2);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					newLeafNode(this_DECIMAL_2, grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_0_1());
                              				
                            }

                            }
                            break;

                    }

                    // InternalCheckerDsl.g:10215:4: (kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL ) )?
                    int alt156=2;
                    int LA156_0 = input.LA(1);

                    if ( (LA156_0==44) ) {
                        int LA156_1 = input.LA(2);

                        if ( (LA156_1==RULE_INT||LA156_1==RULE_DECIMAL) ) {
                            alt156=1;
                        }
                    }
                    switch (alt156) {
                        case 1 :
                            // InternalCheckerDsl.g:10216:5: kw= '.' (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL )
                            {
                            kw=(Token)match(input,44,FOLLOW_107); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getNumberAccess().getFullStopKeyword_1_1_0());
                              				
                            }
                            // InternalCheckerDsl.g:10221:5: (this_INT_4= RULE_INT | this_DECIMAL_5= RULE_DECIMAL )
                            int alt155=2;
                            int LA155_0 = input.LA(1);

                            if ( (LA155_0==RULE_INT) ) {
                                alt155=1;
                            }
                            else if ( (LA155_0==RULE_DECIMAL) ) {
                                alt155=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 155, 0, input);

                                throw nvae;
                            }
                            switch (alt155) {
                                case 1 :
                                    // InternalCheckerDsl.g:10222:6: this_INT_4= RULE_INT
                                    {
                                    this_INT_4=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      						current.merge(this_INT_4);
                                      					
                                    }
                                    if ( state.backtracking==0 ) {

                                      						newLeafNode(this_INT_4, grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_1_1_0());
                                      					
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalCheckerDsl.g:10230:6: this_DECIMAL_5= RULE_DECIMAL
                                    {
                                    this_DECIMAL_5=(Token)match(input,RULE_DECIMAL,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      						current.merge(this_DECIMAL_5);
                                      					
                                    }
                                    if ( state.backtracking==0 ) {

                                      						newLeafNode(this_DECIMAL_5, grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_1_1_1());
                                      					
                                    }

                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleNumber"


    // $ANTLR start "entryRuleJvmTypeReference"
    // InternalCheckerDsl.g:10247:1: entryRuleJvmTypeReference returns [EObject current=null] : iv_ruleJvmTypeReference= ruleJvmTypeReference EOF ;
    public final EObject entryRuleJvmTypeReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmTypeReference = null;


        try {
            // InternalCheckerDsl.g:10247:57: (iv_ruleJvmTypeReference= ruleJvmTypeReference EOF )
            // InternalCheckerDsl.g:10248:2: iv_ruleJvmTypeReference= ruleJvmTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmTypeReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmTypeReference=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmTypeReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmTypeReference"


    // $ANTLR start "ruleJvmTypeReference"
    // InternalCheckerDsl.g:10254:1: ruleJvmTypeReference returns [EObject current=null] : ( (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* ) | this_XFunctionTypeRef_3= ruleXFunctionTypeRef ) ;
    public final EObject ruleJvmTypeReference() throws RecognitionException {
        EObject current = null;

        EObject this_JvmParameterizedTypeReference_0 = null;

        EObject this_XFunctionTypeRef_3 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:10260:2: ( ( (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* ) | this_XFunctionTypeRef_3= ruleXFunctionTypeRef ) )
            // InternalCheckerDsl.g:10261:2: ( (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* ) | this_XFunctionTypeRef_3= ruleXFunctionTypeRef )
            {
            // InternalCheckerDsl.g:10261:2: ( (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* ) | this_XFunctionTypeRef_3= ruleXFunctionTypeRef )
            int alt159=2;
            int LA159_0 = input.LA(1);

            if ( (LA159_0==RULE_ID) ) {
                alt159=1;
            }
            else if ( (LA159_0==19||LA159_0==108) ) {
                alt159=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 159, 0, input);

                throw nvae;
            }
            switch (alt159) {
                case 1 :
                    // InternalCheckerDsl.g:10262:3: (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* )
                    {
                    // InternalCheckerDsl.g:10262:3: (this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* )
                    // InternalCheckerDsl.g:10263:4: this_JvmParameterizedTypeReference_0= ruleJvmParameterizedTypeReference ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )*
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getJvmTypeReferenceAccess().getJvmParameterizedTypeReferenceParserRuleCall_0_0());
                      			
                    }
                    pushFollow(FOLLOW_32);
                    this_JvmParameterizedTypeReference_0=ruleJvmParameterizedTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_JvmParameterizedTypeReference_0;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalCheckerDsl.g:10271:4: ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )*
                    loop158:
                    do {
                        int alt158=2;
                        int LA158_0 = input.LA(1);

                        if ( (LA158_0==27) ) {
                            int LA158_2 = input.LA(2);

                            if ( (LA158_2==28) ) {
                                int LA158_3 = input.LA(3);

                                if ( (synpred43_InternalCheckerDsl()) ) {
                                    alt158=1;
                                }


                            }


                        }


                        switch (alt158) {
                    	case 1 :
                    	    // InternalCheckerDsl.g:10272:5: ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets )
                    	    {
                    	    // InternalCheckerDsl.g:10278:5: ( () ruleArrayBrackets )
                    	    // InternalCheckerDsl.g:10279:6: () ruleArrayBrackets
                    	    {
                    	    // InternalCheckerDsl.g:10279:6: ()
                    	    // InternalCheckerDsl.g:10280:7: 
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							current = forceCreateModelElementAndSet(
                    	      								grammarAccess.getJvmTypeReferenceAccess().getJvmGenericArrayTypeReferenceComponentTypeAction_0_1_0_0(),
                    	      								current);
                    	      						
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getJvmTypeReferenceAccess().getArrayBracketsParserRuleCall_0_1_0_1());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_32);
                    	    ruleArrayBrackets();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop158;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // InternalCheckerDsl.g:10297:3: this_XFunctionTypeRef_3= ruleXFunctionTypeRef
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getJvmTypeReferenceAccess().getXFunctionTypeRefParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XFunctionTypeRef_3=ruleXFunctionTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XFunctionTypeRef_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmTypeReference"


    // $ANTLR start "entryRuleArrayBrackets"
    // InternalCheckerDsl.g:10309:1: entryRuleArrayBrackets returns [String current=null] : iv_ruleArrayBrackets= ruleArrayBrackets EOF ;
    public final String entryRuleArrayBrackets() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleArrayBrackets = null;


        try {
            // InternalCheckerDsl.g:10309:53: (iv_ruleArrayBrackets= ruleArrayBrackets EOF )
            // InternalCheckerDsl.g:10310:2: iv_ruleArrayBrackets= ruleArrayBrackets EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArrayBracketsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleArrayBrackets=ruleArrayBrackets();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArrayBrackets.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleArrayBrackets"


    // $ANTLR start "ruleArrayBrackets"
    // InternalCheckerDsl.g:10316:1: ruleArrayBrackets returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '[' kw= ']' ) ;
    public final AntlrDatatypeRuleToken ruleArrayBrackets() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalCheckerDsl.g:10322:2: ( (kw= '[' kw= ']' ) )
            // InternalCheckerDsl.g:10323:2: (kw= '[' kw= ']' )
            {
            // InternalCheckerDsl.g:10323:2: (kw= '[' kw= ']' )
            // InternalCheckerDsl.g:10324:3: kw= '[' kw= ']'
            {
            kw=(Token)match(input,27,FOLLOW_24); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getArrayBracketsAccess().getLeftSquareBracketKeyword_0());
              		
            }
            kw=(Token)match(input,28,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getArrayBracketsAccess().getRightSquareBracketKeyword_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleArrayBrackets"


    // $ANTLR start "entryRuleXFunctionTypeRef"
    // InternalCheckerDsl.g:10338:1: entryRuleXFunctionTypeRef returns [EObject current=null] : iv_ruleXFunctionTypeRef= ruleXFunctionTypeRef EOF ;
    public final EObject entryRuleXFunctionTypeRef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXFunctionTypeRef = null;


        try {
            // InternalCheckerDsl.g:10338:57: (iv_ruleXFunctionTypeRef= ruleXFunctionTypeRef EOF )
            // InternalCheckerDsl.g:10339:2: iv_ruleXFunctionTypeRef= ruleXFunctionTypeRef EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXFunctionTypeRefRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXFunctionTypeRef=ruleXFunctionTypeRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXFunctionTypeRef; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXFunctionTypeRef"


    // $ANTLR start "ruleXFunctionTypeRef"
    // InternalCheckerDsl.g:10345:1: ruleXFunctionTypeRef returns [EObject current=null] : ( (otherlv_0= '(' ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')' )? otherlv_5= '=>' ( (lv_returnType_6_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleXFunctionTypeRef() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        EObject lv_paramTypes_1_0 = null;

        EObject lv_paramTypes_3_0 = null;

        EObject lv_returnType_6_0 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:10351:2: ( ( (otherlv_0= '(' ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')' )? otherlv_5= '=>' ( (lv_returnType_6_0= ruleJvmTypeReference ) ) ) )
            // InternalCheckerDsl.g:10352:2: ( (otherlv_0= '(' ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')' )? otherlv_5= '=>' ( (lv_returnType_6_0= ruleJvmTypeReference ) ) )
            {
            // InternalCheckerDsl.g:10352:2: ( (otherlv_0= '(' ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')' )? otherlv_5= '=>' ( (lv_returnType_6_0= ruleJvmTypeReference ) ) )
            // InternalCheckerDsl.g:10353:3: (otherlv_0= '(' ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')' )? otherlv_5= '=>' ( (lv_returnType_6_0= ruleJvmTypeReference ) )
            {
            // InternalCheckerDsl.g:10353:3: (otherlv_0= '(' ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')' )?
            int alt162=2;
            int LA162_0 = input.LA(1);

            if ( (LA162_0==19) ) {
                alt162=1;
            }
            switch (alt162) {
                case 1 :
                    // InternalCheckerDsl.g:10354:4: otherlv_0= '(' ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )? otherlv_4= ')'
                    {
                    otherlv_0=(Token)match(input,19,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getXFunctionTypeRefAccess().getLeftParenthesisKeyword_0_0());
                      			
                    }
                    // InternalCheckerDsl.g:10358:4: ( ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )* )?
                    int alt161=2;
                    int LA161_0 = input.LA(1);

                    if ( (LA161_0==RULE_ID||LA161_0==19||LA161_0==108) ) {
                        alt161=1;
                    }
                    switch (alt161) {
                        case 1 :
                            // InternalCheckerDsl.g:10359:5: ( (lv_paramTypes_1_0= ruleJvmTypeReference ) ) (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )*
                            {
                            // InternalCheckerDsl.g:10359:5: ( (lv_paramTypes_1_0= ruleJvmTypeReference ) )
                            // InternalCheckerDsl.g:10360:6: (lv_paramTypes_1_0= ruleJvmTypeReference )
                            {
                            // InternalCheckerDsl.g:10360:6: (lv_paramTypes_1_0= ruleJvmTypeReference )
                            // InternalCheckerDsl.g:10361:7: lv_paramTypes_1_0= ruleJvmTypeReference
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getXFunctionTypeRefAccess().getParamTypesJvmTypeReferenceParserRuleCall_0_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_12);
                            lv_paramTypes_1_0=ruleJvmTypeReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getXFunctionTypeRefRule());
                              							}
                              							add(
                              								current,
                              								"paramTypes",
                              								lv_paramTypes_1_0,
                              								"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            // InternalCheckerDsl.g:10378:5: (otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) ) )*
                            loop160:
                            do {
                                int alt160=2;
                                int LA160_0 = input.LA(1);

                                if ( (LA160_0==20) ) {
                                    alt160=1;
                                }


                                switch (alt160) {
                            	case 1 :
                            	    // InternalCheckerDsl.g:10379:6: otherlv_2= ',' ( (lv_paramTypes_3_0= ruleJvmTypeReference ) )
                            	    {
                            	    otherlv_2=(Token)match(input,20,FOLLOW_8); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      						newLeafNode(otherlv_2, grammarAccess.getXFunctionTypeRefAccess().getCommaKeyword_0_1_1_0());
                            	      					
                            	    }
                            	    // InternalCheckerDsl.g:10383:6: ( (lv_paramTypes_3_0= ruleJvmTypeReference ) )
                            	    // InternalCheckerDsl.g:10384:7: (lv_paramTypes_3_0= ruleJvmTypeReference )
                            	    {
                            	    // InternalCheckerDsl.g:10384:7: (lv_paramTypes_3_0= ruleJvmTypeReference )
                            	    // InternalCheckerDsl.g:10385:8: lv_paramTypes_3_0= ruleJvmTypeReference
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								newCompositeNode(grammarAccess.getXFunctionTypeRefAccess().getParamTypesJvmTypeReferenceParserRuleCall_0_1_1_1_0());
                            	      							
                            	    }
                            	    pushFollow(FOLLOW_12);
                            	    lv_paramTypes_3_0=ruleJvmTypeReference();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								if (current==null) {
                            	      									current = createModelElementForParent(grammarAccess.getXFunctionTypeRefRule());
                            	      								}
                            	      								add(
                            	      									current,
                            	      									"paramTypes",
                            	      									lv_paramTypes_3_0,
                            	      									"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
                            	      								afterParserOrEnumRuleCall();
                            	      							
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop160;
                                }
                            } while (true);


                            }
                            break;

                    }

                    otherlv_4=(Token)match(input,21,FOLLOW_108); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getXFunctionTypeRefAccess().getRightParenthesisKeyword_0_2());
                      			
                    }

                    }
                    break;

            }

            otherlv_5=(Token)match(input,108,FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getXFunctionTypeRefAccess().getEqualsSignGreaterThanSignKeyword_1());
              		
            }
            // InternalCheckerDsl.g:10413:3: ( (lv_returnType_6_0= ruleJvmTypeReference ) )
            // InternalCheckerDsl.g:10414:4: (lv_returnType_6_0= ruleJvmTypeReference )
            {
            // InternalCheckerDsl.g:10414:4: (lv_returnType_6_0= ruleJvmTypeReference )
            // InternalCheckerDsl.g:10415:5: lv_returnType_6_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getXFunctionTypeRefAccess().getReturnTypeJvmTypeReferenceParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_returnType_6_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getXFunctionTypeRefRule());
              					}
              					set(
              						current,
              						"returnType",
              						lv_returnType_6_0,
              						"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXFunctionTypeRef"


    // $ANTLR start "entryRuleJvmParameterizedTypeReference"
    // InternalCheckerDsl.g:10436:1: entryRuleJvmParameterizedTypeReference returns [EObject current=null] : iv_ruleJvmParameterizedTypeReference= ruleJvmParameterizedTypeReference EOF ;
    public final EObject entryRuleJvmParameterizedTypeReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmParameterizedTypeReference = null;


        try {
            // InternalCheckerDsl.g:10436:70: (iv_ruleJvmParameterizedTypeReference= ruleJvmParameterizedTypeReference EOF )
            // InternalCheckerDsl.g:10437:2: iv_ruleJvmParameterizedTypeReference= ruleJvmParameterizedTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmParameterizedTypeReference=ruleJvmParameterizedTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmParameterizedTypeReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmParameterizedTypeReference"


    // $ANTLR start "ruleJvmParameterizedTypeReference"
    // InternalCheckerDsl.g:10443:1: ruleJvmParameterizedTypeReference returns [EObject current=null] : ( ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )? ) ;
    public final EObject ruleJvmParameterizedTypeReference() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        EObject lv_arguments_2_0 = null;

        EObject lv_arguments_4_0 = null;

        EObject lv_arguments_10_0 = null;

        EObject lv_arguments_12_0 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:10449:2: ( ( ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )? ) )
            // InternalCheckerDsl.g:10450:2: ( ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )? )
            {
            // InternalCheckerDsl.g:10450:2: ( ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )? )
            // InternalCheckerDsl.g:10451:3: ( ( ruleQualifiedName ) ) ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )?
            {
            // InternalCheckerDsl.g:10451:3: ( ( ruleQualifiedName ) )
            // InternalCheckerDsl.g:10452:4: ( ruleQualifiedName )
            {
            // InternalCheckerDsl.g:10452:4: ( ruleQualifiedName )
            // InternalCheckerDsl.g:10453:5: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getJvmParameterizedTypeReferenceRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeJvmTypeCrossReference_0_0());
              				
            }
            pushFollow(FOLLOW_52);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalCheckerDsl.g:10467:3: ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )?
            int alt167=2;
            alt167 = dfa167.predict(input);
            switch (alt167) {
                case 1 :
                    // InternalCheckerDsl.g:10468:4: ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )*
                    {
                    // InternalCheckerDsl.g:10468:4: ( ( '<' )=>otherlv_1= '<' )
                    // InternalCheckerDsl.g:10469:5: ( '<' )=>otherlv_1= '<'
                    {
                    otherlv_1=(Token)match(input,46,FOLLOW_72); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getJvmParameterizedTypeReferenceAccess().getLessThanSignKeyword_1_0());
                      				
                    }

                    }

                    // InternalCheckerDsl.g:10475:4: ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) )
                    // InternalCheckerDsl.g:10476:5: (lv_arguments_2_0= ruleJvmArgumentTypeReference )
                    {
                    // InternalCheckerDsl.g:10476:5: (lv_arguments_2_0= ruleJvmArgumentTypeReference )
                    // InternalCheckerDsl.g:10477:6: lv_arguments_2_0= ruleJvmArgumentTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_34);
                    lv_arguments_2_0=ruleJvmArgumentTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
                      						}
                      						add(
                      							current,
                      							"arguments",
                      							lv_arguments_2_0,
                      							"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalCheckerDsl.g:10494:4: (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )*
                    loop163:
                    do {
                        int alt163=2;
                        int LA163_0 = input.LA(1);

                        if ( (LA163_0==20) ) {
                            alt163=1;
                        }


                        switch (alt163) {
                    	case 1 :
                    	    // InternalCheckerDsl.g:10495:5: otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) )
                    	    {
                    	    otherlv_3=(Token)match(input,20,FOLLOW_72); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_3, grammarAccess.getJvmParameterizedTypeReferenceAccess().getCommaKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalCheckerDsl.g:10499:5: ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) )
                    	    // InternalCheckerDsl.g:10500:6: (lv_arguments_4_0= ruleJvmArgumentTypeReference )
                    	    {
                    	    // InternalCheckerDsl.g:10500:6: (lv_arguments_4_0= ruleJvmArgumentTypeReference )
                    	    // InternalCheckerDsl.g:10501:7: lv_arguments_4_0= ruleJvmArgumentTypeReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_34);
                    	    lv_arguments_4_0=ruleJvmArgumentTypeReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"arguments",
                    	      								lv_arguments_4_0,
                    	      								"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop163;
                        }
                    } while (true);

                    otherlv_5=(Token)match(input,47,FOLLOW_106); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getJvmParameterizedTypeReferenceAccess().getGreaterThanSignKeyword_1_3());
                      			
                    }
                    // InternalCheckerDsl.g:10523:4: ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )*
                    loop166:
                    do {
                        int alt166=2;
                        int LA166_0 = input.LA(1);

                        if ( (LA166_0==44) ) {
                            int LA166_2 = input.LA(2);

                            if ( (LA166_2==RULE_ID) ) {
                                int LA166_3 = input.LA(3);

                                if ( (synpred45_InternalCheckerDsl()) ) {
                                    alt166=1;
                                }


                            }


                        }


                        switch (alt166) {
                    	case 1 :
                    	    // InternalCheckerDsl.g:10524:5: ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )?
                    	    {
                    	    // InternalCheckerDsl.g:10524:5: ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) )
                    	    // InternalCheckerDsl.g:10525:6: ( ( () '.' ) )=> ( () otherlv_7= '.' )
                    	    {
                    	    // InternalCheckerDsl.g:10531:6: ( () otherlv_7= '.' )
                    	    // InternalCheckerDsl.g:10532:7: () otherlv_7= '.'
                    	    {
                    	    // InternalCheckerDsl.g:10532:7: ()
                    	    // InternalCheckerDsl.g:10533:8: 
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								current = forceCreateModelElementAndSet(
                    	      									grammarAccess.getJvmParameterizedTypeReferenceAccess().getJvmInnerTypeReferenceOuterAction_1_4_0_0_0(),
                    	      									current);
                    	      							
                    	    }

                    	    }

                    	    otherlv_7=(Token)match(input,44,FOLLOW_4); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							newLeafNode(otherlv_7, grammarAccess.getJvmParameterizedTypeReferenceAccess().getFullStopKeyword_1_4_0_0_1());
                    	      						
                    	    }

                    	    }


                    	    }

                    	    // InternalCheckerDsl.g:10545:5: ( ( ruleValidID ) )
                    	    // InternalCheckerDsl.g:10546:6: ( ruleValidID )
                    	    {
                    	    // InternalCheckerDsl.g:10546:6: ( ruleValidID )
                    	    // InternalCheckerDsl.g:10547:7: ruleValidID
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElement(grammarAccess.getJvmParameterizedTypeReferenceRule());
                    	      							}
                    	      						
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeJvmTypeCrossReference_1_4_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_109);
                    	    ruleValidID();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }

                    	    // InternalCheckerDsl.g:10561:5: ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )?
                    	    int alt165=2;
                    	    alt165 = dfa165.predict(input);
                    	    switch (alt165) {
                    	        case 1 :
                    	            // InternalCheckerDsl.g:10562:6: ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>'
                    	            {
                    	            // InternalCheckerDsl.g:10562:6: ( ( '<' )=>otherlv_9= '<' )
                    	            // InternalCheckerDsl.g:10563:7: ( '<' )=>otherlv_9= '<'
                    	            {
                    	            otherlv_9=(Token)match(input,46,FOLLOW_72); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              							newLeafNode(otherlv_9, grammarAccess.getJvmParameterizedTypeReferenceAccess().getLessThanSignKeyword_1_4_2_0());
                    	              						
                    	            }

                    	            }

                    	            // InternalCheckerDsl.g:10569:6: ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) )
                    	            // InternalCheckerDsl.g:10570:7: (lv_arguments_10_0= ruleJvmArgumentTypeReference )
                    	            {
                    	            // InternalCheckerDsl.g:10570:7: (lv_arguments_10_0= ruleJvmArgumentTypeReference )
                    	            // InternalCheckerDsl.g:10571:8: lv_arguments_10_0= ruleJvmArgumentTypeReference
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              								newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_4_2_1_0());
                    	              							
                    	            }
                    	            pushFollow(FOLLOW_34);
                    	            lv_arguments_10_0=ruleJvmArgumentTypeReference();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              								if (current==null) {
                    	              									current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
                    	              								}
                    	              								add(
                    	              									current,
                    	              									"arguments",
                    	              									lv_arguments_10_0,
                    	              									"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                    	              								afterParserOrEnumRuleCall();
                    	              							
                    	            }

                    	            }


                    	            }

                    	            // InternalCheckerDsl.g:10588:6: (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )*
                    	            loop164:
                    	            do {
                    	                int alt164=2;
                    	                int LA164_0 = input.LA(1);

                    	                if ( (LA164_0==20) ) {
                    	                    alt164=1;
                    	                }


                    	                switch (alt164) {
                    	            	case 1 :
                    	            	    // InternalCheckerDsl.g:10589:7: otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) )
                    	            	    {
                    	            	    otherlv_11=(Token)match(input,20,FOLLOW_72); if (state.failed) return current;
                    	            	    if ( state.backtracking==0 ) {

                    	            	      							newLeafNode(otherlv_11, grammarAccess.getJvmParameterizedTypeReferenceAccess().getCommaKeyword_1_4_2_2_0());
                    	            	      						
                    	            	    }
                    	            	    // InternalCheckerDsl.g:10593:7: ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) )
                    	            	    // InternalCheckerDsl.g:10594:8: (lv_arguments_12_0= ruleJvmArgumentTypeReference )
                    	            	    {
                    	            	    // InternalCheckerDsl.g:10594:8: (lv_arguments_12_0= ruleJvmArgumentTypeReference )
                    	            	    // InternalCheckerDsl.g:10595:9: lv_arguments_12_0= ruleJvmArgumentTypeReference
                    	            	    {
                    	            	    if ( state.backtracking==0 ) {

                    	            	      									newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_4_2_2_1_0());
                    	            	      								
                    	            	    }
                    	            	    pushFollow(FOLLOW_34);
                    	            	    lv_arguments_12_0=ruleJvmArgumentTypeReference();

                    	            	    state._fsp--;
                    	            	    if (state.failed) return current;
                    	            	    if ( state.backtracking==0 ) {

                    	            	      									if (current==null) {
                    	            	      										current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
                    	            	      									}
                    	            	      									add(
                    	            	      										current,
                    	            	      										"arguments",
                    	            	      										lv_arguments_12_0,
                    	            	      										"org.eclipse.xtext.xbase.Xtype.JvmArgumentTypeReference");
                    	            	      									afterParserOrEnumRuleCall();
                    	            	      								
                    	            	    }

                    	            	    }


                    	            	    }


                    	            	    }
                    	            	    break;

                    	            	default :
                    	            	    break loop164;
                    	                }
                    	            } while (true);

                    	            otherlv_13=(Token)match(input,47,FOLLOW_106); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              						newLeafNode(otherlv_13, grammarAccess.getJvmParameterizedTypeReferenceAccess().getGreaterThanSignKeyword_1_4_2_3());
                    	              					
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop166;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmParameterizedTypeReference"


    // $ANTLR start "entryRuleJvmArgumentTypeReference"
    // InternalCheckerDsl.g:10624:1: entryRuleJvmArgumentTypeReference returns [EObject current=null] : iv_ruleJvmArgumentTypeReference= ruleJvmArgumentTypeReference EOF ;
    public final EObject entryRuleJvmArgumentTypeReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmArgumentTypeReference = null;


        try {
            // InternalCheckerDsl.g:10624:65: (iv_ruleJvmArgumentTypeReference= ruleJvmArgumentTypeReference EOF )
            // InternalCheckerDsl.g:10625:2: iv_ruleJvmArgumentTypeReference= ruleJvmArgumentTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmArgumentTypeReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmArgumentTypeReference=ruleJvmArgumentTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmArgumentTypeReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmArgumentTypeReference"


    // $ANTLR start "ruleJvmArgumentTypeReference"
    // InternalCheckerDsl.g:10631:1: ruleJvmArgumentTypeReference returns [EObject current=null] : (this_JvmTypeReference_0= ruleJvmTypeReference | this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference ) ;
    public final EObject ruleJvmArgumentTypeReference() throws RecognitionException {
        EObject current = null;

        EObject this_JvmTypeReference_0 = null;

        EObject this_JvmWildcardTypeReference_1 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:10637:2: ( (this_JvmTypeReference_0= ruleJvmTypeReference | this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference ) )
            // InternalCheckerDsl.g:10638:2: (this_JvmTypeReference_0= ruleJvmTypeReference | this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference )
            {
            // InternalCheckerDsl.g:10638:2: (this_JvmTypeReference_0= ruleJvmTypeReference | this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference )
            int alt168=2;
            int LA168_0 = input.LA(1);

            if ( (LA168_0==RULE_ID||LA168_0==19||LA168_0==108) ) {
                alt168=1;
            }
            else if ( (LA168_0==144) ) {
                alt168=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 168, 0, input);

                throw nvae;
            }
            switch (alt168) {
                case 1 :
                    // InternalCheckerDsl.g:10639:3: this_JvmTypeReference_0= ruleJvmTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getJvmArgumentTypeReferenceAccess().getJvmTypeReferenceParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_JvmTypeReference_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_JvmTypeReference_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalCheckerDsl.g:10648:3: this_JvmWildcardTypeReference_1= ruleJvmWildcardTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getJvmArgumentTypeReferenceAccess().getJvmWildcardTypeReferenceParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_JvmWildcardTypeReference_1=ruleJvmWildcardTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_JvmWildcardTypeReference_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmArgumentTypeReference"


    // $ANTLR start "entryRuleJvmWildcardTypeReference"
    // InternalCheckerDsl.g:10660:1: entryRuleJvmWildcardTypeReference returns [EObject current=null] : iv_ruleJvmWildcardTypeReference= ruleJvmWildcardTypeReference EOF ;
    public final EObject entryRuleJvmWildcardTypeReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmWildcardTypeReference = null;


        try {
            // InternalCheckerDsl.g:10660:65: (iv_ruleJvmWildcardTypeReference= ruleJvmWildcardTypeReference EOF )
            // InternalCheckerDsl.g:10661:2: iv_ruleJvmWildcardTypeReference= ruleJvmWildcardTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmWildcardTypeReference=ruleJvmWildcardTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmWildcardTypeReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmWildcardTypeReference"


    // $ANTLR start "ruleJvmWildcardTypeReference"
    // InternalCheckerDsl.g:10667:1: ruleJvmWildcardTypeReference returns [EObject current=null] : ( () otherlv_1= '?' ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )? ) ;
    public final EObject ruleJvmWildcardTypeReference() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_constraints_2_0 = null;

        EObject lv_constraints_3_0 = null;

        EObject lv_constraints_4_0 = null;

        EObject lv_constraints_5_0 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:10673:2: ( ( () otherlv_1= '?' ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )? ) )
            // InternalCheckerDsl.g:10674:2: ( () otherlv_1= '?' ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )? )
            {
            // InternalCheckerDsl.g:10674:2: ( () otherlv_1= '?' ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )? )
            // InternalCheckerDsl.g:10675:3: () otherlv_1= '?' ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )?
            {
            // InternalCheckerDsl.g:10675:3: ()
            // InternalCheckerDsl.g:10676:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getJvmWildcardTypeReferenceAccess().getJvmWildcardTypeReferenceAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,144,FOLLOW_110); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getJvmWildcardTypeReferenceAccess().getQuestionMarkKeyword_1());
              		
            }
            // InternalCheckerDsl.g:10686:3: ( ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* ) | ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* ) )?
            int alt171=3;
            int LA171_0 = input.LA(1);

            if ( (LA171_0==17) ) {
                alt171=1;
            }
            else if ( (LA171_0==132) ) {
                alt171=2;
            }
            switch (alt171) {
                case 1 :
                    // InternalCheckerDsl.g:10687:4: ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* )
                    {
                    // InternalCheckerDsl.g:10687:4: ( ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )* )
                    // InternalCheckerDsl.g:10688:5: ( (lv_constraints_2_0= ruleJvmUpperBound ) ) ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )*
                    {
                    // InternalCheckerDsl.g:10688:5: ( (lv_constraints_2_0= ruleJvmUpperBound ) )
                    // InternalCheckerDsl.g:10689:6: (lv_constraints_2_0= ruleJvmUpperBound )
                    {
                    // InternalCheckerDsl.g:10689:6: (lv_constraints_2_0= ruleJvmUpperBound )
                    // InternalCheckerDsl.g:10690:7: lv_constraints_2_0= ruleJvmUpperBound
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmUpperBoundParserRuleCall_2_0_0_0());
                      						
                    }
                    pushFollow(FOLLOW_111);
                    lv_constraints_2_0=ruleJvmUpperBound();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
                      							}
                      							add(
                      								current,
                      								"constraints",
                      								lv_constraints_2_0,
                      								"org.eclipse.xtext.xbase.Xtype.JvmUpperBound");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalCheckerDsl.g:10707:5: ( (lv_constraints_3_0= ruleJvmUpperBoundAnded ) )*
                    loop169:
                    do {
                        int alt169=2;
                        int LA169_0 = input.LA(1);

                        if ( (LA169_0==81) ) {
                            alt169=1;
                        }


                        switch (alt169) {
                    	case 1 :
                    	    // InternalCheckerDsl.g:10708:6: (lv_constraints_3_0= ruleJvmUpperBoundAnded )
                    	    {
                    	    // InternalCheckerDsl.g:10708:6: (lv_constraints_3_0= ruleJvmUpperBoundAnded )
                    	    // InternalCheckerDsl.g:10709:7: lv_constraints_3_0= ruleJvmUpperBoundAnded
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmUpperBoundAndedParserRuleCall_2_0_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_111);
                    	    lv_constraints_3_0=ruleJvmUpperBoundAnded();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"constraints",
                    	      								lv_constraints_3_0,
                    	      								"org.eclipse.xtext.xbase.Xtype.JvmUpperBoundAnded");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop169;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // InternalCheckerDsl.g:10728:4: ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* )
                    {
                    // InternalCheckerDsl.g:10728:4: ( ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )* )
                    // InternalCheckerDsl.g:10729:5: ( (lv_constraints_4_0= ruleJvmLowerBound ) ) ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )*
                    {
                    // InternalCheckerDsl.g:10729:5: ( (lv_constraints_4_0= ruleJvmLowerBound ) )
                    // InternalCheckerDsl.g:10730:6: (lv_constraints_4_0= ruleJvmLowerBound )
                    {
                    // InternalCheckerDsl.g:10730:6: (lv_constraints_4_0= ruleJvmLowerBound )
                    // InternalCheckerDsl.g:10731:7: lv_constraints_4_0= ruleJvmLowerBound
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmLowerBoundParserRuleCall_2_1_0_0());
                      						
                    }
                    pushFollow(FOLLOW_111);
                    lv_constraints_4_0=ruleJvmLowerBound();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
                      							}
                      							add(
                      								current,
                      								"constraints",
                      								lv_constraints_4_0,
                      								"org.eclipse.xtext.xbase.Xtype.JvmLowerBound");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalCheckerDsl.g:10748:5: ( (lv_constraints_5_0= ruleJvmLowerBoundAnded ) )*
                    loop170:
                    do {
                        int alt170=2;
                        int LA170_0 = input.LA(1);

                        if ( (LA170_0==81) ) {
                            alt170=1;
                        }


                        switch (alt170) {
                    	case 1 :
                    	    // InternalCheckerDsl.g:10749:6: (lv_constraints_5_0= ruleJvmLowerBoundAnded )
                    	    {
                    	    // InternalCheckerDsl.g:10749:6: (lv_constraints_5_0= ruleJvmLowerBoundAnded )
                    	    // InternalCheckerDsl.g:10750:7: lv_constraints_5_0= ruleJvmLowerBoundAnded
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmLowerBoundAndedParserRuleCall_2_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_111);
                    	    lv_constraints_5_0=ruleJvmLowerBoundAnded();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"constraints",
                    	      								lv_constraints_5_0,
                    	      								"org.eclipse.xtext.xbase.Xtype.JvmLowerBoundAnded");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop170;
                        }
                    } while (true);


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmWildcardTypeReference"


    // $ANTLR start "entryRuleJvmUpperBound"
    // InternalCheckerDsl.g:10773:1: entryRuleJvmUpperBound returns [EObject current=null] : iv_ruleJvmUpperBound= ruleJvmUpperBound EOF ;
    public final EObject entryRuleJvmUpperBound() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmUpperBound = null;


        try {
            // InternalCheckerDsl.g:10773:54: (iv_ruleJvmUpperBound= ruleJvmUpperBound EOF )
            // InternalCheckerDsl.g:10774:2: iv_ruleJvmUpperBound= ruleJvmUpperBound EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmUpperBoundRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmUpperBound=ruleJvmUpperBound();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmUpperBound; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmUpperBound"


    // $ANTLR start "ruleJvmUpperBound"
    // InternalCheckerDsl.g:10780:1: ruleJvmUpperBound returns [EObject current=null] : (otherlv_0= 'extends' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleJvmUpperBound() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_typeReference_1_0 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:10786:2: ( (otherlv_0= 'extends' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) )
            // InternalCheckerDsl.g:10787:2: (otherlv_0= 'extends' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            {
            // InternalCheckerDsl.g:10787:2: (otherlv_0= 'extends' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            // InternalCheckerDsl.g:10788:3: otherlv_0= 'extends' ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            {
            otherlv_0=(Token)match(input,17,FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getJvmUpperBoundAccess().getExtendsKeyword_0());
              		
            }
            // InternalCheckerDsl.g:10792:3: ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            // InternalCheckerDsl.g:10793:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            {
            // InternalCheckerDsl.g:10793:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            // InternalCheckerDsl.g:10794:5: lv_typeReference_1_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJvmUpperBoundAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_typeReference_1_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJvmUpperBoundRule());
              					}
              					set(
              						current,
              						"typeReference",
              						lv_typeReference_1_0,
              						"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmUpperBound"


    // $ANTLR start "entryRuleJvmUpperBoundAnded"
    // InternalCheckerDsl.g:10815:1: entryRuleJvmUpperBoundAnded returns [EObject current=null] : iv_ruleJvmUpperBoundAnded= ruleJvmUpperBoundAnded EOF ;
    public final EObject entryRuleJvmUpperBoundAnded() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmUpperBoundAnded = null;


        try {
            // InternalCheckerDsl.g:10815:59: (iv_ruleJvmUpperBoundAnded= ruleJvmUpperBoundAnded EOF )
            // InternalCheckerDsl.g:10816:2: iv_ruleJvmUpperBoundAnded= ruleJvmUpperBoundAnded EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmUpperBoundAndedRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmUpperBoundAnded=ruleJvmUpperBoundAnded();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmUpperBoundAnded; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmUpperBoundAnded"


    // $ANTLR start "ruleJvmUpperBoundAnded"
    // InternalCheckerDsl.g:10822:1: ruleJvmUpperBoundAnded returns [EObject current=null] : (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleJvmUpperBoundAnded() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_typeReference_1_0 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:10828:2: ( (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) )
            // InternalCheckerDsl.g:10829:2: (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            {
            // InternalCheckerDsl.g:10829:2: (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            // InternalCheckerDsl.g:10830:3: otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            {
            otherlv_0=(Token)match(input,81,FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getJvmUpperBoundAndedAccess().getAmpersandKeyword_0());
              		
            }
            // InternalCheckerDsl.g:10834:3: ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            // InternalCheckerDsl.g:10835:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            {
            // InternalCheckerDsl.g:10835:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            // InternalCheckerDsl.g:10836:5: lv_typeReference_1_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJvmUpperBoundAndedAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_typeReference_1_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJvmUpperBoundAndedRule());
              					}
              					set(
              						current,
              						"typeReference",
              						lv_typeReference_1_0,
              						"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmUpperBoundAnded"


    // $ANTLR start "entryRuleJvmLowerBound"
    // InternalCheckerDsl.g:10857:1: entryRuleJvmLowerBound returns [EObject current=null] : iv_ruleJvmLowerBound= ruleJvmLowerBound EOF ;
    public final EObject entryRuleJvmLowerBound() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmLowerBound = null;


        try {
            // InternalCheckerDsl.g:10857:54: (iv_ruleJvmLowerBound= ruleJvmLowerBound EOF )
            // InternalCheckerDsl.g:10858:2: iv_ruleJvmLowerBound= ruleJvmLowerBound EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmLowerBoundRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmLowerBound=ruleJvmLowerBound();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmLowerBound; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmLowerBound"


    // $ANTLR start "ruleJvmLowerBound"
    // InternalCheckerDsl.g:10864:1: ruleJvmLowerBound returns [EObject current=null] : (otherlv_0= 'super' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleJvmLowerBound() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_typeReference_1_0 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:10870:2: ( (otherlv_0= 'super' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) )
            // InternalCheckerDsl.g:10871:2: (otherlv_0= 'super' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            {
            // InternalCheckerDsl.g:10871:2: (otherlv_0= 'super' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            // InternalCheckerDsl.g:10872:3: otherlv_0= 'super' ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            {
            otherlv_0=(Token)match(input,132,FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getJvmLowerBoundAccess().getSuperKeyword_0());
              		
            }
            // InternalCheckerDsl.g:10876:3: ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            // InternalCheckerDsl.g:10877:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            {
            // InternalCheckerDsl.g:10877:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            // InternalCheckerDsl.g:10878:5: lv_typeReference_1_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJvmLowerBoundAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_typeReference_1_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJvmLowerBoundRule());
              					}
              					set(
              						current,
              						"typeReference",
              						lv_typeReference_1_0,
              						"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmLowerBound"


    // $ANTLR start "entryRuleJvmLowerBoundAnded"
    // InternalCheckerDsl.g:10899:1: entryRuleJvmLowerBoundAnded returns [EObject current=null] : iv_ruleJvmLowerBoundAnded= ruleJvmLowerBoundAnded EOF ;
    public final EObject entryRuleJvmLowerBoundAnded() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJvmLowerBoundAnded = null;


        try {
            // InternalCheckerDsl.g:10899:59: (iv_ruleJvmLowerBoundAnded= ruleJvmLowerBoundAnded EOF )
            // InternalCheckerDsl.g:10900:2: iv_ruleJvmLowerBoundAnded= ruleJvmLowerBoundAnded EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJvmLowerBoundAndedRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmLowerBoundAnded=ruleJvmLowerBoundAnded();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmLowerBoundAnded; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJvmLowerBoundAnded"


    // $ANTLR start "ruleJvmLowerBoundAnded"
    // InternalCheckerDsl.g:10906:1: ruleJvmLowerBoundAnded returns [EObject current=null] : (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) ;
    public final EObject ruleJvmLowerBoundAnded() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_typeReference_1_0 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:10912:2: ( (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) ) )
            // InternalCheckerDsl.g:10913:2: (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            {
            // InternalCheckerDsl.g:10913:2: (otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) ) )
            // InternalCheckerDsl.g:10914:3: otherlv_0= '&' ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            {
            otherlv_0=(Token)match(input,81,FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getJvmLowerBoundAndedAccess().getAmpersandKeyword_0());
              		
            }
            // InternalCheckerDsl.g:10918:3: ( (lv_typeReference_1_0= ruleJvmTypeReference ) )
            // InternalCheckerDsl.g:10919:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            {
            // InternalCheckerDsl.g:10919:4: (lv_typeReference_1_0= ruleJvmTypeReference )
            // InternalCheckerDsl.g:10920:5: lv_typeReference_1_0= ruleJvmTypeReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJvmLowerBoundAndedAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_typeReference_1_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJvmLowerBoundAndedRule());
              					}
              					set(
              						current,
              						"typeReference",
              						lv_typeReference_1_0,
              						"org.eclipse.xtext.xbase.Xtype.JvmTypeReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJvmLowerBoundAnded"


    // $ANTLR start "entryRuleQualifiedNameWithWildcard"
    // InternalCheckerDsl.g:10941:1: entryRuleQualifiedNameWithWildcard returns [String current=null] : iv_ruleQualifiedNameWithWildcard= ruleQualifiedNameWithWildcard EOF ;
    public final String entryRuleQualifiedNameWithWildcard() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQualifiedNameWithWildcard = null;


        try {
            // InternalCheckerDsl.g:10941:65: (iv_ruleQualifiedNameWithWildcard= ruleQualifiedNameWithWildcard EOF )
            // InternalCheckerDsl.g:10942:2: iv_ruleQualifiedNameWithWildcard= ruleQualifiedNameWithWildcard EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQualifiedNameWithWildcardRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleQualifiedNameWithWildcard=ruleQualifiedNameWithWildcard();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQualifiedNameWithWildcard.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQualifiedNameWithWildcard"


    // $ANTLR start "ruleQualifiedNameWithWildcard"
    // InternalCheckerDsl.g:10948:1: ruleQualifiedNameWithWildcard returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_QualifiedName_0= ruleQualifiedName kw= '.' kw= '*' ) ;
    public final AntlrDatatypeRuleToken ruleQualifiedNameWithWildcard() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_QualifiedName_0 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:10954:2: ( (this_QualifiedName_0= ruleQualifiedName kw= '.' kw= '*' ) )
            // InternalCheckerDsl.g:10955:2: (this_QualifiedName_0= ruleQualifiedName kw= '.' kw= '*' )
            {
            // InternalCheckerDsl.g:10955:2: (this_QualifiedName_0= ruleQualifiedName kw= '.' kw= '*' )
            // InternalCheckerDsl.g:10956:3: this_QualifiedName_0= ruleQualifiedName kw= '.' kw= '*'
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_30);
            this_QualifiedName_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_QualifiedName_0);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            kw=(Token)match(input,44,FOLLOW_112); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopKeyword_1());
              		
            }
            kw=(Token)match(input,78,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getQualifiedNameWithWildcardAccess().getAsteriskKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQualifiedNameWithWildcard"


    // $ANTLR start "entryRuleValidID"
    // InternalCheckerDsl.g:10980:1: entryRuleValidID returns [String current=null] : iv_ruleValidID= ruleValidID EOF ;
    public final String entryRuleValidID() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleValidID = null;


        try {
            // InternalCheckerDsl.g:10980:47: (iv_ruleValidID= ruleValidID EOF )
            // InternalCheckerDsl.g:10981:2: iv_ruleValidID= ruleValidID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValidIDRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleValidID=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValidID.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValidID"


    // $ANTLR start "ruleValidID"
    // InternalCheckerDsl.g:10987:1: ruleValidID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_ID_0= RULE_ID ;
    public final AntlrDatatypeRuleToken ruleValidID() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ID_0=null;


        	enterRule();

        try {
            // InternalCheckerDsl.g:10993:2: (this_ID_0= RULE_ID )
            // InternalCheckerDsl.g:10994:2: this_ID_0= RULE_ID
            {
            this_ID_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_ID_0);
              	
            }
            if ( state.backtracking==0 ) {

              		newLeafNode(this_ID_0, grammarAccess.getValidIDAccess().getIDTerminalRuleCall());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValidID"


    // $ANTLR start "entryRuleXImportSection"
    // InternalCheckerDsl.g:11004:1: entryRuleXImportSection returns [EObject current=null] : iv_ruleXImportSection= ruleXImportSection EOF ;
    public final EObject entryRuleXImportSection() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXImportSection = null;


        try {
            // InternalCheckerDsl.g:11004:55: (iv_ruleXImportSection= ruleXImportSection EOF )
            // InternalCheckerDsl.g:11005:2: iv_ruleXImportSection= ruleXImportSection EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXImportSectionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXImportSection=ruleXImportSection();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXImportSection; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXImportSection"


    // $ANTLR start "ruleXImportSection"
    // InternalCheckerDsl.g:11011:1: ruleXImportSection returns [EObject current=null] : ( (lv_importDeclarations_0_0= ruleXImportDeclaration ) )+ ;
    public final EObject ruleXImportSection() throws RecognitionException {
        EObject current = null;

        EObject lv_importDeclarations_0_0 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:11017:2: ( ( (lv_importDeclarations_0_0= ruleXImportDeclaration ) )+ )
            // InternalCheckerDsl.g:11018:2: ( (lv_importDeclarations_0_0= ruleXImportDeclaration ) )+
            {
            // InternalCheckerDsl.g:11018:2: ( (lv_importDeclarations_0_0= ruleXImportDeclaration ) )+
            int cnt172=0;
            loop172:
            do {
                int alt172=2;
                int LA172_0 = input.LA(1);

                if ( (LA172_0==130) ) {
                    alt172=1;
                }


                switch (alt172) {
            	case 1 :
            	    // InternalCheckerDsl.g:11019:3: (lv_importDeclarations_0_0= ruleXImportDeclaration )
            	    {
            	    // InternalCheckerDsl.g:11019:3: (lv_importDeclarations_0_0= ruleXImportDeclaration )
            	    // InternalCheckerDsl.g:11020:4: lv_importDeclarations_0_0= ruleXImportDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      				newCompositeNode(grammarAccess.getXImportSectionAccess().getImportDeclarationsXImportDeclarationParserRuleCall_0());
            	      			
            	    }
            	    pushFollow(FOLLOW_113);
            	    lv_importDeclarations_0_0=ruleXImportDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				if (current==null) {
            	      					current = createModelElementForParent(grammarAccess.getXImportSectionRule());
            	      				}
            	      				add(
            	      					current,
            	      					"importDeclarations",
            	      					lv_importDeclarations_0_0,
            	      					"org.eclipse.xtext.xbase.Xtype.XImportDeclaration");
            	      				afterParserOrEnumRuleCall();
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt172 >= 1 ) break loop172;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(172, input);
                        throw eee;
                }
                cnt172++;
            } while (true);


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXImportSection"


    // $ANTLR start "entryRuleXImportDeclaration"
    // InternalCheckerDsl.g:11040:1: entryRuleXImportDeclaration returns [EObject current=null] : iv_ruleXImportDeclaration= ruleXImportDeclaration EOF ;
    public final EObject entryRuleXImportDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXImportDeclaration = null;


        try {
            // InternalCheckerDsl.g:11040:59: (iv_ruleXImportDeclaration= ruleXImportDeclaration EOF )
            // InternalCheckerDsl.g:11041:2: iv_ruleXImportDeclaration= ruleXImportDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXImportDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXImportDeclaration=ruleXImportDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXImportDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXImportDeclaration"


    // $ANTLR start "ruleXImportDeclaration"
    // InternalCheckerDsl.g:11047:1: ruleXImportDeclaration returns [EObject current=null] : (otherlv_0= 'import' ( ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) ) (otherlv_8= ';' )? ) ;
    public final EObject ruleXImportDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_static_1_0=null;
        Token lv_extension_2_0=null;
        Token lv_wildcard_4_0=null;
        Token otherlv_8=null;
        AntlrDatatypeRuleToken lv_memberName_5_0 = null;

        AntlrDatatypeRuleToken lv_importedNamespace_7_0 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:11053:2: ( (otherlv_0= 'import' ( ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) ) (otherlv_8= ';' )? ) )
            // InternalCheckerDsl.g:11054:2: (otherlv_0= 'import' ( ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) ) (otherlv_8= ';' )? )
            {
            // InternalCheckerDsl.g:11054:2: (otherlv_0= 'import' ( ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) ) (otherlv_8= ';' )? )
            // InternalCheckerDsl.g:11055:3: otherlv_0= 'import' ( ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) ) (otherlv_8= ';' )?
            {
            otherlv_0=(Token)match(input,130,FOLLOW_114); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getXImportDeclarationAccess().getImportKeyword_0());
              		
            }
            // InternalCheckerDsl.g:11059:3: ( ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) )
            int alt175=3;
            alt175 = dfa175.predict(input);
            switch (alt175) {
                case 1 :
                    // InternalCheckerDsl.g:11060:4: ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) )
                    {
                    // InternalCheckerDsl.g:11060:4: ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) )
                    // InternalCheckerDsl.g:11061:5: ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) )
                    {
                    // InternalCheckerDsl.g:11061:5: ( (lv_static_1_0= 'static' ) )
                    // InternalCheckerDsl.g:11062:6: (lv_static_1_0= 'static' )
                    {
                    // InternalCheckerDsl.g:11062:6: (lv_static_1_0= 'static' )
                    // InternalCheckerDsl.g:11063:7: lv_static_1_0= 'static'
                    {
                    lv_static_1_0=(Token)match(input,129,FOLLOW_115); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_static_1_0, grammarAccess.getXImportDeclarationAccess().getStaticStaticKeyword_1_0_0_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getXImportDeclarationRule());
                      							}
                      							setWithLastConsumed(current, "static", lv_static_1_0 != null, "static");
                      						
                    }

                    }


                    }

                    // InternalCheckerDsl.g:11075:5: ( (lv_extension_2_0= 'extension' ) )?
                    int alt173=2;
                    int LA173_0 = input.LA(1);

                    if ( (LA173_0==131) ) {
                        alt173=1;
                    }
                    switch (alt173) {
                        case 1 :
                            // InternalCheckerDsl.g:11076:6: (lv_extension_2_0= 'extension' )
                            {
                            // InternalCheckerDsl.g:11076:6: (lv_extension_2_0= 'extension' )
                            // InternalCheckerDsl.g:11077:7: lv_extension_2_0= 'extension'
                            {
                            lv_extension_2_0=(Token)match(input,131,FOLLOW_115); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_extension_2_0, grammarAccess.getXImportDeclarationAccess().getExtensionExtensionKeyword_1_0_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getXImportDeclarationRule());
                              							}
                              							setWithLastConsumed(current, "extension", lv_extension_2_0 != null, "extension");
                              						
                            }

                            }


                            }
                            break;

                    }

                    // InternalCheckerDsl.g:11089:5: ( ( ruleQualifiedNameInStaticImport ) )
                    // InternalCheckerDsl.g:11090:6: ( ruleQualifiedNameInStaticImport )
                    {
                    // InternalCheckerDsl.g:11090:6: ( ruleQualifiedNameInStaticImport )
                    // InternalCheckerDsl.g:11091:7: ruleQualifiedNameInStaticImport
                    {
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getXImportDeclarationRule());
                      							}
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getXImportDeclarationAccess().getImportedTypeJvmDeclaredTypeCrossReference_1_0_2_0());
                      						
                    }
                    pushFollow(FOLLOW_116);
                    ruleQualifiedNameInStaticImport();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalCheckerDsl.g:11105:5: ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) )
                    int alt174=2;
                    int LA174_0 = input.LA(1);

                    if ( (LA174_0==78) ) {
                        alt174=1;
                    }
                    else if ( (LA174_0==RULE_ID) ) {
                        alt174=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 174, 0, input);

                        throw nvae;
                    }
                    switch (alt174) {
                        case 1 :
                            // InternalCheckerDsl.g:11106:6: ( (lv_wildcard_4_0= '*' ) )
                            {
                            // InternalCheckerDsl.g:11106:6: ( (lv_wildcard_4_0= '*' ) )
                            // InternalCheckerDsl.g:11107:7: (lv_wildcard_4_0= '*' )
                            {
                            // InternalCheckerDsl.g:11107:7: (lv_wildcard_4_0= '*' )
                            // InternalCheckerDsl.g:11108:8: lv_wildcard_4_0= '*'
                            {
                            lv_wildcard_4_0=(Token)match(input,78,FOLLOW_117); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_wildcard_4_0, grammarAccess.getXImportDeclarationAccess().getWildcardAsteriskKeyword_1_0_3_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getXImportDeclarationRule());
                              								}
                              								setWithLastConsumed(current, "wildcard", lv_wildcard_4_0 != null, "*");
                              							
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalCheckerDsl.g:11121:6: ( (lv_memberName_5_0= ruleValidID ) )
                            {
                            // InternalCheckerDsl.g:11121:6: ( (lv_memberName_5_0= ruleValidID ) )
                            // InternalCheckerDsl.g:11122:7: (lv_memberName_5_0= ruleValidID )
                            {
                            // InternalCheckerDsl.g:11122:7: (lv_memberName_5_0= ruleValidID )
                            // InternalCheckerDsl.g:11123:8: lv_memberName_5_0= ruleValidID
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getXImportDeclarationAccess().getMemberNameValidIDParserRuleCall_1_0_3_1_0());
                              							
                            }
                            pushFollow(FOLLOW_117);
                            lv_memberName_5_0=ruleValidID();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getXImportDeclarationRule());
                              								}
                              								set(
                              									current,
                              									"memberName",
                              									lv_memberName_5_0,
                              									"org.eclipse.xtext.xbase.Xtype.ValidID");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalCheckerDsl.g:11143:4: ( ( ruleQualifiedName ) )
                    {
                    // InternalCheckerDsl.g:11143:4: ( ( ruleQualifiedName ) )
                    // InternalCheckerDsl.g:11144:5: ( ruleQualifiedName )
                    {
                    // InternalCheckerDsl.g:11144:5: ( ruleQualifiedName )
                    // InternalCheckerDsl.g:11145:6: ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getXImportDeclarationRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXImportDeclarationAccess().getImportedTypeJvmDeclaredTypeCrossReference_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_117);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalCheckerDsl.g:11160:4: ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) )
                    {
                    // InternalCheckerDsl.g:11160:4: ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) )
                    // InternalCheckerDsl.g:11161:5: (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard )
                    {
                    // InternalCheckerDsl.g:11161:5: (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard )
                    // InternalCheckerDsl.g:11162:6: lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getXImportDeclarationAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_117);
                    lv_importedNamespace_7_0=ruleQualifiedNameWithWildcard();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getXImportDeclarationRule());
                      						}
                      						set(
                      							current,
                      							"importedNamespace",
                      							lv_importedNamespace_7_0,
                      							"org.eclipse.xtext.xbase.Xtype.QualifiedNameWithWildcard");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalCheckerDsl.g:11180:3: (otherlv_8= ';' )?
            int alt176=2;
            int LA176_0 = input.LA(1);

            if ( (LA176_0==29) ) {
                alt176=1;
            }
            switch (alt176) {
                case 1 :
                    // InternalCheckerDsl.g:11181:4: otherlv_8= ';'
                    {
                    otherlv_8=(Token)match(input,29,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getXImportDeclarationAccess().getSemicolonKeyword_2());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXImportDeclaration"


    // $ANTLR start "entryRuleQualifiedNameInStaticImport"
    // InternalCheckerDsl.g:11190:1: entryRuleQualifiedNameInStaticImport returns [String current=null] : iv_ruleQualifiedNameInStaticImport= ruleQualifiedNameInStaticImport EOF ;
    public final String entryRuleQualifiedNameInStaticImport() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQualifiedNameInStaticImport = null;


        try {
            // InternalCheckerDsl.g:11190:67: (iv_ruleQualifiedNameInStaticImport= ruleQualifiedNameInStaticImport EOF )
            // InternalCheckerDsl.g:11191:2: iv_ruleQualifiedNameInStaticImport= ruleQualifiedNameInStaticImport EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQualifiedNameInStaticImportRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleQualifiedNameInStaticImport=ruleQualifiedNameInStaticImport();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQualifiedNameInStaticImport.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQualifiedNameInStaticImport"


    // $ANTLR start "ruleQualifiedNameInStaticImport"
    // InternalCheckerDsl.g:11197:1: ruleQualifiedNameInStaticImport returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ValidID_0= ruleValidID kw= '.' )+ ;
    public final AntlrDatatypeRuleToken ruleQualifiedNameInStaticImport() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_ValidID_0 = null;



        	enterRule();

        try {
            // InternalCheckerDsl.g:11203:2: ( (this_ValidID_0= ruleValidID kw= '.' )+ )
            // InternalCheckerDsl.g:11204:2: (this_ValidID_0= ruleValidID kw= '.' )+
            {
            // InternalCheckerDsl.g:11204:2: (this_ValidID_0= ruleValidID kw= '.' )+
            int cnt177=0;
            loop177:
            do {
                int alt177=2;
                int LA177_0 = input.LA(1);

                if ( (LA177_0==RULE_ID) ) {
                    int LA177_2 = input.LA(2);

                    if ( (LA177_2==44) ) {
                        alt177=1;
                    }


                }


                switch (alt177) {
            	case 1 :
            	    // InternalCheckerDsl.g:11205:3: this_ValidID_0= ruleValidID kw= '.'
            	    {
            	    if ( state.backtracking==0 ) {

            	      			newCompositeNode(grammarAccess.getQualifiedNameInStaticImportAccess().getValidIDParserRuleCall_0());
            	      		
            	    }
            	    pushFollow(FOLLOW_30);
            	    this_ValidID_0=ruleValidID();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      			current.merge(this_ValidID_0);
            	      		
            	    }
            	    if ( state.backtracking==0 ) {

            	      			afterParserOrEnumRuleCall();
            	      		
            	    }
            	    kw=(Token)match(input,44,FOLLOW_118); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      			current.merge(kw);
            	      			newLeafNode(kw, grammarAccess.getQualifiedNameInStaticImportAccess().getFullStopKeyword_1());
            	      		
            	    }

            	    }
            	    break;

            	default :
            	    if ( cnt177 >= 1 ) break loop177;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(177, input);
                        throw eee;
                }
                cnt177++;
            } while (true);


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQualifiedNameInStaticImport"

    // $ANTLR start synpred1_InternalCheckerDsl
    public final void synpred1_InternalCheckerDsl_fragment() throws RecognitionException {   
        // InternalCheckerDsl.g:5009:6: ( ( () ( ( ruleOpMultiAssign ) ) ) )
        // InternalCheckerDsl.g:5009:7: ( () ( ( ruleOpMultiAssign ) ) )
        {
        // InternalCheckerDsl.g:5009:7: ( () ( ( ruleOpMultiAssign ) ) )
        // InternalCheckerDsl.g:5010:7: () ( ( ruleOpMultiAssign ) )
        {
        // InternalCheckerDsl.g:5010:7: ()
        // InternalCheckerDsl.g:5011:7: 
        {
        }

        // InternalCheckerDsl.g:5012:7: ( ( ruleOpMultiAssign ) )
        // InternalCheckerDsl.g:5013:8: ( ruleOpMultiAssign )
        {
        // InternalCheckerDsl.g:5013:8: ( ruleOpMultiAssign )
        // InternalCheckerDsl.g:5014:9: ruleOpMultiAssign
        {
        pushFollow(FOLLOW_2);
        ruleOpMultiAssign();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred1_InternalCheckerDsl

    // $ANTLR start synpred2_InternalCheckerDsl
    public final void synpred2_InternalCheckerDsl_fragment() throws RecognitionException {   
        // InternalCheckerDsl.g:5203:5: ( ( () ( ( ruleOpOr ) ) ) )
        // InternalCheckerDsl.g:5203:6: ( () ( ( ruleOpOr ) ) )
        {
        // InternalCheckerDsl.g:5203:6: ( () ( ( ruleOpOr ) ) )
        // InternalCheckerDsl.g:5204:6: () ( ( ruleOpOr ) )
        {
        // InternalCheckerDsl.g:5204:6: ()
        // InternalCheckerDsl.g:5205:6: 
        {
        }

        // InternalCheckerDsl.g:5206:6: ( ( ruleOpOr ) )
        // InternalCheckerDsl.g:5207:7: ( ruleOpOr )
        {
        // InternalCheckerDsl.g:5207:7: ( ruleOpOr )
        // InternalCheckerDsl.g:5208:8: ruleOpOr
        {
        pushFollow(FOLLOW_2);
        ruleOpOr();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred2_InternalCheckerDsl

    // $ANTLR start synpred3_InternalCheckerDsl
    public final void synpred3_InternalCheckerDsl_fragment() throws RecognitionException {   
        // InternalCheckerDsl.g:5310:5: ( ( () ( ( ruleOpAnd ) ) ) )
        // InternalCheckerDsl.g:5310:6: ( () ( ( ruleOpAnd ) ) )
        {
        // InternalCheckerDsl.g:5310:6: ( () ( ( ruleOpAnd ) ) )
        // InternalCheckerDsl.g:5311:6: () ( ( ruleOpAnd ) )
        {
        // InternalCheckerDsl.g:5311:6: ()
        // InternalCheckerDsl.g:5312:6: 
        {
        }

        // InternalCheckerDsl.g:5313:6: ( ( ruleOpAnd ) )
        // InternalCheckerDsl.g:5314:7: ( ruleOpAnd )
        {
        // InternalCheckerDsl.g:5314:7: ( ruleOpAnd )
        // InternalCheckerDsl.g:5315:8: ruleOpAnd
        {
        pushFollow(FOLLOW_2);
        ruleOpAnd();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred3_InternalCheckerDsl

    // $ANTLR start synpred4_InternalCheckerDsl
    public final void synpred4_InternalCheckerDsl_fragment() throws RecognitionException {   
        // InternalCheckerDsl.g:5417:5: ( ( () ( ( ruleOpEquality ) ) ) )
        // InternalCheckerDsl.g:5417:6: ( () ( ( ruleOpEquality ) ) )
        {
        // InternalCheckerDsl.g:5417:6: ( () ( ( ruleOpEquality ) ) )
        // InternalCheckerDsl.g:5418:6: () ( ( ruleOpEquality ) )
        {
        // InternalCheckerDsl.g:5418:6: ()
        // InternalCheckerDsl.g:5419:6: 
        {
        }

        // InternalCheckerDsl.g:5420:6: ( ( ruleOpEquality ) )
        // InternalCheckerDsl.g:5421:7: ( ruleOpEquality )
        {
        // InternalCheckerDsl.g:5421:7: ( ruleOpEquality )
        // InternalCheckerDsl.g:5422:8: ruleOpEquality
        {
        pushFollow(FOLLOW_2);
        ruleOpEquality();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred4_InternalCheckerDsl

    // $ANTLR start synpred5_InternalCheckerDsl
    public final void synpred5_InternalCheckerDsl_fragment() throws RecognitionException {   
        // InternalCheckerDsl.g:5545:6: ( ( () 'instanceof' ) )
        // InternalCheckerDsl.g:5545:7: ( () 'instanceof' )
        {
        // InternalCheckerDsl.g:5545:7: ( () 'instanceof' )
        // InternalCheckerDsl.g:5546:7: () 'instanceof'
        {
        // InternalCheckerDsl.g:5546:7: ()
        // InternalCheckerDsl.g:5547:7: 
        {
        }

        match(input,105,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred5_InternalCheckerDsl

    // $ANTLR start synpred6_InternalCheckerDsl
    public final void synpred6_InternalCheckerDsl_fragment() throws RecognitionException {   
        // InternalCheckerDsl.g:5588:6: ( ( () ( ( ruleOpCompare ) ) ) )
        // InternalCheckerDsl.g:5588:7: ( () ( ( ruleOpCompare ) ) )
        {
        // InternalCheckerDsl.g:5588:7: ( () ( ( ruleOpCompare ) ) )
        // InternalCheckerDsl.g:5589:7: () ( ( ruleOpCompare ) )
        {
        // InternalCheckerDsl.g:5589:7: ()
        // InternalCheckerDsl.g:5590:7: 
        {
        }

        // InternalCheckerDsl.g:5591:7: ( ( ruleOpCompare ) )
        // InternalCheckerDsl.g:5592:8: ( ruleOpCompare )
        {
        // InternalCheckerDsl.g:5592:8: ( ruleOpCompare )
        // InternalCheckerDsl.g:5593:9: ruleOpCompare
        {
        pushFollow(FOLLOW_2);
        ruleOpCompare();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred6_InternalCheckerDsl

    // $ANTLR start synpred7_InternalCheckerDsl
    public final void synpred7_InternalCheckerDsl_fragment() throws RecognitionException {   
        // InternalCheckerDsl.g:5723:5: ( ( () ( ( ruleOpOther ) ) ) )
        // InternalCheckerDsl.g:5723:6: ( () ( ( ruleOpOther ) ) )
        {
        // InternalCheckerDsl.g:5723:6: ( () ( ( ruleOpOther ) ) )
        // InternalCheckerDsl.g:5724:6: () ( ( ruleOpOther ) )
        {
        // InternalCheckerDsl.g:5724:6: ()
        // InternalCheckerDsl.g:5725:6: 
        {
        }

        // InternalCheckerDsl.g:5726:6: ( ( ruleOpOther ) )
        // InternalCheckerDsl.g:5727:7: ( ruleOpOther )
        {
        // InternalCheckerDsl.g:5727:7: ( ruleOpOther )
        // InternalCheckerDsl.g:5728:8: ruleOpOther
        {
        pushFollow(FOLLOW_2);
        ruleOpOther();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred7_InternalCheckerDsl

    // $ANTLR start synpred8_InternalCheckerDsl
    public final void synpred8_InternalCheckerDsl_fragment() throws RecognitionException {   
        // InternalCheckerDsl.g:5843:6: ( ( '>' '>' ) )
        // InternalCheckerDsl.g:5843:7: ( '>' '>' )
        {
        // InternalCheckerDsl.g:5843:7: ( '>' '>' )
        // InternalCheckerDsl.g:5844:7: '>' '>'
        {
        match(input,47,FOLLOW_53); if (state.failed) return ;
        match(input,47,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred8_InternalCheckerDsl

    // $ANTLR start synpred9_InternalCheckerDsl
    public final void synpred9_InternalCheckerDsl_fragment() throws RecognitionException {   
        // InternalCheckerDsl.g:5878:6: ( ( '<' '<' ) )
        // InternalCheckerDsl.g:5878:7: ( '<' '<' )
        {
        // InternalCheckerDsl.g:5878:7: ( '<' '<' )
        // InternalCheckerDsl.g:5879:7: '<' '<'
        {
        match(input,46,FOLLOW_56); if (state.failed) return ;
        match(input,46,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred9_InternalCheckerDsl

    // $ANTLR start synpred10_InternalCheckerDsl
    public final void synpred10_InternalCheckerDsl_fragment() throws RecognitionException {   
        // InternalCheckerDsl.g:5951:5: ( ( () ( ( ruleOpAdd ) ) ) )
        // InternalCheckerDsl.g:5951:6: ( () ( ( ruleOpAdd ) ) )
        {
        // InternalCheckerDsl.g:5951:6: ( () ( ( ruleOpAdd ) ) )
        // InternalCheckerDsl.g:5952:6: () ( ( ruleOpAdd ) )
        {
        // InternalCheckerDsl.g:5952:6: ()
        // InternalCheckerDsl.g:5953:6: 
        {
        }

        // InternalCheckerDsl.g:5954:6: ( ( ruleOpAdd ) )
        // InternalCheckerDsl.g:5955:7: ( ruleOpAdd )
        {
        // InternalCheckerDsl.g:5955:7: ( ruleOpAdd )
        // InternalCheckerDsl.g:5956:8: ruleOpAdd
        {
        pushFollow(FOLLOW_2);
        ruleOpAdd();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred10_InternalCheckerDsl

    // $ANTLR start synpred11_InternalCheckerDsl
    public final void synpred11_InternalCheckerDsl_fragment() throws RecognitionException {   
        // InternalCheckerDsl.g:6066:5: ( ( () ( ( ruleOpMulti ) ) ) )
        // InternalCheckerDsl.g:6066:6: ( () ( ( ruleOpMulti ) ) )
        {
        // InternalCheckerDsl.g:6066:6: ( () ( ( ruleOpMulti ) ) )
        // InternalCheckerDsl.g:6067:6: () ( ( ruleOpMulti ) )
        {
        // InternalCheckerDsl.g:6067:6: ()
        // InternalCheckerDsl.g:6068:6: 
        {
        }

        // InternalCheckerDsl.g:6069:6: ( ( ruleOpMulti ) )
        // InternalCheckerDsl.g:6070:7: ( ruleOpMulti )
        {
        // InternalCheckerDsl.g:6070:7: ( ruleOpMulti )
        // InternalCheckerDsl.g:6071:8: ruleOpMulti
        {
        pushFollow(FOLLOW_2);
        ruleOpMulti();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred11_InternalCheckerDsl

    // $ANTLR start synpred12_InternalCheckerDsl
    public final void synpred12_InternalCheckerDsl_fragment() throws RecognitionException {   
        // InternalCheckerDsl.g:6301:5: ( ( () 'as' ) )
        // InternalCheckerDsl.g:6301:6: ( () 'as' )
        {
        // InternalCheckerDsl.g:6301:6: ( () 'as' )
        // InternalCheckerDsl.g:6302:6: () 'as'
        {
        // InternalCheckerDsl.g:6302:6: ()
        // InternalCheckerDsl.g:6303:6: 
        {
        }

        match(input,114,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred12_InternalCheckerDsl

    // $ANTLR start synpred13_InternalCheckerDsl
    public final void synpred13_InternalCheckerDsl_fragment() throws RecognitionException {   
        // InternalCheckerDsl.g:6369:4: ( ( () ( ( ruleOpPostfix ) ) ) )
        // InternalCheckerDsl.g:6369:5: ( () ( ( ruleOpPostfix ) ) )
        {
        // InternalCheckerDsl.g:6369:5: ( () ( ( ruleOpPostfix ) ) )
        // InternalCheckerDsl.g:6370:5: () ( ( ruleOpPostfix ) )
        {
        // InternalCheckerDsl.g:6370:5: ()
        // InternalCheckerDsl.g:6371:5: 
        {
        }

        // InternalCheckerDsl.g:6372:5: ( ( ruleOpPostfix ) )
        // InternalCheckerDsl.g:6373:6: ( ruleOpPostfix )
        {
        // InternalCheckerDsl.g:6373:6: ( ruleOpPostfix )
        // InternalCheckerDsl.g:6374:7: ruleOpPostfix
        {
        pushFollow(FOLLOW_2);
        ruleOpPostfix();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred13_InternalCheckerDsl

    // $ANTLR start synpred14_InternalCheckerDsl
    public final void synpred14_InternalCheckerDsl_fragment() throws RecognitionException {   
        // InternalCheckerDsl.g:6465:6: ( ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ) )
        // InternalCheckerDsl.g:6465:7: ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
        {
        // InternalCheckerDsl.g:6465:7: ( () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign )
        // InternalCheckerDsl.g:6466:7: () ( '.' | ( ( '::' ) ) ) ( ( ruleFeatureCallID ) ) ruleOpSingleAssign
        {
        // InternalCheckerDsl.g:6466:7: ()
        // InternalCheckerDsl.g:6467:7: 
        {
        }

        // InternalCheckerDsl.g:6468:7: ( '.' | ( ( '::' ) ) )
        int alt178=2;
        int LA178_0 = input.LA(1);

        if ( (LA178_0==44) ) {
            alt178=1;
        }
        else if ( (LA178_0==117) ) {
            alt178=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 178, 0, input);

            throw nvae;
        }
        switch (alt178) {
            case 1 :
                // InternalCheckerDsl.g:6469:8: '.'
                {
                match(input,44,FOLLOW_70); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalCheckerDsl.g:6471:8: ( ( '::' ) )
                {
                // InternalCheckerDsl.g:6471:8: ( ( '::' ) )
                // InternalCheckerDsl.g:6472:9: ( '::' )
                {
                // InternalCheckerDsl.g:6472:9: ( '::' )
                // InternalCheckerDsl.g:6473:10: '::'
                {
                match(input,117,FOLLOW_70); if (state.failed) return ;

                }


                }


                }
                break;

        }

        // InternalCheckerDsl.g:6477:7: ( ( ruleFeatureCallID ) )
        // InternalCheckerDsl.g:6478:8: ( ruleFeatureCallID )
        {
        // InternalCheckerDsl.g:6478:8: ( ruleFeatureCallID )
        // InternalCheckerDsl.g:6479:9: ruleFeatureCallID
        {
        pushFollow(FOLLOW_41);
        ruleFeatureCallID();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        pushFollow(FOLLOW_2);
        ruleOpSingleAssign();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred14_InternalCheckerDsl

    // $ANTLR start synpred15_InternalCheckerDsl
    public final void synpred15_InternalCheckerDsl_fragment() throws RecognitionException {   
        // InternalCheckerDsl.g:6562:6: ( ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) ) )
        // InternalCheckerDsl.g:6562:7: ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) )
        {
        // InternalCheckerDsl.g:6562:7: ( () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) ) )
        // InternalCheckerDsl.g:6563:7: () ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) )
        {
        // InternalCheckerDsl.g:6563:7: ()
        // InternalCheckerDsl.g:6564:7: 
        {
        }

        // InternalCheckerDsl.g:6565:7: ( '.' | ( ( '?.' ) ) | ( ( '::' ) ) )
        int alt179=3;
        switch ( input.LA(1) ) {
        case 44:
            {
            alt179=1;
            }
            break;
        case 118:
            {
            alt179=2;
            }
            break;
        case 117:
            {
            alt179=3;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 179, 0, input);

            throw nvae;
        }

        switch (alt179) {
            case 1 :
                // InternalCheckerDsl.g:6566:8: '.'
                {
                match(input,44,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalCheckerDsl.g:6568:8: ( ( '?.' ) )
                {
                // InternalCheckerDsl.g:6568:8: ( ( '?.' ) )
                // InternalCheckerDsl.g:6569:9: ( '?.' )
                {
                // InternalCheckerDsl.g:6569:9: ( '?.' )
                // InternalCheckerDsl.g:6570:10: '?.'
                {
                match(input,118,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;
            case 3 :
                // InternalCheckerDsl.g:6574:8: ( ( '::' ) )
                {
                // InternalCheckerDsl.g:6574:8: ( ( '::' ) )
                // InternalCheckerDsl.g:6575:9: ( '::' )
                {
                // InternalCheckerDsl.g:6575:9: ( '::' )
                // InternalCheckerDsl.g:6576:10: '::'
                {
                match(input,117,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred15_InternalCheckerDsl

    // $ANTLR start synpred16_InternalCheckerDsl
    public final void synpred16_InternalCheckerDsl_fragment() throws RecognitionException {   
        // InternalCheckerDsl.g:6700:7: ( ( '(' ) )
        // InternalCheckerDsl.g:6700:8: ( '(' )
        {
        // InternalCheckerDsl.g:6700:8: ( '(' )
        // InternalCheckerDsl.g:6701:8: '('
        {
        match(input,19,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred16_InternalCheckerDsl

    // $ANTLR start synpred17_InternalCheckerDsl
    public final void synpred17_InternalCheckerDsl_fragment() throws RecognitionException {   
        // InternalCheckerDsl.g:6719:8: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )
        // InternalCheckerDsl.g:6719:9: ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        {
        // InternalCheckerDsl.g:6719:9: ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        // InternalCheckerDsl.g:6720:9: () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) )
        {
        // InternalCheckerDsl.g:6720:9: ()
        // InternalCheckerDsl.g:6721:9: 
        {
        }

        // InternalCheckerDsl.g:6722:9: ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )?
        int alt181=2;
        int LA181_0 = input.LA(1);

        if ( (LA181_0==RULE_ID||LA181_0==19||LA181_0==108) ) {
            alt181=1;
        }
        switch (alt181) {
            case 1 :
                // InternalCheckerDsl.g:6723:10: ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )*
                {
                // InternalCheckerDsl.g:6723:10: ( ( ruleJvmFormalParameter ) )
                // InternalCheckerDsl.g:6724:11: ( ruleJvmFormalParameter )
                {
                // InternalCheckerDsl.g:6724:11: ( ruleJvmFormalParameter )
                // InternalCheckerDsl.g:6725:12: ruleJvmFormalParameter
                {
                pushFollow(FOLLOW_82);
                ruleJvmFormalParameter();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalCheckerDsl.g:6728:10: ( ',' ( ( ruleJvmFormalParameter ) ) )*
                loop180:
                do {
                    int alt180=2;
                    int LA180_0 = input.LA(1);

                    if ( (LA180_0==20) ) {
                        alt180=1;
                    }


                    switch (alt180) {
                	case 1 :
                	    // InternalCheckerDsl.g:6729:11: ',' ( ( ruleJvmFormalParameter ) )
                	    {
                	    match(input,20,FOLLOW_8); if (state.failed) return ;
                	    // InternalCheckerDsl.g:6730:11: ( ( ruleJvmFormalParameter ) )
                	    // InternalCheckerDsl.g:6731:12: ( ruleJvmFormalParameter )
                	    {
                	    // InternalCheckerDsl.g:6731:12: ( ruleJvmFormalParameter )
                	    // InternalCheckerDsl.g:6732:13: ruleJvmFormalParameter
                	    {
                	    pushFollow(FOLLOW_82);
                	    ruleJvmFormalParameter();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop180;
                    }
                } while (true);


                }
                break;

        }

        // InternalCheckerDsl.g:6737:9: ( ( '|' ) )
        // InternalCheckerDsl.g:6738:10: ( '|' )
        {
        // InternalCheckerDsl.g:6738:10: ( '|' )
        // InternalCheckerDsl.g:6739:11: '|'
        {
        match(input,80,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred17_InternalCheckerDsl

    // $ANTLR start synpred18_InternalCheckerDsl
    public final void synpred18_InternalCheckerDsl_fragment() throws RecognitionException {   
        // InternalCheckerDsl.g:6816:6: ( ( () '[' ) )
        // InternalCheckerDsl.g:6816:7: ( () '[' )
        {
        // InternalCheckerDsl.g:6816:7: ( () '[' )
        // InternalCheckerDsl.g:6817:7: () '['
        {
        // InternalCheckerDsl.g:6817:7: ()
        // InternalCheckerDsl.g:6818:7: 
        {
        }

        match(input,27,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred18_InternalCheckerDsl

    // $ANTLR start synpred19_InternalCheckerDsl
    public final void synpred19_InternalCheckerDsl_fragment() throws RecognitionException {   
        // InternalCheckerDsl.g:6889:4: ( ( () 'synchronized' '(' ) )
        // InternalCheckerDsl.g:6889:5: ( () 'synchronized' '(' )
        {
        // InternalCheckerDsl.g:6889:5: ( () 'synchronized' '(' )
        // InternalCheckerDsl.g:6890:5: () 'synchronized' '('
        {
        // InternalCheckerDsl.g:6890:5: ()
        // InternalCheckerDsl.g:6891:5: 
        {
        }

        match(input,142,FOLLOW_10); if (state.failed) return ;
        match(input,19,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred19_InternalCheckerDsl

    // $ANTLR start synpred20_InternalCheckerDsl
    public final void synpred20_InternalCheckerDsl_fragment() throws RecognitionException {   
        // InternalCheckerDsl.g:6934:4: ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )
        // InternalCheckerDsl.g:6934:5: ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' )
        {
        // InternalCheckerDsl.g:6934:5: ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' )
        // InternalCheckerDsl.g:6935:5: () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':'
        {
        // InternalCheckerDsl.g:6935:5: ()
        // InternalCheckerDsl.g:6936:5: 
        {
        }

        match(input,89,FOLLOW_10); if (state.failed) return ;
        match(input,19,FOLLOW_8); if (state.failed) return ;
        // InternalCheckerDsl.g:6939:5: ( ( ruleJvmFormalParameter ) )
        // InternalCheckerDsl.g:6940:6: ( ruleJvmFormalParameter )
        {
        // InternalCheckerDsl.g:6940:6: ( ruleJvmFormalParameter )
        // InternalCheckerDsl.g:6941:7: ruleJvmFormalParameter
        {
        pushFollow(FOLLOW_14);
        ruleJvmFormalParameter();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,22,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred20_InternalCheckerDsl

    // $ANTLR start synpred21_InternalCheckerDsl
    public final void synpred21_InternalCheckerDsl_fragment() throws RecognitionException {   
        // InternalCheckerDsl.g:7048:4: ( ( () '[' ) )
        // InternalCheckerDsl.g:7048:5: ( () '[' )
        {
        // InternalCheckerDsl.g:7048:5: ( () '[' )
        // InternalCheckerDsl.g:7049:5: () '['
        {
        // InternalCheckerDsl.g:7049:5: ()
        // InternalCheckerDsl.g:7050:5: 
        {
        }

        match(input,27,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred21_InternalCheckerDsl

    // $ANTLR start synpred23_InternalCheckerDsl
    public final void synpred23_InternalCheckerDsl_fragment() throws RecognitionException {   
        // InternalCheckerDsl.g:7353:4: ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )
        // InternalCheckerDsl.g:7353:5: ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        {
        // InternalCheckerDsl.g:7353:5: ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        // InternalCheckerDsl.g:7354:5: ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) )
        {
        // InternalCheckerDsl.g:7354:5: ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )?
        int alt183=2;
        int LA183_0 = input.LA(1);

        if ( (LA183_0==RULE_ID||LA183_0==19||LA183_0==108) ) {
            alt183=1;
        }
        switch (alt183) {
            case 1 :
                // InternalCheckerDsl.g:7355:6: ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )*
                {
                // InternalCheckerDsl.g:7355:6: ( ( ruleJvmFormalParameter ) )
                // InternalCheckerDsl.g:7356:7: ( ruleJvmFormalParameter )
                {
                // InternalCheckerDsl.g:7356:7: ( ruleJvmFormalParameter )
                // InternalCheckerDsl.g:7357:8: ruleJvmFormalParameter
                {
                pushFollow(FOLLOW_82);
                ruleJvmFormalParameter();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalCheckerDsl.g:7360:6: ( ',' ( ( ruleJvmFormalParameter ) ) )*
                loop182:
                do {
                    int alt182=2;
                    int LA182_0 = input.LA(1);

                    if ( (LA182_0==20) ) {
                        alt182=1;
                    }


                    switch (alt182) {
                	case 1 :
                	    // InternalCheckerDsl.g:7361:7: ',' ( ( ruleJvmFormalParameter ) )
                	    {
                	    match(input,20,FOLLOW_8); if (state.failed) return ;
                	    // InternalCheckerDsl.g:7362:7: ( ( ruleJvmFormalParameter ) )
                	    // InternalCheckerDsl.g:7363:8: ( ruleJvmFormalParameter )
                	    {
                	    // InternalCheckerDsl.g:7363:8: ( ruleJvmFormalParameter )
                	    // InternalCheckerDsl.g:7364:9: ruleJvmFormalParameter
                	    {
                	    pushFollow(FOLLOW_82);
                	    ruleJvmFormalParameter();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop182;
                    }
                } while (true);


                }
                break;

        }

        // InternalCheckerDsl.g:7369:5: ( ( '|' ) )
        // InternalCheckerDsl.g:7370:6: ( '|' )
        {
        // InternalCheckerDsl.g:7370:6: ( '|' )
        // InternalCheckerDsl.g:7371:7: '|'
        {
        match(input,80,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred23_InternalCheckerDsl

    // $ANTLR start synpred25_InternalCheckerDsl
    public final void synpred25_InternalCheckerDsl_fragment() throws RecognitionException {   
        // InternalCheckerDsl.g:7762:5: ( 'else' )
        // InternalCheckerDsl.g:7762:6: 'else'
        {
        match(input,121,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred25_InternalCheckerDsl

    // $ANTLR start synpred26_InternalCheckerDsl
    public final void synpred26_InternalCheckerDsl_fragment() throws RecognitionException {   
        // InternalCheckerDsl.g:7821:6: ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )
        // InternalCheckerDsl.g:7821:7: ( '(' ( ( ruleJvmFormalParameter ) ) ':' )
        {
        // InternalCheckerDsl.g:7821:7: ( '(' ( ( ruleJvmFormalParameter ) ) ':' )
        // InternalCheckerDsl.g:7822:7: '(' ( ( ruleJvmFormalParameter ) ) ':'
        {
        match(input,19,FOLLOW_8); if (state.failed) return ;
        // InternalCheckerDsl.g:7823:7: ( ( ruleJvmFormalParameter ) )
        // InternalCheckerDsl.g:7824:8: ( ruleJvmFormalParameter )
        {
        // InternalCheckerDsl.g:7824:8: ( ruleJvmFormalParameter )
        // InternalCheckerDsl.g:7825:9: ruleJvmFormalParameter
        {
        pushFollow(FOLLOW_14);
        ruleJvmFormalParameter();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,22,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred26_InternalCheckerDsl

    // $ANTLR start synpred27_InternalCheckerDsl
    public final void synpred27_InternalCheckerDsl_fragment() throws RecognitionException {   
        // InternalCheckerDsl.g:7888:6: ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )
        // InternalCheckerDsl.g:7888:7: ( ( ( ruleJvmFormalParameter ) ) ':' )
        {
        // InternalCheckerDsl.g:7888:7: ( ( ( ruleJvmFormalParameter ) ) ':' )
        // InternalCheckerDsl.g:7889:7: ( ( ruleJvmFormalParameter ) ) ':'
        {
        // InternalCheckerDsl.g:7889:7: ( ( ruleJvmFormalParameter ) )
        // InternalCheckerDsl.g:7890:8: ( ruleJvmFormalParameter )
        {
        // InternalCheckerDsl.g:7890:8: ( ruleJvmFormalParameter )
        // InternalCheckerDsl.g:7891:9: ruleJvmFormalParameter
        {
        pushFollow(FOLLOW_14);
        ruleJvmFormalParameter();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,22,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred27_InternalCheckerDsl

    // $ANTLR start synpred29_InternalCheckerDsl
    public final void synpred29_InternalCheckerDsl_fragment() throws RecognitionException {   
        // InternalCheckerDsl.g:8706:5: ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) ) )
        // InternalCheckerDsl.g:8706:6: ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) )
        {
        // InternalCheckerDsl.g:8706:6: ( ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) ) )
        // InternalCheckerDsl.g:8707:6: ( ( ruleJvmTypeReference ) ) ( ( ruleValidID ) )
        {
        // InternalCheckerDsl.g:8707:6: ( ( ruleJvmTypeReference ) )
        // InternalCheckerDsl.g:8708:7: ( ruleJvmTypeReference )
        {
        // InternalCheckerDsl.g:8708:7: ( ruleJvmTypeReference )
        // InternalCheckerDsl.g:8709:8: ruleJvmTypeReference
        {
        pushFollow(FOLLOW_4);
        ruleJvmTypeReference();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalCheckerDsl.g:8712:6: ( ( ruleValidID ) )
        // InternalCheckerDsl.g:8713:7: ( ruleValidID )
        {
        // InternalCheckerDsl.g:8713:7: ( ruleValidID )
        // InternalCheckerDsl.g:8714:8: ruleValidID
        {
        pushFollow(FOLLOW_2);
        ruleValidID();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred29_InternalCheckerDsl

    // $ANTLR start synpred30_InternalCheckerDsl
    public final void synpred30_InternalCheckerDsl_fragment() throws RecognitionException {   
        // InternalCheckerDsl.g:9018:5: ( ( '(' ) )
        // InternalCheckerDsl.g:9018:6: ( '(' )
        {
        // InternalCheckerDsl.g:9018:6: ( '(' )
        // InternalCheckerDsl.g:9019:6: '('
        {
        match(input,19,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred30_InternalCheckerDsl

    // $ANTLR start synpred31_InternalCheckerDsl
    public final void synpred31_InternalCheckerDsl_fragment() throws RecognitionException {   
        // InternalCheckerDsl.g:9037:6: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )
        // InternalCheckerDsl.g:9037:7: ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        {
        // InternalCheckerDsl.g:9037:7: ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        // InternalCheckerDsl.g:9038:7: () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) )
        {
        // InternalCheckerDsl.g:9038:7: ()
        // InternalCheckerDsl.g:9039:7: 
        {
        }

        // InternalCheckerDsl.g:9040:7: ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )?
        int alt187=2;
        int LA187_0 = input.LA(1);

        if ( (LA187_0==RULE_ID||LA187_0==19||LA187_0==108) ) {
            alt187=1;
        }
        switch (alt187) {
            case 1 :
                // InternalCheckerDsl.g:9041:8: ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )*
                {
                // InternalCheckerDsl.g:9041:8: ( ( ruleJvmFormalParameter ) )
                // InternalCheckerDsl.g:9042:9: ( ruleJvmFormalParameter )
                {
                // InternalCheckerDsl.g:9042:9: ( ruleJvmFormalParameter )
                // InternalCheckerDsl.g:9043:10: ruleJvmFormalParameter
                {
                pushFollow(FOLLOW_82);
                ruleJvmFormalParameter();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalCheckerDsl.g:9046:8: ( ',' ( ( ruleJvmFormalParameter ) ) )*
                loop186:
                do {
                    int alt186=2;
                    int LA186_0 = input.LA(1);

                    if ( (LA186_0==20) ) {
                        alt186=1;
                    }


                    switch (alt186) {
                	case 1 :
                	    // InternalCheckerDsl.g:9047:9: ',' ( ( ruleJvmFormalParameter ) )
                	    {
                	    match(input,20,FOLLOW_8); if (state.failed) return ;
                	    // InternalCheckerDsl.g:9048:9: ( ( ruleJvmFormalParameter ) )
                	    // InternalCheckerDsl.g:9049:10: ( ruleJvmFormalParameter )
                	    {
                	    // InternalCheckerDsl.g:9049:10: ( ruleJvmFormalParameter )
                	    // InternalCheckerDsl.g:9050:11: ruleJvmFormalParameter
                	    {
                	    pushFollow(FOLLOW_82);
                	    ruleJvmFormalParameter();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop186;
                    }
                } while (true);


                }
                break;

        }

        // InternalCheckerDsl.g:9055:7: ( ( '|' ) )
        // InternalCheckerDsl.g:9056:8: ( '|' )
        {
        // InternalCheckerDsl.g:9056:8: ( '|' )
        // InternalCheckerDsl.g:9057:9: '|'
        {
        match(input,80,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred31_InternalCheckerDsl

    // $ANTLR start synpred32_InternalCheckerDsl
    public final void synpred32_InternalCheckerDsl_fragment() throws RecognitionException {   
        // InternalCheckerDsl.g:9134:4: ( ( () '[' ) )
        // InternalCheckerDsl.g:9134:5: ( () '[' )
        {
        // InternalCheckerDsl.g:9134:5: ( () '[' )
        // InternalCheckerDsl.g:9135:5: () '['
        {
        // InternalCheckerDsl.g:9135:5: ()
        // InternalCheckerDsl.g:9136:5: 
        {
        }

        match(input,27,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred32_InternalCheckerDsl

    // $ANTLR start synpred33_InternalCheckerDsl
    public final void synpred33_InternalCheckerDsl_fragment() throws RecognitionException {   
        // InternalCheckerDsl.g:9294:5: ( '<' )
        // InternalCheckerDsl.g:9294:6: '<'
        {
        match(input,46,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred33_InternalCheckerDsl

    // $ANTLR start synpred34_InternalCheckerDsl
    public final void synpred34_InternalCheckerDsl_fragment() throws RecognitionException {   
        // InternalCheckerDsl.g:9351:5: ( ( '(' ) )
        // InternalCheckerDsl.g:9351:6: ( '(' )
        {
        // InternalCheckerDsl.g:9351:6: ( '(' )
        // InternalCheckerDsl.g:9352:6: '('
        {
        match(input,19,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred34_InternalCheckerDsl

    // $ANTLR start synpred35_InternalCheckerDsl
    public final void synpred35_InternalCheckerDsl_fragment() throws RecognitionException {   
        // InternalCheckerDsl.g:9370:6: ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )
        // InternalCheckerDsl.g:9370:7: ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        {
        // InternalCheckerDsl.g:9370:7: ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) )
        // InternalCheckerDsl.g:9371:7: () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) )
        {
        // InternalCheckerDsl.g:9371:7: ()
        // InternalCheckerDsl.g:9372:7: 
        {
        }

        // InternalCheckerDsl.g:9373:7: ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )?
        int alt189=2;
        int LA189_0 = input.LA(1);

        if ( (LA189_0==RULE_ID||LA189_0==19||LA189_0==108) ) {
            alt189=1;
        }
        switch (alt189) {
            case 1 :
                // InternalCheckerDsl.g:9374:8: ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )*
                {
                // InternalCheckerDsl.g:9374:8: ( ( ruleJvmFormalParameter ) )
                // InternalCheckerDsl.g:9375:9: ( ruleJvmFormalParameter )
                {
                // InternalCheckerDsl.g:9375:9: ( ruleJvmFormalParameter )
                // InternalCheckerDsl.g:9376:10: ruleJvmFormalParameter
                {
                pushFollow(FOLLOW_82);
                ruleJvmFormalParameter();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalCheckerDsl.g:9379:8: ( ',' ( ( ruleJvmFormalParameter ) ) )*
                loop188:
                do {
                    int alt188=2;
                    int LA188_0 = input.LA(1);

                    if ( (LA188_0==20) ) {
                        alt188=1;
                    }


                    switch (alt188) {
                	case 1 :
                	    // InternalCheckerDsl.g:9380:9: ',' ( ( ruleJvmFormalParameter ) )
                	    {
                	    match(input,20,FOLLOW_8); if (state.failed) return ;
                	    // InternalCheckerDsl.g:9381:9: ( ( ruleJvmFormalParameter ) )
                	    // InternalCheckerDsl.g:9382:10: ( ruleJvmFormalParameter )
                	    {
                	    // InternalCheckerDsl.g:9382:10: ( ruleJvmFormalParameter )
                	    // InternalCheckerDsl.g:9383:11: ruleJvmFormalParameter
                	    {
                	    pushFollow(FOLLOW_82);
                	    ruleJvmFormalParameter();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop188;
                    }
                } while (true);


                }
                break;

        }

        // InternalCheckerDsl.g:9388:7: ( ( '|' ) )
        // InternalCheckerDsl.g:9389:8: ( '|' )
        {
        // InternalCheckerDsl.g:9389:8: ( '|' )
        // InternalCheckerDsl.g:9390:9: '|'
        {
        match(input,80,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred35_InternalCheckerDsl

    // $ANTLR start synpred36_InternalCheckerDsl
    public final void synpred36_InternalCheckerDsl_fragment() throws RecognitionException {   
        // InternalCheckerDsl.g:9467:4: ( ( () '[' ) )
        // InternalCheckerDsl.g:9467:5: ( () '[' )
        {
        // InternalCheckerDsl.g:9467:5: ( () '[' )
        // InternalCheckerDsl.g:9468:5: () '['
        {
        // InternalCheckerDsl.g:9468:5: ()
        // InternalCheckerDsl.g:9469:5: 
        {
        }

        match(input,27,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred36_InternalCheckerDsl

    // $ANTLR start synpred37_InternalCheckerDsl
    public final void synpred37_InternalCheckerDsl_fragment() throws RecognitionException {   
        // InternalCheckerDsl.g:9810:4: ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | 'synchronized' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )
        // InternalCheckerDsl.g:
        {
        if ( (input.LA(1)>=RULE_INT && input.LA(1)<=RULE_ID)||input.LA(1)==14||input.LA(1)==17||input.LA(1)==19||input.LA(1)==27||input.LA(1)==46||(input.LA(1)>=76 && input.LA(1)<=77)||input.LA(1)==89||input.LA(1)==113||(input.LA(1)>=119 && input.LA(1)<=120)||input.LA(1)==122||(input.LA(1)>=125 && input.LA(1)<=126)||(input.LA(1)>=129 && input.LA(1)<=140)||input.LA(1)==142 ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred37_InternalCheckerDsl

    // $ANTLR start synpred38_InternalCheckerDsl
    public final void synpred38_InternalCheckerDsl_fragment() throws RecognitionException {   
        // InternalCheckerDsl.g:9881:6: ( 'catch' )
        // InternalCheckerDsl.g:9881:7: 'catch'
        {
        match(input,143,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred38_InternalCheckerDsl

    // $ANTLR start synpred39_InternalCheckerDsl
    public final void synpred39_InternalCheckerDsl_fragment() throws RecognitionException {   
        // InternalCheckerDsl.g:9902:7: ( 'finally' )
        // InternalCheckerDsl.g:9902:8: 'finally'
        {
        match(input,141,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred39_InternalCheckerDsl

    // $ANTLR start synpred42_InternalCheckerDsl
    public final void synpred42_InternalCheckerDsl_fragment() throws RecognitionException {   
        // InternalCheckerDsl.g:10146:5: ( '.' )
        // InternalCheckerDsl.g:10146:6: '.'
        {
        match(input,44,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred42_InternalCheckerDsl

    // $ANTLR start synpred43_InternalCheckerDsl
    public final void synpred43_InternalCheckerDsl_fragment() throws RecognitionException {   
        // InternalCheckerDsl.g:10272:5: ( ( () ruleArrayBrackets ) )
        // InternalCheckerDsl.g:10272:6: ( () ruleArrayBrackets )
        {
        // InternalCheckerDsl.g:10272:6: ( () ruleArrayBrackets )
        // InternalCheckerDsl.g:10273:6: () ruleArrayBrackets
        {
        // InternalCheckerDsl.g:10273:6: ()
        // InternalCheckerDsl.g:10274:6: 
        {
        }

        pushFollow(FOLLOW_2);
        ruleArrayBrackets();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred43_InternalCheckerDsl

    // $ANTLR start synpred44_InternalCheckerDsl
    public final void synpred44_InternalCheckerDsl_fragment() throws RecognitionException {   
        // InternalCheckerDsl.g:10469:5: ( '<' )
        // InternalCheckerDsl.g:10469:6: '<'
        {
        match(input,46,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred44_InternalCheckerDsl

    // $ANTLR start synpred45_InternalCheckerDsl
    public final void synpred45_InternalCheckerDsl_fragment() throws RecognitionException {   
        // InternalCheckerDsl.g:10525:6: ( ( () '.' ) )
        // InternalCheckerDsl.g:10525:7: ( () '.' )
        {
        // InternalCheckerDsl.g:10525:7: ( () '.' )
        // InternalCheckerDsl.g:10526:7: () '.'
        {
        // InternalCheckerDsl.g:10526:7: ()
        // InternalCheckerDsl.g:10527:7: 
        {
        }

        match(input,44,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred45_InternalCheckerDsl

    // $ANTLR start synpred46_InternalCheckerDsl
    public final void synpred46_InternalCheckerDsl_fragment() throws RecognitionException {   
        // InternalCheckerDsl.g:10563:7: ( '<' )
        // InternalCheckerDsl.g:10563:8: '<'
        {
        match(input,46,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred46_InternalCheckerDsl

    // Delegated rules

    public final boolean synpred27_InternalCheckerDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred27_InternalCheckerDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred26_InternalCheckerDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred26_InternalCheckerDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred3_InternalCheckerDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred3_InternalCheckerDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred2_InternalCheckerDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred2_InternalCheckerDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred1_InternalCheckerDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred1_InternalCheckerDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred25_InternalCheckerDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred25_InternalCheckerDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred29_InternalCheckerDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred29_InternalCheckerDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred19_InternalCheckerDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred19_InternalCheckerDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred20_InternalCheckerDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred20_InternalCheckerDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred23_InternalCheckerDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred23_InternalCheckerDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred21_InternalCheckerDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred21_InternalCheckerDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred44_InternalCheckerDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred44_InternalCheckerDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred43_InternalCheckerDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred43_InternalCheckerDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred46_InternalCheckerDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred46_InternalCheckerDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred45_InternalCheckerDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred45_InternalCheckerDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred42_InternalCheckerDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred42_InternalCheckerDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred38_InternalCheckerDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred38_InternalCheckerDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred39_InternalCheckerDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred39_InternalCheckerDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred12_InternalCheckerDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred12_InternalCheckerDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred17_InternalCheckerDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred17_InternalCheckerDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred11_InternalCheckerDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred11_InternalCheckerDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred18_InternalCheckerDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred18_InternalCheckerDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred10_InternalCheckerDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred10_InternalCheckerDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred13_InternalCheckerDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred13_InternalCheckerDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred16_InternalCheckerDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred16_InternalCheckerDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred15_InternalCheckerDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred15_InternalCheckerDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred14_InternalCheckerDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred14_InternalCheckerDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred7_InternalCheckerDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred7_InternalCheckerDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred35_InternalCheckerDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred35_InternalCheckerDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred6_InternalCheckerDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred6_InternalCheckerDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred34_InternalCheckerDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred34_InternalCheckerDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred36_InternalCheckerDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred36_InternalCheckerDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred4_InternalCheckerDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred4_InternalCheckerDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred32_InternalCheckerDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred32_InternalCheckerDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred37_InternalCheckerDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred37_InternalCheckerDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred5_InternalCheckerDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred5_InternalCheckerDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred33_InternalCheckerDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred33_InternalCheckerDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred8_InternalCheckerDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred8_InternalCheckerDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred9_InternalCheckerDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred9_InternalCheckerDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred31_InternalCheckerDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred31_InternalCheckerDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred30_InternalCheckerDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred30_InternalCheckerDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA36 dfa36 = new DFA36(this);
    protected DFA67 dfa67 = new DFA67(this);
    protected DFA77 dfa77 = new DFA77(this);
    protected DFA80 dfa80 = new DFA80(this);
    protected DFA96 dfa96 = new DFA96(this);
    protected DFA95 dfa95 = new DFA95(this);
    protected DFA97 dfa97 = new DFA97(this);
    protected DFA99 dfa99 = new DFA99(this);
    protected DFA108 dfa108 = new DFA108(this);
    protected DFA115 dfa115 = new DFA115(this);
    protected DFA114 dfa114 = new DFA114(this);
    protected DFA137 dfa137 = new DFA137(this);
    protected DFA136 dfa136 = new DFA136(this);
    protected DFA138 dfa138 = new DFA138(this);
    protected DFA142 dfa142 = new DFA142(this);
    protected DFA145 dfa145 = new DFA145(this);
    protected DFA144 dfa144 = new DFA144(this);
    protected DFA146 dfa146 = new DFA146(this);
    protected DFA149 dfa149 = new DFA149(this);
    protected DFA167 dfa167 = new DFA167(this);
    protected DFA165 dfa165 = new DFA165(this);
    protected DFA175 dfa175 = new DFA175(this);
    static final String dfa_1s = "\21\uffff";
    static final String dfa_2s = "\1\4\1\uffff\3\54\1\23\2\uffff\1\10\1\uffff\1\33\1\4\1\33\1\4\2\34\1\33";
    static final String dfa_3s = "\1\115\1\uffff\3\54\1\126\2\uffff\1\10\1\uffff\1\126\1\115\1\126\1\4\2\34\1\126";
    static final String dfa_4s = "\1\uffff\1\1\4\uffff\1\2\1\4\1\uffff\1\3\7\uffff";
    static final String dfa_5s = "\21\uffff}>";
    static final String[] dfa_6s = {
            "\1\6\3\uffff\1\5\40\uffff\1\2\1\3\1\4\2\uffff\1\6\1\uffff\6\1\1\uffff\23\1\1\7\2\uffff\1\6",
            "",
            "\1\10",
            "\1\10",
            "\1\10",
            "\1\11\7\uffff\1\13\21\uffff\1\12\2\6\33\uffff\1\7\7\uffff\4\6",
            "",
            "",
            "\1\14",
            "",
            "\1\13\22\uffff\2\6\33\uffff\1\7\7\uffff\4\6",
            "\1\16\3\uffff\1\17\104\uffff\1\15",
            "\1\13\21\uffff\1\12\2\6\33\uffff\1\7\7\uffff\4\6",
            "\1\16",
            "\1\20",
            "\1\20",
            "\1\13\22\uffff\2\6\33\uffff\1\7\7\uffff\4\6"
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final char[] dfa_2 = DFA.unpackEncodedStringToUnsignedChars(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final short[] dfa_4 = DFA.unpackEncodedString(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[][] dfa_6 = unpackEncodedStringArray(dfa_6s);

    class DFA36 extends DFA {

        public DFA36(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 36;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "3349:2: (this_Helper_0= ruleHelper | this_ChkRelationalExpression_1= ruleChkRelationalExpression | this_MethodCall_2= ruleMethodCall | this_ChkAssignment_3= ruleChkAssignment )";
        }
    }
    static final String dfa_7s = "\12\uffff";
    static final String dfa_8s = "\1\10\11\uffff";
    static final String dfa_9s = "\1\4\7\0\2\uffff";
    static final String dfa_10s = "\1\u008f\7\0\2\uffff";
    static final String dfa_11s = "\10\uffff\1\2\1\1";
    static final String dfa_12s = "\1\uffff\1\2\1\3\1\4\1\5\1\6\1\0\1\1\2\uffff}>";
    static final String[] dfa_13s = {
            "\5\10\5\uffff\2\10\1\uffff\1\10\1\uffff\4\10\4\uffff\3\10\16\uffff\1\10\1\uffff\1\6\1\7\6\uffff\1\10\25\uffff\4\10\3\uffff\3\10\3\uffff\1\10\6\uffff\1\1\1\2\1\3\1\4\1\5\53\10",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };

    static final short[] dfa_7 = DFA.unpackEncodedString(dfa_7s);
    static final short[] dfa_8 = DFA.unpackEncodedString(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final char[] dfa_10 = DFA.unpackEncodedStringToUnsignedChars(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[] dfa_12 = DFA.unpackEncodedString(dfa_12s);
    static final short[][] dfa_13 = unpackEncodedStringArray(dfa_13s);

    class DFA67 extends DFA {

        public DFA67(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 67;
            this.eot = dfa_7;
            this.eof = dfa_8;
            this.min = dfa_9;
            this.max = dfa_10;
            this.accept = dfa_11;
            this.special = dfa_12;
            this.transition = dfa_13;
        }
        public String getDescription() {
            return "5007:4: ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA67_6 = input.LA(1);

                         
                        int index67_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalCheckerDsl()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index67_6);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA67_7 = input.LA(1);

                         
                        int index67_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalCheckerDsl()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index67_7);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA67_1 = input.LA(1);

                         
                        int index67_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalCheckerDsl()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index67_1);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA67_2 = input.LA(1);

                         
                        int index67_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalCheckerDsl()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index67_2);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA67_3 = input.LA(1);

                         
                        int index67_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalCheckerDsl()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index67_3);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA67_4 = input.LA(1);

                         
                        int index67_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalCheckerDsl()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index67_4);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA67_5 = input.LA(1);

                         
                        int index67_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_InternalCheckerDsl()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index67_5);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 67, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_14s = "\13\uffff";
    static final String dfa_15s = "\1\1\12\uffff";
    static final String dfa_16s = "\1\4\1\uffff\10\0\1\uffff";
    static final String dfa_17s = "\1\u008f\1\uffff\10\0\1\uffff";
    static final String dfa_18s = "\1\uffff\1\2\10\uffff\1\1";
    static final String dfa_19s = "\2\uffff\1\6\1\2\1\0\1\1\1\7\1\5\1\3\1\4\1\uffff}>";
    static final String[] dfa_20s = {
            "\5\1\5\uffff\2\1\1\uffff\1\1\1\uffff\4\1\4\uffff\3\1\16\uffff\1\1\1\uffff\1\2\1\3\6\uffff\1\6\25\uffff\4\1\3\uffff\3\1\3\uffff\1\1\6\uffff\12\1\1\4\1\5\1\7\1\10\1\11\41\1",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };

    static final short[] dfa_14 = DFA.unpackEncodedString(dfa_14s);
    static final short[] dfa_15 = DFA.unpackEncodedString(dfa_15s);
    static final char[] dfa_16 = DFA.unpackEncodedStringToUnsignedChars(dfa_16s);
    static final char[] dfa_17 = DFA.unpackEncodedStringToUnsignedChars(dfa_17s);
    static final short[] dfa_18 = DFA.unpackEncodedString(dfa_18s);
    static final short[] dfa_19 = DFA.unpackEncodedString(dfa_19s);
    static final short[][] dfa_20 = unpackEncodedStringArray(dfa_20s);

    class DFA77 extends DFA {

        public DFA77(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 77;
            this.eot = dfa_14;
            this.eof = dfa_15;
            this.min = dfa_16;
            this.max = dfa_17;
            this.accept = dfa_18;
            this.special = dfa_19;
            this.transition = dfa_20;
        }
        public String getDescription() {
            return "()* loopback of 5721:3: ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA77_4 = input.LA(1);

                         
                        int index77_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalCheckerDsl()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index77_4);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA77_5 = input.LA(1);

                         
                        int index77_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalCheckerDsl()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index77_5);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA77_3 = input.LA(1);

                         
                        int index77_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalCheckerDsl()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index77_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA77_8 = input.LA(1);

                         
                        int index77_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalCheckerDsl()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index77_8);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA77_9 = input.LA(1);

                         
                        int index77_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalCheckerDsl()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index77_9);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA77_7 = input.LA(1);

                         
                        int index77_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalCheckerDsl()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index77_7);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA77_2 = input.LA(1);

                         
                        int index77_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalCheckerDsl()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index77_2);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA77_6 = input.LA(1);

                         
                        int index77_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalCheckerDsl()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index77_6);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 77, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_21s = "\1\56\2\uffff\1\57\7\uffff";
    static final String dfa_22s = "\1\156\2\uffff\1\66\7\uffff";
    static final String dfa_23s = "\1\uffff\1\1\1\2\1\uffff\1\4\1\5\1\7\1\10\1\11\1\3\1\6";
    static final String dfa_24s = "\13\uffff}>";
    static final String[] dfa_25s = {
            "\1\6\1\3\6\uffff\1\4\63\uffff\1\1\1\2\1\5\1\7\1\10",
            "",
            "",
            "\1\12\6\uffff\1\11",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_21 = DFA.unpackEncodedStringToUnsignedChars(dfa_21s);
    static final char[] dfa_22 = DFA.unpackEncodedStringToUnsignedChars(dfa_22s);
    static final short[] dfa_23 = DFA.unpackEncodedString(dfa_23s);
    static final short[] dfa_24 = DFA.unpackEncodedString(dfa_24s);
    static final short[][] dfa_25 = unpackEncodedStringArray(dfa_25s);

    class DFA80 extends DFA {

        public DFA80(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 80;
            this.eot = dfa_14;
            this.eof = dfa_14;
            this.min = dfa_21;
            this.max = dfa_22;
            this.accept = dfa_23;
            this.special = dfa_24;
            this.transition = dfa_25;
        }
        public String getDescription() {
            return "5797:2: (kw= '->' | kw= '..<' | (kw= '>' kw= '..' ) | kw= '..' | kw= '=>' | (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) ) | (kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' ) ) | kw= '<>' | kw= '?:' )";
        }
    }
    static final String dfa_26s = "\116\uffff";
    static final String dfa_27s = "\1\2\115\uffff";
    static final String dfa_28s = "\1\4\1\0\114\uffff";
    static final String dfa_29s = "\1\u008f\1\0\114\uffff";
    static final String dfa_30s = "\2\uffff\1\2\112\uffff\1\1";
    static final String dfa_31s = "\1\uffff\1\0\114\uffff}>";
    static final String[] dfa_32s = {
            "\5\2\5\uffff\2\2\1\uffff\1\2\1\uffff\1\1\3\2\4\uffff\3\2\16\uffff\1\2\1\uffff\2\2\6\uffff\1\2\25\uffff\4\2\3\uffff\3\2\3\uffff\1\2\6\uffff\60\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_26 = DFA.unpackEncodedString(dfa_26s);
    static final short[] dfa_27 = DFA.unpackEncodedString(dfa_27s);
    static final char[] dfa_28 = DFA.unpackEncodedStringToUnsignedChars(dfa_28s);
    static final char[] dfa_29 = DFA.unpackEncodedStringToUnsignedChars(dfa_29s);
    static final short[] dfa_30 = DFA.unpackEncodedString(dfa_30s);
    static final short[] dfa_31 = DFA.unpackEncodedString(dfa_31s);
    static final short[][] dfa_32 = unpackEncodedStringArray(dfa_32s);

    class DFA96 extends DFA {

        public DFA96(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 96;
            this.eot = dfa_26;
            this.eof = dfa_27;
            this.min = dfa_28;
            this.max = dfa_29;
            this.accept = dfa_30;
            this.special = dfa_31;
            this.transition = dfa_32;
        }
        public String getDescription() {
            return "6698:5: ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA96_1 = input.LA(1);

                         
                        int index96_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred16_InternalCheckerDsl()) ) {s = 77;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index96_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 96, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_33s = "\44\uffff";
    static final String dfa_34s = "\1\4\2\0\41\uffff";
    static final String dfa_35s = "\1\u008e\2\0\41\uffff";
    static final String dfa_36s = "\3\uffff\2\1\1\2\35\uffff\1\3";
    static final String dfa_37s = "\1\0\1\1\1\2\41\uffff}>";
    static final String[] dfa_38s = {
            "\4\5\1\1\5\uffff\1\5\2\uffff\1\5\1\uffff\1\2\1\uffff\1\43\5\uffff\1\5\22\uffff\1\5\35\uffff\2\5\2\uffff\1\4\10\uffff\1\5\22\uffff\1\3\4\uffff\1\5\5\uffff\2\5\1\uffff\1\5\2\uffff\2\5\2\uffff\14\5\1\uffff\1\5",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_33 = DFA.unpackEncodedString(dfa_33s);
    static final char[] dfa_34 = DFA.unpackEncodedStringToUnsignedChars(dfa_34s);
    static final char[] dfa_35 = DFA.unpackEncodedStringToUnsignedChars(dfa_35s);
    static final short[] dfa_36 = DFA.unpackEncodedString(dfa_36s);
    static final short[] dfa_37 = DFA.unpackEncodedString(dfa_37s);
    static final short[][] dfa_38 = unpackEncodedStringArray(dfa_38s);

    class DFA95 extends DFA {

        public DFA95(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 95;
            this.eot = dfa_33;
            this.eof = dfa_33;
            this.min = dfa_34;
            this.max = dfa_35;
            this.accept = dfa_36;
            this.special = dfa_37;
            this.transition = dfa_38;
        }
        public String getDescription() {
            return "6717:6: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA95_0 = input.LA(1);

                         
                        int index95_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA95_0==RULE_ID) ) {s = 1;}

                        else if ( (LA95_0==19) ) {s = 2;}

                        else if ( (LA95_0==108) && (synpred17_InternalCheckerDsl())) {s = 3;}

                        else if ( (LA95_0==80) && (synpred17_InternalCheckerDsl())) {s = 4;}

                        else if ( ((LA95_0>=RULE_INT && LA95_0<=RULE_DECIMAL)||LA95_0==14||LA95_0==17||LA95_0==27||LA95_0==46||(LA95_0>=76 && LA95_0<=77)||LA95_0==89||LA95_0==113||(LA95_0>=119 && LA95_0<=120)||LA95_0==122||(LA95_0>=125 && LA95_0<=126)||(LA95_0>=129 && LA95_0<=140)||LA95_0==142) ) {s = 5;}

                        else if ( (LA95_0==21) ) {s = 35;}

                         
                        input.seek(index95_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA95_1 = input.LA(1);

                         
                        int index95_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalCheckerDsl()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index95_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA95_2 = input.LA(1);

                         
                        int index95_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalCheckerDsl()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index95_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 95, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_39s = {
            "\5\2\5\uffff\2\2\1\uffff\1\2\1\uffff\4\2\4\uffff\1\1\2\2\16\uffff\1\2\1\uffff\2\2\6\uffff\1\2\25\uffff\4\2\3\uffff\3\2\3\uffff\1\2\6\uffff\60\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[][] dfa_39 = unpackEncodedStringArray(dfa_39s);

    class DFA97 extends DFA {

        public DFA97(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 97;
            this.eot = dfa_26;
            this.eof = dfa_27;
            this.min = dfa_28;
            this.max = dfa_29;
            this.accept = dfa_30;
            this.special = dfa_31;
            this.transition = dfa_39;
        }
        public String getDescription() {
            return "6815:5: ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA97_1 = input.LA(1);

                         
                        int index97_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred18_InternalCheckerDsl()) ) {s = 77;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index97_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 97, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_40s = "\40\uffff";
    static final String dfa_41s = "\1\4\26\uffff\1\0\10\uffff";
    static final String dfa_42s = "\1\u008e\26\uffff\1\0\10\uffff";
    static final String dfa_43s = "\1\uffff\1\1\1\2\1\3\1\4\1\5\6\uffff\1\6\11\uffff\1\7\1\uffff\1\12\1\13\1\14\1\15\1\16\1\17\1\10\1\11";
    static final String dfa_44s = "\1\0\26\uffff\1\1\10\uffff}>";
    static final String[] dfa_45s = {
            "\4\14\1\5\5\uffff\1\2\2\uffff\1\5\1\uffff\1\35\7\uffff\1\14\22\uffff\1\5\52\uffff\1\27\35\uffff\1\14\1\26\1\uffff\1\3\2\uffff\1\30\1\31\2\uffff\4\5\1\1\4\14\1\32\1\33\1\34\1\uffff\1\4",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_40 = DFA.unpackEncodedString(dfa_40s);
    static final char[] dfa_41 = DFA.unpackEncodedStringToUnsignedChars(dfa_41s);
    static final char[] dfa_42 = DFA.unpackEncodedStringToUnsignedChars(dfa_42s);
    static final short[] dfa_43 = DFA.unpackEncodedString(dfa_43s);
    static final short[] dfa_44 = DFA.unpackEncodedString(dfa_44s);
    static final short[][] dfa_45 = unpackEncodedStringArray(dfa_45s);

    class DFA99 extends DFA {

        public DFA99(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 99;
            this.eot = dfa_40;
            this.eof = dfa_40;
            this.min = dfa_41;
            this.max = dfa_42;
            this.accept = dfa_43;
            this.special = dfa_44;
            this.transition = dfa_45;
        }
        public String getDescription() {
            return "6860:2: (this_XConstructorCall_0= ruleXConstructorCall | this_XBlockExpression_1= ruleXBlockExpression | this_XSwitchExpression_2= ruleXSwitchExpression | ( ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression ) | this_XFeatureCall_4= ruleXFeatureCall | this_XLiteral_5= ruleXLiteral | this_XIfExpression_6= ruleXIfExpression | ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_7= ruleXForLoopExpression ) | this_XBasicForLoopExpression_8= ruleXBasicForLoopExpression | this_XWhileExpression_9= ruleXWhileExpression | this_XDoWhileExpression_10= ruleXDoWhileExpression | this_XThrowExpression_11= ruleXThrowExpression | this_XReturnExpression_12= ruleXReturnExpression | this_XTryCatchFinallyExpression_13= ruleXTryCatchFinallyExpression | this_XParenthesizedExpression_14= ruleXParenthesizedExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA99_0 = input.LA(1);

                         
                        int index99_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA99_0==133) ) {s = 1;}

                        else if ( (LA99_0==14) ) {s = 2;}

                        else if ( (LA99_0==122) ) {s = 3;}

                        else if ( (LA99_0==142) && (synpred19_InternalCheckerDsl())) {s = 4;}

                        else if ( (LA99_0==RULE_ID||LA99_0==17||LA99_0==46||(LA99_0>=129 && LA99_0<=132)) ) {s = 5;}

                        else if ( ((LA99_0>=RULE_INT && LA99_0<=RULE_DECIMAL)||LA99_0==27||LA99_0==119||(LA99_0>=134 && LA99_0<=137)) ) {s = 12;}

                        else if ( (LA99_0==120) ) {s = 22;}

                        else if ( (LA99_0==89) ) {s = 23;}

                        else if ( (LA99_0==125) ) {s = 24;}

                        else if ( (LA99_0==126) ) {s = 25;}

                        else if ( (LA99_0==138) ) {s = 26;}

                        else if ( (LA99_0==139) ) {s = 27;}

                        else if ( (LA99_0==140) ) {s = 28;}

                        else if ( (LA99_0==19) ) {s = 29;}

                         
                        input.seek(index99_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA99_23 = input.LA(1);

                         
                        int index99_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred20_InternalCheckerDsl()) ) {s = 30;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index99_23);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 99, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_46s = "\46\uffff";
    static final String dfa_47s = "\1\4\2\0\43\uffff";
    static final String dfa_48s = "\1\u008e\2\0\43\uffff";
    static final String dfa_49s = "\3\uffff\2\1\1\2\40\uffff";
    static final String dfa_50s = "\1\0\1\1\1\2\43\uffff}>";
    static final String[] dfa_51s = {
            "\4\5\1\1\5\uffff\1\5\2\uffff\1\5\1\uffff\1\2\7\uffff\2\5\21\uffff\1\5\35\uffff\2\5\2\uffff\1\4\10\uffff\1\5\22\uffff\1\3\4\uffff\1\5\5\uffff\2\5\1\uffff\1\5\2\uffff\20\5\1\uffff\1\5",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_46 = DFA.unpackEncodedString(dfa_46s);
    static final char[] dfa_47 = DFA.unpackEncodedStringToUnsignedChars(dfa_47s);
    static final char[] dfa_48 = DFA.unpackEncodedStringToUnsignedChars(dfa_48s);
    static final short[] dfa_49 = DFA.unpackEncodedString(dfa_49s);
    static final short[] dfa_50 = DFA.unpackEncodedString(dfa_50s);
    static final short[][] dfa_51 = unpackEncodedStringArray(dfa_51s);

    class DFA108 extends DFA {

        public DFA108(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 108;
            this.eot = dfa_46;
            this.eof = dfa_46;
            this.min = dfa_47;
            this.max = dfa_48;
            this.accept = dfa_49;
            this.special = dfa_50;
            this.transition = dfa_51;
        }
        public String getDescription() {
            return "7352:3: ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA108_0 = input.LA(1);

                         
                        int index108_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA108_0==RULE_ID) ) {s = 1;}

                        else if ( (LA108_0==19) ) {s = 2;}

                        else if ( (LA108_0==108) && (synpred23_InternalCheckerDsl())) {s = 3;}

                        else if ( (LA108_0==80) && (synpred23_InternalCheckerDsl())) {s = 4;}

                        else if ( ((LA108_0>=RULE_INT && LA108_0<=RULE_DECIMAL)||LA108_0==14||LA108_0==17||(LA108_0>=27 && LA108_0<=28)||LA108_0==46||(LA108_0>=76 && LA108_0<=77)||LA108_0==89||LA108_0==113||(LA108_0>=119 && LA108_0<=120)||LA108_0==122||(LA108_0>=125 && LA108_0<=140)||LA108_0==142) ) {s = 5;}

                         
                        input.seek(index108_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA108_1 = input.LA(1);

                         
                        int index108_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_InternalCheckerDsl()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index108_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA108_2 = input.LA(1);

                         
                        int index108_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_InternalCheckerDsl()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index108_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 108, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_52s = "\43\uffff";
    static final String dfa_53s = "\1\4\1\0\41\uffff";
    static final String dfa_54s = "\1\u008e\1\0\41\uffff";
    static final String dfa_55s = "\2\uffff\1\2\37\uffff\1\1";
    static final String dfa_56s = "\1\uffff\1\0\41\uffff}>";
    static final String[] dfa_57s = {
            "\5\2\5\uffff\1\2\2\uffff\1\2\1\uffff\1\1\7\uffff\1\2\22\uffff\1\2\35\uffff\2\2\13\uffff\1\2\22\uffff\1\2\4\uffff\1\2\5\uffff\2\2\1\uffff\1\2\2\uffff\2\2\2\uffff\14\2\1\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_52 = DFA.unpackEncodedString(dfa_52s);
    static final char[] dfa_53 = DFA.unpackEncodedStringToUnsignedChars(dfa_53s);
    static final char[] dfa_54 = DFA.unpackEncodedStringToUnsignedChars(dfa_54s);
    static final short[] dfa_55 = DFA.unpackEncodedString(dfa_55s);
    static final short[] dfa_56 = DFA.unpackEncodedString(dfa_56s);
    static final short[][] dfa_57 = unpackEncodedStringArray(dfa_57s);

    class DFA115 extends DFA {

        public DFA115(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 115;
            this.eot = dfa_52;
            this.eof = dfa_52;
            this.min = dfa_53;
            this.max = dfa_54;
            this.accept = dfa_55;
            this.special = dfa_56;
            this.transition = dfa_57;
        }
        public String getDescription() {
            return "7818:3: ( ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpression ) ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA115_1 = input.LA(1);

                         
                        int index115_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred26_InternalCheckerDsl()) ) {s = 34;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index115_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 115, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_58s = "\42\uffff";
    static final String dfa_59s = "\1\4\2\0\37\uffff";
    static final String dfa_60s = "\1\u008e\2\0\37\uffff";
    static final String dfa_61s = "\3\uffff\1\1\1\2\35\uffff";
    static final String dfa_62s = "\1\0\1\1\1\2\37\uffff}>";
    static final String[] dfa_63s = {
            "\4\4\1\1\5\uffff\1\4\2\uffff\1\4\1\uffff\1\2\7\uffff\1\4\22\uffff\1\4\35\uffff\2\4\13\uffff\1\4\22\uffff\1\3\4\uffff\1\4\5\uffff\2\4\1\uffff\1\4\2\uffff\2\4\2\uffff\14\4\1\uffff\1\4",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_58 = DFA.unpackEncodedString(dfa_58s);
    static final char[] dfa_59 = DFA.unpackEncodedStringToUnsignedChars(dfa_59s);
    static final char[] dfa_60 = DFA.unpackEncodedStringToUnsignedChars(dfa_60s);
    static final short[] dfa_61 = DFA.unpackEncodedString(dfa_61s);
    static final short[] dfa_62 = DFA.unpackEncodedString(dfa_62s);
    static final short[][] dfa_63 = unpackEncodedStringArray(dfa_63s);

    class DFA114 extends DFA {

        public DFA114(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 114;
            this.eot = dfa_58;
            this.eof = dfa_58;
            this.min = dfa_59;
            this.max = dfa_60;
            this.accept = dfa_61;
            this.special = dfa_62;
            this.transition = dfa_63;
        }
        public String getDescription() {
            return "7887:5: ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA114_0 = input.LA(1);

                         
                        int index114_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA114_0==RULE_ID) ) {s = 1;}

                        else if ( (LA114_0==19) ) {s = 2;}

                        else if ( (LA114_0==108) && (synpred27_InternalCheckerDsl())) {s = 3;}

                        else if ( ((LA114_0>=RULE_INT && LA114_0<=RULE_DECIMAL)||LA114_0==14||LA114_0==17||LA114_0==27||LA114_0==46||(LA114_0>=76 && LA114_0<=77)||LA114_0==89||LA114_0==113||(LA114_0>=119 && LA114_0<=120)||LA114_0==122||(LA114_0>=125 && LA114_0<=126)||(LA114_0>=129 && LA114_0<=140)||LA114_0==142) ) {s = 4;}

                         
                        input.seek(index114_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA114_1 = input.LA(1);

                         
                        int index114_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred27_InternalCheckerDsl()) ) {s = 3;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index114_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA114_2 = input.LA(1);

                         
                        int index114_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred27_InternalCheckerDsl()) ) {s = 3;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index114_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 114, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA137 extends DFA {

        public DFA137(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 137;
            this.eot = dfa_26;
            this.eof = dfa_27;
            this.min = dfa_28;
            this.max = dfa_29;
            this.accept = dfa_30;
            this.special = dfa_31;
            this.transition = dfa_32;
        }
        public String getDescription() {
            return "9016:3: ( ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA137_1 = input.LA(1);

                         
                        int index137_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred30_InternalCheckerDsl()) ) {s = 77;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index137_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 137, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA136 extends DFA {

        public DFA136(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 136;
            this.eot = dfa_33;
            this.eof = dfa_33;
            this.min = dfa_34;
            this.max = dfa_35;
            this.accept = dfa_36;
            this.special = dfa_37;
            this.transition = dfa_38;
        }
        public String getDescription() {
            return "9035:4: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA136_0 = input.LA(1);

                         
                        int index136_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA136_0==RULE_ID) ) {s = 1;}

                        else if ( (LA136_0==19) ) {s = 2;}

                        else if ( (LA136_0==108) && (synpred31_InternalCheckerDsl())) {s = 3;}

                        else if ( (LA136_0==80) && (synpred31_InternalCheckerDsl())) {s = 4;}

                        else if ( ((LA136_0>=RULE_INT && LA136_0<=RULE_DECIMAL)||LA136_0==14||LA136_0==17||LA136_0==27||LA136_0==46||(LA136_0>=76 && LA136_0<=77)||LA136_0==89||LA136_0==113||(LA136_0>=119 && LA136_0<=120)||LA136_0==122||(LA136_0>=125 && LA136_0<=126)||(LA136_0>=129 && LA136_0<=140)||LA136_0==142) ) {s = 5;}

                        else if ( (LA136_0==21) ) {s = 35;}

                         
                        input.seek(index136_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA136_1 = input.LA(1);

                         
                        int index136_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred31_InternalCheckerDsl()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index136_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA136_2 = input.LA(1);

                         
                        int index136_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred31_InternalCheckerDsl()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index136_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 136, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA138 extends DFA {

        public DFA138(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 138;
            this.eot = dfa_26;
            this.eof = dfa_27;
            this.min = dfa_28;
            this.max = dfa_29;
            this.accept = dfa_30;
            this.special = dfa_31;
            this.transition = dfa_39;
        }
        public String getDescription() {
            return "9133:3: ( ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA138_1 = input.LA(1);

                         
                        int index138_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred32_InternalCheckerDsl()) ) {s = 77;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index138_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 138, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_64s = {
            "\5\2\5\uffff\2\2\1\uffff\1\2\1\uffff\4\2\4\uffff\3\2\16\uffff\1\2\1\uffff\1\1\1\2\6\uffff\1\2\25\uffff\4\2\3\uffff\3\2\3\uffff\1\2\6\uffff\60\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[][] dfa_64 = unpackEncodedStringArray(dfa_64s);

    class DFA142 extends DFA {

        public DFA142(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 142;
            this.eot = dfa_26;
            this.eof = dfa_27;
            this.min = dfa_28;
            this.max = dfa_29;
            this.accept = dfa_30;
            this.special = dfa_31;
            this.transition = dfa_64;
        }
        public String getDescription() {
            return "9292:3: ( ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA142_1 = input.LA(1);

                         
                        int index142_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_InternalCheckerDsl()) ) {s = 77;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index142_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 142, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA145 extends DFA {

        public DFA145(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 145;
            this.eot = dfa_26;
            this.eof = dfa_27;
            this.min = dfa_28;
            this.max = dfa_29;
            this.accept = dfa_30;
            this.special = dfa_31;
            this.transition = dfa_32;
        }
        public String getDescription() {
            return "9349:3: ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA145_1 = input.LA(1);

                         
                        int index145_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred34_InternalCheckerDsl()) ) {s = 77;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index145_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 145, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA144 extends DFA {

        public DFA144(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 144;
            this.eot = dfa_33;
            this.eof = dfa_33;
            this.min = dfa_34;
            this.max = dfa_35;
            this.accept = dfa_36;
            this.special = dfa_37;
            this.transition = dfa_38;
        }
        public String getDescription() {
            return "9368:4: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA144_0 = input.LA(1);

                         
                        int index144_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA144_0==RULE_ID) ) {s = 1;}

                        else if ( (LA144_0==19) ) {s = 2;}

                        else if ( (LA144_0==108) && (synpred35_InternalCheckerDsl())) {s = 3;}

                        else if ( (LA144_0==80) && (synpred35_InternalCheckerDsl())) {s = 4;}

                        else if ( ((LA144_0>=RULE_INT && LA144_0<=RULE_DECIMAL)||LA144_0==14||LA144_0==17||LA144_0==27||LA144_0==46||(LA144_0>=76 && LA144_0<=77)||LA144_0==89||LA144_0==113||(LA144_0>=119 && LA144_0<=120)||LA144_0==122||(LA144_0>=125 && LA144_0<=126)||(LA144_0>=129 && LA144_0<=140)||LA144_0==142) ) {s = 5;}

                        else if ( (LA144_0==21) ) {s = 35;}

                         
                        input.seek(index144_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA144_1 = input.LA(1);

                         
                        int index144_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred35_InternalCheckerDsl()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index144_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA144_2 = input.LA(1);

                         
                        int index144_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred35_InternalCheckerDsl()) ) {s = 4;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index144_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 144, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA146 extends DFA {

        public DFA146(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 146;
            this.eot = dfa_26;
            this.eof = dfa_27;
            this.min = dfa_28;
            this.max = dfa_29;
            this.accept = dfa_30;
            this.special = dfa_31;
            this.transition = dfa_39;
        }
        public String getDescription() {
            return "9466:3: ( ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA146_1 = input.LA(1);

                         
                        int index146_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred36_InternalCheckerDsl()) ) {s = 77;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index146_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 146, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_65s = "\1\41\115\uffff";
    static final String dfa_66s = "\1\4\40\0\55\uffff";
    static final String dfa_67s = "\1\u008f\40\0\55\uffff";
    static final String dfa_68s = "\41\uffff\1\2\53\uffff\1\1";
    static final String dfa_69s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\55\uffff}>";
    static final String[] dfa_70s = {
            "\1\24\1\27\1\23\1\25\1\1\5\uffff\1\12\1\41\1\uffff\1\2\1\uffff\1\40\3\41\4\uffff\1\20\2\41\16\uffff\1\41\1\uffff\1\15\1\41\6\uffff\1\41\25\uffff\1\10\1\7\2\41\3\uffff\3\41\3\uffff\1\32\6\uffff\21\41\1\6\5\41\1\17\1\31\1\41\1\13\2\41\1\33\1\34\2\41\1\3\1\4\1\5\1\16\1\11\1\21\1\22\1\26\1\30\1\35\1\36\1\37\1\41\1\14\1\41",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_65 = DFA.unpackEncodedString(dfa_65s);
    static final char[] dfa_66 = DFA.unpackEncodedStringToUnsignedChars(dfa_66s);
    static final char[] dfa_67 = DFA.unpackEncodedStringToUnsignedChars(dfa_67s);
    static final short[] dfa_68 = DFA.unpackEncodedString(dfa_68s);
    static final short[] dfa_69 = DFA.unpackEncodedString(dfa_69s);
    static final short[][] dfa_70 = unpackEncodedStringArray(dfa_70s);

    class DFA149 extends DFA {

        public DFA149(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 149;
            this.eot = dfa_26;
            this.eof = dfa_65;
            this.min = dfa_66;
            this.max = dfa_67;
            this.accept = dfa_68;
            this.special = dfa_69;
            this.transition = dfa_70;
        }
        public String getDescription() {
            return "9809:3: ( ( 'extends' | 'static' | 'import' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | 'synchronized' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING )=> (lv_expression_2_0= ruleXExpression ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA149_1 = input.LA(1);

                         
                        int index149_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalCheckerDsl()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index149_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA149_2 = input.LA(1);

                         
                        int index149_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalCheckerDsl()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index149_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA149_3 = input.LA(1);

                         
                        int index149_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalCheckerDsl()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index149_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA149_4 = input.LA(1);

                         
                        int index149_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalCheckerDsl()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index149_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA149_5 = input.LA(1);

                         
                        int index149_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalCheckerDsl()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index149_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA149_6 = input.LA(1);

                         
                        int index149_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalCheckerDsl()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index149_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA149_7 = input.LA(1);

                         
                        int index149_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalCheckerDsl()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index149_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA149_8 = input.LA(1);

                         
                        int index149_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalCheckerDsl()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index149_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA149_9 = input.LA(1);

                         
                        int index149_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalCheckerDsl()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index149_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA149_10 = input.LA(1);

                         
                        int index149_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalCheckerDsl()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index149_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA149_11 = input.LA(1);

                         
                        int index149_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalCheckerDsl()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index149_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA149_12 = input.LA(1);

                         
                        int index149_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalCheckerDsl()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index149_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA149_13 = input.LA(1);

                         
                        int index149_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalCheckerDsl()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index149_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA149_14 = input.LA(1);

                         
                        int index149_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalCheckerDsl()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index149_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA149_15 = input.LA(1);

                         
                        int index149_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalCheckerDsl()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index149_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA149_16 = input.LA(1);

                         
                        int index149_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalCheckerDsl()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index149_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA149_17 = input.LA(1);

                         
                        int index149_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalCheckerDsl()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index149_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA149_18 = input.LA(1);

                         
                        int index149_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalCheckerDsl()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index149_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA149_19 = input.LA(1);

                         
                        int index149_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalCheckerDsl()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index149_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA149_20 = input.LA(1);

                         
                        int index149_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalCheckerDsl()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index149_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA149_21 = input.LA(1);

                         
                        int index149_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalCheckerDsl()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index149_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA149_22 = input.LA(1);

                         
                        int index149_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalCheckerDsl()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index149_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA149_23 = input.LA(1);

                         
                        int index149_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalCheckerDsl()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index149_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA149_24 = input.LA(1);

                         
                        int index149_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalCheckerDsl()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index149_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA149_25 = input.LA(1);

                         
                        int index149_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalCheckerDsl()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index149_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA149_26 = input.LA(1);

                         
                        int index149_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalCheckerDsl()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index149_26);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA149_27 = input.LA(1);

                         
                        int index149_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalCheckerDsl()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index149_27);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA149_28 = input.LA(1);

                         
                        int index149_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalCheckerDsl()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index149_28);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA149_29 = input.LA(1);

                         
                        int index149_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalCheckerDsl()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index149_29);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA149_30 = input.LA(1);

                         
                        int index149_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalCheckerDsl()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index149_30);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA149_31 = input.LA(1);

                         
                        int index149_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalCheckerDsl()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index149_31);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA149_32 = input.LA(1);

                         
                        int index149_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalCheckerDsl()) ) {s = 77;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index149_32);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 149, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_71s = "\117\uffff";
    static final String dfa_72s = "\1\2\116\uffff";
    static final String dfa_73s = "\1\4\1\0\115\uffff";
    static final String dfa_74s = "\1\u008f\1\0\115\uffff";
    static final String dfa_75s = "\2\uffff\1\2\113\uffff\1\1";
    static final String dfa_76s = "\1\uffff\1\0\115\uffff}>";
    static final String[] dfa_77s = {
            "\5\2\5\uffff\2\2\1\uffff\1\2\1\uffff\4\2\4\uffff\3\2\16\uffff\1\2\1\uffff\1\1\1\2\6\uffff\1\2\25\uffff\4\2\1\uffff\1\2\1\uffff\3\2\3\uffff\1\2\6\uffff\60\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_71 = DFA.unpackEncodedString(dfa_71s);
    static final short[] dfa_72 = DFA.unpackEncodedString(dfa_72s);
    static final char[] dfa_73 = DFA.unpackEncodedStringToUnsignedChars(dfa_73s);
    static final char[] dfa_74 = DFA.unpackEncodedStringToUnsignedChars(dfa_74s);
    static final short[] dfa_75 = DFA.unpackEncodedString(dfa_75s);
    static final short[] dfa_76 = DFA.unpackEncodedString(dfa_76s);
    static final short[][] dfa_77 = unpackEncodedStringArray(dfa_77s);

    class DFA167 extends DFA {

        public DFA167(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 167;
            this.eot = dfa_71;
            this.eof = dfa_72;
            this.min = dfa_73;
            this.max = dfa_74;
            this.accept = dfa_75;
            this.special = dfa_76;
            this.transition = dfa_77;
        }
        public String getDescription() {
            return "10467:3: ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA167_1 = input.LA(1);

                         
                        int index167_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred44_InternalCheckerDsl()) ) {s = 78;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index167_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 167, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA165 extends DFA {

        public DFA165(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 165;
            this.eot = dfa_71;
            this.eof = dfa_72;
            this.min = dfa_73;
            this.max = dfa_74;
            this.accept = dfa_75;
            this.special = dfa_76;
            this.transition = dfa_77;
        }
        public String getDescription() {
            return "10561:5: ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA165_1 = input.LA(1);

                         
                        int index165_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred46_InternalCheckerDsl()) ) {s = 78;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index165_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 165, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_78s = "\7\uffff";
    static final String dfa_79s = "\2\uffff\1\4\3\uffff\1\4";
    static final String dfa_80s = "\1\10\1\uffff\1\15\1\10\2\uffff\1\15";
    static final String dfa_81s = "\1\u0081\1\uffff\1\u0082\1\116\2\uffff\1\u0082";
    static final String dfa_82s = "\1\uffff\1\1\2\uffff\1\2\1\3\1\uffff";
    static final String dfa_83s = "\7\uffff}>";
    static final String[] dfa_84s = {
            "\1\2\170\uffff\1\1",
            "",
            "\1\4\2\uffff\1\4\14\uffff\1\4\16\uffff\1\3\125\uffff\1\4",
            "\1\6\105\uffff\1\5",
            "",
            "",
            "\1\4\2\uffff\1\4\14\uffff\1\4\16\uffff\1\3\125\uffff\1\4"
    };

    static final short[] dfa_78 = DFA.unpackEncodedString(dfa_78s);
    static final short[] dfa_79 = DFA.unpackEncodedString(dfa_79s);
    static final char[] dfa_80 = DFA.unpackEncodedStringToUnsignedChars(dfa_80s);
    static final char[] dfa_81 = DFA.unpackEncodedStringToUnsignedChars(dfa_81s);
    static final short[] dfa_82 = DFA.unpackEncodedString(dfa_82s);
    static final short[] dfa_83 = DFA.unpackEncodedString(dfa_83s);
    static final short[][] dfa_84 = unpackEncodedStringArray(dfa_84s);

    class DFA175 extends DFA {

        public DFA175(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 175;
            this.eot = dfa_78;
            this.eof = dfa_79;
            this.min = dfa_80;
            this.max = dfa_81;
            this.accept = dfa_82;
            this.special = dfa_83;
            this.transition = dfa_84;
        }
        public String getDescription() {
            return "11059:3: ( ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) )";
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000000000012002L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000000000000100L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x000000000001A000L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000000024000L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000000000080100L,0x0000100000000000L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x000001FF86848000L,0x00000000E0000000L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000000000280100L,0x0000100000000000L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000000000010L,0x0000000000002000L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000000400000L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0000000000200000L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000000000088000L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000000000088000L,0x0000000002000000L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000000001080000L,0x0000000002000000L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000000008000100L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000000000000110L,0x0000000000002000L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000000010000000L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000000040080002L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000000000000130L,0x0000000010002000L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000000020200000L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000000040000002L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000000000200100L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0000100000000000L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000200008000002L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0000000008000002L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x00000E0000000100L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0000800000100000L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x00004E0000000110L,0x0000000000002000L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000000000500000L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x00004E0000200110L,0x0000000000002000L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0000C00000000000L,0x0000000000780000L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000800L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0xFFBF4E0000000110L,0x00000000000023FFL});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0000000000000002L,0x000000000007F000L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0xFFBF4E0000000110L,0x00000000000027FFL});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0000C00000200000L,0x0000000004780000L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0xFFBF4E0000000110L,0x00000000080023FFL});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000C00000200000L,0x0000000001F80000L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000000000100002L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0000000000008110L,0x0000000000002000L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000000000008110L,0x0000000002002000L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x00000E0000200100L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0000400000000002L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0000800000000000L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x00004000080A41F0L,0x6582000002003000L,0x0000000000005FFEL});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0000C00000000002L,0x0000001F00000000L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0000400000000000L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0000800000000000L,0x0000000000200000L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200000L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0000000000000002L,0x0000002000000000L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0000000000000002L,0x0000004000000000L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0000000000000002L,0x0000018000180000L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0000C00000000002L,0x0000020000200000L});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0040C00000000002L,0x00007C0000000000L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x0000400000000000L,0x0000100000000000L});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0000000000000002L,0x0000000000003000L});
    public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x0000000000000002L,0x000180000000C000L});
    public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x0000000000000002L,0x0004000000000000L});
    public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x0000000000000002L,0x0018000000000000L});
    public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x0000100000000002L,0x0060000000000000L});
    public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0000000000020100L,0x0000000000000000L,0x000000000000000EL});
    public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0000400000020100L,0x0000000000000000L,0x000000000000001EL});
    public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x0000000000080100L,0x0000100000000000L,0x0000000000010000L});
    public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x0000100008080002L,0x0060000000000000L});
    public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x00004000082A41F0L,0x6582100002013000L,0x0000000000005FFEL});
    public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x0000100008000002L,0x0060000000000000L});
    public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x00004000080AC1F0L,0x6582000002003000L,0x0000000000005FFEL});
    public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x0000000000108000L});
    public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x00004000180A41F0L,0x6582000002003000L,0x0000000000005FFEL});
    public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x0000000010100000L});
    public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x00004000180A41F0L,0xE582100002013000L,0x0000000000005FFFL});
    public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x0000000000100000L,0x0000000000010000L});
    public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x00004000180A41F0L,0xE582000002003000L,0x0000000000005FFFL});
    public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x00004000280A41F2L,0xE582000002003000L,0x0000000000005FFFL});
    public static final BitSet FOLLOW_85 = new BitSet(new long[]{0x00004000080A41F2L,0xE582000002003000L,0x0000000000005FFFL});
    public static final BitSet FOLLOW_86 = new BitSet(new long[]{0x0000000000000002L,0x0200000000000000L});
    public static final BitSet FOLLOW_87 = new BitSet(new long[]{0x00004000080A41F0L,0x6582100002003000L,0x0000000000005FFEL});
    public static final BitSet FOLLOW_88 = new BitSet(new long[]{0x0000000000588100L,0x1800100000000000L});
    public static final BitSet FOLLOW_89 = new BitSet(new long[]{0x0000000000500000L,0x1000000000000000L});
    public static final BitSet FOLLOW_90 = new BitSet(new long[]{0x00004000280A41F0L,0xE582000002003000L,0x0000000000005FFFL});
    public static final BitSet FOLLOW_91 = new BitSet(new long[]{0x0000000020100000L});
    public static final BitSet FOLLOW_92 = new BitSet(new long[]{0x00004000080A41F0L,0xE582000002003000L,0x0000000000005FFFL});
    public static final BitSet FOLLOW_93 = new BitSet(new long[]{0x00004000280A41F0L,0x6582000002003000L,0x0000000000005FFEL});
    public static final BitSet FOLLOW_94 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_95 = new BitSet(new long[]{0x00004000082A41F0L,0x6582000002003000L,0x0000000000005FFEL});
    public static final BitSet FOLLOW_96 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000000L});
    public static final BitSet FOLLOW_97 = new BitSet(new long[]{0x00004000080AC1F0L,0xE582000002003000L,0x0000000000005FFFL});
    public static final BitSet FOLLOW_98 = new BitSet(new long[]{0x00004000280AC1F0L,0xE582000002003000L,0x0000000000005FFFL});
    public static final BitSet FOLLOW_99 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000800L});
    public static final BitSet FOLLOW_100 = new BitSet(new long[]{0x0000000008080002L});
    public static final BitSet FOLLOW_101 = new BitSet(new long[]{0x0000400008080002L});
    public static final BitSet FOLLOW_102 = new BitSet(new long[]{0x0000000008200000L});
    public static final BitSet FOLLOW_103 = new BitSet(new long[]{0x00004000080A41F2L,0x6582000002003000L,0x0000000000005FFEL});
    public static final BitSet FOLLOW_104 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x000000000000A000L});
    public static final BitSet FOLLOW_105 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x000000000000A000L});
    public static final BitSet FOLLOW_106 = new BitSet(new long[]{0x0000100000000002L});
    public static final BitSet FOLLOW_107 = new BitSet(new long[]{0x0000000000000090L});
    public static final BitSet FOLLOW_108 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
    public static final BitSet FOLLOW_109 = new BitSet(new long[]{0x0000500000000002L});
    public static final BitSet FOLLOW_110 = new BitSet(new long[]{0x0000000000020002L,0x0000000000000000L,0x0000000000000010L});
    public static final BitSet FOLLOW_111 = new BitSet(new long[]{0x0000000000000002L,0x0000000000020000L});
    public static final BitSet FOLLOW_112 = new BitSet(new long[]{0x0000000000000000L,0x0000000000004000L});
    public static final BitSet FOLLOW_113 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_114 = new BitSet(new long[]{0x0000000000000100L,0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_115 = new BitSet(new long[]{0x0000000000000100L,0x0000000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_116 = new BitSet(new long[]{0x0000000000000100L,0x0000000000004000L});
    public static final BitSet FOLLOW_117 = new BitSet(new long[]{0x0000000020000002L});
    public static final BitSet FOLLOW_118 = new BitSet(new long[]{0x0000000000000102L});

}