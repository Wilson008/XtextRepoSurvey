/*
 * generated by Xtext 2.35.0
 */
package es.udima.tfm.cesarlaso.formatting2

import com.google.inject.Inject
import es.udima.cesarlaso.tfm.iotproyects.IotProyect
import es.udima.cesarlaso.tfm.programs.Program
import es.udima.tfm.cesarlaso.services.IotDslGrammarAccess
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument

class IotDslFormatter extends AbstractFormatter2 {
	
	@Inject extension IotDslGrammarAccess

	def dispatch void format(IotProyect iotProyect, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (device : iotProyect.deploymentDevice) {
			device.format
		}
		for (server : iotProyect.server) {
			server.format
		}
		iotProyect.program.format
	}

	def dispatch void format(Program program, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (pin : program.gpioAliases) {
			pin.format
		}
		for (remoteIdentifier : program.remoteIdentifiers) {
			remoteIdentifier.format
		}
		for (filePath : program.files) {
			filePath.format
		}
		for (programState : program.states) {
			programState.format
		}
	}
	
	// TODO: implement for ProgramState, NetworkConnected, NetworkDisconnected, ServerConnected, ServerDisconnected, TimerEvent, Repeated, Clock, Interrupted, ButtonInput, ButtonInputAccumulator, ButtonInputReleased, PulseInput, AnalogRead, AnalogReadPerformOnHigh, AnalogReadPerformOnLow, RemoteEvent, SequentialActuators, ButtonOutput, BlinkOutput, BlinkTimerOutput, TransformTo, Raspberry, Beaglebone, ESP8266
}
