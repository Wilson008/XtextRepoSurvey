/**
 */
package hu.sze.jkk.middleware.statepubsub.model.statepubsubmodel.provider;

import hu.sze.jkk.middleware.statepubsub.model.statepubsubmodel.util.StatepubsubmodelAdapterFactory;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class StatepubsubmodelItemProviderAdapterFactory extends StatepubsubmodelAdapterFactory
		implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public StatepubsubmodelItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link hu.sze.jkk.middleware.statepubsub.model.statepubsubmodel.Stack} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StackItemProvider stackItemProvider;

	/**
	 * This creates an adapter for a {@link hu.sze.jkk.middleware.statepubsub.model.statepubsubmodel.Stack}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStackAdapter() {
		if (stackItemProvider == null) {
			stackItemProvider = new StackItemProvider(this);
		}

		return stackItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hu.sze.jkk.middleware.statepubsub.model.statepubsubmodel.InputPort} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InputPortItemProvider inputPortItemProvider;

	/**
	 * This creates an adapter for a {@link hu.sze.jkk.middleware.statepubsub.model.statepubsubmodel.InputPort}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInputPortAdapter() {
		if (inputPortItemProvider == null) {
			inputPortItemProvider = new InputPortItemProvider(this);
		}

		return inputPortItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hu.sze.jkk.middleware.statepubsub.model.statepubsubmodel.OutputPort} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OutputPortItemProvider outputPortItemProvider;

	/**
	 * This creates an adapter for a {@link hu.sze.jkk.middleware.statepubsub.model.statepubsubmodel.OutputPort}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOutputPortAdapter() {
		if (outputPortItemProvider == null) {
			outputPortItemProvider = new OutputPortItemProvider(this);
		}

		return outputPortItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hu.sze.jkk.middleware.statepubsub.model.statepubsubmodel.TopicMessage} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TopicMessageItemProvider topicMessageItemProvider;

	/**
	 * This creates an adapter for a {@link hu.sze.jkk.middleware.statepubsub.model.statepubsubmodel.TopicMessage}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTopicMessageAdapter() {
		if (topicMessageItemProvider == null) {
			topicMessageItemProvider = new TopicMessageItemProvider(this);
		}

		return topicMessageItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hu.sze.jkk.middleware.statepubsub.model.statepubsubmodel.Topic} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TopicItemProvider topicItemProvider;

	/**
	 * This creates an adapter for a {@link hu.sze.jkk.middleware.statepubsub.model.statepubsubmodel.Topic}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTopicAdapter() {
		if (topicItemProvider == null) {
			topicItemProvider = new TopicItemProvider(this);
		}

		return topicItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hu.sze.jkk.middleware.statepubsub.model.statepubsubmodel.ContinousState} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ContinousStateItemProvider continousStateItemProvider;

	/**
	 * This creates an adapter for a {@link hu.sze.jkk.middleware.statepubsub.model.statepubsubmodel.ContinousState}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createContinousStateAdapter() {
		if (continousStateItemProvider == null) {
			continousStateItemProvider = new ContinousStateItemProvider(this);
		}

		return continousStateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hu.sze.jkk.middleware.statepubsub.model.statepubsubmodel.WorkerThread} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WorkerThreadItemProvider workerThreadItemProvider;

	/**
	 * This creates an adapter for a {@link hu.sze.jkk.middleware.statepubsub.model.statepubsubmodel.WorkerThread}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createWorkerThreadAdapter() {
		if (workerThreadItemProvider == null) {
			workerThreadItemProvider = new WorkerThreadItemProvider(this);
		}

		return workerThreadItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hu.sze.jkk.middleware.statepubsub.model.statepubsubmodel.HybridSystem} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected HybridSystemItemProvider hybridSystemItemProvider;

	/**
	 * This creates an adapter for a {@link hu.sze.jkk.middleware.statepubsub.model.statepubsubmodel.HybridSystem}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createHybridSystemAdapter() {
		if (hybridSystemItemProvider == null) {
			hybridSystemItemProvider = new HybridSystemItemProvider(this);
		}

		return hybridSystemItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hu.sze.jkk.middleware.statepubsub.model.statepubsubmodel.Location} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LocationItemProvider locationItemProvider;

	/**
	 * This creates an adapter for a {@link hu.sze.jkk.middleware.statepubsub.model.statepubsubmodel.Location}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLocationAdapter() {
		if (locationItemProvider == null) {
			locationItemProvider = new LocationItemProvider(this);
		}

		return locationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hu.sze.jkk.middleware.statepubsub.model.statepubsubmodel.Transition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TransitionItemProvider transitionItemProvider;

	/**
	 * This creates an adapter for a {@link hu.sze.jkk.middleware.statepubsub.model.statepubsubmodel.Transition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTransitionAdapter() {
		if (transitionItemProvider == null) {
			transitionItemProvider = new TransitionItemProvider(this);
		}

		return transitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hu.sze.jkk.middleware.statepubsub.model.statepubsubmodel.ContinuousVariable} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ContinuousVariableItemProvider continuousVariableItemProvider;

	/**
	 * This creates an adapter for a {@link hu.sze.jkk.middleware.statepubsub.model.statepubsubmodel.ContinuousVariable}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createContinuousVariableAdapter() {
		if (continuousVariableItemProvider == null) {
			continuousVariableItemProvider = new ContinuousVariableItemProvider(this);
		}

		return continuousVariableItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hu.sze.jkk.middleware.statepubsub.model.statepubsubmodel.Activity} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ActivityItemProvider activityItemProvider;

	/**
	 * This creates an adapter for a {@link hu.sze.jkk.middleware.statepubsub.model.statepubsubmodel.Activity}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createActivityAdapter() {
		if (activityItemProvider == null) {
			activityItemProvider = new ActivityItemProvider(this);
		}

		return activityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hu.sze.jkk.middleware.statepubsub.model.statepubsubmodel.DiscreteEvent} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DiscreteEventItemProvider discreteEventItemProvider;

	/**
	 * This creates an adapter for a {@link hu.sze.jkk.middleware.statepubsub.model.statepubsubmodel.DiscreteEvent}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDiscreteEventAdapter() {
		if (discreteEventItemProvider == null) {
			discreteEventItemProvider = new DiscreteEventItemProvider(this);
		}

		return discreteEventItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hu.sze.jkk.middleware.statepubsub.model.statepubsubmodel.FuzzyHybridSystem} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FuzzyHybridSystemItemProvider fuzzyHybridSystemItemProvider;

	/**
	 * This creates an adapter for a {@link hu.sze.jkk.middleware.statepubsub.model.statepubsubmodel.FuzzyHybridSystem}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFuzzyHybridSystemAdapter() {
		if (fuzzyHybridSystemItemProvider == null) {
			fuzzyHybridSystemItemProvider = new FuzzyHybridSystemItemProvider(this);
		}

		return fuzzyHybridSystemItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hu.sze.jkk.middleware.statepubsub.model.statepubsubmodel.RuleSet} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RuleSetItemProvider ruleSetItemProvider;

	/**
	 * This creates an adapter for a {@link hu.sze.jkk.middleware.statepubsub.model.statepubsubmodel.RuleSet}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRuleSetAdapter() {
		if (ruleSetItemProvider == null) {
			ruleSetItemProvider = new RuleSetItemProvider(this);
		}

		return ruleSetItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hu.sze.jkk.middleware.statepubsub.model.statepubsubmodel.Invariant} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InvariantItemProvider invariantItemProvider;

	/**
	 * This creates an adapter for a {@link hu.sze.jkk.middleware.statepubsub.model.statepubsubmodel.Invariant}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInvariantAdapter() {
		if (invariantItemProvider == null) {
			invariantItemProvider = new InvariantItemProvider(this);
		}

		return invariantItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hu.sze.jkk.middleware.statepubsub.model.statepubsubmodel.NodeParameter} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NodeParameterItemProvider nodeParameterItemProvider;

	/**
	 * This creates an adapter for a {@link hu.sze.jkk.middleware.statepubsub.model.statepubsubmodel.NodeParameter}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNodeParameterAdapter() {
		if (nodeParameterItemProvider == null) {
			nodeParameterItemProvider = new NodeParameterItemProvider(this);
		}

		return nodeParameterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hu.sze.jkk.middleware.statepubsub.model.statepubsubmodel.NodeParameterGroup} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NodeParameterGroupItemProvider nodeParameterGroupItemProvider;

	/**
	 * This creates an adapter for a {@link hu.sze.jkk.middleware.statepubsub.model.statepubsubmodel.NodeParameterGroup}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNodeParameterGroupAdapter() {
		if (nodeParameterGroupItemProvider == null) {
			nodeParameterGroupItemProvider = new NodeParameterGroupItemProvider(this);
		}

		return nodeParameterGroupItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hu.sze.jkk.middleware.statepubsub.model.statepubsubmodel.DoubleParameter} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DoubleParameterItemProvider doubleParameterItemProvider;

	/**
	 * This creates an adapter for a {@link hu.sze.jkk.middleware.statepubsub.model.statepubsubmodel.DoubleParameter}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDoubleParameterAdapter() {
		if (doubleParameterItemProvider == null) {
			doubleParameterItemProvider = new DoubleParameterItemProvider(this);
		}

		return doubleParameterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hu.sze.jkk.middleware.statepubsub.model.statepubsubmodel.StringParameter} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StringParameterItemProvider stringParameterItemProvider;

	/**
	 * This creates an adapter for a {@link hu.sze.jkk.middleware.statepubsub.model.statepubsubmodel.StringParameter}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStringParameterAdapter() {
		if (stringParameterItemProvider == null) {
			stringParameterItemProvider = new StringParameterItemProvider(this);
		}

		return stringParameterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hu.sze.jkk.middleware.statepubsub.model.statepubsubmodel.BooleanParameter} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BooleanParameterItemProvider booleanParameterItemProvider;

	/**
	 * This creates an adapter for a {@link hu.sze.jkk.middleware.statepubsub.model.statepubsubmodel.BooleanParameter}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBooleanParameterAdapter() {
		if (booleanParameterItemProvider == null) {
			booleanParameterItemProvider = new BooleanParameterItemProvider(this);
		}

		return booleanParameterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hu.sze.jkk.middleware.statepubsub.model.statepubsubmodel.IntegerParameter} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IntegerParameterItemProvider integerParameterItemProvider;

	/**
	 * This creates an adapter for a {@link hu.sze.jkk.middleware.statepubsub.model.statepubsubmodel.IntegerParameter}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIntegerParameterAdapter() {
		if (integerParameterItemProvider == null) {
			integerParameterItemProvider = new IntegerParameterItemProvider(this);
		}

		return integerParameterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hu.sze.jkk.middleware.statepubsub.model.statepubsubmodel.ErrorLocation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ErrorLocationItemProvider errorLocationItemProvider;

	/**
	 * This creates an adapter for a {@link hu.sze.jkk.middleware.statepubsub.model.statepubsubmodel.ErrorLocation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createErrorLocationAdapter() {
		if (errorLocationItemProvider == null) {
			errorLocationItemProvider = new ErrorLocationItemProvider(this);
		}

		return errorLocationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hu.sze.jkk.middleware.statepubsub.model.statepubsubmodel.ServiceType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ServiceTypeItemProvider serviceTypeItemProvider;

	/**
	 * This creates an adapter for a {@link hu.sze.jkk.middleware.statepubsub.model.statepubsubmodel.ServiceType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createServiceTypeAdapter() {
		if (serviceTypeItemProvider == null) {
			serviceTypeItemProvider = new ServiceTypeItemProvider(this);
		}

		return serviceTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hu.sze.jkk.middleware.statepubsub.model.statepubsubmodel.Service} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ServiceItemProvider serviceItemProvider;

	/**
	 * This creates an adapter for a {@link hu.sze.jkk.middleware.statepubsub.model.statepubsubmodel.Service}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createServiceAdapter() {
		if (serviceItemProvider == null) {
			serviceItemProvider = new ServiceItemProvider(this);
		}

		return serviceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hu.sze.jkk.middleware.statepubsub.model.statepubsubmodel.FilePackage} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FilePackageItemProvider filePackageItemProvider;

	/**
	 * This creates an adapter for a {@link hu.sze.jkk.middleware.statepubsub.model.statepubsubmodel.FilePackage}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFilePackageAdapter() {
		if (filePackageItemProvider == null) {
			filePackageItemProvider = new FilePackageItemProvider(this);
		}

		return filePackageItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hu.sze.jkk.middleware.statepubsub.model.statepubsubmodel.Node} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NodeItemProvider nodeItemProvider;

	/**
	 * This creates an adapter for a {@link hu.sze.jkk.middleware.statepubsub.model.statepubsubmodel.Node}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNodeAdapter() {
		if (nodeItemProvider == null) {
			nodeItemProvider = new NodeItemProvider(this);
		}

		return nodeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hu.sze.jkk.middleware.statepubsub.model.statepubsubmodel.TemplateNode} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TemplateNodeItemProvider templateNodeItemProvider;

	/**
	 * This creates an adapter for a {@link hu.sze.jkk.middleware.statepubsub.model.statepubsubmodel.TemplateNode}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTemplateNodeAdapter() {
		if (templateNodeItemProvider == null) {
			templateNodeItemProvider = new TemplateNodeItemProvider(this);
		}

		return templateNodeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hu.sze.jkk.middleware.statepubsub.model.statepubsubmodel.FilterDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FilterDefinitionItemProvider filterDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link hu.sze.jkk.middleware.statepubsub.model.statepubsubmodel.FilterDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFilterDefinitionAdapter() {
		if (filterDefinitionItemProvider == null) {
			filterDefinitionItemProvider = new FilterDefinitionItemProvider(this);
		}

		return filterDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hu.sze.jkk.middleware.statepubsub.model.statepubsubmodel.FilterConnection} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FilterConnectionItemProvider filterConnectionItemProvider;

	/**
	 * This creates an adapter for a {@link hu.sze.jkk.middleware.statepubsub.model.statepubsubmodel.FilterConnection}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFilterConnectionAdapter() {
		if (filterConnectionItemProvider == null) {
			filterConnectionItemProvider = new FilterConnectionItemProvider(this);
		}

		return filterConnectionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hu.sze.jkk.middleware.statepubsub.model.statepubsubmodel.SerializedField} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SerializedFieldItemProvider serializedFieldItemProvider;

	/**
	 * This creates an adapter for a {@link hu.sze.jkk.middleware.statepubsub.model.statepubsubmodel.SerializedField}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSerializedFieldAdapter() {
		if (serializedFieldItemProvider == null) {
			serializedFieldItemProvider = new SerializedFieldItemProvider(this);
		}

		return serializedFieldItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hu.sze.jkk.middleware.statepubsub.model.statepubsubmodel.DirectConnection} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DirectConnectionItemProvider directConnectionItemProvider;

	/**
	 * This creates an adapter for a {@link hu.sze.jkk.middleware.statepubsub.model.statepubsubmodel.DirectConnection}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDirectConnectionAdapter() {
		if (directConnectionItemProvider == null) {
			directConnectionItemProvider = new DirectConnectionItemProvider(this);
		}

		return directConnectionItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>) type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (stackItemProvider != null)
			stackItemProvider.dispose();
		if (inputPortItemProvider != null)
			inputPortItemProvider.dispose();
		if (outputPortItemProvider != null)
			outputPortItemProvider.dispose();
		if (topicMessageItemProvider != null)
			topicMessageItemProvider.dispose();
		if (topicItemProvider != null)
			topicItemProvider.dispose();
		if (continousStateItemProvider != null)
			continousStateItemProvider.dispose();
		if (workerThreadItemProvider != null)
			workerThreadItemProvider.dispose();
		if (hybridSystemItemProvider != null)
			hybridSystemItemProvider.dispose();
		if (locationItemProvider != null)
			locationItemProvider.dispose();
		if (transitionItemProvider != null)
			transitionItemProvider.dispose();
		if (continuousVariableItemProvider != null)
			continuousVariableItemProvider.dispose();
		if (activityItemProvider != null)
			activityItemProvider.dispose();
		if (discreteEventItemProvider != null)
			discreteEventItemProvider.dispose();
		if (fuzzyHybridSystemItemProvider != null)
			fuzzyHybridSystemItemProvider.dispose();
		if (ruleSetItemProvider != null)
			ruleSetItemProvider.dispose();
		if (invariantItemProvider != null)
			invariantItemProvider.dispose();
		if (nodeParameterItemProvider != null)
			nodeParameterItemProvider.dispose();
		if (nodeParameterGroupItemProvider != null)
			nodeParameterGroupItemProvider.dispose();
		if (doubleParameterItemProvider != null)
			doubleParameterItemProvider.dispose();
		if (stringParameterItemProvider != null)
			stringParameterItemProvider.dispose();
		if (booleanParameterItemProvider != null)
			booleanParameterItemProvider.dispose();
		if (integerParameterItemProvider != null)
			integerParameterItemProvider.dispose();
		if (errorLocationItemProvider != null)
			errorLocationItemProvider.dispose();
		if (serviceTypeItemProvider != null)
			serviceTypeItemProvider.dispose();
		if (serviceItemProvider != null)
			serviceItemProvider.dispose();
		if (filePackageItemProvider != null)
			filePackageItemProvider.dispose();
		if (nodeItemProvider != null)
			nodeItemProvider.dispose();
		if (templateNodeItemProvider != null)
			templateNodeItemProvider.dispose();
		if (filterDefinitionItemProvider != null)
			filterDefinitionItemProvider.dispose();
		if (filterConnectionItemProvider != null)
			filterConnectionItemProvider.dispose();
		if (serializedFieldItemProvider != null)
			serializedFieldItemProvider.dispose();
		if (directConnectionItemProvider != null)
			directConnectionItemProvider.dispose();
	}

}
