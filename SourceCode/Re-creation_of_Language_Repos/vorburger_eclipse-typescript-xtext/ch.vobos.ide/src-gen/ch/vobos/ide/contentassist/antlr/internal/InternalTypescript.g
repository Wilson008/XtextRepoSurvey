/*
 * generated by Xtext 2.35.0
 */
grammar InternalTypescript;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package ch.vobos.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package ch.vobos.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import ch.vobos.services.TypescriptGrammarAccess;

}
@parser::members {
	private TypescriptGrammarAccess grammarAccess;

	public void setGrammarAccess(TypescriptGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleTypescript
entryRuleTypescript
:
{ before(grammarAccess.getTypescriptRule()); }
	 ruleTypescript
{ after(grammarAccess.getTypescriptRule()); } 
	 EOF 
;

// Rule Typescript
ruleTypescript 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypescriptAccess().getGroup()); }
		(rule__Typescript__Group__0)
		{ after(grammarAccess.getTypescriptAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInterfacesAndClasses
entryRuleInterfacesAndClasses
:
{ before(grammarAccess.getInterfacesAndClassesRule()); }
	 ruleInterfacesAndClasses
{ after(grammarAccess.getInterfacesAndClassesRule()); } 
	 EOF 
;

// Rule InterfacesAndClasses
ruleInterfacesAndClasses 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInterfacesAndClassesAccess().getGroup()); }
		(rule__InterfacesAndClasses__Group__0)
		{ after(grammarAccess.getInterfacesAndClassesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImportDeclaration
entryRuleImportDeclaration
:
{ before(grammarAccess.getImportDeclarationRule()); }
	 ruleImportDeclaration
{ after(grammarAccess.getImportDeclarationRule()); } 
	 EOF 
;

// Rule ImportDeclaration
ruleImportDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportDeclarationAccess().getGroup()); }
		(rule__ImportDeclaration__Group__0)
		{ after(grammarAccess.getImportDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleModuleDeclaration
entryRuleModuleDeclaration
:
{ before(grammarAccess.getModuleDeclarationRule()); }
	 ruleModuleDeclaration
{ after(grammarAccess.getModuleDeclarationRule()); } 
	 EOF 
;

// Rule ModuleDeclaration
ruleModuleDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModuleDeclarationAccess().getGroup()); }
		(rule__ModuleDeclaration__Group__0)
		{ after(grammarAccess.getModuleDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleModuleBody
entryRuleModuleBody
:
{ before(grammarAccess.getModuleBodyRule()); }
	 ruleModuleBody
{ after(grammarAccess.getModuleBodyRule()); } 
	 EOF 
;

// Rule ModuleBody
ruleModuleBody 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModuleBodyAccess().getGroup()); }
		(rule__ModuleBody__Group__0)
		{ after(grammarAccess.getModuleBodyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleModuleElement
entryRuleModuleElement
:
{ before(grammarAccess.getModuleElementRule()); }
	 ruleModuleElement
{ after(grammarAccess.getModuleElementRule()); } 
	 EOF 
;

// Rule ModuleElement
ruleModuleElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModuleElementAccess().getGroup()); }
		(rule__ModuleElement__Group__0)
		{ after(grammarAccess.getModuleElementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDeclaration
entryRuleDeclaration
:
{ before(grammarAccess.getDeclarationRule()); }
	 ruleDeclaration
{ after(grammarAccess.getDeclarationRule()); } 
	 EOF 
;

// Rule Declaration
ruleDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeclarationAccess().getGroup()); }
		(rule__Declaration__Group__0)
		{ after(grammarAccess.getDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInterfaceOrClassDeclaration
entryRuleInterfaceOrClassDeclaration
:
{ before(grammarAccess.getInterfaceOrClassDeclarationRule()); }
	 ruleInterfaceOrClassDeclaration
{ after(grammarAccess.getInterfaceOrClassDeclarationRule()); } 
	 EOF 
;

// Rule InterfaceOrClassDeclaration
ruleInterfaceOrClassDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInterfaceOrClassDeclarationAccess().getGroup()); }
		(rule__InterfaceOrClassDeclaration__Group__0)
		{ after(grammarAccess.getInterfaceOrClassDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInterfaceDeclaration
entryRuleInterfaceDeclaration
:
{ before(grammarAccess.getInterfaceDeclarationRule()); }
	 ruleInterfaceDeclaration
{ after(grammarAccess.getInterfaceDeclarationRule()); } 
	 EOF 
;

// Rule InterfaceDeclaration
ruleInterfaceDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInterfaceDeclarationAccess().getGroup()); }
		(rule__InterfaceDeclaration__Group__0)
		{ after(grammarAccess.getInterfaceDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleClassDeclaration
entryRuleClassDeclaration
:
{ before(grammarAccess.getClassDeclarationRule()); }
	 ruleClassDeclaration
{ after(grammarAccess.getClassDeclarationRule()); } 
	 EOF 
;

// Rule ClassDeclaration
ruleClassDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClassDeclarationAccess().getGroup()); }
		(rule__ClassDeclaration__Group__0)
		{ after(grammarAccess.getClassDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIdentifier
entryRuleIdentifier
:
{ before(grammarAccess.getIdentifierRule()); }
	 ruleIdentifier
{ after(grammarAccess.getIdentifierRule()); } 
	 EOF 
;

// Rule Identifier
ruleIdentifier 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIdentifierAccess().getIDTerminalRuleCall()); }
		RULE_ID
		{ after(grammarAccess.getIdentifierAccess().getIDTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInterfaceExtendsClause
entryRuleInterfaceExtendsClause
:
{ before(grammarAccess.getInterfaceExtendsClauseRule()); }
	 ruleInterfaceExtendsClause
{ after(grammarAccess.getInterfaceExtendsClauseRule()); } 
	 EOF 
;

// Rule InterfaceExtendsClause
ruleInterfaceExtendsClause 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInterfaceExtendsClauseAccess().getGroup()); }
		(rule__InterfaceExtendsClause__Group__0)
		{ after(grammarAccess.getInterfaceExtendsClauseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleClassOrInterfaceTypeList
entryRuleClassOrInterfaceTypeList
:
{ before(grammarAccess.getClassOrInterfaceTypeListRule()); }
	 ruleClassOrInterfaceTypeList
{ after(grammarAccess.getClassOrInterfaceTypeListRule()); } 
	 EOF 
;

// Rule ClassOrInterfaceTypeList
ruleClassOrInterfaceTypeList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClassOrInterfaceTypeListAccess().getGroup()); }
		(rule__ClassOrInterfaceTypeList__Group__0)
		{ after(grammarAccess.getClassOrInterfaceTypeListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleObjectType
entryRuleObjectType
:
{ before(grammarAccess.getObjectTypeRule()); }
	 ruleObjectType
{ after(grammarAccess.getObjectTypeRule()); } 
	 EOF 
;

// Rule ObjectType
ruleObjectType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getObjectTypeAccess().getGroup()); }
		(rule__ObjectType__Group__0)
		{ after(grammarAccess.getObjectTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeMember
entryRuleTypeMember
:
{ before(grammarAccess.getTypeMemberRule()); }
	 ruleTypeMember
{ after(grammarAccess.getTypeMemberRule()); } 
	 EOF 
;

// Rule TypeMember
ruleTypeMember 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeMemberAccess().getGroup()); }
		(rule__TypeMember__Group__0)
		{ after(grammarAccess.getTypeMemberAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePropertySignature
entryRulePropertySignature
:
{ before(grammarAccess.getPropertySignatureRule()); }
	 rulePropertySignature
{ after(grammarAccess.getPropertySignatureRule()); } 
	 EOF 
;

// Rule PropertySignature
rulePropertySignature 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPropertySignatureAccess().getGroup()); }
		(rule__PropertySignature__Group__0)
		{ after(grammarAccess.getPropertySignatureAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIdentifierName
entryRuleIdentifierName
:
{ before(grammarAccess.getIdentifierNameRule()); }
	 ruleIdentifierName
{ after(grammarAccess.getIdentifierNameRule()); } 
	 EOF 
;

// Rule IdentifierName
ruleIdentifierName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIdentifierNameAccess().getIDTerminalRuleCall()); }
		RULE_ID
		{ after(grammarAccess.getIdentifierNameAccess().getIDTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleType
entryRuleType
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAccess().getAlternatives()); }
		(rule__Type__Alternatives)
		{ after(grammarAccess.getTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePredefinedType
entryRulePredefinedType
:
{ before(grammarAccess.getPredefinedTypeRule()); }
	 rulePredefinedType
{ after(grammarAccess.getPredefinedTypeRule()); } 
	 EOF 
;

// Rule PredefinedType
rulePredefinedType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPredefinedTypeAccess().getPredefinedTypeAssignment()); }
		(rule__PredefinedType__PredefinedTypeAssignment)
		{ after(grammarAccess.getPredefinedTypeAccess().getPredefinedTypeAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeLiteral
entryRuleTypeLiteral
:
{ before(grammarAccess.getTypeLiteralRule()); }
	 ruleTypeLiteral
{ after(grammarAccess.getTypeLiteralRule()); } 
	 EOF 
;

// Rule TypeLiteral
ruleTypeLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeLiteralAccess().getAlternatives()); }
		(rule__TypeLiteral__Alternatives)
		{ after(grammarAccess.getTypeLiteralAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArrayType
entryRuleArrayType
:
{ before(grammarAccess.getArrayTypeRule()); }
	 ruleArrayType
{ after(grammarAccess.getArrayTypeRule()); } 
	 EOF 
;

// Rule ArrayType
ruleArrayType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArrayTypeAccess().getAlternatives()); }
		(rule__ArrayType__Alternatives)
		{ after(grammarAccess.getArrayTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeReference
entryRuleTypeReference
:
{ before(grammarAccess.getTypeReferenceRule()); }
	 ruleTypeReference
{ after(grammarAccess.getTypeReferenceRule()); } 
	 EOF 
;

// Rule TypeReference
ruleTypeReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeReferenceAccess().getReferenceAssignment()); }
		(rule__TypeReference__ReferenceAssignment)
		{ after(grammarAccess.getTypeReferenceAccess().getReferenceAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
		(rule__QualifiedName__Group__0)
		{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDocComment
entryRuleDocComment
:
{ before(grammarAccess.getDocCommentRule()); }
	 ruleDocComment
{ after(grammarAccess.getDocCommentRule()); } 
	 EOF 
;

// Rule DocComment
ruleDocComment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDocCommentAccess().getGroup()); }
		(rule__DocComment__Group__0)
		{ after(grammarAccess.getDocCommentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAnnotationLine
entryRuleAnnotationLine
:
{ before(grammarAccess.getAnnotationLineRule()); }
	 ruleAnnotationLine
{ after(grammarAccess.getAnnotationLineRule()); } 
	 EOF 
;

// Rule AnnotationLine
ruleAnnotationLine 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAnnotationLineAccess().getGroup()); }
		(rule__AnnotationLine__Group__0)
		{ after(grammarAccess.getAnnotationLineAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIndexSignature
entryRuleIndexSignature
:
{ before(grammarAccess.getIndexSignatureRule()); }
	 ruleIndexSignature
{ after(grammarAccess.getIndexSignatureRule()); } 
	 EOF 
;

// Rule IndexSignature
ruleIndexSignature 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIndexSignatureAccess().getGroup()); }
		(rule__IndexSignature__Group__0)
		{ after(grammarAccess.getIndexSignatureAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule PredefinedTypeEnum
rulePredefinedTypeEnum
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPredefinedTypeEnumAccess().getAlternatives()); }
		(rule__PredefinedTypeEnum__Alternatives)
		{ after(grammarAccess.getPredefinedTypeEnumAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule IndexType
ruleIndexType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIndexTypeAccess().getAlternatives()); }
		(rule__IndexType__Alternatives)
		{ after(grammarAccess.getIndexTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfacesAndClasses__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInterfacesAndClassesAccess().getModulesAssignment_1_0()); }
		(rule__InterfacesAndClasses__ModulesAssignment_1_0)
		{ after(grammarAccess.getInterfacesAndClassesAccess().getModulesAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getInterfacesAndClassesAccess().getTypesAssignment_1_1()); }
		(rule__InterfacesAndClasses__TypesAssignment_1_1)
		{ after(grammarAccess.getInterfacesAndClassesAccess().getTypesAssignment_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleElement__ModuleContentAlternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuleElementAccess().getModuleContentDeclarationParserRuleCall_1_0_0()); }
		ruleDeclaration
		{ after(grammarAccess.getModuleElementAccess().getModuleContentDeclarationParserRuleCall_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getModuleElementAccess().getModuleContentModuleDeclarationParserRuleCall_1_0_1()); }
		ruleModuleDeclaration
		{ after(grammarAccess.getModuleElementAccess().getModuleContentModuleDeclarationParserRuleCall_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getModuleElementAccess().getModuleContentImportDeclarationParserRuleCall_1_0_2()); }
		ruleImportDeclaration
		{ after(grammarAccess.getModuleElementAccess().getModuleContentImportDeclarationParserRuleCall_1_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceOrClassDeclaration__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInterfaceOrClassDeclarationAccess().getInterfaceDeclarationParserRuleCall_0_0()); }
		ruleInterfaceDeclaration
		{ after(grammarAccess.getInterfaceOrClassDeclarationAccess().getInterfaceDeclarationParserRuleCall_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getInterfaceOrClassDeclarationAccess().getClassDeclarationParserRuleCall_0_1()); }
		ruleClassDeclaration
		{ after(grammarAccess.getInterfaceOrClassDeclarationAccess().getClassDeclarationParserRuleCall_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeMember__SignatureAlternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeMemberAccess().getSignaturePropertySignatureParserRuleCall_1_0_0()); }
		rulePropertySignature
		{ after(grammarAccess.getTypeMemberAccess().getSignaturePropertySignatureParserRuleCall_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeMemberAccess().getSignatureIndexSignatureParserRuleCall_1_0_1()); }
		ruleIndexSignature
		{ after(grammarAccess.getTypeMemberAccess().getSignatureIndexSignatureParserRuleCall_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getPredefinedTypeParserRuleCall_0()); }
		rulePredefinedType
		{ after(grammarAccess.getTypeAccess().getPredefinedTypeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getTypeReferenceParserRuleCall_1()); }
		ruleTypeReference
		{ after(grammarAccess.getTypeAccess().getTypeReferenceParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getTypeLiteralParserRuleCall_2()); }
		ruleTypeLiteral
		{ after(grammarAccess.getTypeAccess().getTypeLiteralParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLiteral__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeLiteralAccess().getObjectTypeParserRuleCall_0()); }
		ruleObjectType
		{ after(grammarAccess.getTypeLiteralAccess().getObjectTypeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeLiteralAccess().getArrayTypeParserRuleCall_1()); }
		ruleArrayType
		{ after(grammarAccess.getTypeLiteralAccess().getArrayTypeParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayTypeAccess().getGroup_0()); }
		(rule__ArrayType__Group_0__0)
		{ after(grammarAccess.getArrayTypeAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getArrayTypeAccess().getGroup_1()); }
		(rule__ArrayType__Group_1__0)
		{ after(grammarAccess.getArrayTypeAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PredefinedTypeEnum__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPredefinedTypeEnumAccess().getAnyEnumLiteralDeclaration_0()); }
		('any')
		{ after(grammarAccess.getPredefinedTypeEnumAccess().getAnyEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getPredefinedTypeEnumAccess().getNumberEnumLiteralDeclaration_1()); }
		('number')
		{ after(grammarAccess.getPredefinedTypeEnumAccess().getNumberEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getPredefinedTypeEnumAccess().getBooleanEnumLiteralDeclaration_2()); }
		('boolean')
		{ after(grammarAccess.getPredefinedTypeEnumAccess().getBooleanEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getPredefinedTypeEnumAccess().getStringEnumLiteralDeclaration_3()); }
		('string')
		{ after(grammarAccess.getPredefinedTypeEnumAccess().getStringEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getPredefinedTypeEnumAccess().getVoidEnumLiteralDeclaration_4()); }
		('void')
		{ after(grammarAccess.getPredefinedTypeEnumAccess().getVoidEnumLiteralDeclaration_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIndexTypeAccess().getNumberEnumLiteralDeclaration_0()); }
		('number')
		{ after(grammarAccess.getIndexTypeAccess().getNumberEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getIndexTypeAccess().getStringEnumLiteralDeclaration_1()); }
		('string')
		{ after(grammarAccess.getIndexTypeAccess().getStringEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Typescript__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Typescript__Group__0__Impl
	rule__Typescript__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Typescript__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypescriptAccess().getImportsAssignment_0()); }
	(rule__Typescript__ImportsAssignment_0)*
	{ after(grammarAccess.getTypescriptAccess().getImportsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Typescript__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Typescript__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Typescript__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypescriptAccess().getInterfacesAndClassesAssignment_1()); }
	(rule__Typescript__InterfacesAndClassesAssignment_1)
	{ after(grammarAccess.getTypescriptAccess().getInterfacesAndClassesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InterfacesAndClasses__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InterfacesAndClasses__Group__0__Impl
	rule__InterfacesAndClasses__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfacesAndClasses__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfacesAndClassesAccess().getInterfacesAndClassesAction_0()); }
	()
	{ after(grammarAccess.getInterfacesAndClassesAccess().getInterfacesAndClassesAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfacesAndClasses__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InterfacesAndClasses__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfacesAndClasses__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfacesAndClassesAccess().getAlternatives_1()); }
	(rule__InterfacesAndClasses__Alternatives_1)*
	{ after(grammarAccess.getInterfacesAndClassesAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImportDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportDeclaration__Group__0__Impl
	rule__ImportDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportDeclarationAccess().getImportKeyword_0()); }
	'import'
	{ after(grammarAccess.getImportDeclarationAccess().getImportKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportDeclaration__Group__1__Impl
	rule__ImportDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportDeclarationAccess().getAliasAssignment_1()); }
	(rule__ImportDeclaration__AliasAssignment_1)
	{ after(grammarAccess.getImportDeclarationAccess().getAliasAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportDeclaration__Group__2__Impl
	rule__ImportDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportDeclarationAccess().getEqualsSignKeyword_2()); }
	'='
	{ after(grammarAccess.getImportDeclarationAccess().getEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportDeclarationAccess().getNameAssignment_3()); }
	(rule__ImportDeclaration__NameAssignment_3)
	{ after(grammarAccess.getImportDeclarationAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ModuleDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModuleDeclaration__Group__0__Impl
	rule__ModuleDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleDeclarationAccess().getDocCommentAssignment_0()); }
	(rule__ModuleDeclaration__DocCommentAssignment_0)?
	{ after(grammarAccess.getModuleDeclarationAccess().getDocCommentAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModuleDeclaration__Group__1__Impl
	rule__ModuleDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleDeclarationAccess().getModuleKeyword_1()); }
	'module'
	{ after(grammarAccess.getModuleDeclarationAccess().getModuleKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModuleDeclaration__Group__2__Impl
	rule__ModuleDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleDeclarationAccess().getNameAssignment_2()); }
	(rule__ModuleDeclaration__NameAssignment_2)
	{ after(grammarAccess.getModuleDeclarationAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModuleDeclaration__Group__3__Impl
	rule__ModuleDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleDeclarationAccess().getGroup_3()); }
	(rule__ModuleDeclaration__Group_3__0)*
	{ after(grammarAccess.getModuleDeclarationAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleDeclaration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModuleDeclaration__Group__4__Impl
	rule__ModuleDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleDeclaration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleDeclarationAccess().getLeftCurlyBracketKeyword_4()); }
	'{'
	{ after(grammarAccess.getModuleDeclarationAccess().getLeftCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleDeclaration__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModuleDeclaration__Group__5__Impl
	rule__ModuleDeclaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleDeclaration__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleDeclarationAccess().getBodyAssignment_5()); }
	(rule__ModuleDeclaration__BodyAssignment_5)
	{ after(grammarAccess.getModuleDeclarationAccess().getBodyAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleDeclaration__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModuleDeclaration__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleDeclaration__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleDeclarationAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getModuleDeclarationAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ModuleDeclaration__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModuleDeclaration__Group_3__0__Impl
	rule__ModuleDeclaration__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleDeclaration__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleDeclarationAccess().getFullStopKeyword_3_0()); }
	'.'
	{ after(grammarAccess.getModuleDeclarationAccess().getFullStopKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleDeclaration__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModuleDeclaration__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleDeclaration__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleDeclarationAccess().getIdentifierParserRuleCall_3_1()); }
	ruleIdentifier
	{ after(grammarAccess.getModuleDeclarationAccess().getIdentifierParserRuleCall_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ModuleBody__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModuleBody__Group__0__Impl
	rule__ModuleBody__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleBody__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleBodyAccess().getModuleBodyAction_0()); }
	()
	{ after(grammarAccess.getModuleBodyAccess().getModuleBodyAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleBody__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModuleBody__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleBody__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleBodyAccess().getElementsAssignment_1()); }
	(rule__ModuleBody__ElementsAssignment_1)*
	{ after(grammarAccess.getModuleBodyAccess().getElementsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ModuleElement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModuleElement__Group__0__Impl
	rule__ModuleElement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleElement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleElementAccess().getExportedAssignment_0()); }
	(rule__ModuleElement__ExportedAssignment_0)?
	{ after(grammarAccess.getModuleElementAccess().getExportedAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleElement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModuleElement__Group__1__Impl
	rule__ModuleElement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleElement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleElementAccess().getModuleContentAssignment_1()); }
	(rule__ModuleElement__ModuleContentAssignment_1)
	{ after(grammarAccess.getModuleElementAccess().getModuleContentAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleElement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModuleElement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleElement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleElementAccess().getSemicolonKeyword_2()); }
	(';')?
	{ after(grammarAccess.getModuleElementAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declaration__Group__0__Impl
	rule__Declaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclarationAccess().getDocCommentAssignment_0()); }
	(rule__Declaration__DocCommentAssignment_0)?
	{ after(grammarAccess.getDeclarationAccess().getDocCommentAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclarationAccess().getDeclarationAssignment_1()); }
	(rule__Declaration__DeclarationAssignment_1)
	{ after(grammarAccess.getDeclarationAccess().getDeclarationAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceOrClassDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InterfaceOrClassDeclaration__Group__0__Impl
	rule__InterfaceOrClassDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceOrClassDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceOrClassDeclarationAccess().getAlternatives_0()); }
	(rule__InterfaceOrClassDeclaration__Alternatives_0)
	{ after(grammarAccess.getInterfaceOrClassDeclarationAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceOrClassDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InterfaceOrClassDeclaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceOrClassDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceOrClassDeclarationAccess().getObjectTypeAssignment_1()); }
	(rule__InterfaceOrClassDeclaration__ObjectTypeAssignment_1)
	{ after(grammarAccess.getInterfaceOrClassDeclarationAccess().getObjectTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InterfaceDeclaration__Group__0__Impl
	rule__InterfaceDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceDeclarationAccess().getInterfaceKeyword_0()); }
	'interface'
	{ after(grammarAccess.getInterfaceDeclarationAccess().getInterfaceKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InterfaceDeclaration__Group__1__Impl
	rule__InterfaceDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceDeclarationAccess().getNameAssignment_1()); }
	(rule__InterfaceDeclaration__NameAssignment_1)
	{ after(grammarAccess.getInterfaceDeclarationAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InterfaceDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceDeclarationAccess().getExtendClauseAssignment_2()); }
	(rule__InterfaceDeclaration__ExtendClauseAssignment_2)?
	{ after(grammarAccess.getInterfaceDeclarationAccess().getExtendClauseAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassDeclaration__Group__0__Impl
	rule__ClassDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassDeclarationAccess().getClassKeyword_0()); }
	'class'
	{ after(grammarAccess.getClassDeclarationAccess().getClassKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassDeclaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassDeclarationAccess().getNameAssignment_1()); }
	(rule__ClassDeclaration__NameAssignment_1)
	{ after(grammarAccess.getClassDeclarationAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceExtendsClause__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InterfaceExtendsClause__Group__0__Impl
	rule__InterfaceExtendsClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceExtendsClause__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceExtendsClauseAccess().getExtendsKeyword_0()); }
	'extends'
	{ after(grammarAccess.getInterfaceExtendsClauseAccess().getExtendsKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceExtendsClause__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InterfaceExtendsClause__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceExtendsClause__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceExtendsClauseAccess().getClassOrInterfaceTypeListParserRuleCall_1()); }
	ruleClassOrInterfaceTypeList
	{ after(grammarAccess.getInterfaceExtendsClauseAccess().getClassOrInterfaceTypeListParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ClassOrInterfaceTypeList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassOrInterfaceTypeList__Group__0__Impl
	rule__ClassOrInterfaceTypeList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassOrInterfaceTypeList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassOrInterfaceTypeListAccess().getClassOrInterfaceTypeListAction_0()); }
	()
	{ after(grammarAccess.getClassOrInterfaceTypeListAccess().getClassOrInterfaceTypeListAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassOrInterfaceTypeList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassOrInterfaceTypeList__Group__1__Impl
	rule__ClassOrInterfaceTypeList__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassOrInterfaceTypeList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassOrInterfaceTypeListAccess().getParentsAssignment_1()); }
	(rule__ClassOrInterfaceTypeList__ParentsAssignment_1)
	{ after(grammarAccess.getClassOrInterfaceTypeListAccess().getParentsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassOrInterfaceTypeList__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassOrInterfaceTypeList__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassOrInterfaceTypeList__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassOrInterfaceTypeListAccess().getGroup_2()); }
	(rule__ClassOrInterfaceTypeList__Group_2__0)*
	{ after(grammarAccess.getClassOrInterfaceTypeListAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ClassOrInterfaceTypeList__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassOrInterfaceTypeList__Group_2__0__Impl
	rule__ClassOrInterfaceTypeList__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassOrInterfaceTypeList__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassOrInterfaceTypeListAccess().getCommaKeyword_2_0()); }
	','
	{ after(grammarAccess.getClassOrInterfaceTypeListAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassOrInterfaceTypeList__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassOrInterfaceTypeList__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassOrInterfaceTypeList__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassOrInterfaceTypeListAccess().getParentsAssignment_2_1()); }
	(rule__ClassOrInterfaceTypeList__ParentsAssignment_2_1)
	{ after(grammarAccess.getClassOrInterfaceTypeListAccess().getParentsAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectType__Group__0__Impl
	rule__ObjectType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectTypeAccess().getObjectTypeAction_0()); }
	()
	{ after(grammarAccess.getObjectTypeAccess().getObjectTypeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectType__Group__1__Impl
	rule__ObjectType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectTypeAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getObjectTypeAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectType__Group__2__Impl
	rule__ObjectType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectTypeAccess().getGroup_2()); }
	(rule__ObjectType__Group_2__0)*
	{ after(grammarAccess.getObjectTypeAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectType__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectTypeAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getObjectTypeAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectType__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectType__Group_2__0__Impl
	rule__ObjectType__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectType__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectTypeAccess().getMembersAssignment_2_0()); }
	(rule__ObjectType__MembersAssignment_2_0)
	{ after(grammarAccess.getObjectTypeAccess().getMembersAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectType__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectType__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectType__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectTypeAccess().getSemicolonKeyword_2_1()); }
	(';')?
	{ after(grammarAccess.getObjectTypeAccess().getSemicolonKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeMember__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeMember__Group__0__Impl
	rule__TypeMember__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeMember__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeMemberAccess().getDocCommentAssignment_0()); }
	(rule__TypeMember__DocCommentAssignment_0)?
	{ after(grammarAccess.getTypeMemberAccess().getDocCommentAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeMember__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeMember__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeMember__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeMemberAccess().getSignatureAssignment_1()); }
	(rule__TypeMember__SignatureAssignment_1)
	{ after(grammarAccess.getTypeMemberAccess().getSignatureAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PropertySignature__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertySignature__Group__0__Impl
	rule__PropertySignature__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertySignature__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertySignatureAccess().getNameAssignment_0()); }
	(rule__PropertySignature__NameAssignment_0)
	{ after(grammarAccess.getPropertySignatureAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertySignature__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertySignature__Group__1__Impl
	rule__PropertySignature__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertySignature__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertySignatureAccess().getOptionalAssignment_1()); }
	(rule__PropertySignature__OptionalAssignment_1)?
	{ after(grammarAccess.getPropertySignatureAccess().getOptionalAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertySignature__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertySignature__Group__2__Impl
	rule__PropertySignature__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertySignature__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertySignatureAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getPropertySignatureAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertySignature__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertySignature__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertySignature__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertySignatureAccess().getTypeAssignment_3()); }
	(rule__PropertySignature__TypeAssignment_3)
	{ after(grammarAccess.getPropertySignatureAccess().getTypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayType__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayType__Group_0__0__Impl
	rule__ArrayType__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayTypeAccess().getArrayTypeAction_0_0()); }
	()
	{ after(grammarAccess.getArrayTypeAccess().getArrayTypeAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayType__Group_0__1__Impl
	rule__ArrayType__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayTypeAccess().getArrayAssignment_0_1()); }
	(rule__ArrayType__ArrayAssignment_0_1)
	{ after(grammarAccess.getArrayTypeAccess().getArrayAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayType__Group_0__2__Impl
	rule__ArrayType__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayTypeAccess().getLeftSquareBracketKeyword_0_2()); }
	'['
	{ after(grammarAccess.getArrayTypeAccess().getLeftSquareBracketKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayType__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayTypeAccess().getRightSquareBracketKeyword_0_3()); }
	']'
	{ after(grammarAccess.getArrayTypeAccess().getRightSquareBracketKeyword_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayType__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayType__Group_1__0__Impl
	rule__ArrayType__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayTypeAccess().getTypeReferenceParserRuleCall_1_0()); }
	ruleTypeReference
	{ after(grammarAccess.getArrayTypeAccess().getTypeReferenceParserRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayType__Group_1__1__Impl
	rule__ArrayType__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayTypeAccess().getLeftSquareBracketKeyword_1_1()); }
	'['
	{ after(grammarAccess.getArrayTypeAccess().getLeftSquareBracketKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayType__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayTypeAccess().getRightSquareBracketKeyword_1_2()); }
	']'
	{ after(grammarAccess.getArrayTypeAccess().getRightSquareBracketKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
	(rule__QualifiedName__Group_1__0)*
	{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DocComment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DocComment__Group__0__Impl
	rule__DocComment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DocComment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDocCommentAccess().getDocCommentAction_0()); }
	()
	{ after(grammarAccess.getDocCommentAccess().getDocCommentAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DocComment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DocComment__Group__1__Impl
	rule__DocComment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DocComment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDocCommentAccess().getSolidusAsteriskAsteriskKeyword_1()); }
	'/**'
	{ after(grammarAccess.getDocCommentAccess().getSolidusAsteriskAsteriskKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DocComment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DocComment__Group__2__Impl
	rule__DocComment__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DocComment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDocCommentAccess().getLinesAssignment_2()); }
	(rule__DocComment__LinesAssignment_2)*
	{ after(grammarAccess.getDocCommentAccess().getLinesAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DocComment__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DocComment__Group__3__Impl
	rule__DocComment__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DocComment__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDocCommentAccess().getAnnotationsAssignment_3()); }
	(rule__DocComment__AnnotationsAssignment_3)*
	{ after(grammarAccess.getDocCommentAccess().getAnnotationsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DocComment__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DocComment__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DocComment__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDocCommentAccess().getDOC_COMMENT_ENDTerminalRuleCall_4()); }
	RULE_DOC_COMMENT_END
	{ after(grammarAccess.getDocCommentAccess().getDOC_COMMENT_ENDTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationLine__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnnotationLine__Group__0__Impl
	rule__AnnotationLine__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationLine__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotationLineAccess().getDOC_ANNOTATION_PREFIXTerminalRuleCall_0()); }
	RULE_DOC_ANNOTATION_PREFIX
	{ after(grammarAccess.getAnnotationLineAccess().getDOC_ANNOTATION_PREFIXTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationLine__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnnotationLine__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationLine__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotationLineAccess().getAnnotationNameAssignment_1()); }
	(rule__AnnotationLine__AnnotationNameAssignment_1)
	{ after(grammarAccess.getAnnotationLineAccess().getAnnotationNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IndexSignature__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IndexSignature__Group__0__Impl
	rule__IndexSignature__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexSignature__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndexSignatureAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getIndexSignatureAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexSignature__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IndexSignature__Group__1__Impl
	rule__IndexSignature__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexSignature__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndexSignatureAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
	{ after(grammarAccess.getIndexSignatureAccess().getIDTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexSignature__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IndexSignature__Group__2__Impl
	rule__IndexSignature__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexSignature__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndexSignatureAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getIndexSignatureAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexSignature__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IndexSignature__Group__3__Impl
	rule__IndexSignature__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexSignature__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndexSignatureAccess().getIndexTypeAssignment_3()); }
	(rule__IndexSignature__IndexTypeAssignment_3)
	{ after(grammarAccess.getIndexSignatureAccess().getIndexTypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexSignature__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IndexSignature__Group__4__Impl
	rule__IndexSignature__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexSignature__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndexSignatureAccess().getRightSquareBracketKeyword_4()); }
	']'
	{ after(grammarAccess.getIndexSignatureAccess().getRightSquareBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexSignature__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IndexSignature__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexSignature__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndexSignatureAccess().getValueTypeAssignment_5()); }
	(rule__IndexSignature__ValueTypeAssignment_5)
	{ after(grammarAccess.getIndexSignatureAccess().getValueTypeAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Typescript__ImportsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypescriptAccess().getImportsImportDeclarationParserRuleCall_0_0()); }
		ruleImportDeclaration
		{ after(grammarAccess.getTypescriptAccess().getImportsImportDeclarationParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Typescript__InterfacesAndClassesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypescriptAccess().getInterfacesAndClassesInterfacesAndClassesParserRuleCall_1_0()); }
		ruleInterfacesAndClasses
		{ after(grammarAccess.getTypescriptAccess().getInterfacesAndClassesInterfacesAndClassesParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfacesAndClasses__ModulesAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInterfacesAndClassesAccess().getModulesModuleDeclarationParserRuleCall_1_0_0()); }
		ruleModuleDeclaration
		{ after(grammarAccess.getInterfacesAndClassesAccess().getModulesModuleDeclarationParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfacesAndClasses__TypesAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInterfacesAndClassesAccess().getTypesDeclarationParserRuleCall_1_1_0()); }
		ruleDeclaration
		{ after(grammarAccess.getInterfacesAndClassesAccess().getTypesDeclarationParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDeclaration__AliasAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportDeclarationAccess().getAliasIdentifierParserRuleCall_1_0()); }
		ruleIdentifier
		{ after(grammarAccess.getImportDeclarationAccess().getAliasIdentifierParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDeclaration__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportDeclarationAccess().getNameQualifiedNameParserRuleCall_3_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getImportDeclarationAccess().getNameQualifiedNameParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleDeclaration__DocCommentAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuleDeclarationAccess().getDocCommentDocCommentParserRuleCall_0_0()); }
		ruleDocComment
		{ after(grammarAccess.getModuleDeclarationAccess().getDocCommentDocCommentParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleDeclaration__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuleDeclarationAccess().getNameIdentifierParserRuleCall_2_0()); }
		ruleIdentifier
		{ after(grammarAccess.getModuleDeclarationAccess().getNameIdentifierParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleDeclaration__BodyAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuleDeclarationAccess().getBodyModuleBodyParserRuleCall_5_0()); }
		ruleModuleBody
		{ after(grammarAccess.getModuleDeclarationAccess().getBodyModuleBodyParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleBody__ElementsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuleBodyAccess().getElementsModuleElementParserRuleCall_1_0()); }
		ruleModuleElement
		{ after(grammarAccess.getModuleBodyAccess().getElementsModuleElementParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleElement__ExportedAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuleElementAccess().getExportedExportKeyword_0_0()); }
		(
			{ before(grammarAccess.getModuleElementAccess().getExportedExportKeyword_0_0()); }
			'export'
			{ after(grammarAccess.getModuleElementAccess().getExportedExportKeyword_0_0()); }
		)
		{ after(grammarAccess.getModuleElementAccess().getExportedExportKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleElement__ModuleContentAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuleElementAccess().getModuleContentAlternatives_1_0()); }
		(rule__ModuleElement__ModuleContentAlternatives_1_0)
		{ after(grammarAccess.getModuleElementAccess().getModuleContentAlternatives_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__DocCommentAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclarationAccess().getDocCommentDocCommentParserRuleCall_0_0()); }
		ruleDocComment
		{ after(grammarAccess.getDeclarationAccess().getDocCommentDocCommentParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__DeclarationAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclarationAccess().getDeclarationInterfaceOrClassDeclarationParserRuleCall_1_0()); }
		ruleInterfaceOrClassDeclaration
		{ after(grammarAccess.getDeclarationAccess().getDeclarationInterfaceOrClassDeclarationParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceOrClassDeclaration__ObjectTypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInterfaceOrClassDeclarationAccess().getObjectTypeObjectTypeParserRuleCall_1_0()); }
		ruleObjectType
		{ after(grammarAccess.getInterfaceOrClassDeclarationAccess().getObjectTypeObjectTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceDeclaration__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInterfaceDeclarationAccess().getNameIdentifierParserRuleCall_1_0()); }
		ruleIdentifier
		{ after(grammarAccess.getInterfaceDeclarationAccess().getNameIdentifierParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceDeclaration__ExtendClauseAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInterfaceDeclarationAccess().getExtendClauseInterfaceExtendsClauseParserRuleCall_2_0()); }
		ruleInterfaceExtendsClause
		{ after(grammarAccess.getInterfaceDeclarationAccess().getExtendClauseInterfaceExtendsClauseParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassDeclarationAccess().getNameIdentifierParserRuleCall_1_0()); }
		ruleIdentifier
		{ after(grammarAccess.getClassDeclarationAccess().getNameIdentifierParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassOrInterfaceTypeList__ParentsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassOrInterfaceTypeListAccess().getParentsTypeReferenceParserRuleCall_1_0()); }
		ruleTypeReference
		{ after(grammarAccess.getClassOrInterfaceTypeListAccess().getParentsTypeReferenceParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassOrInterfaceTypeList__ParentsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassOrInterfaceTypeListAccess().getParentsTypeReferenceParserRuleCall_2_1_0()); }
		ruleTypeReference
		{ after(grammarAccess.getClassOrInterfaceTypeListAccess().getParentsTypeReferenceParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectType__MembersAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectTypeAccess().getMembersTypeMemberParserRuleCall_2_0_0()); }
		ruleTypeMember
		{ after(grammarAccess.getObjectTypeAccess().getMembersTypeMemberParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeMember__DocCommentAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeMemberAccess().getDocCommentDocCommentParserRuleCall_0_0()); }
		ruleDocComment
		{ after(grammarAccess.getTypeMemberAccess().getDocCommentDocCommentParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeMember__SignatureAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeMemberAccess().getSignatureAlternatives_1_0()); }
		(rule__TypeMember__SignatureAlternatives_1_0)
		{ after(grammarAccess.getTypeMemberAccess().getSignatureAlternatives_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertySignature__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertySignatureAccess().getNameIdentifierNameParserRuleCall_0_0()); }
		ruleIdentifierName
		{ after(grammarAccess.getPropertySignatureAccess().getNameIdentifierNameParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertySignature__OptionalAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertySignatureAccess().getOptionalQuestionMarkKeyword_1_0()); }
		(
			{ before(grammarAccess.getPropertySignatureAccess().getOptionalQuestionMarkKeyword_1_0()); }
			'?'
			{ after(grammarAccess.getPropertySignatureAccess().getOptionalQuestionMarkKeyword_1_0()); }
		)
		{ after(grammarAccess.getPropertySignatureAccess().getOptionalQuestionMarkKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertySignature__TypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertySignatureAccess().getTypeTypeParserRuleCall_3_0()); }
		ruleType
		{ after(grammarAccess.getPropertySignatureAccess().getTypeTypeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PredefinedType__PredefinedTypeAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPredefinedTypeAccess().getPredefinedTypePredefinedTypeEnumEnumRuleCall_0()); }
		rulePredefinedTypeEnum
		{ after(grammarAccess.getPredefinedTypeAccess().getPredefinedTypePredefinedTypeEnumEnumRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__ArrayAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayTypeAccess().getArrayPredefinedTypeParserRuleCall_0_1_0()); }
		rulePredefinedType
		{ after(grammarAccess.getArrayTypeAccess().getArrayPredefinedTypeParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeReference__ReferenceAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeReferenceAccess().getReferenceInterfaceOrClassDeclarationCrossReference_0()); }
		(
			{ before(grammarAccess.getTypeReferenceAccess().getReferenceInterfaceOrClassDeclarationQualifiedNameParserRuleCall_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getTypeReferenceAccess().getReferenceInterfaceOrClassDeclarationQualifiedNameParserRuleCall_0_1()); }
		)
		{ after(grammarAccess.getTypeReferenceAccess().getReferenceInterfaceOrClassDeclarationCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DocComment__LinesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDocCommentAccess().getLinesDOC_COMMENT_LINETerminalRuleCall_2_0()); }
		RULE_DOC_COMMENT_LINE
		{ after(grammarAccess.getDocCommentAccess().getLinesDOC_COMMENT_LINETerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DocComment__AnnotationsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDocCommentAccess().getAnnotationsAnnotationLineParserRuleCall_3_0()); }
		ruleAnnotationLine
		{ after(grammarAccess.getDocCommentAccess().getAnnotationsAnnotationLineParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationLine__AnnotationNameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnnotationLineAccess().getAnnotationNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getAnnotationLineAccess().getAnnotationNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexSignature__IndexTypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIndexSignatureAccess().getIndexTypeIndexTypeEnumRuleCall_3_0()); }
		ruleIndexType
		{ after(grammarAccess.getIndexSignatureAccess().getIndexTypeIndexTypeEnumRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexSignature__ValueTypeAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIndexSignatureAccess().getValueTypeTypeParserRuleCall_5_0()); }
		ruleType
		{ after(grammarAccess.getIndexSignatureAccess().getValueTypeTypeParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_DOC_COMMENT_END : (' '|'\t')* '*' '/';

RULE_DOC_ANNOTATION_PREFIX : (' '|'\t')* '* @';

RULE_DOC_COMMENT_LINE : (' '|'\t')* '*' ~('/') ~('@') ( options {greedy=false;} : . )*'\r'? '\n';

RULE_ML_COMMENT : '/*' ~('*') ( options {greedy=false;} : . )*'*/';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
