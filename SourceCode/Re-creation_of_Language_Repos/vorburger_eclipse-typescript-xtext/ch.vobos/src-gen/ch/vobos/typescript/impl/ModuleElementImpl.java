/**
 * generated by Xtext 2.35.0
 */
package ch.vobos.typescript.impl;

import ch.vobos.typescript.ModuleElement;
import ch.vobos.typescript.TypescriptPackage;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Module Element</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link ch.vobos.typescript.impl.ModuleElementImpl#isExported <em>Exported</em>}</li>
 *   <li>{@link ch.vobos.typescript.impl.ModuleElementImpl#getModuleContent <em>Module Content</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ModuleElementImpl extends MinimalEObjectImpl.Container implements ModuleElement
{
  /**
   * The default value of the '{@link #isExported() <em>Exported</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isExported()
   * @generated
   * @ordered
   */
  protected static final boolean EXPORTED_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isExported() <em>Exported</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isExported()
   * @generated
   * @ordered
   */
  protected boolean exported = EXPORTED_EDEFAULT;

  /**
   * The cached value of the '{@link #getModuleContent() <em>Module Content</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getModuleContent()
   * @generated
   * @ordered
   */
  protected EObject moduleContent;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ModuleElementImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return TypescriptPackage.Literals.MODULE_ELEMENT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isExported()
  {
    return exported;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setExported(boolean newExported)
  {
    boolean oldExported = exported;
    exported = newExported;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TypescriptPackage.MODULE_ELEMENT__EXPORTED, oldExported, exported));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject getModuleContent()
  {
    return moduleContent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetModuleContent(EObject newModuleContent, NotificationChain msgs)
  {
    EObject oldModuleContent = moduleContent;
    moduleContent = newModuleContent;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, TypescriptPackage.MODULE_ELEMENT__MODULE_CONTENT, oldModuleContent, newModuleContent);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setModuleContent(EObject newModuleContent)
  {
    if (newModuleContent != moduleContent)
    {
      NotificationChain msgs = null;
      if (moduleContent != null)
        msgs = ((InternalEObject)moduleContent).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - TypescriptPackage.MODULE_ELEMENT__MODULE_CONTENT, null, msgs);
      if (newModuleContent != null)
        msgs = ((InternalEObject)newModuleContent).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - TypescriptPackage.MODULE_ELEMENT__MODULE_CONTENT, null, msgs);
      msgs = basicSetModuleContent(newModuleContent, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TypescriptPackage.MODULE_ELEMENT__MODULE_CONTENT, newModuleContent, newModuleContent));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case TypescriptPackage.MODULE_ELEMENT__MODULE_CONTENT:
        return basicSetModuleContent(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case TypescriptPackage.MODULE_ELEMENT__EXPORTED:
        return isExported();
      case TypescriptPackage.MODULE_ELEMENT__MODULE_CONTENT:
        return getModuleContent();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case TypescriptPackage.MODULE_ELEMENT__EXPORTED:
        setExported((Boolean)newValue);
        return;
      case TypescriptPackage.MODULE_ELEMENT__MODULE_CONTENT:
        setModuleContent((EObject)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case TypescriptPackage.MODULE_ELEMENT__EXPORTED:
        setExported(EXPORTED_EDEFAULT);
        return;
      case TypescriptPackage.MODULE_ELEMENT__MODULE_CONTENT:
        setModuleContent((EObject)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case TypescriptPackage.MODULE_ELEMENT__EXPORTED:
        return exported != EXPORTED_EDEFAULT;
      case TypescriptPackage.MODULE_ELEMENT__MODULE_CONTENT:
        return moduleContent != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (exported: ");
    result.append(exported);
    result.append(')');
    return result.toString();
  }

} //ModuleElementImpl
