/*
 * generated by Xtext 2.35.0
 */
grammar InternalTypescript;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package ch.vobos.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package ch.vobos.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import ch.vobos.services.TypescriptGrammarAccess;

}

@parser::members {

 	private TypescriptGrammarAccess grammarAccess;

    public InternalTypescriptParser(TokenStream input, TypescriptGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Typescript";
   	}

   	@Override
   	protected TypescriptGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleTypescript
entryRuleTypescript returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypescriptRule()); }
	iv_ruleTypescript=ruleTypescript
	{ $current=$iv_ruleTypescript.current; }
	EOF;

// Rule Typescript
ruleTypescript returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getTypescriptAccess().getImportsImportDeclarationParserRuleCall_0_0());
				}
				lv_imports_0_0=ruleImportDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypescriptRule());
					}
					add(
						$current,
						"imports",
						lv_imports_0_0,
						"ch.vobos.Typescript.ImportDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getTypescriptAccess().getInterfacesAndClassesInterfacesAndClassesParserRuleCall_1_0());
				}
				lv_interfacesAndClasses_1_0=ruleInterfacesAndClasses
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypescriptRule());
					}
					set(
						$current,
						"interfacesAndClasses",
						lv_interfacesAndClasses_1_0,
						"ch.vobos.Typescript.InterfacesAndClasses");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleInterfacesAndClasses
entryRuleInterfacesAndClasses returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInterfacesAndClassesRule()); }
	iv_ruleInterfacesAndClasses=ruleInterfacesAndClasses
	{ $current=$iv_ruleInterfacesAndClasses.current; }
	EOF;

// Rule InterfacesAndClasses
ruleInterfacesAndClasses returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getInterfacesAndClassesAccess().getInterfacesAndClassesAction_0(),
					$current);
			}
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getInterfacesAndClassesAccess().getModulesModuleDeclarationParserRuleCall_1_0_0());
					}
					lv_modules_1_0=ruleModuleDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInterfacesAndClassesRule());
						}
						add(
							$current,
							"modules",
							lv_modules_1_0,
							"ch.vobos.Typescript.ModuleDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getInterfacesAndClassesAccess().getTypesDeclarationParserRuleCall_1_1_0());
					}
					lv_types_2_0=ruleDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInterfacesAndClassesRule());
						}
						add(
							$current,
							"types",
							lv_types_2_0,
							"ch.vobos.Typescript.Declaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleImportDeclaration
entryRuleImportDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImportDeclarationRule()); }
	iv_ruleImportDeclaration=ruleImportDeclaration
	{ $current=$iv_ruleImportDeclaration.current; }
	EOF;

// Rule ImportDeclaration
ruleImportDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='import'
		{
			newLeafNode(otherlv_0, grammarAccess.getImportDeclarationAccess().getImportKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getImportDeclarationAccess().getAliasIdentifierParserRuleCall_1_0());
				}
				lv_alias_1_0=ruleIdentifier
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImportDeclarationRule());
					}
					set(
						$current,
						"alias",
						lv_alias_1_0,
						"ch.vobos.Typescript.Identifier");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='='
		{
			newLeafNode(otherlv_2, grammarAccess.getImportDeclarationAccess().getEqualsSignKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getImportDeclarationAccess().getNameQualifiedNameParserRuleCall_3_0());
				}
				lv_name_3_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImportDeclarationRule());
					}
					set(
						$current,
						"name",
						lv_name_3_0,
						"ch.vobos.Typescript.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleModuleDeclaration
entryRuleModuleDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModuleDeclarationRule()); }
	iv_ruleModuleDeclaration=ruleModuleDeclaration
	{ $current=$iv_ruleModuleDeclaration.current; }
	EOF;

// Rule ModuleDeclaration
ruleModuleDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getModuleDeclarationAccess().getDocCommentDocCommentParserRuleCall_0_0());
				}
				lv_docComment_0_0=ruleDocComment
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModuleDeclarationRule());
					}
					set(
						$current,
						"docComment",
						lv_docComment_0_0,
						"ch.vobos.Typescript.DocComment");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_1='module'
		{
			newLeafNode(otherlv_1, grammarAccess.getModuleDeclarationAccess().getModuleKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getModuleDeclarationAccess().getNameIdentifierParserRuleCall_2_0());
				}
				lv_name_2_0=ruleIdentifier
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModuleDeclarationRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"ch.vobos.Typescript.Identifier");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3='.'
			{
				newLeafNode(otherlv_3, grammarAccess.getModuleDeclarationAccess().getFullStopKeyword_3_0());
			}
			{
				newCompositeNode(grammarAccess.getModuleDeclarationAccess().getIdentifierParserRuleCall_3_1());
			}
			ruleIdentifier
			{
				afterParserOrEnumRuleCall();
			}
		)*
		otherlv_5='{'
		{
			newLeafNode(otherlv_5, grammarAccess.getModuleDeclarationAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getModuleDeclarationAccess().getBodyModuleBodyParserRuleCall_5_0());
				}
				lv_body_6_0=ruleModuleBody
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModuleDeclarationRule());
					}
					set(
						$current,
						"body",
						lv_body_6_0,
						"ch.vobos.Typescript.ModuleBody");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getModuleDeclarationAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleModuleBody
entryRuleModuleBody returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModuleBodyRule()); }
	iv_ruleModuleBody=ruleModuleBody
	{ $current=$iv_ruleModuleBody.current; }
	EOF;

// Rule ModuleBody
ruleModuleBody returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getModuleBodyAccess().getModuleBodyAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getModuleBodyAccess().getElementsModuleElementParserRuleCall_1_0());
				}
				lv_elements_1_0=ruleModuleElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModuleBodyRule());
					}
					add(
						$current,
						"elements",
						lv_elements_1_0,
						"ch.vobos.Typescript.ModuleElement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleModuleElement
entryRuleModuleElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModuleElementRule()); }
	iv_ruleModuleElement=ruleModuleElement
	{ $current=$iv_ruleModuleElement.current; }
	EOF;

// Rule ModuleElement
ruleModuleElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_exported_0_0='export'
				{
					newLeafNode(lv_exported_0_0, grammarAccess.getModuleElementAccess().getExportedExportKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getModuleElementRule());
					}
					setWithLastConsumed($current, "exported", lv_exported_0_0 != null, "export");
				}
			)
		)?
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getModuleElementAccess().getModuleContentDeclarationParserRuleCall_1_0_0());
					}
					lv_moduleContent_1_1=ruleDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModuleElementRule());
						}
						set(
							$current,
							"moduleContent",
							lv_moduleContent_1_1,
							"ch.vobos.Typescript.Declaration");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getModuleElementAccess().getModuleContentModuleDeclarationParserRuleCall_1_0_1());
					}
					lv_moduleContent_1_2=ruleModuleDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModuleElementRule());
						}
						set(
							$current,
							"moduleContent",
							lv_moduleContent_1_2,
							"ch.vobos.Typescript.ModuleDeclaration");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getModuleElementAccess().getModuleContentImportDeclarationParserRuleCall_1_0_2());
					}
					lv_moduleContent_1_3=ruleImportDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModuleElementRule());
						}
						set(
							$current,
							"moduleContent",
							lv_moduleContent_1_3,
							"ch.vobos.Typescript.ImportDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			otherlv_2=';'
			{
				newLeafNode(otherlv_2, grammarAccess.getModuleElementAccess().getSemicolonKeyword_2());
			}
		)?
	)
;

// Entry rule entryRuleDeclaration
entryRuleDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeclarationRule()); }
	iv_ruleDeclaration=ruleDeclaration
	{ $current=$iv_ruleDeclaration.current; }
	EOF;

// Rule Declaration
ruleDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getDeclarationAccess().getDocCommentDocCommentParserRuleCall_0_0());
				}
				lv_docComment_0_0=ruleDocComment
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeclarationRule());
					}
					set(
						$current,
						"docComment",
						lv_docComment_0_0,
						"ch.vobos.Typescript.DocComment");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getDeclarationAccess().getDeclarationInterfaceOrClassDeclarationParserRuleCall_1_0());
				}
				lv_declaration_1_0=ruleInterfaceOrClassDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeclarationRule());
					}
					set(
						$current,
						"declaration",
						lv_declaration_1_0,
						"ch.vobos.Typescript.InterfaceOrClassDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleInterfaceOrClassDeclaration
entryRuleInterfaceOrClassDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInterfaceOrClassDeclarationRule()); }
	iv_ruleInterfaceOrClassDeclaration=ruleInterfaceOrClassDeclaration
	{ $current=$iv_ruleInterfaceOrClassDeclaration.current; }
	EOF;

// Rule InterfaceOrClassDeclaration
ruleInterfaceOrClassDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getInterfaceOrClassDeclarationAccess().getInterfaceDeclarationParserRuleCall_0_0());
			}
			this_InterfaceDeclaration_0=ruleInterfaceDeclaration
			{
				$current = $this_InterfaceDeclaration_0.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getInterfaceOrClassDeclarationAccess().getClassDeclarationParserRuleCall_0_1());
			}
			this_ClassDeclaration_1=ruleClassDeclaration
			{
				$current = $this_ClassDeclaration_1.current;
				afterParserOrEnumRuleCall();
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getInterfaceOrClassDeclarationAccess().getObjectTypeObjectTypeParserRuleCall_1_0());
				}
				lv_objectType_2_0=ruleObjectType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInterfaceOrClassDeclarationRule());
					}
					set(
						$current,
						"objectType",
						lv_objectType_2_0,
						"ch.vobos.Typescript.ObjectType");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleInterfaceDeclaration
entryRuleInterfaceDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInterfaceDeclarationRule()); }
	iv_ruleInterfaceDeclaration=ruleInterfaceDeclaration
	{ $current=$iv_ruleInterfaceDeclaration.current; }
	EOF;

// Rule InterfaceDeclaration
ruleInterfaceDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='interface'
		{
			newLeafNode(otherlv_0, grammarAccess.getInterfaceDeclarationAccess().getInterfaceKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInterfaceDeclarationAccess().getNameIdentifierParserRuleCall_1_0());
				}
				lv_name_1_0=ruleIdentifier
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInterfaceDeclarationRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"ch.vobos.Typescript.Identifier");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getInterfaceDeclarationAccess().getExtendClauseInterfaceExtendsClauseParserRuleCall_2_0());
				}
				lv_extendClause_2_0=ruleInterfaceExtendsClause
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInterfaceDeclarationRule());
					}
					set(
						$current,
						"extendClause",
						lv_extendClause_2_0,
						"ch.vobos.Typescript.InterfaceExtendsClause");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleClassDeclaration
entryRuleClassDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClassDeclarationRule()); }
	iv_ruleClassDeclaration=ruleClassDeclaration
	{ $current=$iv_ruleClassDeclaration.current; }
	EOF;

// Rule ClassDeclaration
ruleClassDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='class'
		{
			newLeafNode(otherlv_0, grammarAccess.getClassDeclarationAccess().getClassKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getClassDeclarationAccess().getNameIdentifierParserRuleCall_1_0());
				}
				lv_name_1_0=ruleIdentifier
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"ch.vobos.Typescript.Identifier");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleIdentifier
entryRuleIdentifier returns [String current=null]:
	{ newCompositeNode(grammarAccess.getIdentifierRule()); }
	iv_ruleIdentifier=ruleIdentifier
	{ $current=$iv_ruleIdentifier.current.getText(); }
	EOF;

// Rule Identifier
ruleIdentifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_ID_0=RULE_ID
	{
		$current.merge(this_ID_0);
	}
	{
		newLeafNode(this_ID_0, grammarAccess.getIdentifierAccess().getIDTerminalRuleCall());
	}
;

// Entry rule entryRuleInterfaceExtendsClause
entryRuleInterfaceExtendsClause returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInterfaceExtendsClauseRule()); }
	iv_ruleInterfaceExtendsClause=ruleInterfaceExtendsClause
	{ $current=$iv_ruleInterfaceExtendsClause.current; }
	EOF;

// Rule InterfaceExtendsClause
ruleInterfaceExtendsClause returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='extends'
		{
			newLeafNode(otherlv_0, grammarAccess.getInterfaceExtendsClauseAccess().getExtendsKeyword_0());
		}
		{
			newCompositeNode(grammarAccess.getInterfaceExtendsClauseAccess().getClassOrInterfaceTypeListParserRuleCall_1());
		}
		this_ClassOrInterfaceTypeList_1=ruleClassOrInterfaceTypeList
		{
			$current = $this_ClassOrInterfaceTypeList_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleClassOrInterfaceTypeList
entryRuleClassOrInterfaceTypeList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClassOrInterfaceTypeListRule()); }
	iv_ruleClassOrInterfaceTypeList=ruleClassOrInterfaceTypeList
	{ $current=$iv_ruleClassOrInterfaceTypeList.current; }
	EOF;

// Rule ClassOrInterfaceTypeList
ruleClassOrInterfaceTypeList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getClassOrInterfaceTypeListAccess().getClassOrInterfaceTypeListAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getClassOrInterfaceTypeListAccess().getParentsTypeReferenceParserRuleCall_1_0());
				}
				lv_parents_1_0=ruleTypeReference
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClassOrInterfaceTypeListRule());
					}
					add(
						$current,
						"parents",
						lv_parents_1_0,
						"ch.vobos.Typescript.TypeReference");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getClassOrInterfaceTypeListAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getClassOrInterfaceTypeListAccess().getParentsTypeReferenceParserRuleCall_2_1_0());
					}
					lv_parents_3_0=ruleTypeReference
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getClassOrInterfaceTypeListRule());
						}
						add(
							$current,
							"parents",
							lv_parents_3_0,
							"ch.vobos.Typescript.TypeReference");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleObjectType
entryRuleObjectType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getObjectTypeRule()); }
	iv_ruleObjectType=ruleObjectType
	{ $current=$iv_ruleObjectType.current; }
	EOF;

// Rule ObjectType
ruleObjectType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getObjectTypeAccess().getObjectTypeAction_0(),
					$current);
			}
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getObjectTypeAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getObjectTypeAccess().getMembersTypeMemberParserRuleCall_2_0_0());
					}
					lv_members_2_0=ruleTypeMember
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getObjectTypeRule());
						}
						add(
							$current,
							"members",
							lv_members_2_0,
							"ch.vobos.Typescript.TypeMember");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=';'
				{
					newLeafNode(otherlv_3, grammarAccess.getObjectTypeAccess().getSemicolonKeyword_2_1());
				}
			)?
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getObjectTypeAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleTypeMember
entryRuleTypeMember returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeMemberRule()); }
	iv_ruleTypeMember=ruleTypeMember
	{ $current=$iv_ruleTypeMember.current; }
	EOF;

// Rule TypeMember
ruleTypeMember returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeMemberAccess().getDocCommentDocCommentParserRuleCall_0_0());
				}
				lv_docComment_0_0=ruleDocComment
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeMemberRule());
					}
					set(
						$current,
						"docComment",
						lv_docComment_0_0,
						"ch.vobos.Typescript.DocComment");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getTypeMemberAccess().getSignaturePropertySignatureParserRuleCall_1_0_0());
					}
					lv_signature_1_1=rulePropertySignature
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTypeMemberRule());
						}
						set(
							$current,
							"signature",
							lv_signature_1_1,
							"ch.vobos.Typescript.PropertySignature");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getTypeMemberAccess().getSignatureIndexSignatureParserRuleCall_1_0_1());
					}
					lv_signature_1_2=ruleIndexSignature
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTypeMemberRule());
						}
						set(
							$current,
							"signature",
							lv_signature_1_2,
							"ch.vobos.Typescript.IndexSignature");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRulePropertySignature
entryRulePropertySignature returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPropertySignatureRule()); }
	iv_rulePropertySignature=rulePropertySignature
	{ $current=$iv_rulePropertySignature.current; }
	EOF;

// Rule PropertySignature
rulePropertySignature returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getPropertySignatureAccess().getNameIdentifierNameParserRuleCall_0_0());
				}
				lv_name_0_0=ruleIdentifierName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPropertySignatureRule());
					}
					set(
						$current,
						"name",
						lv_name_0_0,
						"ch.vobos.Typescript.IdentifierName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_optional_1_0='?'
				{
					newLeafNode(lv_optional_1_0, grammarAccess.getPropertySignatureAccess().getOptionalQuestionMarkKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPropertySignatureRule());
					}
					setWithLastConsumed($current, "optional", lv_optional_1_0 != null, "?");
				}
			)
		)?
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getPropertySignatureAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPropertySignatureAccess().getTypeTypeParserRuleCall_3_0());
				}
				lv_type_3_0=ruleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPropertySignatureRule());
					}
					set(
						$current,
						"type",
						lv_type_3_0,
						"ch.vobos.Typescript.Type");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleIdentifierName
entryRuleIdentifierName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getIdentifierNameRule()); }
	iv_ruleIdentifierName=ruleIdentifierName
	{ $current=$iv_ruleIdentifierName.current.getText(); }
	EOF;

// Rule IdentifierName
ruleIdentifierName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_ID_0=RULE_ID
	{
		$current.merge(this_ID_0);
	}
	{
		newLeafNode(this_ID_0, grammarAccess.getIdentifierNameAccess().getIDTerminalRuleCall());
	}
;

// Entry rule entryRuleType
entryRuleType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeRule()); }
	iv_ruleType=ruleType
	{ $current=$iv_ruleType.current; }
	EOF;

// Rule Type
ruleType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTypeAccess().getPredefinedTypeParserRuleCall_0());
		}
		this_PredefinedType_0=rulePredefinedType
		{
			$current = $this_PredefinedType_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeAccess().getTypeReferenceParserRuleCall_1());
		}
		this_TypeReference_1=ruleTypeReference
		{
			$current = $this_TypeReference_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeAccess().getTypeLiteralParserRuleCall_2());
		}
		this_TypeLiteral_2=ruleTypeLiteral
		{
			$current = $this_TypeLiteral_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulePredefinedType
entryRulePredefinedType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPredefinedTypeRule()); }
	iv_rulePredefinedType=rulePredefinedType
	{ $current=$iv_rulePredefinedType.current; }
	EOF;

// Rule PredefinedType
rulePredefinedType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getPredefinedTypeAccess().getPredefinedTypePredefinedTypeEnumEnumRuleCall_0());
			}
			lv_predefinedType_0_0=rulePredefinedTypeEnum
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getPredefinedTypeRule());
				}
				set(
					$current,
					"predefinedType",
					lv_predefinedType_0_0,
					"ch.vobos.Typescript.PredefinedTypeEnum");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleTypeLiteral
entryRuleTypeLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeLiteralRule()); }
	iv_ruleTypeLiteral=ruleTypeLiteral
	{ $current=$iv_ruleTypeLiteral.current; }
	EOF;

// Rule TypeLiteral
ruleTypeLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTypeLiteralAccess().getObjectTypeParserRuleCall_0());
		}
		this_ObjectType_0=ruleObjectType
		{
			$current = $this_ObjectType_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeLiteralAccess().getArrayTypeParserRuleCall_1());
		}
		this_ArrayType_1=ruleArrayType
		{
			$current = $this_ArrayType_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleArrayType
entryRuleArrayType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArrayTypeRule()); }
	iv_ruleArrayType=ruleArrayType
	{ $current=$iv_ruleArrayType.current; }
	EOF;

// Rule ArrayType
ruleArrayType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getArrayTypeAccess().getArrayTypeAction_0_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getArrayTypeAccess().getArrayPredefinedTypeParserRuleCall_0_1_0());
					}
					lv_array_1_0=rulePredefinedType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getArrayTypeRule());
						}
						set(
							$current,
							"array",
							lv_array_1_0,
							"ch.vobos.Typescript.PredefinedType");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_2='['
			{
				newLeafNode(otherlv_2, grammarAccess.getArrayTypeAccess().getLeftSquareBracketKeyword_0_2());
			}
			otherlv_3=']'
			{
				newLeafNode(otherlv_3, grammarAccess.getArrayTypeAccess().getRightSquareBracketKeyword_0_3());
			}
		)
		    |
		(
			{
				newCompositeNode(grammarAccess.getArrayTypeAccess().getTypeReferenceParserRuleCall_1_0());
			}
			this_TypeReference_4=ruleTypeReference
			{
				$current = $this_TypeReference_4.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_5='['
			{
				newLeafNode(otherlv_5, grammarAccess.getArrayTypeAccess().getLeftSquareBracketKeyword_1_1());
			}
			otherlv_6=']'
			{
				newLeafNode(otherlv_6, grammarAccess.getArrayTypeAccess().getRightSquareBracketKeyword_1_2());
			}
		)
	)
;

// Entry rule entryRuleTypeReference
entryRuleTypeReference returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeReferenceRule()); }
	iv_ruleTypeReference=ruleTypeReference
	{ $current=$iv_ruleTypeReference.current; }
	EOF;

// Rule TypeReference
ruleTypeReference returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getTypeReferenceRule());
				}
			}
			{
				newCompositeNode(grammarAccess.getTypeReferenceAccess().getReferenceInterfaceOrClassDeclarationCrossReference_0());
			}
			ruleQualifiedName
			{
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); }
	iv_ruleQualifiedName=ruleQualifiedName
	{ $current=$iv_ruleQualifiedName.current.getText(); }
	EOF;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0());
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0());
			}
			this_ID_2=RULE_ID
			{
				$current.merge(this_ID_2);
			}
			{
				newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1());
			}
		)*
	)
;

// Entry rule entryRuleDocComment
entryRuleDocComment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDocCommentRule()); }
	iv_ruleDocComment=ruleDocComment
	{ $current=$iv_ruleDocComment.current; }
	EOF;

// Rule DocComment
ruleDocComment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDocCommentAccess().getDocCommentAction_0(),
					$current);
			}
		)
		otherlv_1='/**'
		{
			newLeafNode(otherlv_1, grammarAccess.getDocCommentAccess().getSolidusAsteriskAsteriskKeyword_1());
		}
		(
			(
				lv_lines_2_0=RULE_DOC_COMMENT_LINE
				{
					newLeafNode(lv_lines_2_0, grammarAccess.getDocCommentAccess().getLinesDOC_COMMENT_LINETerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDocCommentRule());
					}
					addWithLastConsumed(
						$current,
						"lines",
						lv_lines_2_0,
						"ch.vobos.Typescript.DOC_COMMENT_LINE");
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getDocCommentAccess().getAnnotationsAnnotationLineParserRuleCall_3_0());
				}
				lv_annotations_3_0=ruleAnnotationLine
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDocCommentRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_3_0,
						"ch.vobos.Typescript.AnnotationLine");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		this_DOC_COMMENT_END_4=RULE_DOC_COMMENT_END
		{
			newLeafNode(this_DOC_COMMENT_END_4, grammarAccess.getDocCommentAccess().getDOC_COMMENT_ENDTerminalRuleCall_4());
		}
	)
;

// Entry rule entryRuleAnnotationLine
entryRuleAnnotationLine returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAnnotationLineRule()); }
	iv_ruleAnnotationLine=ruleAnnotationLine
	{ $current=$iv_ruleAnnotationLine.current; }
	EOF;

// Rule AnnotationLine
ruleAnnotationLine returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_DOC_ANNOTATION_PREFIX_0=RULE_DOC_ANNOTATION_PREFIX
		{
			newLeafNode(this_DOC_ANNOTATION_PREFIX_0, grammarAccess.getAnnotationLineAccess().getDOC_ANNOTATION_PREFIXTerminalRuleCall_0());
		}
		(
			(
				lv_annotationName_1_0=RULE_ID
				{
					newLeafNode(lv_annotationName_1_0, grammarAccess.getAnnotationLineAccess().getAnnotationNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAnnotationLineRule());
					}
					setWithLastConsumed(
						$current,
						"annotationName",
						lv_annotationName_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleIndexSignature
entryRuleIndexSignature returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIndexSignatureRule()); }
	iv_ruleIndexSignature=ruleIndexSignature
	{ $current=$iv_ruleIndexSignature.current; }
	EOF;

// Rule IndexSignature
ruleIndexSignature returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='['
		{
			newLeafNode(otherlv_0, grammarAccess.getIndexSignatureAccess().getLeftSquareBracketKeyword_0());
		}
		this_ID_1=RULE_ID
		{
			newLeafNode(this_ID_1, grammarAccess.getIndexSignatureAccess().getIDTerminalRuleCall_1());
		}
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getIndexSignatureAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIndexSignatureAccess().getIndexTypeIndexTypeEnumRuleCall_3_0());
				}
				lv_indexType_3_0=ruleIndexType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIndexSignatureRule());
					}
					set(
						$current,
						"indexType",
						lv_indexType_3_0,
						"ch.vobos.Typescript.IndexType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=']'
		{
			newLeafNode(otherlv_4, grammarAccess.getIndexSignatureAccess().getRightSquareBracketKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIndexSignatureAccess().getValueTypeTypeParserRuleCall_5_0());
				}
				lv_valueType_5_0=ruleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIndexSignatureRule());
					}
					set(
						$current,
						"valueType",
						lv_valueType_5_0,
						"ch.vobos.Typescript.Type");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Rule PredefinedTypeEnum
rulePredefinedTypeEnum returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='any'
			{
				$current = grammarAccess.getPredefinedTypeEnumAccess().getAnyEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getPredefinedTypeEnumAccess().getAnyEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='number'
			{
				$current = grammarAccess.getPredefinedTypeEnumAccess().getNumberEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getPredefinedTypeEnumAccess().getNumberEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='boolean'
			{
				$current = grammarAccess.getPredefinedTypeEnumAccess().getBooleanEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getPredefinedTypeEnumAccess().getBooleanEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='string'
			{
				$current = grammarAccess.getPredefinedTypeEnumAccess().getStringEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getPredefinedTypeEnumAccess().getStringEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='void'
			{
				$current = grammarAccess.getPredefinedTypeEnumAccess().getVoidEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getPredefinedTypeEnumAccess().getVoidEnumLiteralDeclaration_4());
			}
		)
	)
;

// Rule IndexType
ruleIndexType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='number'
			{
				$current = grammarAccess.getIndexTypeAccess().getNumberEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getIndexTypeAccess().getNumberEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='string'
			{
				$current = grammarAccess.getIndexTypeAccess().getStringEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getIndexTypeAccess().getStringEnumLiteralDeclaration_1());
			}
		)
	)
;

RULE_DOC_COMMENT_END : (' '|'\t')* '*' '/';

RULE_DOC_ANNOTATION_PREFIX : (' '|'\t')* '* @';

RULE_DOC_COMMENT_LINE : (' '|'\t')* '*' ~('/') ~('@') ( options {greedy=false;} : . )*'\r'? '\n';

RULE_ML_COMMENT : '/*' ~('*') ( options {greedy=false;} : . )*'*/';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
