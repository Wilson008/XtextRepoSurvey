/**
 * generated by Xtext 2.35.0
 */
package org.tvtower.db.database.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.tvtower.db.database.AdConditions;
import org.tvtower.db.database.Advertisement;
import org.tvtower.db.database.AdvertisementData;
import org.tvtower.db.database.Availability;
import org.tvtower.db.database.DatabasePackage;
import org.tvtower.db.database.Description;
import org.tvtower.db.database.Modifiers;
import org.tvtower.db.database.Title;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Advertisement</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.tvtower.db.database.impl.AdvertisementImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.tvtower.db.database.impl.AdvertisementImpl#getComment <em>Comment</em>}</li>
 *   <li>{@link org.tvtower.db.database.impl.AdvertisementImpl#getCreator <em>Creator</em>}</li>
 *   <li>{@link org.tvtower.db.database.impl.AdvertisementImpl#getCreatedBy <em>Created By</em>}</li>
 *   <li>{@link org.tvtower.db.database.impl.AdvertisementImpl#getTitle <em>Title</em>}</li>
 *   <li>{@link org.tvtower.db.database.impl.AdvertisementImpl#getDescription <em>Description</em>}</li>
 *   <li>{@link org.tvtower.db.database.impl.AdvertisementImpl#getConditions <em>Conditions</em>}</li>
 *   <li>{@link org.tvtower.db.database.impl.AdvertisementImpl#getData <em>Data</em>}</li>
 *   <li>{@link org.tvtower.db.database.impl.AdvertisementImpl#getAvailability <em>Availability</em>}</li>
 *   <li>{@link org.tvtower.db.database.impl.AdvertisementImpl#getModifiers <em>Modifiers</em>}</li>
 * </ul>
 *
 * @generated
 */
public class AdvertisementImpl extends MinimalEObjectImpl.Container implements Advertisement
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getComment() <em>Comment</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getComment()
   * @generated
   * @ordered
   */
  protected static final String COMMENT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getComment() <em>Comment</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getComment()
   * @generated
   * @ordered
   */
  protected String comment = COMMENT_EDEFAULT;

  /**
   * The default value of the '{@link #getCreator() <em>Creator</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCreator()
   * @generated
   * @ordered
   */
  protected static final String CREATOR_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getCreator() <em>Creator</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCreator()
   * @generated
   * @ordered
   */
  protected String creator = CREATOR_EDEFAULT;

  /**
   * The default value of the '{@link #getCreatedBy() <em>Created By</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCreatedBy()
   * @generated
   * @ordered
   */
  protected static final String CREATED_BY_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getCreatedBy() <em>Created By</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCreatedBy()
   * @generated
   * @ordered
   */
  protected String createdBy = CREATED_BY_EDEFAULT;

  /**
   * The cached value of the '{@link #getTitle() <em>Title</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTitle()
   * @generated
   * @ordered
   */
  protected Title title;

  /**
   * The cached value of the '{@link #getDescription() <em>Description</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDescription()
   * @generated
   * @ordered
   */
  protected Description description;

  /**
   * The cached value of the '{@link #getConditions() <em>Conditions</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getConditions()
   * @generated
   * @ordered
   */
  protected AdConditions conditions;

  /**
   * The cached value of the '{@link #getData() <em>Data</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getData()
   * @generated
   * @ordered
   */
  protected AdvertisementData data;

  /**
   * The cached value of the '{@link #getAvailability() <em>Availability</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAvailability()
   * @generated
   * @ordered
   */
  protected Availability availability;

  /**
   * The cached value of the '{@link #getModifiers() <em>Modifiers</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getModifiers()
   * @generated
   * @ordered
   */
  protected Modifiers modifiers;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected AdvertisementImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DatabasePackage.Literals.ADVERTISEMENT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DatabasePackage.ADVERTISEMENT__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getComment()
  {
    return comment;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setComment(String newComment)
  {
    String oldComment = comment;
    comment = newComment;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DatabasePackage.ADVERTISEMENT__COMMENT, oldComment, comment));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getCreator()
  {
    return creator;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCreator(String newCreator)
  {
    String oldCreator = creator;
    creator = newCreator;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DatabasePackage.ADVERTISEMENT__CREATOR, oldCreator, creator));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getCreatedBy()
  {
    return createdBy;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCreatedBy(String newCreatedBy)
  {
    String oldCreatedBy = createdBy;
    createdBy = newCreatedBy;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DatabasePackage.ADVERTISEMENT__CREATED_BY, oldCreatedBy, createdBy));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Title getTitle()
  {
    return title;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetTitle(Title newTitle, NotificationChain msgs)
  {
    Title oldTitle = title;
    title = newTitle;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DatabasePackage.ADVERTISEMENT__TITLE, oldTitle, newTitle);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setTitle(Title newTitle)
  {
    if (newTitle != title)
    {
      NotificationChain msgs = null;
      if (title != null)
        msgs = ((InternalEObject)title).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DatabasePackage.ADVERTISEMENT__TITLE, null, msgs);
      if (newTitle != null)
        msgs = ((InternalEObject)newTitle).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DatabasePackage.ADVERTISEMENT__TITLE, null, msgs);
      msgs = basicSetTitle(newTitle, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DatabasePackage.ADVERTISEMENT__TITLE, newTitle, newTitle));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Description getDescription()
  {
    return description;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetDescription(Description newDescription, NotificationChain msgs)
  {
    Description oldDescription = description;
    description = newDescription;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DatabasePackage.ADVERTISEMENT__DESCRIPTION, oldDescription, newDescription);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDescription(Description newDescription)
  {
    if (newDescription != description)
    {
      NotificationChain msgs = null;
      if (description != null)
        msgs = ((InternalEObject)description).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DatabasePackage.ADVERTISEMENT__DESCRIPTION, null, msgs);
      if (newDescription != null)
        msgs = ((InternalEObject)newDescription).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DatabasePackage.ADVERTISEMENT__DESCRIPTION, null, msgs);
      msgs = basicSetDescription(newDescription, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DatabasePackage.ADVERTISEMENT__DESCRIPTION, newDescription, newDescription));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AdConditions getConditions()
  {
    return conditions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetConditions(AdConditions newConditions, NotificationChain msgs)
  {
    AdConditions oldConditions = conditions;
    conditions = newConditions;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DatabasePackage.ADVERTISEMENT__CONDITIONS, oldConditions, newConditions);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setConditions(AdConditions newConditions)
  {
    if (newConditions != conditions)
    {
      NotificationChain msgs = null;
      if (conditions != null)
        msgs = ((InternalEObject)conditions).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DatabasePackage.ADVERTISEMENT__CONDITIONS, null, msgs);
      if (newConditions != null)
        msgs = ((InternalEObject)newConditions).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DatabasePackage.ADVERTISEMENT__CONDITIONS, null, msgs);
      msgs = basicSetConditions(newConditions, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DatabasePackage.ADVERTISEMENT__CONDITIONS, newConditions, newConditions));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AdvertisementData getData()
  {
    return data;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetData(AdvertisementData newData, NotificationChain msgs)
  {
    AdvertisementData oldData = data;
    data = newData;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DatabasePackage.ADVERTISEMENT__DATA, oldData, newData);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setData(AdvertisementData newData)
  {
    if (newData != data)
    {
      NotificationChain msgs = null;
      if (data != null)
        msgs = ((InternalEObject)data).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DatabasePackage.ADVERTISEMENT__DATA, null, msgs);
      if (newData != null)
        msgs = ((InternalEObject)newData).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DatabasePackage.ADVERTISEMENT__DATA, null, msgs);
      msgs = basicSetData(newData, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DatabasePackage.ADVERTISEMENT__DATA, newData, newData));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Availability getAvailability()
  {
    return availability;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetAvailability(Availability newAvailability, NotificationChain msgs)
  {
    Availability oldAvailability = availability;
    availability = newAvailability;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DatabasePackage.ADVERTISEMENT__AVAILABILITY, oldAvailability, newAvailability);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAvailability(Availability newAvailability)
  {
    if (newAvailability != availability)
    {
      NotificationChain msgs = null;
      if (availability != null)
        msgs = ((InternalEObject)availability).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DatabasePackage.ADVERTISEMENT__AVAILABILITY, null, msgs);
      if (newAvailability != null)
        msgs = ((InternalEObject)newAvailability).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DatabasePackage.ADVERTISEMENT__AVAILABILITY, null, msgs);
      msgs = basicSetAvailability(newAvailability, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DatabasePackage.ADVERTISEMENT__AVAILABILITY, newAvailability, newAvailability));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Modifiers getModifiers()
  {
    return modifiers;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetModifiers(Modifiers newModifiers, NotificationChain msgs)
  {
    Modifiers oldModifiers = modifiers;
    modifiers = newModifiers;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DatabasePackage.ADVERTISEMENT__MODIFIERS, oldModifiers, newModifiers);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setModifiers(Modifiers newModifiers)
  {
    if (newModifiers != modifiers)
    {
      NotificationChain msgs = null;
      if (modifiers != null)
        msgs = ((InternalEObject)modifiers).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DatabasePackage.ADVERTISEMENT__MODIFIERS, null, msgs);
      if (newModifiers != null)
        msgs = ((InternalEObject)newModifiers).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DatabasePackage.ADVERTISEMENT__MODIFIERS, null, msgs);
      msgs = basicSetModifiers(newModifiers, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DatabasePackage.ADVERTISEMENT__MODIFIERS, newModifiers, newModifiers));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case DatabasePackage.ADVERTISEMENT__TITLE:
        return basicSetTitle(null, msgs);
      case DatabasePackage.ADVERTISEMENT__DESCRIPTION:
        return basicSetDescription(null, msgs);
      case DatabasePackage.ADVERTISEMENT__CONDITIONS:
        return basicSetConditions(null, msgs);
      case DatabasePackage.ADVERTISEMENT__DATA:
        return basicSetData(null, msgs);
      case DatabasePackage.ADVERTISEMENT__AVAILABILITY:
        return basicSetAvailability(null, msgs);
      case DatabasePackage.ADVERTISEMENT__MODIFIERS:
        return basicSetModifiers(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DatabasePackage.ADVERTISEMENT__NAME:
        return getName();
      case DatabasePackage.ADVERTISEMENT__COMMENT:
        return getComment();
      case DatabasePackage.ADVERTISEMENT__CREATOR:
        return getCreator();
      case DatabasePackage.ADVERTISEMENT__CREATED_BY:
        return getCreatedBy();
      case DatabasePackage.ADVERTISEMENT__TITLE:
        return getTitle();
      case DatabasePackage.ADVERTISEMENT__DESCRIPTION:
        return getDescription();
      case DatabasePackage.ADVERTISEMENT__CONDITIONS:
        return getConditions();
      case DatabasePackage.ADVERTISEMENT__DATA:
        return getData();
      case DatabasePackage.ADVERTISEMENT__AVAILABILITY:
        return getAvailability();
      case DatabasePackage.ADVERTISEMENT__MODIFIERS:
        return getModifiers();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DatabasePackage.ADVERTISEMENT__NAME:
        setName((String)newValue);
        return;
      case DatabasePackage.ADVERTISEMENT__COMMENT:
        setComment((String)newValue);
        return;
      case DatabasePackage.ADVERTISEMENT__CREATOR:
        setCreator((String)newValue);
        return;
      case DatabasePackage.ADVERTISEMENT__CREATED_BY:
        setCreatedBy((String)newValue);
        return;
      case DatabasePackage.ADVERTISEMENT__TITLE:
        setTitle((Title)newValue);
        return;
      case DatabasePackage.ADVERTISEMENT__DESCRIPTION:
        setDescription((Description)newValue);
        return;
      case DatabasePackage.ADVERTISEMENT__CONDITIONS:
        setConditions((AdConditions)newValue);
        return;
      case DatabasePackage.ADVERTISEMENT__DATA:
        setData((AdvertisementData)newValue);
        return;
      case DatabasePackage.ADVERTISEMENT__AVAILABILITY:
        setAvailability((Availability)newValue);
        return;
      case DatabasePackage.ADVERTISEMENT__MODIFIERS:
        setModifiers((Modifiers)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DatabasePackage.ADVERTISEMENT__NAME:
        setName(NAME_EDEFAULT);
        return;
      case DatabasePackage.ADVERTISEMENT__COMMENT:
        setComment(COMMENT_EDEFAULT);
        return;
      case DatabasePackage.ADVERTISEMENT__CREATOR:
        setCreator(CREATOR_EDEFAULT);
        return;
      case DatabasePackage.ADVERTISEMENT__CREATED_BY:
        setCreatedBy(CREATED_BY_EDEFAULT);
        return;
      case DatabasePackage.ADVERTISEMENT__TITLE:
        setTitle((Title)null);
        return;
      case DatabasePackage.ADVERTISEMENT__DESCRIPTION:
        setDescription((Description)null);
        return;
      case DatabasePackage.ADVERTISEMENT__CONDITIONS:
        setConditions((AdConditions)null);
        return;
      case DatabasePackage.ADVERTISEMENT__DATA:
        setData((AdvertisementData)null);
        return;
      case DatabasePackage.ADVERTISEMENT__AVAILABILITY:
        setAvailability((Availability)null);
        return;
      case DatabasePackage.ADVERTISEMENT__MODIFIERS:
        setModifiers((Modifiers)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DatabasePackage.ADVERTISEMENT__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case DatabasePackage.ADVERTISEMENT__COMMENT:
        return COMMENT_EDEFAULT == null ? comment != null : !COMMENT_EDEFAULT.equals(comment);
      case DatabasePackage.ADVERTISEMENT__CREATOR:
        return CREATOR_EDEFAULT == null ? creator != null : !CREATOR_EDEFAULT.equals(creator);
      case DatabasePackage.ADVERTISEMENT__CREATED_BY:
        return CREATED_BY_EDEFAULT == null ? createdBy != null : !CREATED_BY_EDEFAULT.equals(createdBy);
      case DatabasePackage.ADVERTISEMENT__TITLE:
        return title != null;
      case DatabasePackage.ADVERTISEMENT__DESCRIPTION:
        return description != null;
      case DatabasePackage.ADVERTISEMENT__CONDITIONS:
        return conditions != null;
      case DatabasePackage.ADVERTISEMENT__DATA:
        return data != null;
      case DatabasePackage.ADVERTISEMENT__AVAILABILITY:
        return availability != null;
      case DatabasePackage.ADVERTISEMENT__MODIFIERS:
        return modifiers != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", comment: ");
    result.append(comment);
    result.append(", creator: ");
    result.append(creator);
    result.append(", createdBy: ");
    result.append(createdBy);
    result.append(')');
    return result.toString();
  }

} //AdvertisementImpl
