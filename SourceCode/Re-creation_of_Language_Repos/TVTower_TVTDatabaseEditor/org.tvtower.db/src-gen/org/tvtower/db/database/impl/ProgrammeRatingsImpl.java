/**
 * generated by Xtext 2.35.0
 */
package org.tvtower.db.database.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.tvtower.db.database.DatabasePackage;
import org.tvtower.db.database.ProgrammeRatings;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Programme Ratings</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.tvtower.db.database.impl.ProgrammeRatingsImpl#getCritics <em>Critics</em>}</li>
 *   <li>{@link org.tvtower.db.database.impl.ProgrammeRatingsImpl#getSpeed <em>Speed</em>}</li>
 *   <li>{@link org.tvtower.db.database.impl.ProgrammeRatingsImpl#getOutcome <em>Outcome</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ProgrammeRatingsImpl extends MinimalEObjectImpl.Container implements ProgrammeRatings
{
  /**
   * The default value of the '{@link #getCritics() <em>Critics</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCritics()
   * @generated
   * @ordered
   */
  protected static final String CRITICS_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getCritics() <em>Critics</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCritics()
   * @generated
   * @ordered
   */
  protected String critics = CRITICS_EDEFAULT;

  /**
   * The default value of the '{@link #getSpeed() <em>Speed</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSpeed()
   * @generated
   * @ordered
   */
  protected static final String SPEED_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getSpeed() <em>Speed</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSpeed()
   * @generated
   * @ordered
   */
  protected String speed = SPEED_EDEFAULT;

  /**
   * The default value of the '{@link #getOutcome() <em>Outcome</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOutcome()
   * @generated
   * @ordered
   */
  protected static final String OUTCOME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getOutcome() <em>Outcome</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOutcome()
   * @generated
   * @ordered
   */
  protected String outcome = OUTCOME_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ProgrammeRatingsImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DatabasePackage.Literals.PROGRAMME_RATINGS;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getCritics()
  {
    return critics;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCritics(String newCritics)
  {
    String oldCritics = critics;
    critics = newCritics;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DatabasePackage.PROGRAMME_RATINGS__CRITICS, oldCritics, critics));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getSpeed()
  {
    return speed;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSpeed(String newSpeed)
  {
    String oldSpeed = speed;
    speed = newSpeed;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DatabasePackage.PROGRAMME_RATINGS__SPEED, oldSpeed, speed));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getOutcome()
  {
    return outcome;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setOutcome(String newOutcome)
  {
    String oldOutcome = outcome;
    outcome = newOutcome;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DatabasePackage.PROGRAMME_RATINGS__OUTCOME, oldOutcome, outcome));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DatabasePackage.PROGRAMME_RATINGS__CRITICS:
        return getCritics();
      case DatabasePackage.PROGRAMME_RATINGS__SPEED:
        return getSpeed();
      case DatabasePackage.PROGRAMME_RATINGS__OUTCOME:
        return getOutcome();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DatabasePackage.PROGRAMME_RATINGS__CRITICS:
        setCritics((String)newValue);
        return;
      case DatabasePackage.PROGRAMME_RATINGS__SPEED:
        setSpeed((String)newValue);
        return;
      case DatabasePackage.PROGRAMME_RATINGS__OUTCOME:
        setOutcome((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DatabasePackage.PROGRAMME_RATINGS__CRITICS:
        setCritics(CRITICS_EDEFAULT);
        return;
      case DatabasePackage.PROGRAMME_RATINGS__SPEED:
        setSpeed(SPEED_EDEFAULT);
        return;
      case DatabasePackage.PROGRAMME_RATINGS__OUTCOME:
        setOutcome(OUTCOME_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DatabasePackage.PROGRAMME_RATINGS__CRITICS:
        return CRITICS_EDEFAULT == null ? critics != null : !CRITICS_EDEFAULT.equals(critics);
      case DatabasePackage.PROGRAMME_RATINGS__SPEED:
        return SPEED_EDEFAULT == null ? speed != null : !SPEED_EDEFAULT.equals(speed);
      case DatabasePackage.PROGRAMME_RATINGS__OUTCOME:
        return OUTCOME_EDEFAULT == null ? outcome != null : !OUTCOME_EDEFAULT.equals(outcome);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (critics: ");
    result.append(critics);
    result.append(", speed: ");
    result.append(speed);
    result.append(", outcome: ");
    result.append(outcome);
    result.append(')');
    return result.toString();
  }

} //ProgrammeRatingsImpl
