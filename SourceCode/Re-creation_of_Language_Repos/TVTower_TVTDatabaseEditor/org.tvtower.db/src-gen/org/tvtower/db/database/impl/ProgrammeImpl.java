/**
 * generated by Xtext 2.35.0
 */
package org.tvtower.db.database.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.tvtower.db.database.DatabasePackage;
import org.tvtower.db.database.Description;
import org.tvtower.db.database.Effects;
import org.tvtower.db.database.GroupAttractivity;
import org.tvtower.db.database.Modifiers;
import org.tvtower.db.database.Programme;
import org.tvtower.db.database.ProgrammeChildren;
import org.tvtower.db.database.ProgrammeData;
import org.tvtower.db.database.ProgrammeGroups;
import org.tvtower.db.database.ProgrammeRatings;
import org.tvtower.db.database.ProgrammeReleaseTime;
import org.tvtower.db.database.Staff;
import org.tvtower.db.database.Title;
import org.tvtower.db.database.TitleOriginal;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Programme</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.tvtower.db.database.impl.ProgrammeImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.tvtower.db.database.impl.ProgrammeImpl#getProduct <em>Product</em>}</li>
 *   <li>{@link org.tvtower.db.database.impl.ProgrammeImpl#getLicenceType <em>Licence Type</em>}</li>
 *   <li>{@link org.tvtower.db.database.impl.ProgrammeImpl#getTmdbId <em>Tmdb Id</em>}</li>
 *   <li>{@link org.tvtower.db.database.impl.ProgrammeImpl#getImdbId <em>Imdb Id</em>}</li>
 *   <li>{@link org.tvtower.db.database.impl.ProgrammeImpl#getFictional <em>Fictional</em>}</li>
 *   <li>{@link org.tvtower.db.database.impl.ProgrammeImpl#getRef <em>Ref</em>}</li>
 *   <li>{@link org.tvtower.db.database.impl.ProgrammeImpl#getComment <em>Comment</em>}</li>
 *   <li>{@link org.tvtower.db.database.impl.ProgrammeImpl#getCreator <em>Creator</em>}</li>
 *   <li>{@link org.tvtower.db.database.impl.ProgrammeImpl#getCreatedBy <em>Created By</em>}</li>
 *   <li>{@link org.tvtower.db.database.impl.ProgrammeImpl#getTitle <em>Title</em>}</li>
 *   <li>{@link org.tvtower.db.database.impl.ProgrammeImpl#getTitleOrig <em>Title Orig</em>}</li>
 *   <li>{@link org.tvtower.db.database.impl.ProgrammeImpl#getDescription <em>Description</em>}</li>
 *   <li>{@link org.tvtower.db.database.impl.ProgrammeImpl#getGroups <em>Groups</em>}</li>
 *   <li>{@link org.tvtower.db.database.impl.ProgrammeImpl#getAttractivity <em>Attractivity</em>}</li>
 *   <li>{@link org.tvtower.db.database.impl.ProgrammeImpl#getChildren <em>Children</em>}</li>
 *   <li>{@link org.tvtower.db.database.impl.ProgrammeImpl#getStaff <em>Staff</em>}</li>
 *   <li>{@link org.tvtower.db.database.impl.ProgrammeImpl#getReleaseTime <em>Release Time</em>}</li>
 *   <li>{@link org.tvtower.db.database.impl.ProgrammeImpl#getRatings <em>Ratings</em>}</li>
 *   <li>{@link org.tvtower.db.database.impl.ProgrammeImpl#getModifiers <em>Modifiers</em>}</li>
 *   <li>{@link org.tvtower.db.database.impl.ProgrammeImpl#getData <em>Data</em>}</li>
 *   <li>{@link org.tvtower.db.database.impl.ProgrammeImpl#getEffects <em>Effects</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ProgrammeImpl extends MinimalEObjectImpl.Container implements Programme
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getProduct() <em>Product</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getProduct()
   * @generated
   * @ordered
   */
  protected static final String PRODUCT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getProduct() <em>Product</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getProduct()
   * @generated
   * @ordered
   */
  protected String product = PRODUCT_EDEFAULT;

  /**
   * The default value of the '{@link #getLicenceType() <em>Licence Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLicenceType()
   * @generated
   * @ordered
   */
  protected static final String LICENCE_TYPE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getLicenceType() <em>Licence Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLicenceType()
   * @generated
   * @ordered
   */
  protected String licenceType = LICENCE_TYPE_EDEFAULT;

  /**
   * The default value of the '{@link #getTmdbId() <em>Tmdb Id</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTmdbId()
   * @generated
   * @ordered
   */
  protected static final String TMDB_ID_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getTmdbId() <em>Tmdb Id</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTmdbId()
   * @generated
   * @ordered
   */
  protected String tmdbId = TMDB_ID_EDEFAULT;

  /**
   * The default value of the '{@link #getImdbId() <em>Imdb Id</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getImdbId()
   * @generated
   * @ordered
   */
  protected static final String IMDB_ID_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getImdbId() <em>Imdb Id</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getImdbId()
   * @generated
   * @ordered
   */
  protected String imdbId = IMDB_ID_EDEFAULT;

  /**
   * The default value of the '{@link #getFictional() <em>Fictional</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFictional()
   * @generated
   * @ordered
   */
  protected static final String FICTIONAL_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getFictional() <em>Fictional</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFictional()
   * @generated
   * @ordered
   */
  protected String fictional = FICTIONAL_EDEFAULT;

  /**
   * The cached value of the '{@link #getRef() <em>Ref</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRef()
   * @generated
   * @ordered
   */
  protected Programme ref;

  /**
   * The default value of the '{@link #getComment() <em>Comment</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getComment()
   * @generated
   * @ordered
   */
  protected static final String COMMENT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getComment() <em>Comment</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getComment()
   * @generated
   * @ordered
   */
  protected String comment = COMMENT_EDEFAULT;

  /**
   * The default value of the '{@link #getCreator() <em>Creator</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCreator()
   * @generated
   * @ordered
   */
  protected static final String CREATOR_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getCreator() <em>Creator</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCreator()
   * @generated
   * @ordered
   */
  protected String creator = CREATOR_EDEFAULT;

  /**
   * The default value of the '{@link #getCreatedBy() <em>Created By</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCreatedBy()
   * @generated
   * @ordered
   */
  protected static final String CREATED_BY_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getCreatedBy() <em>Created By</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCreatedBy()
   * @generated
   * @ordered
   */
  protected String createdBy = CREATED_BY_EDEFAULT;

  /**
   * The cached value of the '{@link #getTitle() <em>Title</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTitle()
   * @generated
   * @ordered
   */
  protected Title title;

  /**
   * The cached value of the '{@link #getTitleOrig() <em>Title Orig</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTitleOrig()
   * @generated
   * @ordered
   */
  protected TitleOriginal titleOrig;

  /**
   * The cached value of the '{@link #getDescription() <em>Description</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDescription()
   * @generated
   * @ordered
   */
  protected Description description;

  /**
   * The cached value of the '{@link #getGroups() <em>Groups</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getGroups()
   * @generated
   * @ordered
   */
  protected ProgrammeGroups groups;

  /**
   * The cached value of the '{@link #getAttractivity() <em>Attractivity</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAttractivity()
   * @generated
   * @ordered
   */
  protected GroupAttractivity attractivity;

  /**
   * The cached value of the '{@link #getChildren() <em>Children</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getChildren()
   * @generated
   * @ordered
   */
  protected ProgrammeChildren children;

  /**
   * The cached value of the '{@link #getStaff() <em>Staff</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStaff()
   * @generated
   * @ordered
   */
  protected Staff staff;

  /**
   * The cached value of the '{@link #getReleaseTime() <em>Release Time</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReleaseTime()
   * @generated
   * @ordered
   */
  protected ProgrammeReleaseTime releaseTime;

  /**
   * The cached value of the '{@link #getRatings() <em>Ratings</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRatings()
   * @generated
   * @ordered
   */
  protected ProgrammeRatings ratings;

  /**
   * The cached value of the '{@link #getModifiers() <em>Modifiers</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getModifiers()
   * @generated
   * @ordered
   */
  protected Modifiers modifiers;

  /**
   * The cached value of the '{@link #getData() <em>Data</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getData()
   * @generated
   * @ordered
   */
  protected ProgrammeData data;

  /**
   * The cached value of the '{@link #getEffects() <em>Effects</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEffects()
   * @generated
   * @ordered
   */
  protected Effects effects;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ProgrammeImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DatabasePackage.Literals.PROGRAMME;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DatabasePackage.PROGRAMME__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getProduct()
  {
    return product;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setProduct(String newProduct)
  {
    String oldProduct = product;
    product = newProduct;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DatabasePackage.PROGRAMME__PRODUCT, oldProduct, product));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getLicenceType()
  {
    return licenceType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setLicenceType(String newLicenceType)
  {
    String oldLicenceType = licenceType;
    licenceType = newLicenceType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DatabasePackage.PROGRAMME__LICENCE_TYPE, oldLicenceType, licenceType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getTmdbId()
  {
    return tmdbId;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setTmdbId(String newTmdbId)
  {
    String oldTmdbId = tmdbId;
    tmdbId = newTmdbId;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DatabasePackage.PROGRAMME__TMDB_ID, oldTmdbId, tmdbId));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getImdbId()
  {
    return imdbId;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setImdbId(String newImdbId)
  {
    String oldImdbId = imdbId;
    imdbId = newImdbId;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DatabasePackage.PROGRAMME__IMDB_ID, oldImdbId, imdbId));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getFictional()
  {
    return fictional;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFictional(String newFictional)
  {
    String oldFictional = fictional;
    fictional = newFictional;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DatabasePackage.PROGRAMME__FICTIONAL, oldFictional, fictional));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Programme getRef()
  {
    if (ref != null && ref.eIsProxy())
    {
      InternalEObject oldRef = (InternalEObject)ref;
      ref = (Programme)eResolveProxy(oldRef);
      if (ref != oldRef)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, DatabasePackage.PROGRAMME__REF, oldRef, ref));
      }
    }
    return ref;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Programme basicGetRef()
  {
    return ref;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setRef(Programme newRef)
  {
    Programme oldRef = ref;
    ref = newRef;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DatabasePackage.PROGRAMME__REF, oldRef, ref));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getComment()
  {
    return comment;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setComment(String newComment)
  {
    String oldComment = comment;
    comment = newComment;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DatabasePackage.PROGRAMME__COMMENT, oldComment, comment));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getCreator()
  {
    return creator;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCreator(String newCreator)
  {
    String oldCreator = creator;
    creator = newCreator;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DatabasePackage.PROGRAMME__CREATOR, oldCreator, creator));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getCreatedBy()
  {
    return createdBy;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCreatedBy(String newCreatedBy)
  {
    String oldCreatedBy = createdBy;
    createdBy = newCreatedBy;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DatabasePackage.PROGRAMME__CREATED_BY, oldCreatedBy, createdBy));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Title getTitle()
  {
    return title;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetTitle(Title newTitle, NotificationChain msgs)
  {
    Title oldTitle = title;
    title = newTitle;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DatabasePackage.PROGRAMME__TITLE, oldTitle, newTitle);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setTitle(Title newTitle)
  {
    if (newTitle != title)
    {
      NotificationChain msgs = null;
      if (title != null)
        msgs = ((InternalEObject)title).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DatabasePackage.PROGRAMME__TITLE, null, msgs);
      if (newTitle != null)
        msgs = ((InternalEObject)newTitle).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DatabasePackage.PROGRAMME__TITLE, null, msgs);
      msgs = basicSetTitle(newTitle, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DatabasePackage.PROGRAMME__TITLE, newTitle, newTitle));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public TitleOriginal getTitleOrig()
  {
    return titleOrig;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetTitleOrig(TitleOriginal newTitleOrig, NotificationChain msgs)
  {
    TitleOriginal oldTitleOrig = titleOrig;
    titleOrig = newTitleOrig;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DatabasePackage.PROGRAMME__TITLE_ORIG, oldTitleOrig, newTitleOrig);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setTitleOrig(TitleOriginal newTitleOrig)
  {
    if (newTitleOrig != titleOrig)
    {
      NotificationChain msgs = null;
      if (titleOrig != null)
        msgs = ((InternalEObject)titleOrig).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DatabasePackage.PROGRAMME__TITLE_ORIG, null, msgs);
      if (newTitleOrig != null)
        msgs = ((InternalEObject)newTitleOrig).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DatabasePackage.PROGRAMME__TITLE_ORIG, null, msgs);
      msgs = basicSetTitleOrig(newTitleOrig, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DatabasePackage.PROGRAMME__TITLE_ORIG, newTitleOrig, newTitleOrig));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Description getDescription()
  {
    return description;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetDescription(Description newDescription, NotificationChain msgs)
  {
    Description oldDescription = description;
    description = newDescription;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DatabasePackage.PROGRAMME__DESCRIPTION, oldDescription, newDescription);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDescription(Description newDescription)
  {
    if (newDescription != description)
    {
      NotificationChain msgs = null;
      if (description != null)
        msgs = ((InternalEObject)description).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DatabasePackage.PROGRAMME__DESCRIPTION, null, msgs);
      if (newDescription != null)
        msgs = ((InternalEObject)newDescription).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DatabasePackage.PROGRAMME__DESCRIPTION, null, msgs);
      msgs = basicSetDescription(newDescription, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DatabasePackage.PROGRAMME__DESCRIPTION, newDescription, newDescription));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ProgrammeGroups getGroups()
  {
    return groups;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetGroups(ProgrammeGroups newGroups, NotificationChain msgs)
  {
    ProgrammeGroups oldGroups = groups;
    groups = newGroups;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DatabasePackage.PROGRAMME__GROUPS, oldGroups, newGroups);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setGroups(ProgrammeGroups newGroups)
  {
    if (newGroups != groups)
    {
      NotificationChain msgs = null;
      if (groups != null)
        msgs = ((InternalEObject)groups).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DatabasePackage.PROGRAMME__GROUPS, null, msgs);
      if (newGroups != null)
        msgs = ((InternalEObject)newGroups).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DatabasePackage.PROGRAMME__GROUPS, null, msgs);
      msgs = basicSetGroups(newGroups, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DatabasePackage.PROGRAMME__GROUPS, newGroups, newGroups));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public GroupAttractivity getAttractivity()
  {
    return attractivity;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetAttractivity(GroupAttractivity newAttractivity, NotificationChain msgs)
  {
    GroupAttractivity oldAttractivity = attractivity;
    attractivity = newAttractivity;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DatabasePackage.PROGRAMME__ATTRACTIVITY, oldAttractivity, newAttractivity);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAttractivity(GroupAttractivity newAttractivity)
  {
    if (newAttractivity != attractivity)
    {
      NotificationChain msgs = null;
      if (attractivity != null)
        msgs = ((InternalEObject)attractivity).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DatabasePackage.PROGRAMME__ATTRACTIVITY, null, msgs);
      if (newAttractivity != null)
        msgs = ((InternalEObject)newAttractivity).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DatabasePackage.PROGRAMME__ATTRACTIVITY, null, msgs);
      msgs = basicSetAttractivity(newAttractivity, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DatabasePackage.PROGRAMME__ATTRACTIVITY, newAttractivity, newAttractivity));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ProgrammeChildren getChildren()
  {
    return children;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetChildren(ProgrammeChildren newChildren, NotificationChain msgs)
  {
    ProgrammeChildren oldChildren = children;
    children = newChildren;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DatabasePackage.PROGRAMME__CHILDREN, oldChildren, newChildren);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setChildren(ProgrammeChildren newChildren)
  {
    if (newChildren != children)
    {
      NotificationChain msgs = null;
      if (children != null)
        msgs = ((InternalEObject)children).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DatabasePackage.PROGRAMME__CHILDREN, null, msgs);
      if (newChildren != null)
        msgs = ((InternalEObject)newChildren).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DatabasePackage.PROGRAMME__CHILDREN, null, msgs);
      msgs = basicSetChildren(newChildren, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DatabasePackage.PROGRAMME__CHILDREN, newChildren, newChildren));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Staff getStaff()
  {
    return staff;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetStaff(Staff newStaff, NotificationChain msgs)
  {
    Staff oldStaff = staff;
    staff = newStaff;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DatabasePackage.PROGRAMME__STAFF, oldStaff, newStaff);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setStaff(Staff newStaff)
  {
    if (newStaff != staff)
    {
      NotificationChain msgs = null;
      if (staff != null)
        msgs = ((InternalEObject)staff).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DatabasePackage.PROGRAMME__STAFF, null, msgs);
      if (newStaff != null)
        msgs = ((InternalEObject)newStaff).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DatabasePackage.PROGRAMME__STAFF, null, msgs);
      msgs = basicSetStaff(newStaff, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DatabasePackage.PROGRAMME__STAFF, newStaff, newStaff));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ProgrammeReleaseTime getReleaseTime()
  {
    return releaseTime;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetReleaseTime(ProgrammeReleaseTime newReleaseTime, NotificationChain msgs)
  {
    ProgrammeReleaseTime oldReleaseTime = releaseTime;
    releaseTime = newReleaseTime;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DatabasePackage.PROGRAMME__RELEASE_TIME, oldReleaseTime, newReleaseTime);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setReleaseTime(ProgrammeReleaseTime newReleaseTime)
  {
    if (newReleaseTime != releaseTime)
    {
      NotificationChain msgs = null;
      if (releaseTime != null)
        msgs = ((InternalEObject)releaseTime).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DatabasePackage.PROGRAMME__RELEASE_TIME, null, msgs);
      if (newReleaseTime != null)
        msgs = ((InternalEObject)newReleaseTime).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DatabasePackage.PROGRAMME__RELEASE_TIME, null, msgs);
      msgs = basicSetReleaseTime(newReleaseTime, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DatabasePackage.PROGRAMME__RELEASE_TIME, newReleaseTime, newReleaseTime));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ProgrammeRatings getRatings()
  {
    return ratings;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetRatings(ProgrammeRatings newRatings, NotificationChain msgs)
  {
    ProgrammeRatings oldRatings = ratings;
    ratings = newRatings;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DatabasePackage.PROGRAMME__RATINGS, oldRatings, newRatings);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setRatings(ProgrammeRatings newRatings)
  {
    if (newRatings != ratings)
    {
      NotificationChain msgs = null;
      if (ratings != null)
        msgs = ((InternalEObject)ratings).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DatabasePackage.PROGRAMME__RATINGS, null, msgs);
      if (newRatings != null)
        msgs = ((InternalEObject)newRatings).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DatabasePackage.PROGRAMME__RATINGS, null, msgs);
      msgs = basicSetRatings(newRatings, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DatabasePackage.PROGRAMME__RATINGS, newRatings, newRatings));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Modifiers getModifiers()
  {
    return modifiers;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetModifiers(Modifiers newModifiers, NotificationChain msgs)
  {
    Modifiers oldModifiers = modifiers;
    modifiers = newModifiers;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DatabasePackage.PROGRAMME__MODIFIERS, oldModifiers, newModifiers);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setModifiers(Modifiers newModifiers)
  {
    if (newModifiers != modifiers)
    {
      NotificationChain msgs = null;
      if (modifiers != null)
        msgs = ((InternalEObject)modifiers).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DatabasePackage.PROGRAMME__MODIFIERS, null, msgs);
      if (newModifiers != null)
        msgs = ((InternalEObject)newModifiers).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DatabasePackage.PROGRAMME__MODIFIERS, null, msgs);
      msgs = basicSetModifiers(newModifiers, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DatabasePackage.PROGRAMME__MODIFIERS, newModifiers, newModifiers));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ProgrammeData getData()
  {
    return data;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetData(ProgrammeData newData, NotificationChain msgs)
  {
    ProgrammeData oldData = data;
    data = newData;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DatabasePackage.PROGRAMME__DATA, oldData, newData);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setData(ProgrammeData newData)
  {
    if (newData != data)
    {
      NotificationChain msgs = null;
      if (data != null)
        msgs = ((InternalEObject)data).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DatabasePackage.PROGRAMME__DATA, null, msgs);
      if (newData != null)
        msgs = ((InternalEObject)newData).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DatabasePackage.PROGRAMME__DATA, null, msgs);
      msgs = basicSetData(newData, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DatabasePackage.PROGRAMME__DATA, newData, newData));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Effects getEffects()
  {
    return effects;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetEffects(Effects newEffects, NotificationChain msgs)
  {
    Effects oldEffects = effects;
    effects = newEffects;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DatabasePackage.PROGRAMME__EFFECTS, oldEffects, newEffects);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setEffects(Effects newEffects)
  {
    if (newEffects != effects)
    {
      NotificationChain msgs = null;
      if (effects != null)
        msgs = ((InternalEObject)effects).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DatabasePackage.PROGRAMME__EFFECTS, null, msgs);
      if (newEffects != null)
        msgs = ((InternalEObject)newEffects).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DatabasePackage.PROGRAMME__EFFECTS, null, msgs);
      msgs = basicSetEffects(newEffects, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DatabasePackage.PROGRAMME__EFFECTS, newEffects, newEffects));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case DatabasePackage.PROGRAMME__TITLE:
        return basicSetTitle(null, msgs);
      case DatabasePackage.PROGRAMME__TITLE_ORIG:
        return basicSetTitleOrig(null, msgs);
      case DatabasePackage.PROGRAMME__DESCRIPTION:
        return basicSetDescription(null, msgs);
      case DatabasePackage.PROGRAMME__GROUPS:
        return basicSetGroups(null, msgs);
      case DatabasePackage.PROGRAMME__ATTRACTIVITY:
        return basicSetAttractivity(null, msgs);
      case DatabasePackage.PROGRAMME__CHILDREN:
        return basicSetChildren(null, msgs);
      case DatabasePackage.PROGRAMME__STAFF:
        return basicSetStaff(null, msgs);
      case DatabasePackage.PROGRAMME__RELEASE_TIME:
        return basicSetReleaseTime(null, msgs);
      case DatabasePackage.PROGRAMME__RATINGS:
        return basicSetRatings(null, msgs);
      case DatabasePackage.PROGRAMME__MODIFIERS:
        return basicSetModifiers(null, msgs);
      case DatabasePackage.PROGRAMME__DATA:
        return basicSetData(null, msgs);
      case DatabasePackage.PROGRAMME__EFFECTS:
        return basicSetEffects(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DatabasePackage.PROGRAMME__NAME:
        return getName();
      case DatabasePackage.PROGRAMME__PRODUCT:
        return getProduct();
      case DatabasePackage.PROGRAMME__LICENCE_TYPE:
        return getLicenceType();
      case DatabasePackage.PROGRAMME__TMDB_ID:
        return getTmdbId();
      case DatabasePackage.PROGRAMME__IMDB_ID:
        return getImdbId();
      case DatabasePackage.PROGRAMME__FICTIONAL:
        return getFictional();
      case DatabasePackage.PROGRAMME__REF:
        if (resolve) return getRef();
        return basicGetRef();
      case DatabasePackage.PROGRAMME__COMMENT:
        return getComment();
      case DatabasePackage.PROGRAMME__CREATOR:
        return getCreator();
      case DatabasePackage.PROGRAMME__CREATED_BY:
        return getCreatedBy();
      case DatabasePackage.PROGRAMME__TITLE:
        return getTitle();
      case DatabasePackage.PROGRAMME__TITLE_ORIG:
        return getTitleOrig();
      case DatabasePackage.PROGRAMME__DESCRIPTION:
        return getDescription();
      case DatabasePackage.PROGRAMME__GROUPS:
        return getGroups();
      case DatabasePackage.PROGRAMME__ATTRACTIVITY:
        return getAttractivity();
      case DatabasePackage.PROGRAMME__CHILDREN:
        return getChildren();
      case DatabasePackage.PROGRAMME__STAFF:
        return getStaff();
      case DatabasePackage.PROGRAMME__RELEASE_TIME:
        return getReleaseTime();
      case DatabasePackage.PROGRAMME__RATINGS:
        return getRatings();
      case DatabasePackage.PROGRAMME__MODIFIERS:
        return getModifiers();
      case DatabasePackage.PROGRAMME__DATA:
        return getData();
      case DatabasePackage.PROGRAMME__EFFECTS:
        return getEffects();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DatabasePackage.PROGRAMME__NAME:
        setName((String)newValue);
        return;
      case DatabasePackage.PROGRAMME__PRODUCT:
        setProduct((String)newValue);
        return;
      case DatabasePackage.PROGRAMME__LICENCE_TYPE:
        setLicenceType((String)newValue);
        return;
      case DatabasePackage.PROGRAMME__TMDB_ID:
        setTmdbId((String)newValue);
        return;
      case DatabasePackage.PROGRAMME__IMDB_ID:
        setImdbId((String)newValue);
        return;
      case DatabasePackage.PROGRAMME__FICTIONAL:
        setFictional((String)newValue);
        return;
      case DatabasePackage.PROGRAMME__REF:
        setRef((Programme)newValue);
        return;
      case DatabasePackage.PROGRAMME__COMMENT:
        setComment((String)newValue);
        return;
      case DatabasePackage.PROGRAMME__CREATOR:
        setCreator((String)newValue);
        return;
      case DatabasePackage.PROGRAMME__CREATED_BY:
        setCreatedBy((String)newValue);
        return;
      case DatabasePackage.PROGRAMME__TITLE:
        setTitle((Title)newValue);
        return;
      case DatabasePackage.PROGRAMME__TITLE_ORIG:
        setTitleOrig((TitleOriginal)newValue);
        return;
      case DatabasePackage.PROGRAMME__DESCRIPTION:
        setDescription((Description)newValue);
        return;
      case DatabasePackage.PROGRAMME__GROUPS:
        setGroups((ProgrammeGroups)newValue);
        return;
      case DatabasePackage.PROGRAMME__ATTRACTIVITY:
        setAttractivity((GroupAttractivity)newValue);
        return;
      case DatabasePackage.PROGRAMME__CHILDREN:
        setChildren((ProgrammeChildren)newValue);
        return;
      case DatabasePackage.PROGRAMME__STAFF:
        setStaff((Staff)newValue);
        return;
      case DatabasePackage.PROGRAMME__RELEASE_TIME:
        setReleaseTime((ProgrammeReleaseTime)newValue);
        return;
      case DatabasePackage.PROGRAMME__RATINGS:
        setRatings((ProgrammeRatings)newValue);
        return;
      case DatabasePackage.PROGRAMME__MODIFIERS:
        setModifiers((Modifiers)newValue);
        return;
      case DatabasePackage.PROGRAMME__DATA:
        setData((ProgrammeData)newValue);
        return;
      case DatabasePackage.PROGRAMME__EFFECTS:
        setEffects((Effects)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DatabasePackage.PROGRAMME__NAME:
        setName(NAME_EDEFAULT);
        return;
      case DatabasePackage.PROGRAMME__PRODUCT:
        setProduct(PRODUCT_EDEFAULT);
        return;
      case DatabasePackage.PROGRAMME__LICENCE_TYPE:
        setLicenceType(LICENCE_TYPE_EDEFAULT);
        return;
      case DatabasePackage.PROGRAMME__TMDB_ID:
        setTmdbId(TMDB_ID_EDEFAULT);
        return;
      case DatabasePackage.PROGRAMME__IMDB_ID:
        setImdbId(IMDB_ID_EDEFAULT);
        return;
      case DatabasePackage.PROGRAMME__FICTIONAL:
        setFictional(FICTIONAL_EDEFAULT);
        return;
      case DatabasePackage.PROGRAMME__REF:
        setRef((Programme)null);
        return;
      case DatabasePackage.PROGRAMME__COMMENT:
        setComment(COMMENT_EDEFAULT);
        return;
      case DatabasePackage.PROGRAMME__CREATOR:
        setCreator(CREATOR_EDEFAULT);
        return;
      case DatabasePackage.PROGRAMME__CREATED_BY:
        setCreatedBy(CREATED_BY_EDEFAULT);
        return;
      case DatabasePackage.PROGRAMME__TITLE:
        setTitle((Title)null);
        return;
      case DatabasePackage.PROGRAMME__TITLE_ORIG:
        setTitleOrig((TitleOriginal)null);
        return;
      case DatabasePackage.PROGRAMME__DESCRIPTION:
        setDescription((Description)null);
        return;
      case DatabasePackage.PROGRAMME__GROUPS:
        setGroups((ProgrammeGroups)null);
        return;
      case DatabasePackage.PROGRAMME__ATTRACTIVITY:
        setAttractivity((GroupAttractivity)null);
        return;
      case DatabasePackage.PROGRAMME__CHILDREN:
        setChildren((ProgrammeChildren)null);
        return;
      case DatabasePackage.PROGRAMME__STAFF:
        setStaff((Staff)null);
        return;
      case DatabasePackage.PROGRAMME__RELEASE_TIME:
        setReleaseTime((ProgrammeReleaseTime)null);
        return;
      case DatabasePackage.PROGRAMME__RATINGS:
        setRatings((ProgrammeRatings)null);
        return;
      case DatabasePackage.PROGRAMME__MODIFIERS:
        setModifiers((Modifiers)null);
        return;
      case DatabasePackage.PROGRAMME__DATA:
        setData((ProgrammeData)null);
        return;
      case DatabasePackage.PROGRAMME__EFFECTS:
        setEffects((Effects)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DatabasePackage.PROGRAMME__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case DatabasePackage.PROGRAMME__PRODUCT:
        return PRODUCT_EDEFAULT == null ? product != null : !PRODUCT_EDEFAULT.equals(product);
      case DatabasePackage.PROGRAMME__LICENCE_TYPE:
        return LICENCE_TYPE_EDEFAULT == null ? licenceType != null : !LICENCE_TYPE_EDEFAULT.equals(licenceType);
      case DatabasePackage.PROGRAMME__TMDB_ID:
        return TMDB_ID_EDEFAULT == null ? tmdbId != null : !TMDB_ID_EDEFAULT.equals(tmdbId);
      case DatabasePackage.PROGRAMME__IMDB_ID:
        return IMDB_ID_EDEFAULT == null ? imdbId != null : !IMDB_ID_EDEFAULT.equals(imdbId);
      case DatabasePackage.PROGRAMME__FICTIONAL:
        return FICTIONAL_EDEFAULT == null ? fictional != null : !FICTIONAL_EDEFAULT.equals(fictional);
      case DatabasePackage.PROGRAMME__REF:
        return ref != null;
      case DatabasePackage.PROGRAMME__COMMENT:
        return COMMENT_EDEFAULT == null ? comment != null : !COMMENT_EDEFAULT.equals(comment);
      case DatabasePackage.PROGRAMME__CREATOR:
        return CREATOR_EDEFAULT == null ? creator != null : !CREATOR_EDEFAULT.equals(creator);
      case DatabasePackage.PROGRAMME__CREATED_BY:
        return CREATED_BY_EDEFAULT == null ? createdBy != null : !CREATED_BY_EDEFAULT.equals(createdBy);
      case DatabasePackage.PROGRAMME__TITLE:
        return title != null;
      case DatabasePackage.PROGRAMME__TITLE_ORIG:
        return titleOrig != null;
      case DatabasePackage.PROGRAMME__DESCRIPTION:
        return description != null;
      case DatabasePackage.PROGRAMME__GROUPS:
        return groups != null;
      case DatabasePackage.PROGRAMME__ATTRACTIVITY:
        return attractivity != null;
      case DatabasePackage.PROGRAMME__CHILDREN:
        return children != null;
      case DatabasePackage.PROGRAMME__STAFF:
        return staff != null;
      case DatabasePackage.PROGRAMME__RELEASE_TIME:
        return releaseTime != null;
      case DatabasePackage.PROGRAMME__RATINGS:
        return ratings != null;
      case DatabasePackage.PROGRAMME__MODIFIERS:
        return modifiers != null;
      case DatabasePackage.PROGRAMME__DATA:
        return data != null;
      case DatabasePackage.PROGRAMME__EFFECTS:
        return effects != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", product: ");
    result.append(product);
    result.append(", licenceType: ");
    result.append(licenceType);
    result.append(", tmdbId: ");
    result.append(tmdbId);
    result.append(", imdbId: ");
    result.append(imdbId);
    result.append(", fictional: ");
    result.append(fictional);
    result.append(", comment: ");
    result.append(comment);
    result.append(", creator: ");
    result.append(creator);
    result.append(", createdBy: ");
    result.append(createdBy);
    result.append(')');
    return result.toString();
  }

} //ProgrammeImpl
