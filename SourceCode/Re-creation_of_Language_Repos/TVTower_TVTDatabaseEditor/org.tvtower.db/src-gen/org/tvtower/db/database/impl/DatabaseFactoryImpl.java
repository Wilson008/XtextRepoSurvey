/**
 * generated by Xtext 2.35.0
 */
package org.tvtower.db.database.impl;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

import org.tvtower.db.database.*;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class DatabaseFactoryImpl extends EFactoryImpl implements DatabaseFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static DatabaseFactory init()
  {
    try
    {
      DatabaseFactory theDatabaseFactory = (DatabaseFactory)EPackage.Registry.INSTANCE.getEFactory(DatabasePackage.eNS_URI);
      if (theDatabaseFactory != null)
      {
        return theDatabaseFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new DatabaseFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DatabaseFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case DatabasePackage.DATABASE: return createDatabase();
      case DatabasePackage.EXPORT_OPTIONS: return createExportOptions();
      case DatabasePackage.DEFINITION: return createDefinition();
      case DatabasePackage.PERSON_LOCALIZATION: return createPersonLocalization();
      case DatabasePackage.MAY_CONTAIN_VARIABLES: return createMayContainVariables();
      case DatabasePackage.SCRIPT_TEMPLATES: return createScriptTemplates();
      case DatabasePackage.SCRIPT_TEMPLATE: return createScriptTemplate();
      case DatabasePackage.CONTAINS_LANGUAGE_STRINGS: return createContainsLanguageStrings();
      case DatabasePackage.TITLE: return createTitle();
      case DatabasePackage.DESCRIPTION: return createDescription();
      case DatabasePackage.SCRIPT_CHILDREN: return createScriptChildren();
      case DatabasePackage.VARIABLES: return createVariables();
      case DatabasePackage.VARIABLE_DEF: return createVariableDef();
      case DatabasePackage.JOBS: return createJobs();
      case DatabasePackage.JOB: return createJob();
      case DatabasePackage.SCRIPT_DATA: return createScriptData();
      case DatabasePackage.SCRIPT_GENRES: return createScriptGenres();
      case DatabasePackage.CONTAINS_MIN_MAX_SLOPE: return createContainsMinMaxSlope();
      case DatabasePackage.BLOCKS: return createBlocks();
      case DatabasePackage.EPISODES: return createEpisodes();
      case DatabasePackage.STUDIO_SIZE: return createStudioSize();
      case DatabasePackage.PRICE: return createPrice();
      case DatabasePackage.POTENTIAL: return createPotential();
      case DatabasePackage.OUTCOME: return createOutcome();
      case DatabasePackage.REVIEW: return createReview();
      case DatabasePackage.SPEED: return createSpeed();
      case DatabasePackage.PRODUCTION_TIME: return createProductionTime();
      case DatabasePackage.MIN_MAX_SLOPE: return createMinMaxSlope();
      case DatabasePackage.LANGUAGE_STRING: return createLanguageString();
      case DatabasePackage.PROGRAMME_ROLES: return createProgrammeRoles();
      case DatabasePackage.PROGRAMME_ROLE: return createProgrammeRole();
      case DatabasePackage.ROLE_LOCALE: return createRoleLocale();
      case DatabasePackage.ACHIEVEMENTS: return createAchievements();
      case DatabasePackage.ACHIEVEMENT: return createAchievement();
      case DatabasePackage.TEXT: return createText();
      case DatabasePackage.TASKS: return createTasks();
      case DatabasePackage.TASK: return createTask();
      case DatabasePackage.TASK_DATA: return createTaskData();
      case DatabasePackage.REWARDS: return createRewards();
      case DatabasePackage.REWARD: return createReward();
      case DatabasePackage.REWARD_DATA: return createRewardData();
      case DatabasePackage.ACHIEVEMENT_DATA: return createAchievementData();
      case DatabasePackage.ADVERTISEMENTS: return createAdvertisements();
      case DatabasePackage.ADVERTISEMENT: return createAdvertisement();
      case DatabasePackage.AD_CONDITIONS: return createAdConditions();
      case DatabasePackage.ADVERTISEMENT_DATA: return createAdvertisementData();
      case DatabasePackage.NEWS: return createNews();
      case DatabasePackage.NEWS_ITEM: return createNewsItem();
      case DatabasePackage.EFFECTS: return createEffects();
      case DatabasePackage.EFFECT: return createEffect();
      case DatabasePackage.AVAILABILITY: return createAvailability();
      case DatabasePackage.NEWS_DATA: return createNewsData();
      case DatabasePackage.CELEBRITY_PEOPLE: return createCelebrityPeople();
      case DatabasePackage.INSIGNIFICANT_PEOPLE: return createInsignificantPeople();
      case DatabasePackage.PERSON: return createPerson();
      case DatabasePackage.PERSON_LOCALE: return createPersonLocale();
      case DatabasePackage.PERSON_DETAILS: return createPersonDetails();
      case DatabasePackage.PERSON_DATA: return createPersonData();
      case DatabasePackage.PROGRAMMES: return createProgrammes();
      case DatabasePackage.PROGRAMME: return createProgramme();
      case DatabasePackage.PROGRAMME_CHILDREN: return createProgrammeChildren();
      case DatabasePackage.STAFF: return createStaff();
      case DatabasePackage.PROGRAMME_GROUPS: return createProgrammeGroups();
      case DatabasePackage.GROUP_ATTRACTIVITY: return createGroupAttractivity();
      case DatabasePackage.PROGRAMME_RELEASE_TIME: return createProgrammeReleaseTime();
      case DatabasePackage.STAFF_MEMBER: return createStaffMember();
      case DatabasePackage.MODIFIERS: return createModifiers();
      case DatabasePackage.TEMPLATE_PROGRAMME_MODIFIERS: return createTemplateProgrammeModifiers();
      case DatabasePackage.MODIFIER: return createModifier();
      case DatabasePackage.PROGRAMME_RATINGS: return createProgrammeRatings();
      case DatabasePackage.PROGRAMME_DATA: return createProgrammeData();
      case DatabasePackage.TITLE_ORIGINAL: return createTitleOriginal();
      case DatabasePackage.VERSION: return createVersion();
      case DatabasePackage.UNNAMED_PROPERTY: return createUnnamedProperty();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Database createDatabase()
  {
    DatabaseImpl database = new DatabaseImpl();
    return database;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ExportOptions createExportOptions()
  {
    ExportOptionsImpl exportOptions = new ExportOptionsImpl();
    return exportOptions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Definition createDefinition()
  {
    DefinitionImpl definition = new DefinitionImpl();
    return definition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PersonLocalization createPersonLocalization()
  {
    PersonLocalizationImpl personLocalization = new PersonLocalizationImpl();
    return personLocalization;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MayContainVariables createMayContainVariables()
  {
    MayContainVariablesImpl mayContainVariables = new MayContainVariablesImpl();
    return mayContainVariables;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ScriptTemplates createScriptTemplates()
  {
    ScriptTemplatesImpl scriptTemplates = new ScriptTemplatesImpl();
    return scriptTemplates;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ScriptTemplate createScriptTemplate()
  {
    ScriptTemplateImpl scriptTemplate = new ScriptTemplateImpl();
    return scriptTemplate;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ContainsLanguageStrings createContainsLanguageStrings()
  {
    ContainsLanguageStringsImpl containsLanguageStrings = new ContainsLanguageStringsImpl();
    return containsLanguageStrings;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Title createTitle()
  {
    TitleImpl title = new TitleImpl();
    return title;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Description createDescription()
  {
    DescriptionImpl description = new DescriptionImpl();
    return description;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ScriptChildren createScriptChildren()
  {
    ScriptChildrenImpl scriptChildren = new ScriptChildrenImpl();
    return scriptChildren;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Variables createVariables()
  {
    VariablesImpl variables = new VariablesImpl();
    return variables;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public VariableDef createVariableDef()
  {
    VariableDefImpl variableDef = new VariableDefImpl();
    return variableDef;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Jobs createJobs()
  {
    JobsImpl jobs = new JobsImpl();
    return jobs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Job createJob()
  {
    JobImpl job = new JobImpl();
    return job;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ScriptData createScriptData()
  {
    ScriptDataImpl scriptData = new ScriptDataImpl();
    return scriptData;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ScriptGenres createScriptGenres()
  {
    ScriptGenresImpl scriptGenres = new ScriptGenresImpl();
    return scriptGenres;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ContainsMinMaxSlope createContainsMinMaxSlope()
  {
    ContainsMinMaxSlopeImpl containsMinMaxSlope = new ContainsMinMaxSlopeImpl();
    return containsMinMaxSlope;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Blocks createBlocks()
  {
    BlocksImpl blocks = new BlocksImpl();
    return blocks;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Episodes createEpisodes()
  {
    EpisodesImpl episodes = new EpisodesImpl();
    return episodes;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public StudioSize createStudioSize()
  {
    StudioSizeImpl studioSize = new StudioSizeImpl();
    return studioSize;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Price createPrice()
  {
    PriceImpl price = new PriceImpl();
    return price;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Potential createPotential()
  {
    PotentialImpl potential = new PotentialImpl();
    return potential;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Outcome createOutcome()
  {
    OutcomeImpl outcome = new OutcomeImpl();
    return outcome;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Review createReview()
  {
    ReviewImpl review = new ReviewImpl();
    return review;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Speed createSpeed()
  {
    SpeedImpl speed = new SpeedImpl();
    return speed;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ProductionTime createProductionTime()
  {
    ProductionTimeImpl productionTime = new ProductionTimeImpl();
    return productionTime;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MinMaxSlope createMinMaxSlope()
  {
    MinMaxSlopeImpl minMaxSlope = new MinMaxSlopeImpl();
    return minMaxSlope;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LanguageString createLanguageString()
  {
    LanguageStringImpl languageString = new LanguageStringImpl();
    return languageString;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ProgrammeRoles createProgrammeRoles()
  {
    ProgrammeRolesImpl programmeRoles = new ProgrammeRolesImpl();
    return programmeRoles;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ProgrammeRole createProgrammeRole()
  {
    ProgrammeRoleImpl programmeRole = new ProgrammeRoleImpl();
    return programmeRole;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public RoleLocale createRoleLocale()
  {
    RoleLocaleImpl roleLocale = new RoleLocaleImpl();
    return roleLocale;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Achievements createAchievements()
  {
    AchievementsImpl achievements = new AchievementsImpl();
    return achievements;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Achievement createAchievement()
  {
    AchievementImpl achievement = new AchievementImpl();
    return achievement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Text createText()
  {
    TextImpl text = new TextImpl();
    return text;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Tasks createTasks()
  {
    TasksImpl tasks = new TasksImpl();
    return tasks;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Task createTask()
  {
    TaskImpl task = new TaskImpl();
    return task;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public TaskData createTaskData()
  {
    TaskDataImpl taskData = new TaskDataImpl();
    return taskData;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Rewards createRewards()
  {
    RewardsImpl rewards = new RewardsImpl();
    return rewards;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Reward createReward()
  {
    RewardImpl reward = new RewardImpl();
    return reward;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public RewardData createRewardData()
  {
    RewardDataImpl rewardData = new RewardDataImpl();
    return rewardData;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AchievementData createAchievementData()
  {
    AchievementDataImpl achievementData = new AchievementDataImpl();
    return achievementData;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Advertisements createAdvertisements()
  {
    AdvertisementsImpl advertisements = new AdvertisementsImpl();
    return advertisements;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Advertisement createAdvertisement()
  {
    AdvertisementImpl advertisement = new AdvertisementImpl();
    return advertisement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AdConditions createAdConditions()
  {
    AdConditionsImpl adConditions = new AdConditionsImpl();
    return adConditions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AdvertisementData createAdvertisementData()
  {
    AdvertisementDataImpl advertisementData = new AdvertisementDataImpl();
    return advertisementData;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public News createNews()
  {
    NewsImpl news = new NewsImpl();
    return news;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NewsItem createNewsItem()
  {
    NewsItemImpl newsItem = new NewsItemImpl();
    return newsItem;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Effects createEffects()
  {
    EffectsImpl effects = new EffectsImpl();
    return effects;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Effect createEffect()
  {
    EffectImpl effect = new EffectImpl();
    return effect;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Availability createAvailability()
  {
    AvailabilityImpl availability = new AvailabilityImpl();
    return availability;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NewsData createNewsData()
  {
    NewsDataImpl newsData = new NewsDataImpl();
    return newsData;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public CelebrityPeople createCelebrityPeople()
  {
    CelebrityPeopleImpl celebrityPeople = new CelebrityPeopleImpl();
    return celebrityPeople;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public InsignificantPeople createInsignificantPeople()
  {
    InsignificantPeopleImpl insignificantPeople = new InsignificantPeopleImpl();
    return insignificantPeople;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Person createPerson()
  {
    PersonImpl person = new PersonImpl();
    return person;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PersonLocale createPersonLocale()
  {
    PersonLocaleImpl personLocale = new PersonLocaleImpl();
    return personLocale;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PersonDetails createPersonDetails()
  {
    PersonDetailsImpl personDetails = new PersonDetailsImpl();
    return personDetails;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PersonData createPersonData()
  {
    PersonDataImpl personData = new PersonDataImpl();
    return personData;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Programmes createProgrammes()
  {
    ProgrammesImpl programmes = new ProgrammesImpl();
    return programmes;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Programme createProgramme()
  {
    ProgrammeImpl programme = new ProgrammeImpl();
    return programme;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ProgrammeChildren createProgrammeChildren()
  {
    ProgrammeChildrenImpl programmeChildren = new ProgrammeChildrenImpl();
    return programmeChildren;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Staff createStaff()
  {
    StaffImpl staff = new StaffImpl();
    return staff;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ProgrammeGroups createProgrammeGroups()
  {
    ProgrammeGroupsImpl programmeGroups = new ProgrammeGroupsImpl();
    return programmeGroups;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public GroupAttractivity createGroupAttractivity()
  {
    GroupAttractivityImpl groupAttractivity = new GroupAttractivityImpl();
    return groupAttractivity;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ProgrammeReleaseTime createProgrammeReleaseTime()
  {
    ProgrammeReleaseTimeImpl programmeReleaseTime = new ProgrammeReleaseTimeImpl();
    return programmeReleaseTime;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public StaffMember createStaffMember()
  {
    StaffMemberImpl staffMember = new StaffMemberImpl();
    return staffMember;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Modifiers createModifiers()
  {
    ModifiersImpl modifiers = new ModifiersImpl();
    return modifiers;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public TemplateProgrammeModifiers createTemplateProgrammeModifiers()
  {
    TemplateProgrammeModifiersImpl templateProgrammeModifiers = new TemplateProgrammeModifiersImpl();
    return templateProgrammeModifiers;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Modifier createModifier()
  {
    ModifierImpl modifier = new ModifierImpl();
    return modifier;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ProgrammeRatings createProgrammeRatings()
  {
    ProgrammeRatingsImpl programmeRatings = new ProgrammeRatingsImpl();
    return programmeRatings;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ProgrammeData createProgrammeData()
  {
    ProgrammeDataImpl programmeData = new ProgrammeDataImpl();
    return programmeData;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public TitleOriginal createTitleOriginal()
  {
    TitleOriginalImpl titleOriginal = new TitleOriginalImpl();
    return titleOriginal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Version createVersion()
  {
    VersionImpl version = new VersionImpl();
    return version;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public UnnamedProperty createUnnamedProperty()
  {
    UnnamedPropertyImpl unnamedProperty = new UnnamedPropertyImpl();
    return unnamedProperty;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DatabasePackage getDatabasePackage()
  {
    return (DatabasePackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static DatabasePackage getPackage()
  {
    return DatabasePackage.eINSTANCE;
  }

} //DatabaseFactoryImpl
