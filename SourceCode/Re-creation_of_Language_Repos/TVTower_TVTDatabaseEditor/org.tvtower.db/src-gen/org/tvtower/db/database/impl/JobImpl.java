/**
 * generated by Xtext 2.35.0
 */
package org.tvtower.db.database.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.tvtower.db.database.DatabasePackage;
import org.tvtower.db.database.Job;
import org.tvtower.db.database.ProgrammeRole;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Job</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.tvtower.db.database.impl.JobImpl#getIndex <em>Index</em>}</li>
 *   <li>{@link org.tvtower.db.database.impl.JobImpl#getFunction <em>Function</em>}</li>
 *   <li>{@link org.tvtower.db.database.impl.JobImpl#getRequired <em>Required</em>}</li>
 *   <li>{@link org.tvtower.db.database.impl.JobImpl#getGender <em>Gender</em>}</li>
 *   <li>{@link org.tvtower.db.database.impl.JobImpl#getRolId <em>Rol Id</em>}</li>
 * </ul>
 *
 * @generated
 */
public class JobImpl extends MinimalEObjectImpl.Container implements Job
{
  /**
   * The default value of the '{@link #getIndex() <em>Index</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIndex()
   * @generated
   * @ordered
   */
  protected static final String INDEX_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getIndex() <em>Index</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIndex()
   * @generated
   * @ordered
   */
  protected String index = INDEX_EDEFAULT;

  /**
   * The default value of the '{@link #getFunction() <em>Function</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFunction()
   * @generated
   * @ordered
   */
  protected static final String FUNCTION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getFunction() <em>Function</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFunction()
   * @generated
   * @ordered
   */
  protected String function = FUNCTION_EDEFAULT;

  /**
   * The default value of the '{@link #getRequired() <em>Required</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRequired()
   * @generated
   * @ordered
   */
  protected static final String REQUIRED_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getRequired() <em>Required</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRequired()
   * @generated
   * @ordered
   */
  protected String required = REQUIRED_EDEFAULT;

  /**
   * The default value of the '{@link #getGender() <em>Gender</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getGender()
   * @generated
   * @ordered
   */
  protected static final String GENDER_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getGender() <em>Gender</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getGender()
   * @generated
   * @ordered
   */
  protected String gender = GENDER_EDEFAULT;

  /**
   * The cached value of the '{@link #getRolId() <em>Rol Id</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRolId()
   * @generated
   * @ordered
   */
  protected ProgrammeRole rolId;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected JobImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DatabasePackage.Literals.JOB;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getIndex()
  {
    return index;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setIndex(String newIndex)
  {
    String oldIndex = index;
    index = newIndex;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DatabasePackage.JOB__INDEX, oldIndex, index));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getFunction()
  {
    return function;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFunction(String newFunction)
  {
    String oldFunction = function;
    function = newFunction;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DatabasePackage.JOB__FUNCTION, oldFunction, function));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getRequired()
  {
    return required;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setRequired(String newRequired)
  {
    String oldRequired = required;
    required = newRequired;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DatabasePackage.JOB__REQUIRED, oldRequired, required));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getGender()
  {
    return gender;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setGender(String newGender)
  {
    String oldGender = gender;
    gender = newGender;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DatabasePackage.JOB__GENDER, oldGender, gender));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ProgrammeRole getRolId()
  {
    if (rolId != null && rolId.eIsProxy())
    {
      InternalEObject oldRolId = (InternalEObject)rolId;
      rolId = (ProgrammeRole)eResolveProxy(oldRolId);
      if (rolId != oldRolId)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, DatabasePackage.JOB__ROL_ID, oldRolId, rolId));
      }
    }
    return rolId;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ProgrammeRole basicGetRolId()
  {
    return rolId;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setRolId(ProgrammeRole newRolId)
  {
    ProgrammeRole oldRolId = rolId;
    rolId = newRolId;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DatabasePackage.JOB__ROL_ID, oldRolId, rolId));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DatabasePackage.JOB__INDEX:
        return getIndex();
      case DatabasePackage.JOB__FUNCTION:
        return getFunction();
      case DatabasePackage.JOB__REQUIRED:
        return getRequired();
      case DatabasePackage.JOB__GENDER:
        return getGender();
      case DatabasePackage.JOB__ROL_ID:
        if (resolve) return getRolId();
        return basicGetRolId();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DatabasePackage.JOB__INDEX:
        setIndex((String)newValue);
        return;
      case DatabasePackage.JOB__FUNCTION:
        setFunction((String)newValue);
        return;
      case DatabasePackage.JOB__REQUIRED:
        setRequired((String)newValue);
        return;
      case DatabasePackage.JOB__GENDER:
        setGender((String)newValue);
        return;
      case DatabasePackage.JOB__ROL_ID:
        setRolId((ProgrammeRole)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DatabasePackage.JOB__INDEX:
        setIndex(INDEX_EDEFAULT);
        return;
      case DatabasePackage.JOB__FUNCTION:
        setFunction(FUNCTION_EDEFAULT);
        return;
      case DatabasePackage.JOB__REQUIRED:
        setRequired(REQUIRED_EDEFAULT);
        return;
      case DatabasePackage.JOB__GENDER:
        setGender(GENDER_EDEFAULT);
        return;
      case DatabasePackage.JOB__ROL_ID:
        setRolId((ProgrammeRole)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DatabasePackage.JOB__INDEX:
        return INDEX_EDEFAULT == null ? index != null : !INDEX_EDEFAULT.equals(index);
      case DatabasePackage.JOB__FUNCTION:
        return FUNCTION_EDEFAULT == null ? function != null : !FUNCTION_EDEFAULT.equals(function);
      case DatabasePackage.JOB__REQUIRED:
        return REQUIRED_EDEFAULT == null ? required != null : !REQUIRED_EDEFAULT.equals(required);
      case DatabasePackage.JOB__GENDER:
        return GENDER_EDEFAULT == null ? gender != null : !GENDER_EDEFAULT.equals(gender);
      case DatabasePackage.JOB__ROL_ID:
        return rolId != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (index: ");
    result.append(index);
    result.append(", function: ");
    result.append(function);
    result.append(", required: ");
    result.append(required);
    result.append(", gender: ");
    result.append(gender);
    result.append(')');
    return result.toString();
  }

} //JobImpl
