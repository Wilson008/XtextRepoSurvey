/**
 * generated by Xtext 2.35.0
 */
package org.tvtower.db.database.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.tvtower.db.database.DatabasePackage;
import org.tvtower.db.database.ProgrammeData;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Programme Data</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.tvtower.db.database.impl.ProgrammeDataImpl#getCountry <em>Country</em>}</li>
 *   <li>{@link org.tvtower.db.database.impl.ProgrammeDataImpl#getYear <em>Year</em>}</li>
 *   <li>{@link org.tvtower.db.database.impl.ProgrammeDataImpl#getPrice <em>Price</em>}</li>
 *   <li>{@link org.tvtower.db.database.impl.ProgrammeDataImpl#getDistribution <em>Distribution</em>}</li>
 *   <li>{@link org.tvtower.db.database.impl.ProgrammeDataImpl#getMaingenre <em>Maingenre</em>}</li>
 *   <li>{@link org.tvtower.db.database.impl.ProgrammeDataImpl#getSubgenre <em>Subgenre</em>}</li>
 *   <li>{@link org.tvtower.db.database.impl.ProgrammeDataImpl#getFlags <em>Flags</em>}</li>
 *   <li>{@link org.tvtower.db.database.impl.ProgrammeDataImpl#getLicenceFlags <em>Licence Flags</em>}</li>
 *   <li>{@link org.tvtower.db.database.impl.ProgrammeDataImpl#getBlocks <em>Blocks</em>}</li>
 *   <li>{@link org.tvtower.db.database.impl.ProgrammeDataImpl#getSlotStart <em>Slot Start</em>}</li>
 *   <li>{@link org.tvtower.db.database.impl.ProgrammeDataImpl#getSlotEnd <em>Slot End</em>}</li>
 *   <li>{@link org.tvtower.db.database.impl.ProgrammeDataImpl#getBroadcastLimit <em>Broadcast Limit</em>}</li>
 *   <li>{@link org.tvtower.db.database.impl.ProgrammeDataImpl#getBroadcastFlags <em>Broadcast Flags</em>}</li>
 *   <li>{@link org.tvtower.db.database.impl.ProgrammeDataImpl#getLicenceBroadcastLimit <em>Licence Broadcast Limit</em>}</li>
 *   <li>{@link org.tvtower.db.database.impl.ProgrammeDataImpl#getLicenceBroadcastFlags <em>Licence Broadcast Flags</em>}</li>
 *   <li>{@link org.tvtower.db.database.impl.ProgrammeDataImpl#getAvailable <em>Available</em>}</li>
 *   <li>{@link org.tvtower.db.database.impl.ProgrammeDataImpl#getPriceMod <em>Price Mod</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ProgrammeDataImpl extends MinimalEObjectImpl.Container implements ProgrammeData
{
  /**
   * The default value of the '{@link #getCountry() <em>Country</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCountry()
   * @generated
   * @ordered
   */
  protected static final String COUNTRY_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getCountry() <em>Country</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCountry()
   * @generated
   * @ordered
   */
  protected String country = COUNTRY_EDEFAULT;

  /**
   * The default value of the '{@link #getYear() <em>Year</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getYear()
   * @generated
   * @ordered
   */
  protected static final String YEAR_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getYear() <em>Year</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getYear()
   * @generated
   * @ordered
   */
  protected String year = YEAR_EDEFAULT;

  /**
   * The default value of the '{@link #getPrice() <em>Price</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPrice()
   * @generated
   * @ordered
   */
  protected static final String PRICE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getPrice() <em>Price</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPrice()
   * @generated
   * @ordered
   */
  protected String price = PRICE_EDEFAULT;

  /**
   * The default value of the '{@link #getDistribution() <em>Distribution</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDistribution()
   * @generated
   * @ordered
   */
  protected static final String DISTRIBUTION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDistribution() <em>Distribution</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDistribution()
   * @generated
   * @ordered
   */
  protected String distribution = DISTRIBUTION_EDEFAULT;

  /**
   * The default value of the '{@link #getMaingenre() <em>Maingenre</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMaingenre()
   * @generated
   * @ordered
   */
  protected static final String MAINGENRE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getMaingenre() <em>Maingenre</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMaingenre()
   * @generated
   * @ordered
   */
  protected String maingenre = MAINGENRE_EDEFAULT;

  /**
   * The default value of the '{@link #getSubgenre() <em>Subgenre</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSubgenre()
   * @generated
   * @ordered
   */
  protected static final String SUBGENRE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getSubgenre() <em>Subgenre</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSubgenre()
   * @generated
   * @ordered
   */
  protected String subgenre = SUBGENRE_EDEFAULT;

  /**
   * The default value of the '{@link #getFlags() <em>Flags</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFlags()
   * @generated
   * @ordered
   */
  protected static final String FLAGS_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getFlags() <em>Flags</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFlags()
   * @generated
   * @ordered
   */
  protected String flags = FLAGS_EDEFAULT;

  /**
   * The default value of the '{@link #getLicenceFlags() <em>Licence Flags</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLicenceFlags()
   * @generated
   * @ordered
   */
  protected static final String LICENCE_FLAGS_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getLicenceFlags() <em>Licence Flags</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLicenceFlags()
   * @generated
   * @ordered
   */
  protected String licenceFlags = LICENCE_FLAGS_EDEFAULT;

  /**
   * The default value of the '{@link #getBlocks() <em>Blocks</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBlocks()
   * @generated
   * @ordered
   */
  protected static final String BLOCKS_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getBlocks() <em>Blocks</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBlocks()
   * @generated
   * @ordered
   */
  protected String blocks = BLOCKS_EDEFAULT;

  /**
   * The default value of the '{@link #getSlotStart() <em>Slot Start</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSlotStart()
   * @generated
   * @ordered
   */
  protected static final String SLOT_START_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getSlotStart() <em>Slot Start</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSlotStart()
   * @generated
   * @ordered
   */
  protected String slotStart = SLOT_START_EDEFAULT;

  /**
   * The default value of the '{@link #getSlotEnd() <em>Slot End</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSlotEnd()
   * @generated
   * @ordered
   */
  protected static final String SLOT_END_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getSlotEnd() <em>Slot End</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSlotEnd()
   * @generated
   * @ordered
   */
  protected String slotEnd = SLOT_END_EDEFAULT;

  /**
   * The default value of the '{@link #getBroadcastLimit() <em>Broadcast Limit</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBroadcastLimit()
   * @generated
   * @ordered
   */
  protected static final String BROADCAST_LIMIT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getBroadcastLimit() <em>Broadcast Limit</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBroadcastLimit()
   * @generated
   * @ordered
   */
  protected String broadcastLimit = BROADCAST_LIMIT_EDEFAULT;

  /**
   * The default value of the '{@link #getBroadcastFlags() <em>Broadcast Flags</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBroadcastFlags()
   * @generated
   * @ordered
   */
  protected static final String BROADCAST_FLAGS_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getBroadcastFlags() <em>Broadcast Flags</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBroadcastFlags()
   * @generated
   * @ordered
   */
  protected String broadcastFlags = BROADCAST_FLAGS_EDEFAULT;

  /**
   * The default value of the '{@link #getLicenceBroadcastLimit() <em>Licence Broadcast Limit</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLicenceBroadcastLimit()
   * @generated
   * @ordered
   */
  protected static final String LICENCE_BROADCAST_LIMIT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getLicenceBroadcastLimit() <em>Licence Broadcast Limit</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLicenceBroadcastLimit()
   * @generated
   * @ordered
   */
  protected String licenceBroadcastLimit = LICENCE_BROADCAST_LIMIT_EDEFAULT;

  /**
   * The default value of the '{@link #getLicenceBroadcastFlags() <em>Licence Broadcast Flags</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLicenceBroadcastFlags()
   * @generated
   * @ordered
   */
  protected static final String LICENCE_BROADCAST_FLAGS_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getLicenceBroadcastFlags() <em>Licence Broadcast Flags</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLicenceBroadcastFlags()
   * @generated
   * @ordered
   */
  protected String licenceBroadcastFlags = LICENCE_BROADCAST_FLAGS_EDEFAULT;

  /**
   * The default value of the '{@link #getAvailable() <em>Available</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAvailable()
   * @generated
   * @ordered
   */
  protected static final String AVAILABLE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getAvailable() <em>Available</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAvailable()
   * @generated
   * @ordered
   */
  protected String available = AVAILABLE_EDEFAULT;

  /**
   * The default value of the '{@link #getPriceMod() <em>Price Mod</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPriceMod()
   * @generated
   * @ordered
   */
  protected static final String PRICE_MOD_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getPriceMod() <em>Price Mod</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPriceMod()
   * @generated
   * @ordered
   */
  protected String priceMod = PRICE_MOD_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ProgrammeDataImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DatabasePackage.Literals.PROGRAMME_DATA;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getCountry()
  {
    return country;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCountry(String newCountry)
  {
    String oldCountry = country;
    country = newCountry;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DatabasePackage.PROGRAMME_DATA__COUNTRY, oldCountry, country));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getYear()
  {
    return year;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setYear(String newYear)
  {
    String oldYear = year;
    year = newYear;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DatabasePackage.PROGRAMME_DATA__YEAR, oldYear, year));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getPrice()
  {
    return price;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPrice(String newPrice)
  {
    String oldPrice = price;
    price = newPrice;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DatabasePackage.PROGRAMME_DATA__PRICE, oldPrice, price));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getDistribution()
  {
    return distribution;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDistribution(String newDistribution)
  {
    String oldDistribution = distribution;
    distribution = newDistribution;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DatabasePackage.PROGRAMME_DATA__DISTRIBUTION, oldDistribution, distribution));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getMaingenre()
  {
    return maingenre;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setMaingenre(String newMaingenre)
  {
    String oldMaingenre = maingenre;
    maingenre = newMaingenre;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DatabasePackage.PROGRAMME_DATA__MAINGENRE, oldMaingenre, maingenre));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getSubgenre()
  {
    return subgenre;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSubgenre(String newSubgenre)
  {
    String oldSubgenre = subgenre;
    subgenre = newSubgenre;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DatabasePackage.PROGRAMME_DATA__SUBGENRE, oldSubgenre, subgenre));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getFlags()
  {
    return flags;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFlags(String newFlags)
  {
    String oldFlags = flags;
    flags = newFlags;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DatabasePackage.PROGRAMME_DATA__FLAGS, oldFlags, flags));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getLicenceFlags()
  {
    return licenceFlags;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setLicenceFlags(String newLicenceFlags)
  {
    String oldLicenceFlags = licenceFlags;
    licenceFlags = newLicenceFlags;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DatabasePackage.PROGRAMME_DATA__LICENCE_FLAGS, oldLicenceFlags, licenceFlags));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getBlocks()
  {
    return blocks;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setBlocks(String newBlocks)
  {
    String oldBlocks = blocks;
    blocks = newBlocks;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DatabasePackage.PROGRAMME_DATA__BLOCKS, oldBlocks, blocks));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getSlotStart()
  {
    return slotStart;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSlotStart(String newSlotStart)
  {
    String oldSlotStart = slotStart;
    slotStart = newSlotStart;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DatabasePackage.PROGRAMME_DATA__SLOT_START, oldSlotStart, slotStart));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getSlotEnd()
  {
    return slotEnd;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSlotEnd(String newSlotEnd)
  {
    String oldSlotEnd = slotEnd;
    slotEnd = newSlotEnd;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DatabasePackage.PROGRAMME_DATA__SLOT_END, oldSlotEnd, slotEnd));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getBroadcastLimit()
  {
    return broadcastLimit;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setBroadcastLimit(String newBroadcastLimit)
  {
    String oldBroadcastLimit = broadcastLimit;
    broadcastLimit = newBroadcastLimit;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DatabasePackage.PROGRAMME_DATA__BROADCAST_LIMIT, oldBroadcastLimit, broadcastLimit));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getBroadcastFlags()
  {
    return broadcastFlags;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setBroadcastFlags(String newBroadcastFlags)
  {
    String oldBroadcastFlags = broadcastFlags;
    broadcastFlags = newBroadcastFlags;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DatabasePackage.PROGRAMME_DATA__BROADCAST_FLAGS, oldBroadcastFlags, broadcastFlags));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getLicenceBroadcastLimit()
  {
    return licenceBroadcastLimit;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setLicenceBroadcastLimit(String newLicenceBroadcastLimit)
  {
    String oldLicenceBroadcastLimit = licenceBroadcastLimit;
    licenceBroadcastLimit = newLicenceBroadcastLimit;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DatabasePackage.PROGRAMME_DATA__LICENCE_BROADCAST_LIMIT, oldLicenceBroadcastLimit, licenceBroadcastLimit));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getLicenceBroadcastFlags()
  {
    return licenceBroadcastFlags;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setLicenceBroadcastFlags(String newLicenceBroadcastFlags)
  {
    String oldLicenceBroadcastFlags = licenceBroadcastFlags;
    licenceBroadcastFlags = newLicenceBroadcastFlags;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DatabasePackage.PROGRAMME_DATA__LICENCE_BROADCAST_FLAGS, oldLicenceBroadcastFlags, licenceBroadcastFlags));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getAvailable()
  {
    return available;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAvailable(String newAvailable)
  {
    String oldAvailable = available;
    available = newAvailable;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DatabasePackage.PROGRAMME_DATA__AVAILABLE, oldAvailable, available));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getPriceMod()
  {
    return priceMod;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPriceMod(String newPriceMod)
  {
    String oldPriceMod = priceMod;
    priceMod = newPriceMod;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DatabasePackage.PROGRAMME_DATA__PRICE_MOD, oldPriceMod, priceMod));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DatabasePackage.PROGRAMME_DATA__COUNTRY:
        return getCountry();
      case DatabasePackage.PROGRAMME_DATA__YEAR:
        return getYear();
      case DatabasePackage.PROGRAMME_DATA__PRICE:
        return getPrice();
      case DatabasePackage.PROGRAMME_DATA__DISTRIBUTION:
        return getDistribution();
      case DatabasePackage.PROGRAMME_DATA__MAINGENRE:
        return getMaingenre();
      case DatabasePackage.PROGRAMME_DATA__SUBGENRE:
        return getSubgenre();
      case DatabasePackage.PROGRAMME_DATA__FLAGS:
        return getFlags();
      case DatabasePackage.PROGRAMME_DATA__LICENCE_FLAGS:
        return getLicenceFlags();
      case DatabasePackage.PROGRAMME_DATA__BLOCKS:
        return getBlocks();
      case DatabasePackage.PROGRAMME_DATA__SLOT_START:
        return getSlotStart();
      case DatabasePackage.PROGRAMME_DATA__SLOT_END:
        return getSlotEnd();
      case DatabasePackage.PROGRAMME_DATA__BROADCAST_LIMIT:
        return getBroadcastLimit();
      case DatabasePackage.PROGRAMME_DATA__BROADCAST_FLAGS:
        return getBroadcastFlags();
      case DatabasePackage.PROGRAMME_DATA__LICENCE_BROADCAST_LIMIT:
        return getLicenceBroadcastLimit();
      case DatabasePackage.PROGRAMME_DATA__LICENCE_BROADCAST_FLAGS:
        return getLicenceBroadcastFlags();
      case DatabasePackage.PROGRAMME_DATA__AVAILABLE:
        return getAvailable();
      case DatabasePackage.PROGRAMME_DATA__PRICE_MOD:
        return getPriceMod();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DatabasePackage.PROGRAMME_DATA__COUNTRY:
        setCountry((String)newValue);
        return;
      case DatabasePackage.PROGRAMME_DATA__YEAR:
        setYear((String)newValue);
        return;
      case DatabasePackage.PROGRAMME_DATA__PRICE:
        setPrice((String)newValue);
        return;
      case DatabasePackage.PROGRAMME_DATA__DISTRIBUTION:
        setDistribution((String)newValue);
        return;
      case DatabasePackage.PROGRAMME_DATA__MAINGENRE:
        setMaingenre((String)newValue);
        return;
      case DatabasePackage.PROGRAMME_DATA__SUBGENRE:
        setSubgenre((String)newValue);
        return;
      case DatabasePackage.PROGRAMME_DATA__FLAGS:
        setFlags((String)newValue);
        return;
      case DatabasePackage.PROGRAMME_DATA__LICENCE_FLAGS:
        setLicenceFlags((String)newValue);
        return;
      case DatabasePackage.PROGRAMME_DATA__BLOCKS:
        setBlocks((String)newValue);
        return;
      case DatabasePackage.PROGRAMME_DATA__SLOT_START:
        setSlotStart((String)newValue);
        return;
      case DatabasePackage.PROGRAMME_DATA__SLOT_END:
        setSlotEnd((String)newValue);
        return;
      case DatabasePackage.PROGRAMME_DATA__BROADCAST_LIMIT:
        setBroadcastLimit((String)newValue);
        return;
      case DatabasePackage.PROGRAMME_DATA__BROADCAST_FLAGS:
        setBroadcastFlags((String)newValue);
        return;
      case DatabasePackage.PROGRAMME_DATA__LICENCE_BROADCAST_LIMIT:
        setLicenceBroadcastLimit((String)newValue);
        return;
      case DatabasePackage.PROGRAMME_DATA__LICENCE_BROADCAST_FLAGS:
        setLicenceBroadcastFlags((String)newValue);
        return;
      case DatabasePackage.PROGRAMME_DATA__AVAILABLE:
        setAvailable((String)newValue);
        return;
      case DatabasePackage.PROGRAMME_DATA__PRICE_MOD:
        setPriceMod((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DatabasePackage.PROGRAMME_DATA__COUNTRY:
        setCountry(COUNTRY_EDEFAULT);
        return;
      case DatabasePackage.PROGRAMME_DATA__YEAR:
        setYear(YEAR_EDEFAULT);
        return;
      case DatabasePackage.PROGRAMME_DATA__PRICE:
        setPrice(PRICE_EDEFAULT);
        return;
      case DatabasePackage.PROGRAMME_DATA__DISTRIBUTION:
        setDistribution(DISTRIBUTION_EDEFAULT);
        return;
      case DatabasePackage.PROGRAMME_DATA__MAINGENRE:
        setMaingenre(MAINGENRE_EDEFAULT);
        return;
      case DatabasePackage.PROGRAMME_DATA__SUBGENRE:
        setSubgenre(SUBGENRE_EDEFAULT);
        return;
      case DatabasePackage.PROGRAMME_DATA__FLAGS:
        setFlags(FLAGS_EDEFAULT);
        return;
      case DatabasePackage.PROGRAMME_DATA__LICENCE_FLAGS:
        setLicenceFlags(LICENCE_FLAGS_EDEFAULT);
        return;
      case DatabasePackage.PROGRAMME_DATA__BLOCKS:
        setBlocks(BLOCKS_EDEFAULT);
        return;
      case DatabasePackage.PROGRAMME_DATA__SLOT_START:
        setSlotStart(SLOT_START_EDEFAULT);
        return;
      case DatabasePackage.PROGRAMME_DATA__SLOT_END:
        setSlotEnd(SLOT_END_EDEFAULT);
        return;
      case DatabasePackage.PROGRAMME_DATA__BROADCAST_LIMIT:
        setBroadcastLimit(BROADCAST_LIMIT_EDEFAULT);
        return;
      case DatabasePackage.PROGRAMME_DATA__BROADCAST_FLAGS:
        setBroadcastFlags(BROADCAST_FLAGS_EDEFAULT);
        return;
      case DatabasePackage.PROGRAMME_DATA__LICENCE_BROADCAST_LIMIT:
        setLicenceBroadcastLimit(LICENCE_BROADCAST_LIMIT_EDEFAULT);
        return;
      case DatabasePackage.PROGRAMME_DATA__LICENCE_BROADCAST_FLAGS:
        setLicenceBroadcastFlags(LICENCE_BROADCAST_FLAGS_EDEFAULT);
        return;
      case DatabasePackage.PROGRAMME_DATA__AVAILABLE:
        setAvailable(AVAILABLE_EDEFAULT);
        return;
      case DatabasePackage.PROGRAMME_DATA__PRICE_MOD:
        setPriceMod(PRICE_MOD_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DatabasePackage.PROGRAMME_DATA__COUNTRY:
        return COUNTRY_EDEFAULT == null ? country != null : !COUNTRY_EDEFAULT.equals(country);
      case DatabasePackage.PROGRAMME_DATA__YEAR:
        return YEAR_EDEFAULT == null ? year != null : !YEAR_EDEFAULT.equals(year);
      case DatabasePackage.PROGRAMME_DATA__PRICE:
        return PRICE_EDEFAULT == null ? price != null : !PRICE_EDEFAULT.equals(price);
      case DatabasePackage.PROGRAMME_DATA__DISTRIBUTION:
        return DISTRIBUTION_EDEFAULT == null ? distribution != null : !DISTRIBUTION_EDEFAULT.equals(distribution);
      case DatabasePackage.PROGRAMME_DATA__MAINGENRE:
        return MAINGENRE_EDEFAULT == null ? maingenre != null : !MAINGENRE_EDEFAULT.equals(maingenre);
      case DatabasePackage.PROGRAMME_DATA__SUBGENRE:
        return SUBGENRE_EDEFAULT == null ? subgenre != null : !SUBGENRE_EDEFAULT.equals(subgenre);
      case DatabasePackage.PROGRAMME_DATA__FLAGS:
        return FLAGS_EDEFAULT == null ? flags != null : !FLAGS_EDEFAULT.equals(flags);
      case DatabasePackage.PROGRAMME_DATA__LICENCE_FLAGS:
        return LICENCE_FLAGS_EDEFAULT == null ? licenceFlags != null : !LICENCE_FLAGS_EDEFAULT.equals(licenceFlags);
      case DatabasePackage.PROGRAMME_DATA__BLOCKS:
        return BLOCKS_EDEFAULT == null ? blocks != null : !BLOCKS_EDEFAULT.equals(blocks);
      case DatabasePackage.PROGRAMME_DATA__SLOT_START:
        return SLOT_START_EDEFAULT == null ? slotStart != null : !SLOT_START_EDEFAULT.equals(slotStart);
      case DatabasePackage.PROGRAMME_DATA__SLOT_END:
        return SLOT_END_EDEFAULT == null ? slotEnd != null : !SLOT_END_EDEFAULT.equals(slotEnd);
      case DatabasePackage.PROGRAMME_DATA__BROADCAST_LIMIT:
        return BROADCAST_LIMIT_EDEFAULT == null ? broadcastLimit != null : !BROADCAST_LIMIT_EDEFAULT.equals(broadcastLimit);
      case DatabasePackage.PROGRAMME_DATA__BROADCAST_FLAGS:
        return BROADCAST_FLAGS_EDEFAULT == null ? broadcastFlags != null : !BROADCAST_FLAGS_EDEFAULT.equals(broadcastFlags);
      case DatabasePackage.PROGRAMME_DATA__LICENCE_BROADCAST_LIMIT:
        return LICENCE_BROADCAST_LIMIT_EDEFAULT == null ? licenceBroadcastLimit != null : !LICENCE_BROADCAST_LIMIT_EDEFAULT.equals(licenceBroadcastLimit);
      case DatabasePackage.PROGRAMME_DATA__LICENCE_BROADCAST_FLAGS:
        return LICENCE_BROADCAST_FLAGS_EDEFAULT == null ? licenceBroadcastFlags != null : !LICENCE_BROADCAST_FLAGS_EDEFAULT.equals(licenceBroadcastFlags);
      case DatabasePackage.PROGRAMME_DATA__AVAILABLE:
        return AVAILABLE_EDEFAULT == null ? available != null : !AVAILABLE_EDEFAULT.equals(available);
      case DatabasePackage.PROGRAMME_DATA__PRICE_MOD:
        return PRICE_MOD_EDEFAULT == null ? priceMod != null : !PRICE_MOD_EDEFAULT.equals(priceMod);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (country: ");
    result.append(country);
    result.append(", year: ");
    result.append(year);
    result.append(", price: ");
    result.append(price);
    result.append(", distribution: ");
    result.append(distribution);
    result.append(", maingenre: ");
    result.append(maingenre);
    result.append(", subgenre: ");
    result.append(subgenre);
    result.append(", flags: ");
    result.append(flags);
    result.append(", licenceFlags: ");
    result.append(licenceFlags);
    result.append(", blocks: ");
    result.append(blocks);
    result.append(", slotStart: ");
    result.append(slotStart);
    result.append(", slotEnd: ");
    result.append(slotEnd);
    result.append(", broadcastLimit: ");
    result.append(broadcastLimit);
    result.append(", broadcastFlags: ");
    result.append(broadcastFlags);
    result.append(", licenceBroadcastLimit: ");
    result.append(licenceBroadcastLimit);
    result.append(", licenceBroadcastFlags: ");
    result.append(licenceBroadcastFlags);
    result.append(", available: ");
    result.append(available);
    result.append(", priceMod: ");
    result.append(priceMod);
    result.append(')');
    return result.toString();
  }

} //ProgrammeDataImpl
