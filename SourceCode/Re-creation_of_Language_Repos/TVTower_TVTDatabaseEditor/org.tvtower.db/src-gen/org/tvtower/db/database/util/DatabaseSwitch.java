/**
 * generated by Xtext 2.35.0
 */
package org.tvtower.db.database.util;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

import org.tvtower.db.database.*;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see org.tvtower.db.database.DatabasePackage
 * @generated
 */
public class DatabaseSwitch<T> extends Switch<T>
{
  /**
   * The cached model package
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static DatabasePackage modelPackage;

  /**
   * Creates an instance of the switch.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DatabaseSwitch()
  {
    if (modelPackage == null)
    {
      modelPackage = DatabasePackage.eINSTANCE;
    }
  }

  /**
   * Checks whether this is a switch for the given package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param ePackage the package in question.
   * @return whether this is a switch for the given package.
   * @generated
   */
  @Override
  protected boolean isSwitchFor(EPackage ePackage)
  {
    return ePackage == modelPackage;
  }

  /**
   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the first non-null result returned by a <code>caseXXX</code> call.
   * @generated
   */
  @Override
  protected T doSwitch(int classifierID, EObject theEObject)
  {
    switch (classifierID)
    {
      case DatabasePackage.DATABASE:
      {
        Database database = (Database)theEObject;
        T result = caseDatabase(database);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DatabasePackage.EXPORT_OPTIONS:
      {
        ExportOptions exportOptions = (ExportOptions)theEObject;
        T result = caseExportOptions(exportOptions);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DatabasePackage.DEFINITION:
      {
        Definition definition = (Definition)theEObject;
        T result = caseDefinition(definition);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DatabasePackage.PERSON_LOCALIZATION:
      {
        PersonLocalization personLocalization = (PersonLocalization)theEObject;
        T result = casePersonLocalization(personLocalization);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DatabasePackage.MAY_CONTAIN_VARIABLES:
      {
        MayContainVariables mayContainVariables = (MayContainVariables)theEObject;
        T result = caseMayContainVariables(mayContainVariables);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DatabasePackage.SCRIPT_TEMPLATES:
      {
        ScriptTemplates scriptTemplates = (ScriptTemplates)theEObject;
        T result = caseScriptTemplates(scriptTemplates);
        if (result == null) result = caseDefinition(scriptTemplates);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DatabasePackage.SCRIPT_TEMPLATE:
      {
        ScriptTemplate scriptTemplate = (ScriptTemplate)theEObject;
        T result = caseScriptTemplate(scriptTemplate);
        if (result == null) result = caseMayContainVariables(scriptTemplate);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DatabasePackage.CONTAINS_LANGUAGE_STRINGS:
      {
        ContainsLanguageStrings containsLanguageStrings = (ContainsLanguageStrings)theEObject;
        T result = caseContainsLanguageStrings(containsLanguageStrings);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DatabasePackage.TITLE:
      {
        Title title = (Title)theEObject;
        T result = caseTitle(title);
        if (result == null) result = caseContainsLanguageStrings(title);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DatabasePackage.DESCRIPTION:
      {
        Description description = (Description)theEObject;
        T result = caseDescription(description);
        if (result == null) result = caseContainsLanguageStrings(description);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DatabasePackage.SCRIPT_CHILDREN:
      {
        ScriptChildren scriptChildren = (ScriptChildren)theEObject;
        T result = caseScriptChildren(scriptChildren);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DatabasePackage.VARIABLES:
      {
        Variables variables = (Variables)theEObject;
        T result = caseVariables(variables);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DatabasePackage.VARIABLE_DEF:
      {
        VariableDef variableDef = (VariableDef)theEObject;
        T result = caseVariableDef(variableDef);
        if (result == null) result = caseContainsLanguageStrings(variableDef);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DatabasePackage.JOBS:
      {
        Jobs jobs = (Jobs)theEObject;
        T result = caseJobs(jobs);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DatabasePackage.JOB:
      {
        Job job = (Job)theEObject;
        T result = caseJob(job);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DatabasePackage.SCRIPT_DATA:
      {
        ScriptData scriptData = (ScriptData)theEObject;
        T result = caseScriptData(scriptData);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DatabasePackage.SCRIPT_GENRES:
      {
        ScriptGenres scriptGenres = (ScriptGenres)theEObject;
        T result = caseScriptGenres(scriptGenres);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DatabasePackage.CONTAINS_MIN_MAX_SLOPE:
      {
        ContainsMinMaxSlope containsMinMaxSlope = (ContainsMinMaxSlope)theEObject;
        T result = caseContainsMinMaxSlope(containsMinMaxSlope);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DatabasePackage.BLOCKS:
      {
        Blocks blocks = (Blocks)theEObject;
        T result = caseBlocks(blocks);
        if (result == null) result = caseContainsMinMaxSlope(blocks);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DatabasePackage.EPISODES:
      {
        Episodes episodes = (Episodes)theEObject;
        T result = caseEpisodes(episodes);
        if (result == null) result = caseContainsMinMaxSlope(episodes);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DatabasePackage.STUDIO_SIZE:
      {
        StudioSize studioSize = (StudioSize)theEObject;
        T result = caseStudioSize(studioSize);
        if (result == null) result = caseContainsMinMaxSlope(studioSize);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DatabasePackage.PRICE:
      {
        Price price = (Price)theEObject;
        T result = casePrice(price);
        if (result == null) result = caseContainsMinMaxSlope(price);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DatabasePackage.POTENTIAL:
      {
        Potential potential = (Potential)theEObject;
        T result = casePotential(potential);
        if (result == null) result = caseContainsMinMaxSlope(potential);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DatabasePackage.OUTCOME:
      {
        Outcome outcome = (Outcome)theEObject;
        T result = caseOutcome(outcome);
        if (result == null) result = caseContainsMinMaxSlope(outcome);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DatabasePackage.REVIEW:
      {
        Review review = (Review)theEObject;
        T result = caseReview(review);
        if (result == null) result = caseContainsMinMaxSlope(review);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DatabasePackage.SPEED:
      {
        Speed speed = (Speed)theEObject;
        T result = caseSpeed(speed);
        if (result == null) result = caseContainsMinMaxSlope(speed);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DatabasePackage.PRODUCTION_TIME:
      {
        ProductionTime productionTime = (ProductionTime)theEObject;
        T result = caseProductionTime(productionTime);
        if (result == null) result = caseContainsMinMaxSlope(productionTime);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DatabasePackage.MIN_MAX_SLOPE:
      {
        MinMaxSlope minMaxSlope = (MinMaxSlope)theEObject;
        T result = caseMinMaxSlope(minMaxSlope);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DatabasePackage.LANGUAGE_STRING:
      {
        LanguageString languageString = (LanguageString)theEObject;
        T result = caseLanguageString(languageString);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DatabasePackage.PROGRAMME_ROLES:
      {
        ProgrammeRoles programmeRoles = (ProgrammeRoles)theEObject;
        T result = caseProgrammeRoles(programmeRoles);
        if (result == null) result = caseDefinition(programmeRoles);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DatabasePackage.PROGRAMME_ROLE:
      {
        ProgrammeRole programmeRole = (ProgrammeRole)theEObject;
        T result = caseProgrammeRole(programmeRole);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DatabasePackage.ROLE_LOCALE:
      {
        RoleLocale roleLocale = (RoleLocale)theEObject;
        T result = caseRoleLocale(roleLocale);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DatabasePackage.ACHIEVEMENTS:
      {
        Achievements achievements = (Achievements)theEObject;
        T result = caseAchievements(achievements);
        if (result == null) result = caseDefinition(achievements);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DatabasePackage.ACHIEVEMENT:
      {
        Achievement achievement = (Achievement)theEObject;
        T result = caseAchievement(achievement);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DatabasePackage.TEXT:
      {
        Text text = (Text)theEObject;
        T result = caseText(text);
        if (result == null) result = caseContainsLanguageStrings(text);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DatabasePackage.TASKS:
      {
        Tasks tasks = (Tasks)theEObject;
        T result = caseTasks(tasks);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DatabasePackage.TASK:
      {
        Task task = (Task)theEObject;
        T result = caseTask(task);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DatabasePackage.TASK_DATA:
      {
        TaskData taskData = (TaskData)theEObject;
        T result = caseTaskData(taskData);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DatabasePackage.REWARDS:
      {
        Rewards rewards = (Rewards)theEObject;
        T result = caseRewards(rewards);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DatabasePackage.REWARD:
      {
        Reward reward = (Reward)theEObject;
        T result = caseReward(reward);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DatabasePackage.REWARD_DATA:
      {
        RewardData rewardData = (RewardData)theEObject;
        T result = caseRewardData(rewardData);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DatabasePackage.ACHIEVEMENT_DATA:
      {
        AchievementData achievementData = (AchievementData)theEObject;
        T result = caseAchievementData(achievementData);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DatabasePackage.ADVERTISEMENTS:
      {
        Advertisements advertisements = (Advertisements)theEObject;
        T result = caseAdvertisements(advertisements);
        if (result == null) result = caseDefinition(advertisements);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DatabasePackage.ADVERTISEMENT:
      {
        Advertisement advertisement = (Advertisement)theEObject;
        T result = caseAdvertisement(advertisement);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DatabasePackage.AD_CONDITIONS:
      {
        AdConditions adConditions = (AdConditions)theEObject;
        T result = caseAdConditions(adConditions);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DatabasePackage.ADVERTISEMENT_DATA:
      {
        AdvertisementData advertisementData = (AdvertisementData)theEObject;
        T result = caseAdvertisementData(advertisementData);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DatabasePackage.NEWS:
      {
        News news = (News)theEObject;
        T result = caseNews(news);
        if (result == null) result = caseDefinition(news);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DatabasePackage.NEWS_ITEM:
      {
        NewsItem newsItem = (NewsItem)theEObject;
        T result = caseNewsItem(newsItem);
        if (result == null) result = caseMayContainVariables(newsItem);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DatabasePackage.EFFECTS:
      {
        Effects effects = (Effects)theEObject;
        T result = caseEffects(effects);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DatabasePackage.EFFECT:
      {
        Effect effect = (Effect)theEObject;
        T result = caseEffect(effect);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DatabasePackage.AVAILABILITY:
      {
        Availability availability = (Availability)theEObject;
        T result = caseAvailability(availability);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DatabasePackage.NEWS_DATA:
      {
        NewsData newsData = (NewsData)theEObject;
        T result = caseNewsData(newsData);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DatabasePackage.CELEBRITY_PEOPLE:
      {
        CelebrityPeople celebrityPeople = (CelebrityPeople)theEObject;
        T result = caseCelebrityPeople(celebrityPeople);
        if (result == null) result = caseDefinition(celebrityPeople);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DatabasePackage.INSIGNIFICANT_PEOPLE:
      {
        InsignificantPeople insignificantPeople = (InsignificantPeople)theEObject;
        T result = caseInsignificantPeople(insignificantPeople);
        if (result == null) result = caseDefinition(insignificantPeople);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DatabasePackage.PERSON:
      {
        Person person = (Person)theEObject;
        T result = casePerson(person);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DatabasePackage.PERSON_LOCALE:
      {
        PersonLocale personLocale = (PersonLocale)theEObject;
        T result = casePersonLocale(personLocale);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DatabasePackage.PERSON_DETAILS:
      {
        PersonDetails personDetails = (PersonDetails)theEObject;
        T result = casePersonDetails(personDetails);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DatabasePackage.PERSON_DATA:
      {
        PersonData personData = (PersonData)theEObject;
        T result = casePersonData(personData);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DatabasePackage.PROGRAMMES:
      {
        Programmes programmes = (Programmes)theEObject;
        T result = caseProgrammes(programmes);
        if (result == null) result = caseDefinition(programmes);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DatabasePackage.PROGRAMME:
      {
        Programme programme = (Programme)theEObject;
        T result = caseProgramme(programme);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DatabasePackage.PROGRAMME_CHILDREN:
      {
        ProgrammeChildren programmeChildren = (ProgrammeChildren)theEObject;
        T result = caseProgrammeChildren(programmeChildren);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DatabasePackage.STAFF:
      {
        Staff staff = (Staff)theEObject;
        T result = caseStaff(staff);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DatabasePackage.PROGRAMME_GROUPS:
      {
        ProgrammeGroups programmeGroups = (ProgrammeGroups)theEObject;
        T result = caseProgrammeGroups(programmeGroups);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DatabasePackage.GROUP_ATTRACTIVITY:
      {
        GroupAttractivity groupAttractivity = (GroupAttractivity)theEObject;
        T result = caseGroupAttractivity(groupAttractivity);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DatabasePackage.PROGRAMME_RELEASE_TIME:
      {
        ProgrammeReleaseTime programmeReleaseTime = (ProgrammeReleaseTime)theEObject;
        T result = caseProgrammeReleaseTime(programmeReleaseTime);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DatabasePackage.STAFF_MEMBER:
      {
        StaffMember staffMember = (StaffMember)theEObject;
        T result = caseStaffMember(staffMember);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DatabasePackage.MODIFIERS:
      {
        Modifiers modifiers = (Modifiers)theEObject;
        T result = caseModifiers(modifiers);
        if (result == null) result = caseTemplateProgrammeModifiers(modifiers);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DatabasePackage.TEMPLATE_PROGRAMME_MODIFIERS:
      {
        TemplateProgrammeModifiers templateProgrammeModifiers = (TemplateProgrammeModifiers)theEObject;
        T result = caseTemplateProgrammeModifiers(templateProgrammeModifiers);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DatabasePackage.MODIFIER:
      {
        Modifier modifier = (Modifier)theEObject;
        T result = caseModifier(modifier);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DatabasePackage.PROGRAMME_RATINGS:
      {
        ProgrammeRatings programmeRatings = (ProgrammeRatings)theEObject;
        T result = caseProgrammeRatings(programmeRatings);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DatabasePackage.PROGRAMME_DATA:
      {
        ProgrammeData programmeData = (ProgrammeData)theEObject;
        T result = caseProgrammeData(programmeData);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DatabasePackage.TITLE_ORIGINAL:
      {
        TitleOriginal titleOriginal = (TitleOriginal)theEObject;
        T result = caseTitleOriginal(titleOriginal);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DatabasePackage.VERSION:
      {
        Version version = (Version)theEObject;
        T result = caseVersion(version);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DatabasePackage.UNNAMED_PROPERTY:
      {
        UnnamedProperty unnamedProperty = (UnnamedProperty)theEObject;
        T result = caseUnnamedProperty(unnamedProperty);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      default: return defaultCase(theEObject);
    }
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Database</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Database</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDatabase(Database object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Export Options</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Export Options</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseExportOptions(ExportOptions object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Definition</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Definition</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDefinition(Definition object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Person Localization</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Person Localization</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePersonLocalization(PersonLocalization object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>May Contain Variables</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>May Contain Variables</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMayContainVariables(MayContainVariables object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Script Templates</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Script Templates</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseScriptTemplates(ScriptTemplates object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Script Template</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Script Template</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseScriptTemplate(ScriptTemplate object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Contains Language Strings</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Contains Language Strings</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseContainsLanguageStrings(ContainsLanguageStrings object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Title</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Title</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseTitle(Title object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Description</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Description</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDescription(Description object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Script Children</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Script Children</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseScriptChildren(ScriptChildren object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Variables</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Variables</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseVariables(Variables object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Variable Def</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Variable Def</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseVariableDef(VariableDef object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Jobs</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Jobs</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseJobs(Jobs object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Job</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Job</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseJob(Job object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Script Data</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Script Data</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseScriptData(ScriptData object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Script Genres</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Script Genres</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseScriptGenres(ScriptGenres object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Contains Min Max Slope</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Contains Min Max Slope</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseContainsMinMaxSlope(ContainsMinMaxSlope object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Blocks</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Blocks</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBlocks(Blocks object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Episodes</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Episodes</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEpisodes(Episodes object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Studio Size</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Studio Size</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseStudioSize(StudioSize object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Price</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Price</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePrice(Price object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Potential</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Potential</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePotential(Potential object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Outcome</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Outcome</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseOutcome(Outcome object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Review</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Review</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseReview(Review object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Speed</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Speed</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSpeed(Speed object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Production Time</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Production Time</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseProductionTime(ProductionTime object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Min Max Slope</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Min Max Slope</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMinMaxSlope(MinMaxSlope object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Language String</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Language String</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseLanguageString(LanguageString object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Programme Roles</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Programme Roles</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseProgrammeRoles(ProgrammeRoles object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Programme Role</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Programme Role</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseProgrammeRole(ProgrammeRole object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Role Locale</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Role Locale</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseRoleLocale(RoleLocale object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Achievements</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Achievements</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAchievements(Achievements object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Achievement</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Achievement</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAchievement(Achievement object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Text</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Text</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseText(Text object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Tasks</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Tasks</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseTasks(Tasks object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Task</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Task</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseTask(Task object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Task Data</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Task Data</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseTaskData(TaskData object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Rewards</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Rewards</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseRewards(Rewards object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Reward</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Reward</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseReward(Reward object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Reward Data</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Reward Data</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseRewardData(RewardData object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Achievement Data</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Achievement Data</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAchievementData(AchievementData object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Advertisements</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Advertisements</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAdvertisements(Advertisements object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Advertisement</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Advertisement</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAdvertisement(Advertisement object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Ad Conditions</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Ad Conditions</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAdConditions(AdConditions object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Advertisement Data</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Advertisement Data</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAdvertisementData(AdvertisementData object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>News</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>News</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseNews(News object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>News Item</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>News Item</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseNewsItem(NewsItem object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Effects</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Effects</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEffects(Effects object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Effect</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Effect</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEffect(Effect object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Availability</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Availability</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAvailability(Availability object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>News Data</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>News Data</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseNewsData(NewsData object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Celebrity People</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Celebrity People</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCelebrityPeople(CelebrityPeople object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Insignificant People</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Insignificant People</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseInsignificantPeople(InsignificantPeople object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Person</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Person</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePerson(Person object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Person Locale</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Person Locale</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePersonLocale(PersonLocale object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Person Details</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Person Details</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePersonDetails(PersonDetails object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Person Data</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Person Data</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePersonData(PersonData object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Programmes</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Programmes</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseProgrammes(Programmes object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Programme</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Programme</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseProgramme(Programme object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Programme Children</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Programme Children</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseProgrammeChildren(ProgrammeChildren object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Staff</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Staff</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseStaff(Staff object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Programme Groups</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Programme Groups</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseProgrammeGroups(ProgrammeGroups object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Group Attractivity</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Group Attractivity</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGroupAttractivity(GroupAttractivity object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Programme Release Time</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Programme Release Time</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseProgrammeReleaseTime(ProgrammeReleaseTime object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Staff Member</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Staff Member</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseStaffMember(StaffMember object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Modifiers</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Modifiers</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseModifiers(Modifiers object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Template Programme Modifiers</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Template Programme Modifiers</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseTemplateProgrammeModifiers(TemplateProgrammeModifiers object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Modifier</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Modifier</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseModifier(Modifier object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Programme Ratings</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Programme Ratings</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseProgrammeRatings(ProgrammeRatings object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Programme Data</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Programme Data</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseProgrammeData(ProgrammeData object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Title Original</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Title Original</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseTitleOriginal(TitleOriginal object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Version</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Version</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseVersion(Version object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Unnamed Property</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Unnamed Property</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseUnnamedProperty(UnnamedProperty object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch, but this is the last case anyway.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject)
   * @generated
   */
  @Override
  public T defaultCase(EObject object)
  {
    return null;
  }

} //DatabaseSwitch
