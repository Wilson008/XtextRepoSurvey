/**
 * generated by Xtext 2.35.0
 */
package org.tvtower.db.database.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.tvtower.db.database.DatabasePackage;
import org.tvtower.db.database.ProgrammeReleaseTime;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Programme Release Time</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.tvtower.db.database.impl.ProgrammeReleaseTimeImpl#getYear <em>Year</em>}</li>
 *   <li>{@link org.tvtower.db.database.impl.ProgrammeReleaseTimeImpl#getDay <em>Day</em>}</li>
 *   <li>{@link org.tvtower.db.database.impl.ProgrammeReleaseTimeImpl#getHour <em>Hour</em>}</li>
 *   <li>{@link org.tvtower.db.database.impl.ProgrammeReleaseTimeImpl#getYearRelative <em>Year Relative</em>}</li>
 *   <li>{@link org.tvtower.db.database.impl.ProgrammeReleaseTimeImpl#getYearRelativeMin <em>Year Relative Min</em>}</li>
 *   <li>{@link org.tvtower.db.database.impl.ProgrammeReleaseTimeImpl#getYearRelativeMax <em>Year Relative Max</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ProgrammeReleaseTimeImpl extends MinimalEObjectImpl.Container implements ProgrammeReleaseTime
{
  /**
   * The default value of the '{@link #getYear() <em>Year</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getYear()
   * @generated
   * @ordered
   */
  protected static final String YEAR_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getYear() <em>Year</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getYear()
   * @generated
   * @ordered
   */
  protected String year = YEAR_EDEFAULT;

  /**
   * The default value of the '{@link #getDay() <em>Day</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDay()
   * @generated
   * @ordered
   */
  protected static final String DAY_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDay() <em>Day</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDay()
   * @generated
   * @ordered
   */
  protected String day = DAY_EDEFAULT;

  /**
   * The default value of the '{@link #getHour() <em>Hour</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getHour()
   * @generated
   * @ordered
   */
  protected static final String HOUR_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getHour() <em>Hour</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getHour()
   * @generated
   * @ordered
   */
  protected String hour = HOUR_EDEFAULT;

  /**
   * The default value of the '{@link #getYearRelative() <em>Year Relative</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getYearRelative()
   * @generated
   * @ordered
   */
  protected static final String YEAR_RELATIVE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getYearRelative() <em>Year Relative</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getYearRelative()
   * @generated
   * @ordered
   */
  protected String yearRelative = YEAR_RELATIVE_EDEFAULT;

  /**
   * The default value of the '{@link #getYearRelativeMin() <em>Year Relative Min</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getYearRelativeMin()
   * @generated
   * @ordered
   */
  protected static final String YEAR_RELATIVE_MIN_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getYearRelativeMin() <em>Year Relative Min</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getYearRelativeMin()
   * @generated
   * @ordered
   */
  protected String yearRelativeMin = YEAR_RELATIVE_MIN_EDEFAULT;

  /**
   * The default value of the '{@link #getYearRelativeMax() <em>Year Relative Max</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getYearRelativeMax()
   * @generated
   * @ordered
   */
  protected static final String YEAR_RELATIVE_MAX_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getYearRelativeMax() <em>Year Relative Max</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getYearRelativeMax()
   * @generated
   * @ordered
   */
  protected String yearRelativeMax = YEAR_RELATIVE_MAX_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ProgrammeReleaseTimeImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DatabasePackage.Literals.PROGRAMME_RELEASE_TIME;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getYear()
  {
    return year;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setYear(String newYear)
  {
    String oldYear = year;
    year = newYear;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DatabasePackage.PROGRAMME_RELEASE_TIME__YEAR, oldYear, year));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getDay()
  {
    return day;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDay(String newDay)
  {
    String oldDay = day;
    day = newDay;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DatabasePackage.PROGRAMME_RELEASE_TIME__DAY, oldDay, day));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getHour()
  {
    return hour;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setHour(String newHour)
  {
    String oldHour = hour;
    hour = newHour;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DatabasePackage.PROGRAMME_RELEASE_TIME__HOUR, oldHour, hour));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getYearRelative()
  {
    return yearRelative;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setYearRelative(String newYearRelative)
  {
    String oldYearRelative = yearRelative;
    yearRelative = newYearRelative;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DatabasePackage.PROGRAMME_RELEASE_TIME__YEAR_RELATIVE, oldYearRelative, yearRelative));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getYearRelativeMin()
  {
    return yearRelativeMin;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setYearRelativeMin(String newYearRelativeMin)
  {
    String oldYearRelativeMin = yearRelativeMin;
    yearRelativeMin = newYearRelativeMin;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DatabasePackage.PROGRAMME_RELEASE_TIME__YEAR_RELATIVE_MIN, oldYearRelativeMin, yearRelativeMin));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getYearRelativeMax()
  {
    return yearRelativeMax;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setYearRelativeMax(String newYearRelativeMax)
  {
    String oldYearRelativeMax = yearRelativeMax;
    yearRelativeMax = newYearRelativeMax;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DatabasePackage.PROGRAMME_RELEASE_TIME__YEAR_RELATIVE_MAX, oldYearRelativeMax, yearRelativeMax));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DatabasePackage.PROGRAMME_RELEASE_TIME__YEAR:
        return getYear();
      case DatabasePackage.PROGRAMME_RELEASE_TIME__DAY:
        return getDay();
      case DatabasePackage.PROGRAMME_RELEASE_TIME__HOUR:
        return getHour();
      case DatabasePackage.PROGRAMME_RELEASE_TIME__YEAR_RELATIVE:
        return getYearRelative();
      case DatabasePackage.PROGRAMME_RELEASE_TIME__YEAR_RELATIVE_MIN:
        return getYearRelativeMin();
      case DatabasePackage.PROGRAMME_RELEASE_TIME__YEAR_RELATIVE_MAX:
        return getYearRelativeMax();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DatabasePackage.PROGRAMME_RELEASE_TIME__YEAR:
        setYear((String)newValue);
        return;
      case DatabasePackage.PROGRAMME_RELEASE_TIME__DAY:
        setDay((String)newValue);
        return;
      case DatabasePackage.PROGRAMME_RELEASE_TIME__HOUR:
        setHour((String)newValue);
        return;
      case DatabasePackage.PROGRAMME_RELEASE_TIME__YEAR_RELATIVE:
        setYearRelative((String)newValue);
        return;
      case DatabasePackage.PROGRAMME_RELEASE_TIME__YEAR_RELATIVE_MIN:
        setYearRelativeMin((String)newValue);
        return;
      case DatabasePackage.PROGRAMME_RELEASE_TIME__YEAR_RELATIVE_MAX:
        setYearRelativeMax((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DatabasePackage.PROGRAMME_RELEASE_TIME__YEAR:
        setYear(YEAR_EDEFAULT);
        return;
      case DatabasePackage.PROGRAMME_RELEASE_TIME__DAY:
        setDay(DAY_EDEFAULT);
        return;
      case DatabasePackage.PROGRAMME_RELEASE_TIME__HOUR:
        setHour(HOUR_EDEFAULT);
        return;
      case DatabasePackage.PROGRAMME_RELEASE_TIME__YEAR_RELATIVE:
        setYearRelative(YEAR_RELATIVE_EDEFAULT);
        return;
      case DatabasePackage.PROGRAMME_RELEASE_TIME__YEAR_RELATIVE_MIN:
        setYearRelativeMin(YEAR_RELATIVE_MIN_EDEFAULT);
        return;
      case DatabasePackage.PROGRAMME_RELEASE_TIME__YEAR_RELATIVE_MAX:
        setYearRelativeMax(YEAR_RELATIVE_MAX_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DatabasePackage.PROGRAMME_RELEASE_TIME__YEAR:
        return YEAR_EDEFAULT == null ? year != null : !YEAR_EDEFAULT.equals(year);
      case DatabasePackage.PROGRAMME_RELEASE_TIME__DAY:
        return DAY_EDEFAULT == null ? day != null : !DAY_EDEFAULT.equals(day);
      case DatabasePackage.PROGRAMME_RELEASE_TIME__HOUR:
        return HOUR_EDEFAULT == null ? hour != null : !HOUR_EDEFAULT.equals(hour);
      case DatabasePackage.PROGRAMME_RELEASE_TIME__YEAR_RELATIVE:
        return YEAR_RELATIVE_EDEFAULT == null ? yearRelative != null : !YEAR_RELATIVE_EDEFAULT.equals(yearRelative);
      case DatabasePackage.PROGRAMME_RELEASE_TIME__YEAR_RELATIVE_MIN:
        return YEAR_RELATIVE_MIN_EDEFAULT == null ? yearRelativeMin != null : !YEAR_RELATIVE_MIN_EDEFAULT.equals(yearRelativeMin);
      case DatabasePackage.PROGRAMME_RELEASE_TIME__YEAR_RELATIVE_MAX:
        return YEAR_RELATIVE_MAX_EDEFAULT == null ? yearRelativeMax != null : !YEAR_RELATIVE_MAX_EDEFAULT.equals(yearRelativeMax);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (year: ");
    result.append(year);
    result.append(", day: ");
    result.append(day);
    result.append(", hour: ");
    result.append(hour);
    result.append(", yearRelative: ");
    result.append(yearRelative);
    result.append(", yearRelativeMin: ");
    result.append(yearRelativeMin);
    result.append(", yearRelativeMax: ");
    result.append(yearRelativeMax);
    result.append(')');
    return result.toString();
  }

} //ProgrammeReleaseTimeImpl
