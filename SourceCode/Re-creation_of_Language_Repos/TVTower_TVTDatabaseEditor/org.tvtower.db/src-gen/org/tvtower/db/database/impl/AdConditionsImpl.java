/**
 * generated by Xtext 2.35.0
 */
package org.tvtower.db.database.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.tvtower.db.database.AdConditions;
import org.tvtower.db.database.DatabasePackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Ad Conditions</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.tvtower.db.database.impl.AdConditionsImpl#getMinAudience <em>Min Audience</em>}</li>
 *   <li>{@link org.tvtower.db.database.impl.AdConditionsImpl#getMinImage <em>Min Image</em>}</li>
 *   <li>{@link org.tvtower.db.database.impl.AdConditionsImpl#getMaxImage <em>Max Image</em>}</li>
 *   <li>{@link org.tvtower.db.database.impl.AdConditionsImpl#getAllowedGenre <em>Allowed Genre</em>}</li>
 *   <li>{@link org.tvtower.db.database.impl.AdConditionsImpl#getProhibitedGenre <em>Prohibited Genre</em>}</li>
 *   <li>{@link org.tvtower.db.database.impl.AdConditionsImpl#getAllowedProgrammeFlag <em>Allowed Programme Flag</em>}</li>
 *   <li>{@link org.tvtower.db.database.impl.AdConditionsImpl#getProhibitedProgrammeFlag <em>Prohibited Programme Flag</em>}</li>
 *   <li>{@link org.tvtower.db.database.impl.AdConditionsImpl#getTargetGroup <em>Target Group</em>}</li>
 *   <li>{@link org.tvtower.db.database.impl.AdConditionsImpl#getAllowedProgrammeType <em>Allowed Programme Type</em>}</li>
 *   <li>{@link org.tvtower.db.database.impl.AdConditionsImpl#getProhibitedProgrammeType <em>Prohibited Programme Type</em>}</li>
 *   <li>{@link org.tvtower.db.database.impl.AdConditionsImpl#getProPressureGroup <em>Pro Pressure Group</em>}</li>
 *   <li>{@link org.tvtower.db.database.impl.AdConditionsImpl#getContraPressureGroup <em>Contra Pressure Group</em>}</li>
 * </ul>
 *
 * @generated
 */
public class AdConditionsImpl extends MinimalEObjectImpl.Container implements AdConditions
{
  /**
   * The default value of the '{@link #getMinAudience() <em>Min Audience</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMinAudience()
   * @generated
   * @ordered
   */
  protected static final String MIN_AUDIENCE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getMinAudience() <em>Min Audience</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMinAudience()
   * @generated
   * @ordered
   */
  protected String minAudience = MIN_AUDIENCE_EDEFAULT;

  /**
   * The default value of the '{@link #getMinImage() <em>Min Image</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMinImage()
   * @generated
   * @ordered
   */
  protected static final String MIN_IMAGE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getMinImage() <em>Min Image</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMinImage()
   * @generated
   * @ordered
   */
  protected String minImage = MIN_IMAGE_EDEFAULT;

  /**
   * The default value of the '{@link #getMaxImage() <em>Max Image</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMaxImage()
   * @generated
   * @ordered
   */
  protected static final String MAX_IMAGE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getMaxImage() <em>Max Image</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMaxImage()
   * @generated
   * @ordered
   */
  protected String maxImage = MAX_IMAGE_EDEFAULT;

  /**
   * The default value of the '{@link #getAllowedGenre() <em>Allowed Genre</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAllowedGenre()
   * @generated
   * @ordered
   */
  protected static final String ALLOWED_GENRE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getAllowedGenre() <em>Allowed Genre</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAllowedGenre()
   * @generated
   * @ordered
   */
  protected String allowedGenre = ALLOWED_GENRE_EDEFAULT;

  /**
   * The default value of the '{@link #getProhibitedGenre() <em>Prohibited Genre</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getProhibitedGenre()
   * @generated
   * @ordered
   */
  protected static final String PROHIBITED_GENRE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getProhibitedGenre() <em>Prohibited Genre</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getProhibitedGenre()
   * @generated
   * @ordered
   */
  protected String prohibitedGenre = PROHIBITED_GENRE_EDEFAULT;

  /**
   * The default value of the '{@link #getAllowedProgrammeFlag() <em>Allowed Programme Flag</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAllowedProgrammeFlag()
   * @generated
   * @ordered
   */
  protected static final String ALLOWED_PROGRAMME_FLAG_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getAllowedProgrammeFlag() <em>Allowed Programme Flag</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAllowedProgrammeFlag()
   * @generated
   * @ordered
   */
  protected String allowedProgrammeFlag = ALLOWED_PROGRAMME_FLAG_EDEFAULT;

  /**
   * The default value of the '{@link #getProhibitedProgrammeFlag() <em>Prohibited Programme Flag</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getProhibitedProgrammeFlag()
   * @generated
   * @ordered
   */
  protected static final String PROHIBITED_PROGRAMME_FLAG_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getProhibitedProgrammeFlag() <em>Prohibited Programme Flag</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getProhibitedProgrammeFlag()
   * @generated
   * @ordered
   */
  protected String prohibitedProgrammeFlag = PROHIBITED_PROGRAMME_FLAG_EDEFAULT;

  /**
   * The default value of the '{@link #getTargetGroup() <em>Target Group</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTargetGroup()
   * @generated
   * @ordered
   */
  protected static final String TARGET_GROUP_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getTargetGroup() <em>Target Group</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTargetGroup()
   * @generated
   * @ordered
   */
  protected String targetGroup = TARGET_GROUP_EDEFAULT;

  /**
   * The default value of the '{@link #getAllowedProgrammeType() <em>Allowed Programme Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAllowedProgrammeType()
   * @generated
   * @ordered
   */
  protected static final String ALLOWED_PROGRAMME_TYPE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getAllowedProgrammeType() <em>Allowed Programme Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAllowedProgrammeType()
   * @generated
   * @ordered
   */
  protected String allowedProgrammeType = ALLOWED_PROGRAMME_TYPE_EDEFAULT;

  /**
   * The default value of the '{@link #getProhibitedProgrammeType() <em>Prohibited Programme Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getProhibitedProgrammeType()
   * @generated
   * @ordered
   */
  protected static final String PROHIBITED_PROGRAMME_TYPE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getProhibitedProgrammeType() <em>Prohibited Programme Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getProhibitedProgrammeType()
   * @generated
   * @ordered
   */
  protected String prohibitedProgrammeType = PROHIBITED_PROGRAMME_TYPE_EDEFAULT;

  /**
   * The default value of the '{@link #getProPressureGroup() <em>Pro Pressure Group</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getProPressureGroup()
   * @generated
   * @ordered
   */
  protected static final String PRO_PRESSURE_GROUP_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getProPressureGroup() <em>Pro Pressure Group</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getProPressureGroup()
   * @generated
   * @ordered
   */
  protected String proPressureGroup = PRO_PRESSURE_GROUP_EDEFAULT;

  /**
   * The default value of the '{@link #getContraPressureGroup() <em>Contra Pressure Group</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getContraPressureGroup()
   * @generated
   * @ordered
   */
  protected static final String CONTRA_PRESSURE_GROUP_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getContraPressureGroup() <em>Contra Pressure Group</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getContraPressureGroup()
   * @generated
   * @ordered
   */
  protected String contraPressureGroup = CONTRA_PRESSURE_GROUP_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected AdConditionsImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DatabasePackage.Literals.AD_CONDITIONS;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getMinAudience()
  {
    return minAudience;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setMinAudience(String newMinAudience)
  {
    String oldMinAudience = minAudience;
    minAudience = newMinAudience;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DatabasePackage.AD_CONDITIONS__MIN_AUDIENCE, oldMinAudience, minAudience));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getMinImage()
  {
    return minImage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setMinImage(String newMinImage)
  {
    String oldMinImage = minImage;
    minImage = newMinImage;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DatabasePackage.AD_CONDITIONS__MIN_IMAGE, oldMinImage, minImage));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getMaxImage()
  {
    return maxImage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setMaxImage(String newMaxImage)
  {
    String oldMaxImage = maxImage;
    maxImage = newMaxImage;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DatabasePackage.AD_CONDITIONS__MAX_IMAGE, oldMaxImage, maxImage));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getAllowedGenre()
  {
    return allowedGenre;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAllowedGenre(String newAllowedGenre)
  {
    String oldAllowedGenre = allowedGenre;
    allowedGenre = newAllowedGenre;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DatabasePackage.AD_CONDITIONS__ALLOWED_GENRE, oldAllowedGenre, allowedGenre));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getProhibitedGenre()
  {
    return prohibitedGenre;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setProhibitedGenre(String newProhibitedGenre)
  {
    String oldProhibitedGenre = prohibitedGenre;
    prohibitedGenre = newProhibitedGenre;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DatabasePackage.AD_CONDITIONS__PROHIBITED_GENRE, oldProhibitedGenre, prohibitedGenre));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getAllowedProgrammeFlag()
  {
    return allowedProgrammeFlag;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAllowedProgrammeFlag(String newAllowedProgrammeFlag)
  {
    String oldAllowedProgrammeFlag = allowedProgrammeFlag;
    allowedProgrammeFlag = newAllowedProgrammeFlag;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DatabasePackage.AD_CONDITIONS__ALLOWED_PROGRAMME_FLAG, oldAllowedProgrammeFlag, allowedProgrammeFlag));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getProhibitedProgrammeFlag()
  {
    return prohibitedProgrammeFlag;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setProhibitedProgrammeFlag(String newProhibitedProgrammeFlag)
  {
    String oldProhibitedProgrammeFlag = prohibitedProgrammeFlag;
    prohibitedProgrammeFlag = newProhibitedProgrammeFlag;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DatabasePackage.AD_CONDITIONS__PROHIBITED_PROGRAMME_FLAG, oldProhibitedProgrammeFlag, prohibitedProgrammeFlag));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getTargetGroup()
  {
    return targetGroup;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setTargetGroup(String newTargetGroup)
  {
    String oldTargetGroup = targetGroup;
    targetGroup = newTargetGroup;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DatabasePackage.AD_CONDITIONS__TARGET_GROUP, oldTargetGroup, targetGroup));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getAllowedProgrammeType()
  {
    return allowedProgrammeType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAllowedProgrammeType(String newAllowedProgrammeType)
  {
    String oldAllowedProgrammeType = allowedProgrammeType;
    allowedProgrammeType = newAllowedProgrammeType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DatabasePackage.AD_CONDITIONS__ALLOWED_PROGRAMME_TYPE, oldAllowedProgrammeType, allowedProgrammeType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getProhibitedProgrammeType()
  {
    return prohibitedProgrammeType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setProhibitedProgrammeType(String newProhibitedProgrammeType)
  {
    String oldProhibitedProgrammeType = prohibitedProgrammeType;
    prohibitedProgrammeType = newProhibitedProgrammeType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DatabasePackage.AD_CONDITIONS__PROHIBITED_PROGRAMME_TYPE, oldProhibitedProgrammeType, prohibitedProgrammeType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getProPressureGroup()
  {
    return proPressureGroup;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setProPressureGroup(String newProPressureGroup)
  {
    String oldProPressureGroup = proPressureGroup;
    proPressureGroup = newProPressureGroup;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DatabasePackage.AD_CONDITIONS__PRO_PRESSURE_GROUP, oldProPressureGroup, proPressureGroup));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getContraPressureGroup()
  {
    return contraPressureGroup;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setContraPressureGroup(String newContraPressureGroup)
  {
    String oldContraPressureGroup = contraPressureGroup;
    contraPressureGroup = newContraPressureGroup;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DatabasePackage.AD_CONDITIONS__CONTRA_PRESSURE_GROUP, oldContraPressureGroup, contraPressureGroup));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DatabasePackage.AD_CONDITIONS__MIN_AUDIENCE:
        return getMinAudience();
      case DatabasePackage.AD_CONDITIONS__MIN_IMAGE:
        return getMinImage();
      case DatabasePackage.AD_CONDITIONS__MAX_IMAGE:
        return getMaxImage();
      case DatabasePackage.AD_CONDITIONS__ALLOWED_GENRE:
        return getAllowedGenre();
      case DatabasePackage.AD_CONDITIONS__PROHIBITED_GENRE:
        return getProhibitedGenre();
      case DatabasePackage.AD_CONDITIONS__ALLOWED_PROGRAMME_FLAG:
        return getAllowedProgrammeFlag();
      case DatabasePackage.AD_CONDITIONS__PROHIBITED_PROGRAMME_FLAG:
        return getProhibitedProgrammeFlag();
      case DatabasePackage.AD_CONDITIONS__TARGET_GROUP:
        return getTargetGroup();
      case DatabasePackage.AD_CONDITIONS__ALLOWED_PROGRAMME_TYPE:
        return getAllowedProgrammeType();
      case DatabasePackage.AD_CONDITIONS__PROHIBITED_PROGRAMME_TYPE:
        return getProhibitedProgrammeType();
      case DatabasePackage.AD_CONDITIONS__PRO_PRESSURE_GROUP:
        return getProPressureGroup();
      case DatabasePackage.AD_CONDITIONS__CONTRA_PRESSURE_GROUP:
        return getContraPressureGroup();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DatabasePackage.AD_CONDITIONS__MIN_AUDIENCE:
        setMinAudience((String)newValue);
        return;
      case DatabasePackage.AD_CONDITIONS__MIN_IMAGE:
        setMinImage((String)newValue);
        return;
      case DatabasePackage.AD_CONDITIONS__MAX_IMAGE:
        setMaxImage((String)newValue);
        return;
      case DatabasePackage.AD_CONDITIONS__ALLOWED_GENRE:
        setAllowedGenre((String)newValue);
        return;
      case DatabasePackage.AD_CONDITIONS__PROHIBITED_GENRE:
        setProhibitedGenre((String)newValue);
        return;
      case DatabasePackage.AD_CONDITIONS__ALLOWED_PROGRAMME_FLAG:
        setAllowedProgrammeFlag((String)newValue);
        return;
      case DatabasePackage.AD_CONDITIONS__PROHIBITED_PROGRAMME_FLAG:
        setProhibitedProgrammeFlag((String)newValue);
        return;
      case DatabasePackage.AD_CONDITIONS__TARGET_GROUP:
        setTargetGroup((String)newValue);
        return;
      case DatabasePackage.AD_CONDITIONS__ALLOWED_PROGRAMME_TYPE:
        setAllowedProgrammeType((String)newValue);
        return;
      case DatabasePackage.AD_CONDITIONS__PROHIBITED_PROGRAMME_TYPE:
        setProhibitedProgrammeType((String)newValue);
        return;
      case DatabasePackage.AD_CONDITIONS__PRO_PRESSURE_GROUP:
        setProPressureGroup((String)newValue);
        return;
      case DatabasePackage.AD_CONDITIONS__CONTRA_PRESSURE_GROUP:
        setContraPressureGroup((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DatabasePackage.AD_CONDITIONS__MIN_AUDIENCE:
        setMinAudience(MIN_AUDIENCE_EDEFAULT);
        return;
      case DatabasePackage.AD_CONDITIONS__MIN_IMAGE:
        setMinImage(MIN_IMAGE_EDEFAULT);
        return;
      case DatabasePackage.AD_CONDITIONS__MAX_IMAGE:
        setMaxImage(MAX_IMAGE_EDEFAULT);
        return;
      case DatabasePackage.AD_CONDITIONS__ALLOWED_GENRE:
        setAllowedGenre(ALLOWED_GENRE_EDEFAULT);
        return;
      case DatabasePackage.AD_CONDITIONS__PROHIBITED_GENRE:
        setProhibitedGenre(PROHIBITED_GENRE_EDEFAULT);
        return;
      case DatabasePackage.AD_CONDITIONS__ALLOWED_PROGRAMME_FLAG:
        setAllowedProgrammeFlag(ALLOWED_PROGRAMME_FLAG_EDEFAULT);
        return;
      case DatabasePackage.AD_CONDITIONS__PROHIBITED_PROGRAMME_FLAG:
        setProhibitedProgrammeFlag(PROHIBITED_PROGRAMME_FLAG_EDEFAULT);
        return;
      case DatabasePackage.AD_CONDITIONS__TARGET_GROUP:
        setTargetGroup(TARGET_GROUP_EDEFAULT);
        return;
      case DatabasePackage.AD_CONDITIONS__ALLOWED_PROGRAMME_TYPE:
        setAllowedProgrammeType(ALLOWED_PROGRAMME_TYPE_EDEFAULT);
        return;
      case DatabasePackage.AD_CONDITIONS__PROHIBITED_PROGRAMME_TYPE:
        setProhibitedProgrammeType(PROHIBITED_PROGRAMME_TYPE_EDEFAULT);
        return;
      case DatabasePackage.AD_CONDITIONS__PRO_PRESSURE_GROUP:
        setProPressureGroup(PRO_PRESSURE_GROUP_EDEFAULT);
        return;
      case DatabasePackage.AD_CONDITIONS__CONTRA_PRESSURE_GROUP:
        setContraPressureGroup(CONTRA_PRESSURE_GROUP_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DatabasePackage.AD_CONDITIONS__MIN_AUDIENCE:
        return MIN_AUDIENCE_EDEFAULT == null ? minAudience != null : !MIN_AUDIENCE_EDEFAULT.equals(minAudience);
      case DatabasePackage.AD_CONDITIONS__MIN_IMAGE:
        return MIN_IMAGE_EDEFAULT == null ? minImage != null : !MIN_IMAGE_EDEFAULT.equals(minImage);
      case DatabasePackage.AD_CONDITIONS__MAX_IMAGE:
        return MAX_IMAGE_EDEFAULT == null ? maxImage != null : !MAX_IMAGE_EDEFAULT.equals(maxImage);
      case DatabasePackage.AD_CONDITIONS__ALLOWED_GENRE:
        return ALLOWED_GENRE_EDEFAULT == null ? allowedGenre != null : !ALLOWED_GENRE_EDEFAULT.equals(allowedGenre);
      case DatabasePackage.AD_CONDITIONS__PROHIBITED_GENRE:
        return PROHIBITED_GENRE_EDEFAULT == null ? prohibitedGenre != null : !PROHIBITED_GENRE_EDEFAULT.equals(prohibitedGenre);
      case DatabasePackage.AD_CONDITIONS__ALLOWED_PROGRAMME_FLAG:
        return ALLOWED_PROGRAMME_FLAG_EDEFAULT == null ? allowedProgrammeFlag != null : !ALLOWED_PROGRAMME_FLAG_EDEFAULT.equals(allowedProgrammeFlag);
      case DatabasePackage.AD_CONDITIONS__PROHIBITED_PROGRAMME_FLAG:
        return PROHIBITED_PROGRAMME_FLAG_EDEFAULT == null ? prohibitedProgrammeFlag != null : !PROHIBITED_PROGRAMME_FLAG_EDEFAULT.equals(prohibitedProgrammeFlag);
      case DatabasePackage.AD_CONDITIONS__TARGET_GROUP:
        return TARGET_GROUP_EDEFAULT == null ? targetGroup != null : !TARGET_GROUP_EDEFAULT.equals(targetGroup);
      case DatabasePackage.AD_CONDITIONS__ALLOWED_PROGRAMME_TYPE:
        return ALLOWED_PROGRAMME_TYPE_EDEFAULT == null ? allowedProgrammeType != null : !ALLOWED_PROGRAMME_TYPE_EDEFAULT.equals(allowedProgrammeType);
      case DatabasePackage.AD_CONDITIONS__PROHIBITED_PROGRAMME_TYPE:
        return PROHIBITED_PROGRAMME_TYPE_EDEFAULT == null ? prohibitedProgrammeType != null : !PROHIBITED_PROGRAMME_TYPE_EDEFAULT.equals(prohibitedProgrammeType);
      case DatabasePackage.AD_CONDITIONS__PRO_PRESSURE_GROUP:
        return PRO_PRESSURE_GROUP_EDEFAULT == null ? proPressureGroup != null : !PRO_PRESSURE_GROUP_EDEFAULT.equals(proPressureGroup);
      case DatabasePackage.AD_CONDITIONS__CONTRA_PRESSURE_GROUP:
        return CONTRA_PRESSURE_GROUP_EDEFAULT == null ? contraPressureGroup != null : !CONTRA_PRESSURE_GROUP_EDEFAULT.equals(contraPressureGroup);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (minAudience: ");
    result.append(minAudience);
    result.append(", minImage: ");
    result.append(minImage);
    result.append(", maxImage: ");
    result.append(maxImage);
    result.append(", allowedGenre: ");
    result.append(allowedGenre);
    result.append(", prohibitedGenre: ");
    result.append(prohibitedGenre);
    result.append(", allowedProgrammeFlag: ");
    result.append(allowedProgrammeFlag);
    result.append(", prohibitedProgrammeFlag: ");
    result.append(prohibitedProgrammeFlag);
    result.append(", targetGroup: ");
    result.append(targetGroup);
    result.append(", allowedProgrammeType: ");
    result.append(allowedProgrammeType);
    result.append(", prohibitedProgrammeType: ");
    result.append(prohibitedProgrammeType);
    result.append(", proPressureGroup: ");
    result.append(proPressureGroup);
    result.append(", contraPressureGroup: ");
    result.append(contraPressureGroup);
    result.append(')');
    return result.toString();
  }

} //AdConditionsImpl
