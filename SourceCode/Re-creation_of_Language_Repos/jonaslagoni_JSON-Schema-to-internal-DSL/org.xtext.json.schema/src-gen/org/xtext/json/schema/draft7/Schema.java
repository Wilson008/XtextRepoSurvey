/**
 * generated by Xtext 2.35.0
 */
package org.xtext.json.schema.draft7;

import org.eclipse.emf.common.util.EList;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Schema</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.json.schema.draft7.Schema#getType <em>Type</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.Schema#getDependencies <em>Dependencies</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.Schema#getAdditionalProperties <em>Additional Properties</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.Schema#getAdditionalItems <em>Additional Items</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.Schema#getDefault <em>Default</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.Schema#getPatternProperties <em>Pattern Properties</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.Schema#getExample <em>Example</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.Schema#getItems <em>Items</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.Schema#getContains <em>Contains</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.Schema#getDefinitions <em>Definitions</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.Schema#getTitle <em>Title</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.Schema#getRequiredProperties <em>Required Properties</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.Schema#getDescription <em>Description</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.Schema#getProperties <em>Properties</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.Schema#getEnumValues <em>Enum Values</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.Schema#getId <em>Id</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.Schema#getIfSchema <em>If Schema</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.Schema#getThenSchema <em>Then Schema</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.Schema#getElseSchema <em>Else Schema</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.Schema#getConst <em>Const</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.Schema#getConstBoolean <em>Const Boolean</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.Schema#getAnyOfs <em>Any Ofs</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.Schema#getOneOfs <em>One Ofs</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.Schema#getAllOfs <em>All Ofs</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.Schema#getNot <em>Not</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.Schema#getUnique <em>Unique</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.Schema#getPropertyNames <em>Property Names</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.Schema#getMinProperties <em>Min Properties</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.Schema#getMaxProperties <em>Max Properties</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.Schema#getMaxItems <em>Max Items</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.Schema#getMinItems <em>Min Items</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.Schema#getMaxLength <em>Max Length</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.Schema#getMinLength <em>Min Length</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.Schema#getPattern <em>Pattern</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.Schema#getFormat <em>Format</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.Schema#getMediaType <em>Media Type</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.Schema#getEncoding <em>Encoding</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.Schema#getMultipleOf <em>Multiple Of</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.Schema#getMinimum <em>Minimum</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.Schema#getExclusiveMinimum <em>Exclusive Minimum</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.Schema#getMaximum <em>Maximum</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.Schema#getExclusiveMaximum <em>Exclusive Maximum</em>}</li>
 * </ul>
 *
 * @see org.xtext.json.schema.draft7.Draft7Package#getSchema()
 * @model
 * @generated
 */
public interface Schema extends AbstractSchema
{
  /**
   * Returns the value of the '<em><b>Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Type</em>' containment reference.
   * @see #setType(Types)
   * @see org.xtext.json.schema.draft7.Draft7Package#getSchema_Type()
   * @model containment="true"
   * @generated
   */
  Types getType();

  /**
   * Sets the value of the '{@link org.xtext.json.schema.draft7.Schema#getType <em>Type</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Type</em>' containment reference.
   * @see #getType()
   * @generated
   */
  void setType(Types value);

  /**
   * Returns the value of the '<em><b>Dependencies</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Dependencies</em>' containment reference.
   * @see #setDependencies(Dependencies)
   * @see org.xtext.json.schema.draft7.Draft7Package#getSchema_Dependencies()
   * @model containment="true"
   * @generated
   */
  Dependencies getDependencies();

  /**
   * Sets the value of the '{@link org.xtext.json.schema.draft7.Schema#getDependencies <em>Dependencies</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Dependencies</em>' containment reference.
   * @see #getDependencies()
   * @generated
   */
  void setDependencies(Dependencies value);

  /**
   * Returns the value of the '<em><b>Additional Properties</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Additional Properties</em>' containment reference.
   * @see #setAdditionalProperties(AdditionalProperties)
   * @see org.xtext.json.schema.draft7.Draft7Package#getSchema_AdditionalProperties()
   * @model containment="true"
   * @generated
   */
  AdditionalProperties getAdditionalProperties();

  /**
   * Sets the value of the '{@link org.xtext.json.schema.draft7.Schema#getAdditionalProperties <em>Additional Properties</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Additional Properties</em>' containment reference.
   * @see #getAdditionalProperties()
   * @generated
   */
  void setAdditionalProperties(AdditionalProperties value);

  /**
   * Returns the value of the '<em><b>Additional Items</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Additional Items</em>' containment reference.
   * @see #setAdditionalItems(AdditionalItems)
   * @see org.xtext.json.schema.draft7.Draft7Package#getSchema_AdditionalItems()
   * @model containment="true"
   * @generated
   */
  AdditionalItems getAdditionalItems();

  /**
   * Sets the value of the '{@link org.xtext.json.schema.draft7.Schema#getAdditionalItems <em>Additional Items</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Additional Items</em>' containment reference.
   * @see #getAdditionalItems()
   * @generated
   */
  void setAdditionalItems(AdditionalItems value);

  /**
   * Returns the value of the '<em><b>Default</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Default</em>' containment reference.
   * @see #setDefault(Default)
   * @see org.xtext.json.schema.draft7.Draft7Package#getSchema_Default()
   * @model containment="true"
   * @generated
   */
  Default getDefault();

  /**
   * Sets the value of the '{@link org.xtext.json.schema.draft7.Schema#getDefault <em>Default</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Default</em>' containment reference.
   * @see #getDefault()
   * @generated
   */
  void setDefault(Default value);

  /**
   * Returns the value of the '<em><b>Pattern Properties</b></em>' containment reference list.
   * The list contents are of type {@link org.xtext.json.schema.draft7.NamedSchema}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Pattern Properties</em>' containment reference list.
   * @see org.xtext.json.schema.draft7.Draft7Package#getSchema_PatternProperties()
   * @model containment="true"
   * @generated
   */
  EList<NamedSchema> getPatternProperties();

  /**
   * Returns the value of the '<em><b>Example</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Example</em>' containment reference.
   * @see #setExample(Example)
   * @see org.xtext.json.schema.draft7.Draft7Package#getSchema_Example()
   * @model containment="true"
   * @generated
   */
  Example getExample();

  /**
   * Sets the value of the '{@link org.xtext.json.schema.draft7.Schema#getExample <em>Example</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Example</em>' containment reference.
   * @see #getExample()
   * @generated
   */
  void setExample(Example value);

  /**
   * Returns the value of the '<em><b>Items</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Items</em>' containment reference.
   * @see #setItems(Items)
   * @see org.xtext.json.schema.draft7.Draft7Package#getSchema_Items()
   * @model containment="true"
   * @generated
   */
  Items getItems();

  /**
   * Sets the value of the '{@link org.xtext.json.schema.draft7.Schema#getItems <em>Items</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Items</em>' containment reference.
   * @see #getItems()
   * @generated
   */
  void setItems(Items value);

  /**
   * Returns the value of the '<em><b>Contains</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Contains</em>' containment reference.
   * @see #setContains(Contains)
   * @see org.xtext.json.schema.draft7.Draft7Package#getSchema_Contains()
   * @model containment="true"
   * @generated
   */
  Contains getContains();

  /**
   * Sets the value of the '{@link org.xtext.json.schema.draft7.Schema#getContains <em>Contains</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Contains</em>' containment reference.
   * @see #getContains()
   * @generated
   */
  void setContains(Contains value);

  /**
   * Returns the value of the '<em><b>Definitions</b></em>' containment reference list.
   * The list contents are of type {@link org.xtext.json.schema.draft7.NamedSchema}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Definitions</em>' containment reference list.
   * @see org.xtext.json.schema.draft7.Draft7Package#getSchema_Definitions()
   * @model containment="true"
   * @generated
   */
  EList<NamedSchema> getDefinitions();

  /**
   * Returns the value of the '<em><b>Title</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Title</em>' attribute.
   * @see #setTitle(String)
   * @see org.xtext.json.schema.draft7.Draft7Package#getSchema_Title()
   * @model
   * @generated
   */
  String getTitle();

  /**
   * Sets the value of the '{@link org.xtext.json.schema.draft7.Schema#getTitle <em>Title</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Title</em>' attribute.
   * @see #getTitle()
   * @generated
   */
  void setTitle(String value);

  /**
   * Returns the value of the '<em><b>Required Properties</b></em>' containment reference list.
   * The list contents are of type {@link org.xtext.json.schema.draft7.AnyString}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Required Properties</em>' containment reference list.
   * @see org.xtext.json.schema.draft7.Draft7Package#getSchema_RequiredProperties()
   * @model containment="true"
   * @generated
   */
  EList<AnyString> getRequiredProperties();

  /**
   * Returns the value of the '<em><b>Description</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Description</em>' attribute.
   * @see #setDescription(String)
   * @see org.xtext.json.schema.draft7.Draft7Package#getSchema_Description()
   * @model
   * @generated
   */
  String getDescription();

  /**
   * Sets the value of the '{@link org.xtext.json.schema.draft7.Schema#getDescription <em>Description</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Description</em>' attribute.
   * @see #getDescription()
   * @generated
   */
  void setDescription(String value);

  /**
   * Returns the value of the '<em><b>Properties</b></em>' containment reference list.
   * The list contents are of type {@link org.xtext.json.schema.draft7.NamedSchema}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Properties</em>' containment reference list.
   * @see org.xtext.json.schema.draft7.Draft7Package#getSchema_Properties()
   * @model containment="true"
   * @generated
   */
  EList<NamedSchema> getProperties();

  /**
   * Returns the value of the '<em><b>Enum Values</b></em>' containment reference list.
   * The list contents are of type {@link org.xtext.json.schema.draft7.AnyString}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Enum Values</em>' containment reference list.
   * @see org.xtext.json.schema.draft7.Draft7Package#getSchema_EnumValues()
   * @model containment="true"
   * @generated
   */
  EList<AnyString> getEnumValues();

  /**
   * Returns the value of the '<em><b>Id</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Id</em>' containment reference.
   * @see #setId(AnyString)
   * @see org.xtext.json.schema.draft7.Draft7Package#getSchema_Id()
   * @model containment="true"
   * @generated
   */
  AnyString getId();

  /**
   * Sets the value of the '{@link org.xtext.json.schema.draft7.Schema#getId <em>Id</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Id</em>' containment reference.
   * @see #getId()
   * @generated
   */
  void setId(AnyString value);

  /**
   * Returns the value of the '<em><b>If Schema</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>If Schema</em>' containment reference.
   * @see #setIfSchema(Schema)
   * @see org.xtext.json.schema.draft7.Draft7Package#getSchema_IfSchema()
   * @model containment="true"
   * @generated
   */
  Schema getIfSchema();

  /**
   * Sets the value of the '{@link org.xtext.json.schema.draft7.Schema#getIfSchema <em>If Schema</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>If Schema</em>' containment reference.
   * @see #getIfSchema()
   * @generated
   */
  void setIfSchema(Schema value);

  /**
   * Returns the value of the '<em><b>Then Schema</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Then Schema</em>' containment reference.
   * @see #setThenSchema(Schema)
   * @see org.xtext.json.schema.draft7.Draft7Package#getSchema_ThenSchema()
   * @model containment="true"
   * @generated
   */
  Schema getThenSchema();

  /**
   * Sets the value of the '{@link org.xtext.json.schema.draft7.Schema#getThenSchema <em>Then Schema</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Then Schema</em>' containment reference.
   * @see #getThenSchema()
   * @generated
   */
  void setThenSchema(Schema value);

  /**
   * Returns the value of the '<em><b>Else Schema</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Else Schema</em>' containment reference.
   * @see #setElseSchema(Schema)
   * @see org.xtext.json.schema.draft7.Draft7Package#getSchema_ElseSchema()
   * @model containment="true"
   * @generated
   */
  Schema getElseSchema();

  /**
   * Sets the value of the '{@link org.xtext.json.schema.draft7.Schema#getElseSchema <em>Else Schema</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Else Schema</em>' containment reference.
   * @see #getElseSchema()
   * @generated
   */
  void setElseSchema(Schema value);

  /**
   * Returns the value of the '<em><b>Const</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Const</em>' containment reference.
   * @see #setConst(AnyString)
   * @see org.xtext.json.schema.draft7.Draft7Package#getSchema_Const()
   * @model containment="true"
   * @generated
   */
  AnyString getConst();

  /**
   * Sets the value of the '{@link org.xtext.json.schema.draft7.Schema#getConst <em>Const</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Const</em>' containment reference.
   * @see #getConst()
   * @generated
   */
  void setConst(AnyString value);

  /**
   * Returns the value of the '<em><b>Const Boolean</b></em>' attribute.
   * The literals are from the enumeration {@link org.xtext.json.schema.draft7.Boolean}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Const Boolean</em>' attribute.
   * @see org.xtext.json.schema.draft7.Boolean
   * @see #setConstBoolean(org.xtext.json.schema.draft7.Boolean)
   * @see org.xtext.json.schema.draft7.Draft7Package#getSchema_ConstBoolean()
   * @model
   * @generated
   */
  org.xtext.json.schema.draft7.Boolean getConstBoolean();

  /**
   * Sets the value of the '{@link org.xtext.json.schema.draft7.Schema#getConstBoolean <em>Const Boolean</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Const Boolean</em>' attribute.
   * @see org.xtext.json.schema.draft7.Boolean
   * @see #getConstBoolean()
   * @generated
   */
  void setConstBoolean(org.xtext.json.schema.draft7.Boolean value);

  /**
   * Returns the value of the '<em><b>Any Ofs</b></em>' containment reference list.
   * The list contents are of type {@link org.xtext.json.schema.draft7.AbstractSchema}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Any Ofs</em>' containment reference list.
   * @see org.xtext.json.schema.draft7.Draft7Package#getSchema_AnyOfs()
   * @model containment="true"
   * @generated
   */
  EList<AbstractSchema> getAnyOfs();

  /**
   * Returns the value of the '<em><b>One Ofs</b></em>' containment reference list.
   * The list contents are of type {@link org.xtext.json.schema.draft7.AbstractSchema}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>One Ofs</em>' containment reference list.
   * @see org.xtext.json.schema.draft7.Draft7Package#getSchema_OneOfs()
   * @model containment="true"
   * @generated
   */
  EList<AbstractSchema> getOneOfs();

  /**
   * Returns the value of the '<em><b>All Ofs</b></em>' containment reference list.
   * The list contents are of type {@link org.xtext.json.schema.draft7.AbstractSchema}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>All Ofs</em>' containment reference list.
   * @see org.xtext.json.schema.draft7.Draft7Package#getSchema_AllOfs()
   * @model containment="true"
   * @generated
   */
  EList<AbstractSchema> getAllOfs();

  /**
   * Returns the value of the '<em><b>Not</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Not</em>' containment reference.
   * @see #setNot(AbstractSchema)
   * @see org.xtext.json.schema.draft7.Draft7Package#getSchema_Not()
   * @model containment="true"
   * @generated
   */
  AbstractSchema getNot();

  /**
   * Sets the value of the '{@link org.xtext.json.schema.draft7.Schema#getNot <em>Not</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Not</em>' containment reference.
   * @see #getNot()
   * @generated
   */
  void setNot(AbstractSchema value);

  /**
   * Returns the value of the '<em><b>Unique</b></em>' attribute.
   * The literals are from the enumeration {@link org.xtext.json.schema.draft7.Boolean}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Unique</em>' attribute.
   * @see org.xtext.json.schema.draft7.Boolean
   * @see #setUnique(org.xtext.json.schema.draft7.Boolean)
   * @see org.xtext.json.schema.draft7.Draft7Package#getSchema_Unique()
   * @model
   * @generated
   */
  org.xtext.json.schema.draft7.Boolean getUnique();

  /**
   * Sets the value of the '{@link org.xtext.json.schema.draft7.Schema#getUnique <em>Unique</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Unique</em>' attribute.
   * @see org.xtext.json.schema.draft7.Boolean
   * @see #getUnique()
   * @generated
   */
  void setUnique(org.xtext.json.schema.draft7.Boolean value);

  /**
   * Returns the value of the '<em><b>Property Names</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Property Names</em>' containment reference.
   * @see #setPropertyNames(AbstractSchema)
   * @see org.xtext.json.schema.draft7.Draft7Package#getSchema_PropertyNames()
   * @model containment="true"
   * @generated
   */
  AbstractSchema getPropertyNames();

  /**
   * Sets the value of the '{@link org.xtext.json.schema.draft7.Schema#getPropertyNames <em>Property Names</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Property Names</em>' containment reference.
   * @see #getPropertyNames()
   * @generated
   */
  void setPropertyNames(AbstractSchema value);

  /**
   * Returns the value of the '<em><b>Min Properties</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Min Properties</em>' attribute.
   * @see #setMinProperties(int)
   * @see org.xtext.json.schema.draft7.Draft7Package#getSchema_MinProperties()
   * @model
   * @generated
   */
  int getMinProperties();

  /**
   * Sets the value of the '{@link org.xtext.json.schema.draft7.Schema#getMinProperties <em>Min Properties</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Min Properties</em>' attribute.
   * @see #getMinProperties()
   * @generated
   */
  void setMinProperties(int value);

  /**
   * Returns the value of the '<em><b>Max Properties</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Max Properties</em>' attribute.
   * @see #setMaxProperties(int)
   * @see org.xtext.json.schema.draft7.Draft7Package#getSchema_MaxProperties()
   * @model
   * @generated
   */
  int getMaxProperties();

  /**
   * Sets the value of the '{@link org.xtext.json.schema.draft7.Schema#getMaxProperties <em>Max Properties</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Max Properties</em>' attribute.
   * @see #getMaxProperties()
   * @generated
   */
  void setMaxProperties(int value);

  /**
   * Returns the value of the '<em><b>Max Items</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Max Items</em>' attribute.
   * @see #setMaxItems(int)
   * @see org.xtext.json.schema.draft7.Draft7Package#getSchema_MaxItems()
   * @model
   * @generated
   */
  int getMaxItems();

  /**
   * Sets the value of the '{@link org.xtext.json.schema.draft7.Schema#getMaxItems <em>Max Items</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Max Items</em>' attribute.
   * @see #getMaxItems()
   * @generated
   */
  void setMaxItems(int value);

  /**
   * Returns the value of the '<em><b>Min Items</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Min Items</em>' attribute.
   * @see #setMinItems(int)
   * @see org.xtext.json.schema.draft7.Draft7Package#getSchema_MinItems()
   * @model
   * @generated
   */
  int getMinItems();

  /**
   * Sets the value of the '{@link org.xtext.json.schema.draft7.Schema#getMinItems <em>Min Items</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Min Items</em>' attribute.
   * @see #getMinItems()
   * @generated
   */
  void setMinItems(int value);

  /**
   * Returns the value of the '<em><b>Max Length</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Max Length</em>' attribute.
   * @see #setMaxLength(int)
   * @see org.xtext.json.schema.draft7.Draft7Package#getSchema_MaxLength()
   * @model
   * @generated
   */
  int getMaxLength();

  /**
   * Sets the value of the '{@link org.xtext.json.schema.draft7.Schema#getMaxLength <em>Max Length</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Max Length</em>' attribute.
   * @see #getMaxLength()
   * @generated
   */
  void setMaxLength(int value);

  /**
   * Returns the value of the '<em><b>Min Length</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Min Length</em>' attribute.
   * @see #setMinLength(int)
   * @see org.xtext.json.schema.draft7.Draft7Package#getSchema_MinLength()
   * @model
   * @generated
   */
  int getMinLength();

  /**
   * Sets the value of the '{@link org.xtext.json.schema.draft7.Schema#getMinLength <em>Min Length</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Min Length</em>' attribute.
   * @see #getMinLength()
   * @generated
   */
  void setMinLength(int value);

  /**
   * Returns the value of the '<em><b>Pattern</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Pattern</em>' containment reference.
   * @see #setPattern(AnyString)
   * @see org.xtext.json.schema.draft7.Draft7Package#getSchema_Pattern()
   * @model containment="true"
   * @generated
   */
  AnyString getPattern();

  /**
   * Sets the value of the '{@link org.xtext.json.schema.draft7.Schema#getPattern <em>Pattern</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Pattern</em>' containment reference.
   * @see #getPattern()
   * @generated
   */
  void setPattern(AnyString value);

  /**
   * Returns the value of the '<em><b>Format</b></em>' attribute.
   * The literals are from the enumeration {@link org.xtext.json.schema.draft7.FormatTypes}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Format</em>' attribute.
   * @see org.xtext.json.schema.draft7.FormatTypes
   * @see #setFormat(FormatTypes)
   * @see org.xtext.json.schema.draft7.Draft7Package#getSchema_Format()
   * @model
   * @generated
   */
  FormatTypes getFormat();

  /**
   * Sets the value of the '{@link org.xtext.json.schema.draft7.Schema#getFormat <em>Format</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Format</em>' attribute.
   * @see org.xtext.json.schema.draft7.FormatTypes
   * @see #getFormat()
   * @generated
   */
  void setFormat(FormatTypes value);

  /**
   * Returns the value of the '<em><b>Media Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Media Type</em>' containment reference.
   * @see #setMediaType(AnyString)
   * @see org.xtext.json.schema.draft7.Draft7Package#getSchema_MediaType()
   * @model containment="true"
   * @generated
   */
  AnyString getMediaType();

  /**
   * Sets the value of the '{@link org.xtext.json.schema.draft7.Schema#getMediaType <em>Media Type</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Media Type</em>' containment reference.
   * @see #getMediaType()
   * @generated
   */
  void setMediaType(AnyString value);

  /**
   * Returns the value of the '<em><b>Encoding</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Encoding</em>' containment reference.
   * @see #setEncoding(AnyString)
   * @see org.xtext.json.schema.draft7.Draft7Package#getSchema_Encoding()
   * @model containment="true"
   * @generated
   */
  AnyString getEncoding();

  /**
   * Sets the value of the '{@link org.xtext.json.schema.draft7.Schema#getEncoding <em>Encoding</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Encoding</em>' containment reference.
   * @see #getEncoding()
   * @generated
   */
  void setEncoding(AnyString value);

  /**
   * Returns the value of the '<em><b>Multiple Of</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Multiple Of</em>' attribute.
   * @see #setMultipleOf(int)
   * @see org.xtext.json.schema.draft7.Draft7Package#getSchema_MultipleOf()
   * @model
   * @generated
   */
  int getMultipleOf();

  /**
   * Sets the value of the '{@link org.xtext.json.schema.draft7.Schema#getMultipleOf <em>Multiple Of</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Multiple Of</em>' attribute.
   * @see #getMultipleOf()
   * @generated
   */
  void setMultipleOf(int value);

  /**
   * Returns the value of the '<em><b>Minimum</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Minimum</em>' containment reference.
   * @see #setMinimum(org.xtext.json.schema.draft7.Number)
   * @see org.xtext.json.schema.draft7.Draft7Package#getSchema_Minimum()
   * @model containment="true"
   * @generated
   */
  org.xtext.json.schema.draft7.Number getMinimum();

  /**
   * Sets the value of the '{@link org.xtext.json.schema.draft7.Schema#getMinimum <em>Minimum</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Minimum</em>' containment reference.
   * @see #getMinimum()
   * @generated
   */
  void setMinimum(org.xtext.json.schema.draft7.Number value);

  /**
   * Returns the value of the '<em><b>Exclusive Minimum</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Exclusive Minimum</em>' containment reference.
   * @see #setExclusiveMinimum(org.xtext.json.schema.draft7.Number)
   * @see org.xtext.json.schema.draft7.Draft7Package#getSchema_ExclusiveMinimum()
   * @model containment="true"
   * @generated
   */
  org.xtext.json.schema.draft7.Number getExclusiveMinimum();

  /**
   * Sets the value of the '{@link org.xtext.json.schema.draft7.Schema#getExclusiveMinimum <em>Exclusive Minimum</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Exclusive Minimum</em>' containment reference.
   * @see #getExclusiveMinimum()
   * @generated
   */
  void setExclusiveMinimum(org.xtext.json.schema.draft7.Number value);

  /**
   * Returns the value of the '<em><b>Maximum</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Maximum</em>' containment reference.
   * @see #setMaximum(org.xtext.json.schema.draft7.Number)
   * @see org.xtext.json.schema.draft7.Draft7Package#getSchema_Maximum()
   * @model containment="true"
   * @generated
   */
  org.xtext.json.schema.draft7.Number getMaximum();

  /**
   * Sets the value of the '{@link org.xtext.json.schema.draft7.Schema#getMaximum <em>Maximum</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Maximum</em>' containment reference.
   * @see #getMaximum()
   * @generated
   */
  void setMaximum(org.xtext.json.schema.draft7.Number value);

  /**
   * Returns the value of the '<em><b>Exclusive Maximum</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Exclusive Maximum</em>' containment reference.
   * @see #setExclusiveMaximum(org.xtext.json.schema.draft7.Number)
   * @see org.xtext.json.schema.draft7.Draft7Package#getSchema_ExclusiveMaximum()
   * @model containment="true"
   * @generated
   */
  org.xtext.json.schema.draft7.Number getExclusiveMaximum();

  /**
   * Sets the value of the '{@link org.xtext.json.schema.draft7.Schema#getExclusiveMaximum <em>Exclusive Maximum</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Exclusive Maximum</em>' containment reference.
   * @see #getExclusiveMaximum()
   * @generated
   */
  void setExclusiveMaximum(org.xtext.json.schema.draft7.Number value);

} // Schema
