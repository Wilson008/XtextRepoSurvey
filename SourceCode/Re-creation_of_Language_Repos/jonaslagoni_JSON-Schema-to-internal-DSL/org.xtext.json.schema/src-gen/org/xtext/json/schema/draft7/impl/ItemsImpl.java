/**
 * generated by Xtext 2.35.0
 */
package org.xtext.json.schema.draft7.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.json.schema.draft7.AbstractSchema;
import org.xtext.json.schema.draft7.Draft7Package;
import org.xtext.json.schema.draft7.Items;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Items</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.json.schema.draft7.impl.ItemsImpl#getItems <em>Items</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.impl.ItemsImpl#getSelfReference <em>Self Reference</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ItemsImpl extends MinimalEObjectImpl.Container implements Items
{
  /**
   * The cached value of the '{@link #getItems() <em>Items</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getItems()
   * @generated
   * @ordered
   */
  protected EList<AbstractSchema> items;

  /**
   * The default value of the '{@link #getSelfReference() <em>Self Reference</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSelfReference()
   * @generated
   * @ordered
   */
  protected static final org.xtext.json.schema.draft7.Boolean SELF_REFERENCE_EDEFAULT = org.xtext.json.schema.draft7.Boolean.TRUE_VALUE;

  /**
   * The cached value of the '{@link #getSelfReference() <em>Self Reference</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSelfReference()
   * @generated
   * @ordered
   */
  protected org.xtext.json.schema.draft7.Boolean selfReference = SELF_REFERENCE_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ItemsImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return Draft7Package.Literals.ITEMS;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<AbstractSchema> getItems()
  {
    if (items == null)
    {
      items = new EObjectContainmentEList<AbstractSchema>(AbstractSchema.class, this, Draft7Package.ITEMS__ITEMS);
    }
    return items;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public org.xtext.json.schema.draft7.Boolean getSelfReference()
  {
    return selfReference;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSelfReference(org.xtext.json.schema.draft7.Boolean newSelfReference)
  {
    org.xtext.json.schema.draft7.Boolean oldSelfReference = selfReference;
    selfReference = newSelfReference == null ? SELF_REFERENCE_EDEFAULT : newSelfReference;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Draft7Package.ITEMS__SELF_REFERENCE, oldSelfReference, selfReference));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case Draft7Package.ITEMS__ITEMS:
        return ((InternalEList<?>)getItems()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case Draft7Package.ITEMS__ITEMS:
        return getItems();
      case Draft7Package.ITEMS__SELF_REFERENCE:
        return getSelfReference();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case Draft7Package.ITEMS__ITEMS:
        getItems().clear();
        getItems().addAll((Collection<? extends AbstractSchema>)newValue);
        return;
      case Draft7Package.ITEMS__SELF_REFERENCE:
        setSelfReference((org.xtext.json.schema.draft7.Boolean)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case Draft7Package.ITEMS__ITEMS:
        getItems().clear();
        return;
      case Draft7Package.ITEMS__SELF_REFERENCE:
        setSelfReference(SELF_REFERENCE_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case Draft7Package.ITEMS__ITEMS:
        return items != null && !items.isEmpty();
      case Draft7Package.ITEMS__SELF_REFERENCE:
        return selfReference != SELF_REFERENCE_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (selfReference: ");
    result.append(selfReference);
    result.append(')');
    return result.toString();
  }

} //ItemsImpl
