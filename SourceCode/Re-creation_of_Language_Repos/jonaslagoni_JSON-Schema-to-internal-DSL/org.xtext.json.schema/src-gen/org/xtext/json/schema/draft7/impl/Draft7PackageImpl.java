/**
 * generated by Xtext 2.35.0
 */
package org.xtext.json.schema.draft7.impl;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EEnum;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

import org.xtext.json.schema.draft7.AbstractSchema;
import org.xtext.json.schema.draft7.AdditionalItems;
import org.xtext.json.schema.draft7.AdditionalProperties;
import org.xtext.json.schema.draft7.AnyString;
import org.xtext.json.schema.draft7.Contains;
import org.xtext.json.schema.draft7.Default;
import org.xtext.json.schema.draft7.Dependencies;
import org.xtext.json.schema.draft7.Draft7Factory;
import org.xtext.json.schema.draft7.Draft7Package;
import org.xtext.json.schema.draft7.Example;
import org.xtext.json.schema.draft7.FormatTypes;
import org.xtext.json.schema.draft7.Items;
import org.xtext.json.schema.draft7.JsonSchemaKeyword;
import org.xtext.json.schema.draft7.JsonTypes;
import org.xtext.json.schema.draft7.NamedSchema;
import org.xtext.json.schema.draft7.PropertyDependency;
import org.xtext.json.schema.draft7.Reference;
import org.xtext.json.schema.draft7.Schema;
import org.xtext.json.schema.draft7.Types;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class Draft7PackageImpl extends EPackageImpl implements Draft7Package
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass schemaEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dependenciesEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass propertyDependencyEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass containsEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass itemsEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass additionalPropertiesEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass additionalItemsEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass defaultEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass exampleEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass typesEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass abstractSchemaEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass referenceEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass namedSchemaEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass anyStringEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass numberEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum booleanEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum jsonTypesEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum formatTypesEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum jsonSchemaKeywordEEnum = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see org.xtext.json.schema.draft7.Draft7Package#eNS_URI
   * @see #init()
   * @generated
   */
  private Draft7PackageImpl()
  {
    super(eNS_URI, Draft7Factory.eINSTANCE);
  }
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   *
   * <p>This method is used to initialize {@link Draft7Package#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static Draft7Package init()
  {
    if (isInited) return (Draft7Package)EPackage.Registry.INSTANCE.getEPackage(Draft7Package.eNS_URI);

    // Obtain or create and register package
    Object registeredDraft7Package = EPackage.Registry.INSTANCE.get(eNS_URI);
    Draft7PackageImpl theDraft7Package = registeredDraft7Package instanceof Draft7PackageImpl ? (Draft7PackageImpl)registeredDraft7Package : new Draft7PackageImpl();

    isInited = true;

    // Create package meta-data objects
    theDraft7Package.createPackageContents();

    // Initialize created meta-data
    theDraft7Package.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theDraft7Package.freeze();

    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(Draft7Package.eNS_URI, theDraft7Package);
    return theDraft7Package;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSchema()
  {
    return schemaEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSchema_Type()
  {
    return (EReference)schemaEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSchema_Dependencies()
  {
    return (EReference)schemaEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSchema_AdditionalProperties()
  {
    return (EReference)schemaEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSchema_AdditionalItems()
  {
    return (EReference)schemaEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSchema_Default()
  {
    return (EReference)schemaEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSchema_PatternProperties()
  {
    return (EReference)schemaEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSchema_Example()
  {
    return (EReference)schemaEClass.getEStructuralFeatures().get(6);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSchema_Items()
  {
    return (EReference)schemaEClass.getEStructuralFeatures().get(7);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSchema_Contains()
  {
    return (EReference)schemaEClass.getEStructuralFeatures().get(8);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSchema_Definitions()
  {
    return (EReference)schemaEClass.getEStructuralFeatures().get(9);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSchema_Title()
  {
    return (EAttribute)schemaEClass.getEStructuralFeatures().get(10);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSchema_RequiredProperties()
  {
    return (EReference)schemaEClass.getEStructuralFeatures().get(11);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSchema_Description()
  {
    return (EAttribute)schemaEClass.getEStructuralFeatures().get(12);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSchema_Properties()
  {
    return (EReference)schemaEClass.getEStructuralFeatures().get(13);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSchema_EnumValues()
  {
    return (EReference)schemaEClass.getEStructuralFeatures().get(14);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSchema_Id()
  {
    return (EReference)schemaEClass.getEStructuralFeatures().get(15);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSchema_IfSchema()
  {
    return (EReference)schemaEClass.getEStructuralFeatures().get(16);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSchema_ThenSchema()
  {
    return (EReference)schemaEClass.getEStructuralFeatures().get(17);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSchema_ElseSchema()
  {
    return (EReference)schemaEClass.getEStructuralFeatures().get(18);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSchema_Const()
  {
    return (EReference)schemaEClass.getEStructuralFeatures().get(19);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSchema_ConstBoolean()
  {
    return (EAttribute)schemaEClass.getEStructuralFeatures().get(20);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSchema_AnyOfs()
  {
    return (EReference)schemaEClass.getEStructuralFeatures().get(21);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSchema_OneOfs()
  {
    return (EReference)schemaEClass.getEStructuralFeatures().get(22);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSchema_AllOfs()
  {
    return (EReference)schemaEClass.getEStructuralFeatures().get(23);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSchema_Not()
  {
    return (EReference)schemaEClass.getEStructuralFeatures().get(24);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSchema_Unique()
  {
    return (EAttribute)schemaEClass.getEStructuralFeatures().get(25);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSchema_PropertyNames()
  {
    return (EReference)schemaEClass.getEStructuralFeatures().get(26);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSchema_MinProperties()
  {
    return (EAttribute)schemaEClass.getEStructuralFeatures().get(27);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSchema_MaxProperties()
  {
    return (EAttribute)schemaEClass.getEStructuralFeatures().get(28);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSchema_MaxItems()
  {
    return (EAttribute)schemaEClass.getEStructuralFeatures().get(29);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSchema_MinItems()
  {
    return (EAttribute)schemaEClass.getEStructuralFeatures().get(30);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSchema_MaxLength()
  {
    return (EAttribute)schemaEClass.getEStructuralFeatures().get(31);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSchema_MinLength()
  {
    return (EAttribute)schemaEClass.getEStructuralFeatures().get(32);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSchema_Pattern()
  {
    return (EReference)schemaEClass.getEStructuralFeatures().get(33);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSchema_Format()
  {
    return (EAttribute)schemaEClass.getEStructuralFeatures().get(34);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSchema_MediaType()
  {
    return (EReference)schemaEClass.getEStructuralFeatures().get(35);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSchema_Encoding()
  {
    return (EReference)schemaEClass.getEStructuralFeatures().get(36);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSchema_MultipleOf()
  {
    return (EAttribute)schemaEClass.getEStructuralFeatures().get(37);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSchema_Minimum()
  {
    return (EReference)schemaEClass.getEStructuralFeatures().get(38);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSchema_ExclusiveMinimum()
  {
    return (EReference)schemaEClass.getEStructuralFeatures().get(39);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSchema_Maximum()
  {
    return (EReference)schemaEClass.getEStructuralFeatures().get(40);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSchema_ExclusiveMaximum()
  {
    return (EReference)schemaEClass.getEStructuralFeatures().get(41);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getDependencies()
  {
    return dependenciesEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getDependencies_PropertyDependency()
  {
    return (EReference)dependenciesEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getDependencies_SchemaDependencies()
  {
    return (EReference)dependenciesEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPropertyDependency()
  {
    return propertyDependencyEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPropertyDependency_Name()
  {
    return (EReference)propertyDependencyEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPropertyDependency_Dependencies()
  {
    return (EReference)propertyDependencyEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getContains()
  {
    return containsEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getContains_ContainSchemas()
  {
    return (EReference)containsEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getItems()
  {
    return itemsEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getItems_Items()
  {
    return (EReference)itemsEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getItems_SelfReference()
  {
    return (EAttribute)itemsEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getAdditionalProperties()
  {
    return additionalPropertiesEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getAdditionalProperties_AllowedBoolean()
  {
    return (EAttribute)additionalPropertiesEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getAdditionalProperties_Schema()
  {
    return (EReference)additionalPropertiesEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getAdditionalItems()
  {
    return additionalItemsEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getAdditionalItems_AllowedBoolean()
  {
    return (EAttribute)additionalItemsEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getAdditionalItems_Schema()
  {
    return (EReference)additionalItemsEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getDefault()
  {
    return defaultEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getDefault_DefaultSchema()
  {
    return (EReference)defaultEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getDefault_DefaultString()
  {
    return (EReference)defaultEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDefault_DefaultBoolean()
  {
    return (EAttribute)defaultEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getDefault_DefaultNumber()
  {
    return (EReference)defaultEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getDefault_DefaultArrayItems()
  {
    return (EReference)defaultEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getExample()
  {
    return exampleEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getExample_ExampleSchema()
  {
    return (EReference)exampleEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getExample_ExampleString()
  {
    return (EReference)exampleEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getExample_ExampleBoolean()
  {
    return (EAttribute)exampleEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getExample_ExampleNumber()
  {
    return (EReference)exampleEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getExample_ExampleArrayItems()
  {
    return (EReference)exampleEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getTypes()
  {
    return typesEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getTypes_JsonTypes()
  {
    return (EAttribute)typesEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getAbstractSchema()
  {
    return abstractSchemaEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getReference()
  {
    return referenceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getReference_Uri()
  {
    return (EReference)referenceEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getNamedSchema()
  {
    return namedSchemaEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getNamedSchema_Name()
  {
    return (EReference)namedSchemaEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getNamedSchema_Schema()
  {
    return (EReference)namedSchemaEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getAnyString()
  {
    return anyStringEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getAnyString_Name()
  {
    return (EAttribute)anyStringEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getAnyString_Keyword()
  {
    return (EAttribute)anyStringEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getNumber()
  {
    return numberEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getNumber_Number()
  {
    return (EAttribute)numberEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getNumber_Decimal()
  {
    return (EAttribute)numberEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getBoolean()
  {
    return booleanEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getJsonTypes()
  {
    return jsonTypesEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getFormatTypes()
  {
    return formatTypesEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getJsonSchemaKeyword()
  {
    return jsonSchemaKeywordEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Draft7Factory getDraft7Factory()
  {
    return (Draft7Factory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    schemaEClass = createEClass(SCHEMA);
    createEReference(schemaEClass, SCHEMA__TYPE);
    createEReference(schemaEClass, SCHEMA__DEPENDENCIES);
    createEReference(schemaEClass, SCHEMA__ADDITIONAL_PROPERTIES);
    createEReference(schemaEClass, SCHEMA__ADDITIONAL_ITEMS);
    createEReference(schemaEClass, SCHEMA__DEFAULT);
    createEReference(schemaEClass, SCHEMA__PATTERN_PROPERTIES);
    createEReference(schemaEClass, SCHEMA__EXAMPLE);
    createEReference(schemaEClass, SCHEMA__ITEMS);
    createEReference(schemaEClass, SCHEMA__CONTAINS);
    createEReference(schemaEClass, SCHEMA__DEFINITIONS);
    createEAttribute(schemaEClass, SCHEMA__TITLE);
    createEReference(schemaEClass, SCHEMA__REQUIRED_PROPERTIES);
    createEAttribute(schemaEClass, SCHEMA__DESCRIPTION);
    createEReference(schemaEClass, SCHEMA__PROPERTIES);
    createEReference(schemaEClass, SCHEMA__ENUM_VALUES);
    createEReference(schemaEClass, SCHEMA__ID);
    createEReference(schemaEClass, SCHEMA__IF_SCHEMA);
    createEReference(schemaEClass, SCHEMA__THEN_SCHEMA);
    createEReference(schemaEClass, SCHEMA__ELSE_SCHEMA);
    createEReference(schemaEClass, SCHEMA__CONST);
    createEAttribute(schemaEClass, SCHEMA__CONST_BOOLEAN);
    createEReference(schemaEClass, SCHEMA__ANY_OFS);
    createEReference(schemaEClass, SCHEMA__ONE_OFS);
    createEReference(schemaEClass, SCHEMA__ALL_OFS);
    createEReference(schemaEClass, SCHEMA__NOT);
    createEAttribute(schemaEClass, SCHEMA__UNIQUE);
    createEReference(schemaEClass, SCHEMA__PROPERTY_NAMES);
    createEAttribute(schemaEClass, SCHEMA__MIN_PROPERTIES);
    createEAttribute(schemaEClass, SCHEMA__MAX_PROPERTIES);
    createEAttribute(schemaEClass, SCHEMA__MAX_ITEMS);
    createEAttribute(schemaEClass, SCHEMA__MIN_ITEMS);
    createEAttribute(schemaEClass, SCHEMA__MAX_LENGTH);
    createEAttribute(schemaEClass, SCHEMA__MIN_LENGTH);
    createEReference(schemaEClass, SCHEMA__PATTERN);
    createEAttribute(schemaEClass, SCHEMA__FORMAT);
    createEReference(schemaEClass, SCHEMA__MEDIA_TYPE);
    createEReference(schemaEClass, SCHEMA__ENCODING);
    createEAttribute(schemaEClass, SCHEMA__MULTIPLE_OF);
    createEReference(schemaEClass, SCHEMA__MINIMUM);
    createEReference(schemaEClass, SCHEMA__EXCLUSIVE_MINIMUM);
    createEReference(schemaEClass, SCHEMA__MAXIMUM);
    createEReference(schemaEClass, SCHEMA__EXCLUSIVE_MAXIMUM);

    dependenciesEClass = createEClass(DEPENDENCIES);
    createEReference(dependenciesEClass, DEPENDENCIES__PROPERTY_DEPENDENCY);
    createEReference(dependenciesEClass, DEPENDENCIES__SCHEMA_DEPENDENCIES);

    propertyDependencyEClass = createEClass(PROPERTY_DEPENDENCY);
    createEReference(propertyDependencyEClass, PROPERTY_DEPENDENCY__NAME);
    createEReference(propertyDependencyEClass, PROPERTY_DEPENDENCY__DEPENDENCIES);

    containsEClass = createEClass(CONTAINS);
    createEReference(containsEClass, CONTAINS__CONTAIN_SCHEMAS);

    itemsEClass = createEClass(ITEMS);
    createEReference(itemsEClass, ITEMS__ITEMS);
    createEAttribute(itemsEClass, ITEMS__SELF_REFERENCE);

    additionalPropertiesEClass = createEClass(ADDITIONAL_PROPERTIES);
    createEAttribute(additionalPropertiesEClass, ADDITIONAL_PROPERTIES__ALLOWED_BOOLEAN);
    createEReference(additionalPropertiesEClass, ADDITIONAL_PROPERTIES__SCHEMA);

    additionalItemsEClass = createEClass(ADDITIONAL_ITEMS);
    createEAttribute(additionalItemsEClass, ADDITIONAL_ITEMS__ALLOWED_BOOLEAN);
    createEReference(additionalItemsEClass, ADDITIONAL_ITEMS__SCHEMA);

    defaultEClass = createEClass(DEFAULT);
    createEReference(defaultEClass, DEFAULT__DEFAULT_SCHEMA);
    createEReference(defaultEClass, DEFAULT__DEFAULT_STRING);
    createEAttribute(defaultEClass, DEFAULT__DEFAULT_BOOLEAN);
    createEReference(defaultEClass, DEFAULT__DEFAULT_NUMBER);
    createEReference(defaultEClass, DEFAULT__DEFAULT_ARRAY_ITEMS);

    exampleEClass = createEClass(EXAMPLE);
    createEReference(exampleEClass, EXAMPLE__EXAMPLE_SCHEMA);
    createEReference(exampleEClass, EXAMPLE__EXAMPLE_STRING);
    createEAttribute(exampleEClass, EXAMPLE__EXAMPLE_BOOLEAN);
    createEReference(exampleEClass, EXAMPLE__EXAMPLE_NUMBER);
    createEReference(exampleEClass, EXAMPLE__EXAMPLE_ARRAY_ITEMS);

    typesEClass = createEClass(TYPES);
    createEAttribute(typesEClass, TYPES__JSON_TYPES);

    abstractSchemaEClass = createEClass(ABSTRACT_SCHEMA);

    referenceEClass = createEClass(REFERENCE);
    createEReference(referenceEClass, REFERENCE__URI);

    namedSchemaEClass = createEClass(NAMED_SCHEMA);
    createEReference(namedSchemaEClass, NAMED_SCHEMA__NAME);
    createEReference(namedSchemaEClass, NAMED_SCHEMA__SCHEMA);

    anyStringEClass = createEClass(ANY_STRING);
    createEAttribute(anyStringEClass, ANY_STRING__NAME);
    createEAttribute(anyStringEClass, ANY_STRING__KEYWORD);

    numberEClass = createEClass(NUMBER);
    createEAttribute(numberEClass, NUMBER__NUMBER);
    createEAttribute(numberEClass, NUMBER__DECIMAL);

    // Create enums
    booleanEEnum = createEEnum(BOOLEAN);
    jsonTypesEEnum = createEEnum(JSON_TYPES);
    formatTypesEEnum = createEEnum(FORMAT_TYPES);
    jsonSchemaKeywordEEnum = createEEnum(JSON_SCHEMA_KEYWORD);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes
    schemaEClass.getESuperTypes().add(this.getAbstractSchema());
    referenceEClass.getESuperTypes().add(this.getAbstractSchema());

    // Initialize classes and features; add operations and parameters
    initEClass(schemaEClass, Schema.class, "Schema", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getSchema_Type(), this.getTypes(), null, "type", null, 0, 1, Schema.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSchema_Dependencies(), this.getDependencies(), null, "dependencies", null, 0, 1, Schema.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSchema_AdditionalProperties(), this.getAdditionalProperties(), null, "additionalProperties", null, 0, 1, Schema.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSchema_AdditionalItems(), this.getAdditionalItems(), null, "additionalItems", null, 0, 1, Schema.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSchema_Default(), this.getDefault(), null, "default", null, 0, 1, Schema.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSchema_PatternProperties(), this.getNamedSchema(), null, "patternProperties", null, 0, -1, Schema.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSchema_Example(), this.getExample(), null, "example", null, 0, 1, Schema.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSchema_Items(), this.getItems(), null, "items", null, 0, 1, Schema.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSchema_Contains(), this.getContains(), null, "contains", null, 0, 1, Schema.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSchema_Definitions(), this.getNamedSchema(), null, "definitions", null, 0, -1, Schema.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getSchema_Title(), ecorePackage.getEString(), "title", null, 0, 1, Schema.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSchema_RequiredProperties(), this.getAnyString(), null, "requiredProperties", null, 0, -1, Schema.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getSchema_Description(), ecorePackage.getEString(), "description", null, 0, 1, Schema.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSchema_Properties(), this.getNamedSchema(), null, "properties", null, 0, -1, Schema.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSchema_EnumValues(), this.getAnyString(), null, "enumValues", null, 0, -1, Schema.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSchema_Id(), this.getAnyString(), null, "id", null, 0, 1, Schema.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSchema_IfSchema(), this.getSchema(), null, "ifSchema", null, 0, 1, Schema.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSchema_ThenSchema(), this.getSchema(), null, "thenSchema", null, 0, 1, Schema.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSchema_ElseSchema(), this.getSchema(), null, "elseSchema", null, 0, 1, Schema.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSchema_Const(), this.getAnyString(), null, "const", null, 0, 1, Schema.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getSchema_ConstBoolean(), this.getBoolean(), "constBoolean", null, 0, 1, Schema.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSchema_AnyOfs(), this.getAbstractSchema(), null, "anyOfs", null, 0, -1, Schema.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSchema_OneOfs(), this.getAbstractSchema(), null, "oneOfs", null, 0, -1, Schema.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSchema_AllOfs(), this.getAbstractSchema(), null, "allOfs", null, 0, -1, Schema.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSchema_Not(), this.getAbstractSchema(), null, "not", null, 0, 1, Schema.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getSchema_Unique(), this.getBoolean(), "unique", null, 0, 1, Schema.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSchema_PropertyNames(), this.getAbstractSchema(), null, "propertyNames", null, 0, 1, Schema.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getSchema_MinProperties(), ecorePackage.getEInt(), "minProperties", null, 0, 1, Schema.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getSchema_MaxProperties(), ecorePackage.getEInt(), "maxProperties", null, 0, 1, Schema.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getSchema_MaxItems(), ecorePackage.getEInt(), "maxItems", null, 0, 1, Schema.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getSchema_MinItems(), ecorePackage.getEInt(), "minItems", null, 0, 1, Schema.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getSchema_MaxLength(), ecorePackage.getEInt(), "maxLength", null, 0, 1, Schema.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getSchema_MinLength(), ecorePackage.getEInt(), "minLength", null, 0, 1, Schema.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSchema_Pattern(), this.getAnyString(), null, "pattern", null, 0, 1, Schema.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getSchema_Format(), this.getFormatTypes(), "format", null, 0, 1, Schema.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSchema_MediaType(), this.getAnyString(), null, "mediaType", null, 0, 1, Schema.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSchema_Encoding(), this.getAnyString(), null, "encoding", null, 0, 1, Schema.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getSchema_MultipleOf(), ecorePackage.getEInt(), "multipleOf", null, 0, 1, Schema.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSchema_Minimum(), this.getNumber(), null, "minimum", null, 0, 1, Schema.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSchema_ExclusiveMinimum(), this.getNumber(), null, "exclusiveMinimum", null, 0, 1, Schema.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSchema_Maximum(), this.getNumber(), null, "maximum", null, 0, 1, Schema.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSchema_ExclusiveMaximum(), this.getNumber(), null, "exclusiveMaximum", null, 0, 1, Schema.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(dependenciesEClass, Dependencies.class, "Dependencies", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getDependencies_PropertyDependency(), this.getPropertyDependency(), null, "PropertyDependency", null, 0, 1, Dependencies.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDependencies_SchemaDependencies(), this.getNamedSchema(), null, "schemaDependencies", null, 0, -1, Dependencies.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(propertyDependencyEClass, PropertyDependency.class, "PropertyDependency", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getPropertyDependency_Name(), this.getAnyString(), null, "name", null, 0, 1, PropertyDependency.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getPropertyDependency_Dependencies(), this.getAnyString(), null, "dependencies", null, 0, -1, PropertyDependency.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(containsEClass, Contains.class, "Contains", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getContains_ContainSchemas(), this.getSchema(), null, "containSchemas", null, 0, -1, Contains.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(itemsEClass, Items.class, "Items", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getItems_Items(), this.getAbstractSchema(), null, "items", null, 0, -1, Items.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getItems_SelfReference(), this.getBoolean(), "selfReference", null, 0, 1, Items.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(additionalPropertiesEClass, AdditionalProperties.class, "AdditionalProperties", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getAdditionalProperties_AllowedBoolean(), this.getBoolean(), "allowedBoolean", null, 0, 1, AdditionalProperties.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getAdditionalProperties_Schema(), this.getAbstractSchema(), null, "schema", null, 0, 1, AdditionalProperties.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(additionalItemsEClass, AdditionalItems.class, "AdditionalItems", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getAdditionalItems_AllowedBoolean(), this.getBoolean(), "allowedBoolean", null, 0, 1, AdditionalItems.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getAdditionalItems_Schema(), this.getAbstractSchema(), null, "schema", null, 0, 1, AdditionalItems.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(defaultEClass, Default.class, "Default", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getDefault_DefaultSchema(), this.getAbstractSchema(), null, "defaultSchema", null, 0, 1, Default.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDefault_DefaultString(), this.getAnyString(), null, "defaultString", null, 0, 1, Default.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getDefault_DefaultBoolean(), this.getBoolean(), "defaultBoolean", null, 0, 1, Default.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDefault_DefaultNumber(), this.getNumber(), null, "defaultNumber", null, 0, 1, Default.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDefault_DefaultArrayItems(), this.getAbstractSchema(), null, "defaultArrayItems", null, 0, -1, Default.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(exampleEClass, Example.class, "Example", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getExample_ExampleSchema(), this.getSchema(), null, "exampleSchema", null, 0, 1, Example.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getExample_ExampleString(), this.getAnyString(), null, "exampleString", null, 0, 1, Example.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getExample_ExampleBoolean(), this.getBoolean(), "exampleBoolean", null, 0, 1, Example.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getExample_ExampleNumber(), this.getNumber(), null, "exampleNumber", null, 0, 1, Example.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getExample_ExampleArrayItems(), this.getSchema(), null, "exampleArrayItems", null, 0, -1, Example.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(typesEClass, Types.class, "Types", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getTypes_JsonTypes(), this.getJsonTypes(), "jsonTypes", null, 0, -1, Types.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(abstractSchemaEClass, AbstractSchema.class, "AbstractSchema", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(referenceEClass, Reference.class, "Reference", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getReference_Uri(), this.getAnyString(), null, "uri", null, 0, 1, Reference.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(namedSchemaEClass, NamedSchema.class, "NamedSchema", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getNamedSchema_Name(), this.getAnyString(), null, "name", null, 0, 1, NamedSchema.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getNamedSchema_Schema(), this.getAbstractSchema(), null, "schema", null, 0, 1, NamedSchema.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(anyStringEClass, AnyString.class, "AnyString", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getAnyString_Name(), ecorePackage.getEString(), "name", null, 0, 1, AnyString.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getAnyString_Keyword(), this.getJsonSchemaKeyword(), "keyword", null, 0, 1, AnyString.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(numberEClass, org.xtext.json.schema.draft7.Number.class, "Number", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getNumber_Number(), ecorePackage.getEInt(), "number", null, 0, 1, org.xtext.json.schema.draft7.Number.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getNumber_Decimal(), ecorePackage.getEInt(), "decimal", null, 0, 1, org.xtext.json.schema.draft7.Number.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Initialize enums and add enum literals
    initEEnum(booleanEEnum, org.xtext.json.schema.draft7.Boolean.class, "Boolean");
    addEEnumLiteral(booleanEEnum, org.xtext.json.schema.draft7.Boolean.TRUE_VALUE);
    addEEnumLiteral(booleanEEnum, org.xtext.json.schema.draft7.Boolean.FALSE_VALUE);

    initEEnum(jsonTypesEEnum, JsonTypes.class, "JsonTypes");
    addEEnumLiteral(jsonTypesEEnum, JsonTypes.STRING);
    addEEnumLiteral(jsonTypesEEnum, JsonTypes.INTEGER);
    addEEnumLiteral(jsonTypesEEnum, JsonTypes.NUMBER);
    addEEnumLiteral(jsonTypesEEnum, JsonTypes.OBJECT);
    addEEnumLiteral(jsonTypesEEnum, JsonTypes.ARRAY);
    addEEnumLiteral(jsonTypesEEnum, JsonTypes.BOOLEAN);
    addEEnumLiteral(jsonTypesEEnum, JsonTypes.NULL);

    initEEnum(formatTypesEEnum, FormatTypes.class, "FormatTypes");
    addEEnumLiteral(formatTypesEEnum, FormatTypes.DATE_TIME);
    addEEnumLiteral(formatTypesEEnum, FormatTypes.TIME);
    addEEnumLiteral(formatTypesEEnum, FormatTypes.DATE);
    addEEnumLiteral(formatTypesEEnum, FormatTypes.EMAIL);
    addEEnumLiteral(formatTypesEEnum, FormatTypes.IDN_EMAIL);
    addEEnumLiteral(formatTypesEEnum, FormatTypes.HOSTNAME);
    addEEnumLiteral(formatTypesEEnum, FormatTypes.IPV4);
    addEEnumLiteral(formatTypesEEnum, FormatTypes.IPV6);
    addEEnumLiteral(formatTypesEEnum, FormatTypes.URI);
    addEEnumLiteral(formatTypesEEnum, FormatTypes.URI_REFERENCE);
    addEEnumLiteral(formatTypesEEnum, FormatTypes.IRI);
    addEEnumLiteral(formatTypesEEnum, FormatTypes.IRI_REFERENCE);
    addEEnumLiteral(formatTypesEEnum, FormatTypes.URI_TEMPLATE);
    addEEnumLiteral(formatTypesEEnum, FormatTypes.JSON_POINTER);
    addEEnumLiteral(formatTypesEEnum, FormatTypes.RELATIVE_JSON_POINTER);
    addEEnumLiteral(formatTypesEEnum, FormatTypes.REGEX);

    initEEnum(jsonSchemaKeywordEEnum, JsonSchemaKeyword.class, "JsonSchemaKeyword");
    addEEnumLiteral(jsonSchemaKeywordEEnum, JsonSchemaKeyword.TITLE);
    addEEnumLiteral(jsonSchemaKeywordEEnum, JsonSchemaKeyword.SCHEMA_DRAFT7);
    addEEnumLiteral(jsonSchemaKeywordEEnum, JsonSchemaKeyword.ADDITIONAL_PROPERTIES);
    addEEnumLiteral(jsonSchemaKeywordEEnum, JsonSchemaKeyword.ADDITIONAL_ITEMS);
    addEEnumLiteral(jsonSchemaKeywordEEnum, JsonSchemaKeyword.DESCRIPTION);
    addEEnumLiteral(jsonSchemaKeywordEEnum, JsonSchemaKeyword.COMMENT);
    addEEnumLiteral(jsonSchemaKeywordEEnum, JsonSchemaKeyword.ID);
    addEEnumLiteral(jsonSchemaKeywordEEnum, JsonSchemaKeyword.DEFINITIONS);
    addEEnumLiteral(jsonSchemaKeywordEEnum, JsonSchemaKeyword.DEFAULT);
    addEEnumLiteral(jsonSchemaKeywordEEnum, JsonSchemaKeyword.EXAMPLES);
    addEEnumLiteral(jsonSchemaKeywordEEnum, JsonSchemaKeyword.SCHEMA);
    addEEnumLiteral(jsonSchemaKeywordEEnum, JsonSchemaKeyword.REF);
    addEEnumLiteral(jsonSchemaKeywordEEnum, JsonSchemaKeyword.ENUM_KEYWORD);
    addEEnumLiteral(jsonSchemaKeywordEEnum, JsonSchemaKeyword.CONST);
    addEEnumLiteral(jsonSchemaKeywordEEnum, JsonSchemaKeyword.TYPE);
    addEEnumLiteral(jsonSchemaKeywordEEnum, JsonSchemaKeyword.STRING);
    addEEnumLiteral(jsonSchemaKeywordEEnum, JsonSchemaKeyword.INTEGER);
    addEEnumLiteral(jsonSchemaKeywordEEnum, JsonSchemaKeyword.NUMBER);
    addEEnumLiteral(jsonSchemaKeywordEEnum, JsonSchemaKeyword.OBJECT);
    addEEnumLiteral(jsonSchemaKeywordEEnum, JsonSchemaKeyword.ARRAY);
    addEEnumLiteral(jsonSchemaKeywordEEnum, JsonSchemaKeyword.BOOLEAN);
    addEEnumLiteral(jsonSchemaKeywordEEnum, JsonSchemaKeyword.NULL);
    addEEnumLiteral(jsonSchemaKeywordEEnum, JsonSchemaKeyword.DATE_TIME);
    addEEnumLiteral(jsonSchemaKeywordEEnum, JsonSchemaKeyword.TIME);
    addEEnumLiteral(jsonSchemaKeywordEEnum, JsonSchemaKeyword.DATE);
    addEEnumLiteral(jsonSchemaKeywordEEnum, JsonSchemaKeyword.EMAIL);
    addEEnumLiteral(jsonSchemaKeywordEEnum, JsonSchemaKeyword.IDN_EMAIL);
    addEEnumLiteral(jsonSchemaKeywordEEnum, JsonSchemaKeyword.HOSTNAME);
    addEEnumLiteral(jsonSchemaKeywordEEnum, JsonSchemaKeyword.IPV4);
    addEEnumLiteral(jsonSchemaKeywordEEnum, JsonSchemaKeyword.IPV6);
    addEEnumLiteral(jsonSchemaKeywordEEnum, JsonSchemaKeyword.URI);
    addEEnumLiteral(jsonSchemaKeywordEEnum, JsonSchemaKeyword.URI_REFERENCE);
    addEEnumLiteral(jsonSchemaKeywordEEnum, JsonSchemaKeyword.IRI);
    addEEnumLiteral(jsonSchemaKeywordEEnum, JsonSchemaKeyword.IRI_REFERENCE);
    addEEnumLiteral(jsonSchemaKeywordEEnum, JsonSchemaKeyword.URI_TEMPLATE);
    addEEnumLiteral(jsonSchemaKeywordEEnum, JsonSchemaKeyword.JSON_POINTER);
    addEEnumLiteral(jsonSchemaKeywordEEnum, JsonSchemaKeyword.RELATIVE_JSON_POINTER);
    addEEnumLiteral(jsonSchemaKeywordEEnum, JsonSchemaKeyword.REGEX);
    addEEnumLiteral(jsonSchemaKeywordEEnum, JsonSchemaKeyword.CONTAINS);
    addEEnumLiteral(jsonSchemaKeywordEEnum, JsonSchemaKeyword.UNIQUE_ITEMS);
    addEEnumLiteral(jsonSchemaKeywordEEnum, JsonSchemaKeyword.PROPERTY_NAMES);
    addEEnumLiteral(jsonSchemaKeywordEEnum, JsonSchemaKeyword.LENGTH);
    addEEnumLiteral(jsonSchemaKeywordEEnum, JsonSchemaKeyword.MIN_LENGTH);
    addEEnumLiteral(jsonSchemaKeywordEEnum, JsonSchemaKeyword.MAX_LENGTH);
    addEEnumLiteral(jsonSchemaKeywordEEnum, JsonSchemaKeyword.MIN_ITEMS);
    addEEnumLiteral(jsonSchemaKeywordEEnum, JsonSchemaKeyword.MAX_ITEMS);
    addEEnumLiteral(jsonSchemaKeywordEEnum, JsonSchemaKeyword.PATTERN);
    addEEnumLiteral(jsonSchemaKeywordEEnum, JsonSchemaKeyword.FORMAT);
    addEEnumLiteral(jsonSchemaKeywordEEnum, JsonSchemaKeyword.MIN_PROPERTIES);
    addEEnumLiteral(jsonSchemaKeywordEEnum, JsonSchemaKeyword.MAX_PROPERTIES);
    addEEnumLiteral(jsonSchemaKeywordEEnum, JsonSchemaKeyword.DEPENDENCIES);
    addEEnumLiteral(jsonSchemaKeywordEEnum, JsonSchemaKeyword.PATTERN_PROPERTIES);
    addEEnumLiteral(jsonSchemaKeywordEEnum, JsonSchemaKeyword.REQUIRED);
    addEEnumLiteral(jsonSchemaKeywordEEnum, JsonSchemaKeyword.PROPERTIES);
    addEEnumLiteral(jsonSchemaKeywordEEnum, JsonSchemaKeyword.IF);
    addEEnumLiteral(jsonSchemaKeywordEEnum, JsonSchemaKeyword.THEN);
    addEEnumLiteral(jsonSchemaKeywordEEnum, JsonSchemaKeyword.ELSE);
    addEEnumLiteral(jsonSchemaKeywordEEnum, JsonSchemaKeyword.ANY_OF);
    addEEnumLiteral(jsonSchemaKeywordEEnum, JsonSchemaKeyword.ONE_OF);
    addEEnumLiteral(jsonSchemaKeywordEEnum, JsonSchemaKeyword.ALL_OF);
    addEEnumLiteral(jsonSchemaKeywordEEnum, JsonSchemaKeyword.NOT);
    addEEnumLiteral(jsonSchemaKeywordEEnum, JsonSchemaKeyword.ITEMS);
    addEEnumLiteral(jsonSchemaKeywordEEnum, JsonSchemaKeyword.CONTENT_MEDIA_TYPE);
    addEEnumLiteral(jsonSchemaKeywordEEnum, JsonSchemaKeyword.CONTENT_ENCODING);
    addEEnumLiteral(jsonSchemaKeywordEEnum, JsonSchemaKeyword.MULTIPLES);
    addEEnumLiteral(jsonSchemaKeywordEEnum, JsonSchemaKeyword.MINIMUM);
    addEEnumLiteral(jsonSchemaKeywordEEnum, JsonSchemaKeyword.EXCLUSIVE_MINIMUM);
    addEEnumLiteral(jsonSchemaKeywordEEnum, JsonSchemaKeyword.MAXIMUM);
    addEEnumLiteral(jsonSchemaKeywordEEnum, JsonSchemaKeyword.EXCLUSIVE_MAXIMUM);

    // Create resource
    createResource(eNS_URI);
  }

} //Draft7PackageImpl
