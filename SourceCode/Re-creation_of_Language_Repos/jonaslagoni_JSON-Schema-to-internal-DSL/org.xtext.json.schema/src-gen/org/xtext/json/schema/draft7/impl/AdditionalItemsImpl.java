/**
 * generated by Xtext 2.35.0
 */
package org.xtext.json.schema.draft7.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.json.schema.draft7.AbstractSchema;
import org.xtext.json.schema.draft7.AdditionalItems;
import org.xtext.json.schema.draft7.Draft7Package;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Additional Items</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.json.schema.draft7.impl.AdditionalItemsImpl#getAllowedBoolean <em>Allowed Boolean</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.impl.AdditionalItemsImpl#getSchema <em>Schema</em>}</li>
 * </ul>
 *
 * @generated
 */
public class AdditionalItemsImpl extends MinimalEObjectImpl.Container implements AdditionalItems
{
  /**
   * The default value of the '{@link #getAllowedBoolean() <em>Allowed Boolean</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAllowedBoolean()
   * @generated
   * @ordered
   */
  protected static final org.xtext.json.schema.draft7.Boolean ALLOWED_BOOLEAN_EDEFAULT = org.xtext.json.schema.draft7.Boolean.TRUE_VALUE;

  /**
   * The cached value of the '{@link #getAllowedBoolean() <em>Allowed Boolean</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAllowedBoolean()
   * @generated
   * @ordered
   */
  protected org.xtext.json.schema.draft7.Boolean allowedBoolean = ALLOWED_BOOLEAN_EDEFAULT;

  /**
   * The cached value of the '{@link #getSchema() <em>Schema</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSchema()
   * @generated
   * @ordered
   */
  protected AbstractSchema schema;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected AdditionalItemsImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return Draft7Package.Literals.ADDITIONAL_ITEMS;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public org.xtext.json.schema.draft7.Boolean getAllowedBoolean()
  {
    return allowedBoolean;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAllowedBoolean(org.xtext.json.schema.draft7.Boolean newAllowedBoolean)
  {
    org.xtext.json.schema.draft7.Boolean oldAllowedBoolean = allowedBoolean;
    allowedBoolean = newAllowedBoolean == null ? ALLOWED_BOOLEAN_EDEFAULT : newAllowedBoolean;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Draft7Package.ADDITIONAL_ITEMS__ALLOWED_BOOLEAN, oldAllowedBoolean, allowedBoolean));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AbstractSchema getSchema()
  {
    return schema;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSchema(AbstractSchema newSchema, NotificationChain msgs)
  {
    AbstractSchema oldSchema = schema;
    schema = newSchema;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, Draft7Package.ADDITIONAL_ITEMS__SCHEMA, oldSchema, newSchema);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSchema(AbstractSchema newSchema)
  {
    if (newSchema != schema)
    {
      NotificationChain msgs = null;
      if (schema != null)
        msgs = ((InternalEObject)schema).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - Draft7Package.ADDITIONAL_ITEMS__SCHEMA, null, msgs);
      if (newSchema != null)
        msgs = ((InternalEObject)newSchema).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - Draft7Package.ADDITIONAL_ITEMS__SCHEMA, null, msgs);
      msgs = basicSetSchema(newSchema, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Draft7Package.ADDITIONAL_ITEMS__SCHEMA, newSchema, newSchema));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case Draft7Package.ADDITIONAL_ITEMS__SCHEMA:
        return basicSetSchema(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case Draft7Package.ADDITIONAL_ITEMS__ALLOWED_BOOLEAN:
        return getAllowedBoolean();
      case Draft7Package.ADDITIONAL_ITEMS__SCHEMA:
        return getSchema();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case Draft7Package.ADDITIONAL_ITEMS__ALLOWED_BOOLEAN:
        setAllowedBoolean((org.xtext.json.schema.draft7.Boolean)newValue);
        return;
      case Draft7Package.ADDITIONAL_ITEMS__SCHEMA:
        setSchema((AbstractSchema)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case Draft7Package.ADDITIONAL_ITEMS__ALLOWED_BOOLEAN:
        setAllowedBoolean(ALLOWED_BOOLEAN_EDEFAULT);
        return;
      case Draft7Package.ADDITIONAL_ITEMS__SCHEMA:
        setSchema((AbstractSchema)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case Draft7Package.ADDITIONAL_ITEMS__ALLOWED_BOOLEAN:
        return allowedBoolean != ALLOWED_BOOLEAN_EDEFAULT;
      case Draft7Package.ADDITIONAL_ITEMS__SCHEMA:
        return schema != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (allowedBoolean: ");
    result.append(allowedBoolean);
    result.append(')');
    return result.toString();
  }

} //AdditionalItemsImpl
