/**
 * generated by Xtext 2.35.0
 */
package org.xtext.json.schema.draft7.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.json.schema.draft7.AbstractSchema;
import org.xtext.json.schema.draft7.AdditionalItems;
import org.xtext.json.schema.draft7.AdditionalProperties;
import org.xtext.json.schema.draft7.AnyString;
import org.xtext.json.schema.draft7.Contains;
import org.xtext.json.schema.draft7.Default;
import org.xtext.json.schema.draft7.Dependencies;
import org.xtext.json.schema.draft7.Draft7Package;
import org.xtext.json.schema.draft7.Example;
import org.xtext.json.schema.draft7.FormatTypes;
import org.xtext.json.schema.draft7.Items;
import org.xtext.json.schema.draft7.NamedSchema;
import org.xtext.json.schema.draft7.Schema;
import org.xtext.json.schema.draft7.Types;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Schema</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.json.schema.draft7.impl.SchemaImpl#getType <em>Type</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.impl.SchemaImpl#getDependencies <em>Dependencies</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.impl.SchemaImpl#getAdditionalProperties <em>Additional Properties</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.impl.SchemaImpl#getAdditionalItems <em>Additional Items</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.impl.SchemaImpl#getDefault <em>Default</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.impl.SchemaImpl#getPatternProperties <em>Pattern Properties</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.impl.SchemaImpl#getExample <em>Example</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.impl.SchemaImpl#getItems <em>Items</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.impl.SchemaImpl#getContains <em>Contains</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.impl.SchemaImpl#getDefinitions <em>Definitions</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.impl.SchemaImpl#getTitle <em>Title</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.impl.SchemaImpl#getRequiredProperties <em>Required Properties</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.impl.SchemaImpl#getDescription <em>Description</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.impl.SchemaImpl#getProperties <em>Properties</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.impl.SchemaImpl#getEnumValues <em>Enum Values</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.impl.SchemaImpl#getId <em>Id</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.impl.SchemaImpl#getIfSchema <em>If Schema</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.impl.SchemaImpl#getThenSchema <em>Then Schema</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.impl.SchemaImpl#getElseSchema <em>Else Schema</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.impl.SchemaImpl#getConst <em>Const</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.impl.SchemaImpl#getConstBoolean <em>Const Boolean</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.impl.SchemaImpl#getAnyOfs <em>Any Ofs</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.impl.SchemaImpl#getOneOfs <em>One Ofs</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.impl.SchemaImpl#getAllOfs <em>All Ofs</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.impl.SchemaImpl#getNot <em>Not</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.impl.SchemaImpl#getUnique <em>Unique</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.impl.SchemaImpl#getPropertyNames <em>Property Names</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.impl.SchemaImpl#getMinProperties <em>Min Properties</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.impl.SchemaImpl#getMaxProperties <em>Max Properties</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.impl.SchemaImpl#getMaxItems <em>Max Items</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.impl.SchemaImpl#getMinItems <em>Min Items</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.impl.SchemaImpl#getMaxLength <em>Max Length</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.impl.SchemaImpl#getMinLength <em>Min Length</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.impl.SchemaImpl#getPattern <em>Pattern</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.impl.SchemaImpl#getFormat <em>Format</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.impl.SchemaImpl#getMediaType <em>Media Type</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.impl.SchemaImpl#getEncoding <em>Encoding</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.impl.SchemaImpl#getMultipleOf <em>Multiple Of</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.impl.SchemaImpl#getMinimum <em>Minimum</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.impl.SchemaImpl#getExclusiveMinimum <em>Exclusive Minimum</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.impl.SchemaImpl#getMaximum <em>Maximum</em>}</li>
 *   <li>{@link org.xtext.json.schema.draft7.impl.SchemaImpl#getExclusiveMaximum <em>Exclusive Maximum</em>}</li>
 * </ul>
 *
 * @generated
 */
public class SchemaImpl extends AbstractSchemaImpl implements Schema
{
  /**
   * The cached value of the '{@link #getType() <em>Type</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getType()
   * @generated
   * @ordered
   */
  protected Types type;

  /**
   * The cached value of the '{@link #getDependencies() <em>Dependencies</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDependencies()
   * @generated
   * @ordered
   */
  protected Dependencies dependencies;

  /**
   * The cached value of the '{@link #getAdditionalProperties() <em>Additional Properties</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAdditionalProperties()
   * @generated
   * @ordered
   */
  protected AdditionalProperties additionalProperties;

  /**
   * The cached value of the '{@link #getAdditionalItems() <em>Additional Items</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAdditionalItems()
   * @generated
   * @ordered
   */
  protected AdditionalItems additionalItems;

  /**
   * The cached value of the '{@link #getDefault() <em>Default</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDefault()
   * @generated
   * @ordered
   */
  protected Default default_;

  /**
   * The cached value of the '{@link #getPatternProperties() <em>Pattern Properties</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPatternProperties()
   * @generated
   * @ordered
   */
  protected EList<NamedSchema> patternProperties;

  /**
   * The cached value of the '{@link #getExample() <em>Example</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExample()
   * @generated
   * @ordered
   */
  protected Example example;

  /**
   * The cached value of the '{@link #getItems() <em>Items</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getItems()
   * @generated
   * @ordered
   */
  protected Items items;

  /**
   * The cached value of the '{@link #getContains() <em>Contains</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getContains()
   * @generated
   * @ordered
   */
  protected Contains contains;

  /**
   * The cached value of the '{@link #getDefinitions() <em>Definitions</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDefinitions()
   * @generated
   * @ordered
   */
  protected EList<NamedSchema> definitions;

  /**
   * The default value of the '{@link #getTitle() <em>Title</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTitle()
   * @generated
   * @ordered
   */
  protected static final String TITLE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getTitle() <em>Title</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTitle()
   * @generated
   * @ordered
   */
  protected String title = TITLE_EDEFAULT;

  /**
   * The cached value of the '{@link #getRequiredProperties() <em>Required Properties</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRequiredProperties()
   * @generated
   * @ordered
   */
  protected EList<AnyString> requiredProperties;

  /**
   * The default value of the '{@link #getDescription() <em>Description</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDescription()
   * @generated
   * @ordered
   */
  protected static final String DESCRIPTION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDescription() <em>Description</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDescription()
   * @generated
   * @ordered
   */
  protected String description = DESCRIPTION_EDEFAULT;

  /**
   * The cached value of the '{@link #getProperties() <em>Properties</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getProperties()
   * @generated
   * @ordered
   */
  protected EList<NamedSchema> properties;

  /**
   * The cached value of the '{@link #getEnumValues() <em>Enum Values</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEnumValues()
   * @generated
   * @ordered
   */
  protected EList<AnyString> enumValues;

  /**
   * The cached value of the '{@link #getId() <em>Id</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getId()
   * @generated
   * @ordered
   */
  protected AnyString id;

  /**
   * The cached value of the '{@link #getIfSchema() <em>If Schema</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIfSchema()
   * @generated
   * @ordered
   */
  protected Schema ifSchema;

  /**
   * The cached value of the '{@link #getThenSchema() <em>Then Schema</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getThenSchema()
   * @generated
   * @ordered
   */
  protected Schema thenSchema;

  /**
   * The cached value of the '{@link #getElseSchema() <em>Else Schema</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getElseSchema()
   * @generated
   * @ordered
   */
  protected Schema elseSchema;

  /**
   * The cached value of the '{@link #getConst() <em>Const</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getConst()
   * @generated
   * @ordered
   */
  protected AnyString const_;

  /**
   * The default value of the '{@link #getConstBoolean() <em>Const Boolean</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getConstBoolean()
   * @generated
   * @ordered
   */
  protected static final org.xtext.json.schema.draft7.Boolean CONST_BOOLEAN_EDEFAULT = org.xtext.json.schema.draft7.Boolean.TRUE_VALUE;

  /**
   * The cached value of the '{@link #getConstBoolean() <em>Const Boolean</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getConstBoolean()
   * @generated
   * @ordered
   */
  protected org.xtext.json.schema.draft7.Boolean constBoolean = CONST_BOOLEAN_EDEFAULT;

  /**
   * The cached value of the '{@link #getAnyOfs() <em>Any Ofs</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAnyOfs()
   * @generated
   * @ordered
   */
  protected EList<AbstractSchema> anyOfs;

  /**
   * The cached value of the '{@link #getOneOfs() <em>One Ofs</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOneOfs()
   * @generated
   * @ordered
   */
  protected EList<AbstractSchema> oneOfs;

  /**
   * The cached value of the '{@link #getAllOfs() <em>All Ofs</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAllOfs()
   * @generated
   * @ordered
   */
  protected EList<AbstractSchema> allOfs;

  /**
   * The cached value of the '{@link #getNot() <em>Not</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNot()
   * @generated
   * @ordered
   */
  protected AbstractSchema not;

  /**
   * The default value of the '{@link #getUnique() <em>Unique</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUnique()
   * @generated
   * @ordered
   */
  protected static final org.xtext.json.schema.draft7.Boolean UNIQUE_EDEFAULT = org.xtext.json.schema.draft7.Boolean.TRUE_VALUE;

  /**
   * The cached value of the '{@link #getUnique() <em>Unique</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUnique()
   * @generated
   * @ordered
   */
  protected org.xtext.json.schema.draft7.Boolean unique = UNIQUE_EDEFAULT;

  /**
   * The cached value of the '{@link #getPropertyNames() <em>Property Names</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPropertyNames()
   * @generated
   * @ordered
   */
  protected AbstractSchema propertyNames;

  /**
   * The default value of the '{@link #getMinProperties() <em>Min Properties</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMinProperties()
   * @generated
   * @ordered
   */
  protected static final int MIN_PROPERTIES_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getMinProperties() <em>Min Properties</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMinProperties()
   * @generated
   * @ordered
   */
  protected int minProperties = MIN_PROPERTIES_EDEFAULT;

  /**
   * The default value of the '{@link #getMaxProperties() <em>Max Properties</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMaxProperties()
   * @generated
   * @ordered
   */
  protected static final int MAX_PROPERTIES_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getMaxProperties() <em>Max Properties</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMaxProperties()
   * @generated
   * @ordered
   */
  protected int maxProperties = MAX_PROPERTIES_EDEFAULT;

  /**
   * The default value of the '{@link #getMaxItems() <em>Max Items</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMaxItems()
   * @generated
   * @ordered
   */
  protected static final int MAX_ITEMS_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getMaxItems() <em>Max Items</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMaxItems()
   * @generated
   * @ordered
   */
  protected int maxItems = MAX_ITEMS_EDEFAULT;

  /**
   * The default value of the '{@link #getMinItems() <em>Min Items</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMinItems()
   * @generated
   * @ordered
   */
  protected static final int MIN_ITEMS_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getMinItems() <em>Min Items</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMinItems()
   * @generated
   * @ordered
   */
  protected int minItems = MIN_ITEMS_EDEFAULT;

  /**
   * The default value of the '{@link #getMaxLength() <em>Max Length</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMaxLength()
   * @generated
   * @ordered
   */
  protected static final int MAX_LENGTH_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getMaxLength() <em>Max Length</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMaxLength()
   * @generated
   * @ordered
   */
  protected int maxLength = MAX_LENGTH_EDEFAULT;

  /**
   * The default value of the '{@link #getMinLength() <em>Min Length</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMinLength()
   * @generated
   * @ordered
   */
  protected static final int MIN_LENGTH_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getMinLength() <em>Min Length</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMinLength()
   * @generated
   * @ordered
   */
  protected int minLength = MIN_LENGTH_EDEFAULT;

  /**
   * The cached value of the '{@link #getPattern() <em>Pattern</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPattern()
   * @generated
   * @ordered
   */
  protected AnyString pattern;

  /**
   * The default value of the '{@link #getFormat() <em>Format</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFormat()
   * @generated
   * @ordered
   */
  protected static final FormatTypes FORMAT_EDEFAULT = FormatTypes.DATE_TIME;

  /**
   * The cached value of the '{@link #getFormat() <em>Format</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFormat()
   * @generated
   * @ordered
   */
  protected FormatTypes format = FORMAT_EDEFAULT;

  /**
   * The cached value of the '{@link #getMediaType() <em>Media Type</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMediaType()
   * @generated
   * @ordered
   */
  protected AnyString mediaType;

  /**
   * The cached value of the '{@link #getEncoding() <em>Encoding</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEncoding()
   * @generated
   * @ordered
   */
  protected AnyString encoding;

  /**
   * The default value of the '{@link #getMultipleOf() <em>Multiple Of</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMultipleOf()
   * @generated
   * @ordered
   */
  protected static final int MULTIPLE_OF_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getMultipleOf() <em>Multiple Of</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMultipleOf()
   * @generated
   * @ordered
   */
  protected int multipleOf = MULTIPLE_OF_EDEFAULT;

  /**
   * The cached value of the '{@link #getMinimum() <em>Minimum</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMinimum()
   * @generated
   * @ordered
   */
  protected org.xtext.json.schema.draft7.Number minimum;

  /**
   * The cached value of the '{@link #getExclusiveMinimum() <em>Exclusive Minimum</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExclusiveMinimum()
   * @generated
   * @ordered
   */
  protected org.xtext.json.schema.draft7.Number exclusiveMinimum;

  /**
   * The cached value of the '{@link #getMaximum() <em>Maximum</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMaximum()
   * @generated
   * @ordered
   */
  protected org.xtext.json.schema.draft7.Number maximum;

  /**
   * The cached value of the '{@link #getExclusiveMaximum() <em>Exclusive Maximum</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExclusiveMaximum()
   * @generated
   * @ordered
   */
  protected org.xtext.json.schema.draft7.Number exclusiveMaximum;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SchemaImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return Draft7Package.Literals.SCHEMA;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Types getType()
  {
    return type;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetType(Types newType, NotificationChain msgs)
  {
    Types oldType = type;
    type = newType;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, Draft7Package.SCHEMA__TYPE, oldType, newType);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setType(Types newType)
  {
    if (newType != type)
    {
      NotificationChain msgs = null;
      if (type != null)
        msgs = ((InternalEObject)type).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - Draft7Package.SCHEMA__TYPE, null, msgs);
      if (newType != null)
        msgs = ((InternalEObject)newType).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - Draft7Package.SCHEMA__TYPE, null, msgs);
      msgs = basicSetType(newType, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Draft7Package.SCHEMA__TYPE, newType, newType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Dependencies getDependencies()
  {
    return dependencies;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetDependencies(Dependencies newDependencies, NotificationChain msgs)
  {
    Dependencies oldDependencies = dependencies;
    dependencies = newDependencies;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, Draft7Package.SCHEMA__DEPENDENCIES, oldDependencies, newDependencies);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDependencies(Dependencies newDependencies)
  {
    if (newDependencies != dependencies)
    {
      NotificationChain msgs = null;
      if (dependencies != null)
        msgs = ((InternalEObject)dependencies).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - Draft7Package.SCHEMA__DEPENDENCIES, null, msgs);
      if (newDependencies != null)
        msgs = ((InternalEObject)newDependencies).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - Draft7Package.SCHEMA__DEPENDENCIES, null, msgs);
      msgs = basicSetDependencies(newDependencies, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Draft7Package.SCHEMA__DEPENDENCIES, newDependencies, newDependencies));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AdditionalProperties getAdditionalProperties()
  {
    return additionalProperties;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetAdditionalProperties(AdditionalProperties newAdditionalProperties, NotificationChain msgs)
  {
    AdditionalProperties oldAdditionalProperties = additionalProperties;
    additionalProperties = newAdditionalProperties;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, Draft7Package.SCHEMA__ADDITIONAL_PROPERTIES, oldAdditionalProperties, newAdditionalProperties);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAdditionalProperties(AdditionalProperties newAdditionalProperties)
  {
    if (newAdditionalProperties != additionalProperties)
    {
      NotificationChain msgs = null;
      if (additionalProperties != null)
        msgs = ((InternalEObject)additionalProperties).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - Draft7Package.SCHEMA__ADDITIONAL_PROPERTIES, null, msgs);
      if (newAdditionalProperties != null)
        msgs = ((InternalEObject)newAdditionalProperties).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - Draft7Package.SCHEMA__ADDITIONAL_PROPERTIES, null, msgs);
      msgs = basicSetAdditionalProperties(newAdditionalProperties, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Draft7Package.SCHEMA__ADDITIONAL_PROPERTIES, newAdditionalProperties, newAdditionalProperties));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AdditionalItems getAdditionalItems()
  {
    return additionalItems;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetAdditionalItems(AdditionalItems newAdditionalItems, NotificationChain msgs)
  {
    AdditionalItems oldAdditionalItems = additionalItems;
    additionalItems = newAdditionalItems;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, Draft7Package.SCHEMA__ADDITIONAL_ITEMS, oldAdditionalItems, newAdditionalItems);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAdditionalItems(AdditionalItems newAdditionalItems)
  {
    if (newAdditionalItems != additionalItems)
    {
      NotificationChain msgs = null;
      if (additionalItems != null)
        msgs = ((InternalEObject)additionalItems).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - Draft7Package.SCHEMA__ADDITIONAL_ITEMS, null, msgs);
      if (newAdditionalItems != null)
        msgs = ((InternalEObject)newAdditionalItems).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - Draft7Package.SCHEMA__ADDITIONAL_ITEMS, null, msgs);
      msgs = basicSetAdditionalItems(newAdditionalItems, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Draft7Package.SCHEMA__ADDITIONAL_ITEMS, newAdditionalItems, newAdditionalItems));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Default getDefault()
  {
    return default_;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetDefault(Default newDefault, NotificationChain msgs)
  {
    Default oldDefault = default_;
    default_ = newDefault;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, Draft7Package.SCHEMA__DEFAULT, oldDefault, newDefault);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDefault(Default newDefault)
  {
    if (newDefault != default_)
    {
      NotificationChain msgs = null;
      if (default_ != null)
        msgs = ((InternalEObject)default_).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - Draft7Package.SCHEMA__DEFAULT, null, msgs);
      if (newDefault != null)
        msgs = ((InternalEObject)newDefault).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - Draft7Package.SCHEMA__DEFAULT, null, msgs);
      msgs = basicSetDefault(newDefault, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Draft7Package.SCHEMA__DEFAULT, newDefault, newDefault));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<NamedSchema> getPatternProperties()
  {
    if (patternProperties == null)
    {
      patternProperties = new EObjectContainmentEList<NamedSchema>(NamedSchema.class, this, Draft7Package.SCHEMA__PATTERN_PROPERTIES);
    }
    return patternProperties;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Example getExample()
  {
    return example;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetExample(Example newExample, NotificationChain msgs)
  {
    Example oldExample = example;
    example = newExample;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, Draft7Package.SCHEMA__EXAMPLE, oldExample, newExample);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setExample(Example newExample)
  {
    if (newExample != example)
    {
      NotificationChain msgs = null;
      if (example != null)
        msgs = ((InternalEObject)example).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - Draft7Package.SCHEMA__EXAMPLE, null, msgs);
      if (newExample != null)
        msgs = ((InternalEObject)newExample).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - Draft7Package.SCHEMA__EXAMPLE, null, msgs);
      msgs = basicSetExample(newExample, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Draft7Package.SCHEMA__EXAMPLE, newExample, newExample));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Items getItems()
  {
    return items;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetItems(Items newItems, NotificationChain msgs)
  {
    Items oldItems = items;
    items = newItems;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, Draft7Package.SCHEMA__ITEMS, oldItems, newItems);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setItems(Items newItems)
  {
    if (newItems != items)
    {
      NotificationChain msgs = null;
      if (items != null)
        msgs = ((InternalEObject)items).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - Draft7Package.SCHEMA__ITEMS, null, msgs);
      if (newItems != null)
        msgs = ((InternalEObject)newItems).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - Draft7Package.SCHEMA__ITEMS, null, msgs);
      msgs = basicSetItems(newItems, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Draft7Package.SCHEMA__ITEMS, newItems, newItems));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Contains getContains()
  {
    return contains;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetContains(Contains newContains, NotificationChain msgs)
  {
    Contains oldContains = contains;
    contains = newContains;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, Draft7Package.SCHEMA__CONTAINS, oldContains, newContains);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setContains(Contains newContains)
  {
    if (newContains != contains)
    {
      NotificationChain msgs = null;
      if (contains != null)
        msgs = ((InternalEObject)contains).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - Draft7Package.SCHEMA__CONTAINS, null, msgs);
      if (newContains != null)
        msgs = ((InternalEObject)newContains).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - Draft7Package.SCHEMA__CONTAINS, null, msgs);
      msgs = basicSetContains(newContains, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Draft7Package.SCHEMA__CONTAINS, newContains, newContains));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<NamedSchema> getDefinitions()
  {
    if (definitions == null)
    {
      definitions = new EObjectContainmentEList<NamedSchema>(NamedSchema.class, this, Draft7Package.SCHEMA__DEFINITIONS);
    }
    return definitions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getTitle()
  {
    return title;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setTitle(String newTitle)
  {
    String oldTitle = title;
    title = newTitle;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Draft7Package.SCHEMA__TITLE, oldTitle, title));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<AnyString> getRequiredProperties()
  {
    if (requiredProperties == null)
    {
      requiredProperties = new EObjectContainmentEList<AnyString>(AnyString.class, this, Draft7Package.SCHEMA__REQUIRED_PROPERTIES);
    }
    return requiredProperties;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getDescription()
  {
    return description;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDescription(String newDescription)
  {
    String oldDescription = description;
    description = newDescription;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Draft7Package.SCHEMA__DESCRIPTION, oldDescription, description));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<NamedSchema> getProperties()
  {
    if (properties == null)
    {
      properties = new EObjectContainmentEList<NamedSchema>(NamedSchema.class, this, Draft7Package.SCHEMA__PROPERTIES);
    }
    return properties;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<AnyString> getEnumValues()
  {
    if (enumValues == null)
    {
      enumValues = new EObjectContainmentEList<AnyString>(AnyString.class, this, Draft7Package.SCHEMA__ENUM_VALUES);
    }
    return enumValues;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AnyString getId()
  {
    return id;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetId(AnyString newId, NotificationChain msgs)
  {
    AnyString oldId = id;
    id = newId;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, Draft7Package.SCHEMA__ID, oldId, newId);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setId(AnyString newId)
  {
    if (newId != id)
    {
      NotificationChain msgs = null;
      if (id != null)
        msgs = ((InternalEObject)id).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - Draft7Package.SCHEMA__ID, null, msgs);
      if (newId != null)
        msgs = ((InternalEObject)newId).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - Draft7Package.SCHEMA__ID, null, msgs);
      msgs = basicSetId(newId, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Draft7Package.SCHEMA__ID, newId, newId));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Schema getIfSchema()
  {
    return ifSchema;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetIfSchema(Schema newIfSchema, NotificationChain msgs)
  {
    Schema oldIfSchema = ifSchema;
    ifSchema = newIfSchema;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, Draft7Package.SCHEMA__IF_SCHEMA, oldIfSchema, newIfSchema);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setIfSchema(Schema newIfSchema)
  {
    if (newIfSchema != ifSchema)
    {
      NotificationChain msgs = null;
      if (ifSchema != null)
        msgs = ((InternalEObject)ifSchema).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - Draft7Package.SCHEMA__IF_SCHEMA, null, msgs);
      if (newIfSchema != null)
        msgs = ((InternalEObject)newIfSchema).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - Draft7Package.SCHEMA__IF_SCHEMA, null, msgs);
      msgs = basicSetIfSchema(newIfSchema, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Draft7Package.SCHEMA__IF_SCHEMA, newIfSchema, newIfSchema));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Schema getThenSchema()
  {
    return thenSchema;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetThenSchema(Schema newThenSchema, NotificationChain msgs)
  {
    Schema oldThenSchema = thenSchema;
    thenSchema = newThenSchema;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, Draft7Package.SCHEMA__THEN_SCHEMA, oldThenSchema, newThenSchema);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setThenSchema(Schema newThenSchema)
  {
    if (newThenSchema != thenSchema)
    {
      NotificationChain msgs = null;
      if (thenSchema != null)
        msgs = ((InternalEObject)thenSchema).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - Draft7Package.SCHEMA__THEN_SCHEMA, null, msgs);
      if (newThenSchema != null)
        msgs = ((InternalEObject)newThenSchema).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - Draft7Package.SCHEMA__THEN_SCHEMA, null, msgs);
      msgs = basicSetThenSchema(newThenSchema, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Draft7Package.SCHEMA__THEN_SCHEMA, newThenSchema, newThenSchema));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Schema getElseSchema()
  {
    return elseSchema;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetElseSchema(Schema newElseSchema, NotificationChain msgs)
  {
    Schema oldElseSchema = elseSchema;
    elseSchema = newElseSchema;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, Draft7Package.SCHEMA__ELSE_SCHEMA, oldElseSchema, newElseSchema);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setElseSchema(Schema newElseSchema)
  {
    if (newElseSchema != elseSchema)
    {
      NotificationChain msgs = null;
      if (elseSchema != null)
        msgs = ((InternalEObject)elseSchema).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - Draft7Package.SCHEMA__ELSE_SCHEMA, null, msgs);
      if (newElseSchema != null)
        msgs = ((InternalEObject)newElseSchema).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - Draft7Package.SCHEMA__ELSE_SCHEMA, null, msgs);
      msgs = basicSetElseSchema(newElseSchema, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Draft7Package.SCHEMA__ELSE_SCHEMA, newElseSchema, newElseSchema));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AnyString getConst()
  {
    return const_;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetConst(AnyString newConst, NotificationChain msgs)
  {
    AnyString oldConst = const_;
    const_ = newConst;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, Draft7Package.SCHEMA__CONST, oldConst, newConst);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setConst(AnyString newConst)
  {
    if (newConst != const_)
    {
      NotificationChain msgs = null;
      if (const_ != null)
        msgs = ((InternalEObject)const_).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - Draft7Package.SCHEMA__CONST, null, msgs);
      if (newConst != null)
        msgs = ((InternalEObject)newConst).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - Draft7Package.SCHEMA__CONST, null, msgs);
      msgs = basicSetConst(newConst, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Draft7Package.SCHEMA__CONST, newConst, newConst));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public org.xtext.json.schema.draft7.Boolean getConstBoolean()
  {
    return constBoolean;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setConstBoolean(org.xtext.json.schema.draft7.Boolean newConstBoolean)
  {
    org.xtext.json.schema.draft7.Boolean oldConstBoolean = constBoolean;
    constBoolean = newConstBoolean == null ? CONST_BOOLEAN_EDEFAULT : newConstBoolean;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Draft7Package.SCHEMA__CONST_BOOLEAN, oldConstBoolean, constBoolean));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<AbstractSchema> getAnyOfs()
  {
    if (anyOfs == null)
    {
      anyOfs = new EObjectContainmentEList<AbstractSchema>(AbstractSchema.class, this, Draft7Package.SCHEMA__ANY_OFS);
    }
    return anyOfs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<AbstractSchema> getOneOfs()
  {
    if (oneOfs == null)
    {
      oneOfs = new EObjectContainmentEList<AbstractSchema>(AbstractSchema.class, this, Draft7Package.SCHEMA__ONE_OFS);
    }
    return oneOfs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<AbstractSchema> getAllOfs()
  {
    if (allOfs == null)
    {
      allOfs = new EObjectContainmentEList<AbstractSchema>(AbstractSchema.class, this, Draft7Package.SCHEMA__ALL_OFS);
    }
    return allOfs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AbstractSchema getNot()
  {
    return not;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetNot(AbstractSchema newNot, NotificationChain msgs)
  {
    AbstractSchema oldNot = not;
    not = newNot;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, Draft7Package.SCHEMA__NOT, oldNot, newNot);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setNot(AbstractSchema newNot)
  {
    if (newNot != not)
    {
      NotificationChain msgs = null;
      if (not != null)
        msgs = ((InternalEObject)not).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - Draft7Package.SCHEMA__NOT, null, msgs);
      if (newNot != null)
        msgs = ((InternalEObject)newNot).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - Draft7Package.SCHEMA__NOT, null, msgs);
      msgs = basicSetNot(newNot, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Draft7Package.SCHEMA__NOT, newNot, newNot));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public org.xtext.json.schema.draft7.Boolean getUnique()
  {
    return unique;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setUnique(org.xtext.json.schema.draft7.Boolean newUnique)
  {
    org.xtext.json.schema.draft7.Boolean oldUnique = unique;
    unique = newUnique == null ? UNIQUE_EDEFAULT : newUnique;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Draft7Package.SCHEMA__UNIQUE, oldUnique, unique));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AbstractSchema getPropertyNames()
  {
    return propertyNames;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetPropertyNames(AbstractSchema newPropertyNames, NotificationChain msgs)
  {
    AbstractSchema oldPropertyNames = propertyNames;
    propertyNames = newPropertyNames;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, Draft7Package.SCHEMA__PROPERTY_NAMES, oldPropertyNames, newPropertyNames);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPropertyNames(AbstractSchema newPropertyNames)
  {
    if (newPropertyNames != propertyNames)
    {
      NotificationChain msgs = null;
      if (propertyNames != null)
        msgs = ((InternalEObject)propertyNames).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - Draft7Package.SCHEMA__PROPERTY_NAMES, null, msgs);
      if (newPropertyNames != null)
        msgs = ((InternalEObject)newPropertyNames).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - Draft7Package.SCHEMA__PROPERTY_NAMES, null, msgs);
      msgs = basicSetPropertyNames(newPropertyNames, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Draft7Package.SCHEMA__PROPERTY_NAMES, newPropertyNames, newPropertyNames));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getMinProperties()
  {
    return minProperties;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setMinProperties(int newMinProperties)
  {
    int oldMinProperties = minProperties;
    minProperties = newMinProperties;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Draft7Package.SCHEMA__MIN_PROPERTIES, oldMinProperties, minProperties));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getMaxProperties()
  {
    return maxProperties;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setMaxProperties(int newMaxProperties)
  {
    int oldMaxProperties = maxProperties;
    maxProperties = newMaxProperties;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Draft7Package.SCHEMA__MAX_PROPERTIES, oldMaxProperties, maxProperties));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getMaxItems()
  {
    return maxItems;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setMaxItems(int newMaxItems)
  {
    int oldMaxItems = maxItems;
    maxItems = newMaxItems;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Draft7Package.SCHEMA__MAX_ITEMS, oldMaxItems, maxItems));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getMinItems()
  {
    return minItems;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setMinItems(int newMinItems)
  {
    int oldMinItems = minItems;
    minItems = newMinItems;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Draft7Package.SCHEMA__MIN_ITEMS, oldMinItems, minItems));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getMaxLength()
  {
    return maxLength;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setMaxLength(int newMaxLength)
  {
    int oldMaxLength = maxLength;
    maxLength = newMaxLength;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Draft7Package.SCHEMA__MAX_LENGTH, oldMaxLength, maxLength));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getMinLength()
  {
    return minLength;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setMinLength(int newMinLength)
  {
    int oldMinLength = minLength;
    minLength = newMinLength;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Draft7Package.SCHEMA__MIN_LENGTH, oldMinLength, minLength));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AnyString getPattern()
  {
    return pattern;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetPattern(AnyString newPattern, NotificationChain msgs)
  {
    AnyString oldPattern = pattern;
    pattern = newPattern;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, Draft7Package.SCHEMA__PATTERN, oldPattern, newPattern);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPattern(AnyString newPattern)
  {
    if (newPattern != pattern)
    {
      NotificationChain msgs = null;
      if (pattern != null)
        msgs = ((InternalEObject)pattern).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - Draft7Package.SCHEMA__PATTERN, null, msgs);
      if (newPattern != null)
        msgs = ((InternalEObject)newPattern).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - Draft7Package.SCHEMA__PATTERN, null, msgs);
      msgs = basicSetPattern(newPattern, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Draft7Package.SCHEMA__PATTERN, newPattern, newPattern));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public FormatTypes getFormat()
  {
    return format;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFormat(FormatTypes newFormat)
  {
    FormatTypes oldFormat = format;
    format = newFormat == null ? FORMAT_EDEFAULT : newFormat;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Draft7Package.SCHEMA__FORMAT, oldFormat, format));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AnyString getMediaType()
  {
    return mediaType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetMediaType(AnyString newMediaType, NotificationChain msgs)
  {
    AnyString oldMediaType = mediaType;
    mediaType = newMediaType;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, Draft7Package.SCHEMA__MEDIA_TYPE, oldMediaType, newMediaType);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setMediaType(AnyString newMediaType)
  {
    if (newMediaType != mediaType)
    {
      NotificationChain msgs = null;
      if (mediaType != null)
        msgs = ((InternalEObject)mediaType).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - Draft7Package.SCHEMA__MEDIA_TYPE, null, msgs);
      if (newMediaType != null)
        msgs = ((InternalEObject)newMediaType).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - Draft7Package.SCHEMA__MEDIA_TYPE, null, msgs);
      msgs = basicSetMediaType(newMediaType, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Draft7Package.SCHEMA__MEDIA_TYPE, newMediaType, newMediaType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AnyString getEncoding()
  {
    return encoding;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetEncoding(AnyString newEncoding, NotificationChain msgs)
  {
    AnyString oldEncoding = encoding;
    encoding = newEncoding;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, Draft7Package.SCHEMA__ENCODING, oldEncoding, newEncoding);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setEncoding(AnyString newEncoding)
  {
    if (newEncoding != encoding)
    {
      NotificationChain msgs = null;
      if (encoding != null)
        msgs = ((InternalEObject)encoding).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - Draft7Package.SCHEMA__ENCODING, null, msgs);
      if (newEncoding != null)
        msgs = ((InternalEObject)newEncoding).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - Draft7Package.SCHEMA__ENCODING, null, msgs);
      msgs = basicSetEncoding(newEncoding, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Draft7Package.SCHEMA__ENCODING, newEncoding, newEncoding));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getMultipleOf()
  {
    return multipleOf;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setMultipleOf(int newMultipleOf)
  {
    int oldMultipleOf = multipleOf;
    multipleOf = newMultipleOf;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Draft7Package.SCHEMA__MULTIPLE_OF, oldMultipleOf, multipleOf));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public org.xtext.json.schema.draft7.Number getMinimum()
  {
    return minimum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetMinimum(org.xtext.json.schema.draft7.Number newMinimum, NotificationChain msgs)
  {
    org.xtext.json.schema.draft7.Number oldMinimum = minimum;
    minimum = newMinimum;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, Draft7Package.SCHEMA__MINIMUM, oldMinimum, newMinimum);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setMinimum(org.xtext.json.schema.draft7.Number newMinimum)
  {
    if (newMinimum != minimum)
    {
      NotificationChain msgs = null;
      if (minimum != null)
        msgs = ((InternalEObject)minimum).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - Draft7Package.SCHEMA__MINIMUM, null, msgs);
      if (newMinimum != null)
        msgs = ((InternalEObject)newMinimum).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - Draft7Package.SCHEMA__MINIMUM, null, msgs);
      msgs = basicSetMinimum(newMinimum, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Draft7Package.SCHEMA__MINIMUM, newMinimum, newMinimum));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public org.xtext.json.schema.draft7.Number getExclusiveMinimum()
  {
    return exclusiveMinimum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetExclusiveMinimum(org.xtext.json.schema.draft7.Number newExclusiveMinimum, NotificationChain msgs)
  {
    org.xtext.json.schema.draft7.Number oldExclusiveMinimum = exclusiveMinimum;
    exclusiveMinimum = newExclusiveMinimum;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, Draft7Package.SCHEMA__EXCLUSIVE_MINIMUM, oldExclusiveMinimum, newExclusiveMinimum);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setExclusiveMinimum(org.xtext.json.schema.draft7.Number newExclusiveMinimum)
  {
    if (newExclusiveMinimum != exclusiveMinimum)
    {
      NotificationChain msgs = null;
      if (exclusiveMinimum != null)
        msgs = ((InternalEObject)exclusiveMinimum).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - Draft7Package.SCHEMA__EXCLUSIVE_MINIMUM, null, msgs);
      if (newExclusiveMinimum != null)
        msgs = ((InternalEObject)newExclusiveMinimum).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - Draft7Package.SCHEMA__EXCLUSIVE_MINIMUM, null, msgs);
      msgs = basicSetExclusiveMinimum(newExclusiveMinimum, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Draft7Package.SCHEMA__EXCLUSIVE_MINIMUM, newExclusiveMinimum, newExclusiveMinimum));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public org.xtext.json.schema.draft7.Number getMaximum()
  {
    return maximum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetMaximum(org.xtext.json.schema.draft7.Number newMaximum, NotificationChain msgs)
  {
    org.xtext.json.schema.draft7.Number oldMaximum = maximum;
    maximum = newMaximum;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, Draft7Package.SCHEMA__MAXIMUM, oldMaximum, newMaximum);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setMaximum(org.xtext.json.schema.draft7.Number newMaximum)
  {
    if (newMaximum != maximum)
    {
      NotificationChain msgs = null;
      if (maximum != null)
        msgs = ((InternalEObject)maximum).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - Draft7Package.SCHEMA__MAXIMUM, null, msgs);
      if (newMaximum != null)
        msgs = ((InternalEObject)newMaximum).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - Draft7Package.SCHEMA__MAXIMUM, null, msgs);
      msgs = basicSetMaximum(newMaximum, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Draft7Package.SCHEMA__MAXIMUM, newMaximum, newMaximum));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public org.xtext.json.schema.draft7.Number getExclusiveMaximum()
  {
    return exclusiveMaximum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetExclusiveMaximum(org.xtext.json.schema.draft7.Number newExclusiveMaximum, NotificationChain msgs)
  {
    org.xtext.json.schema.draft7.Number oldExclusiveMaximum = exclusiveMaximum;
    exclusiveMaximum = newExclusiveMaximum;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, Draft7Package.SCHEMA__EXCLUSIVE_MAXIMUM, oldExclusiveMaximum, newExclusiveMaximum);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setExclusiveMaximum(org.xtext.json.schema.draft7.Number newExclusiveMaximum)
  {
    if (newExclusiveMaximum != exclusiveMaximum)
    {
      NotificationChain msgs = null;
      if (exclusiveMaximum != null)
        msgs = ((InternalEObject)exclusiveMaximum).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - Draft7Package.SCHEMA__EXCLUSIVE_MAXIMUM, null, msgs);
      if (newExclusiveMaximum != null)
        msgs = ((InternalEObject)newExclusiveMaximum).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - Draft7Package.SCHEMA__EXCLUSIVE_MAXIMUM, null, msgs);
      msgs = basicSetExclusiveMaximum(newExclusiveMaximum, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Draft7Package.SCHEMA__EXCLUSIVE_MAXIMUM, newExclusiveMaximum, newExclusiveMaximum));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case Draft7Package.SCHEMA__TYPE:
        return basicSetType(null, msgs);
      case Draft7Package.SCHEMA__DEPENDENCIES:
        return basicSetDependencies(null, msgs);
      case Draft7Package.SCHEMA__ADDITIONAL_PROPERTIES:
        return basicSetAdditionalProperties(null, msgs);
      case Draft7Package.SCHEMA__ADDITIONAL_ITEMS:
        return basicSetAdditionalItems(null, msgs);
      case Draft7Package.SCHEMA__DEFAULT:
        return basicSetDefault(null, msgs);
      case Draft7Package.SCHEMA__PATTERN_PROPERTIES:
        return ((InternalEList<?>)getPatternProperties()).basicRemove(otherEnd, msgs);
      case Draft7Package.SCHEMA__EXAMPLE:
        return basicSetExample(null, msgs);
      case Draft7Package.SCHEMA__ITEMS:
        return basicSetItems(null, msgs);
      case Draft7Package.SCHEMA__CONTAINS:
        return basicSetContains(null, msgs);
      case Draft7Package.SCHEMA__DEFINITIONS:
        return ((InternalEList<?>)getDefinitions()).basicRemove(otherEnd, msgs);
      case Draft7Package.SCHEMA__REQUIRED_PROPERTIES:
        return ((InternalEList<?>)getRequiredProperties()).basicRemove(otherEnd, msgs);
      case Draft7Package.SCHEMA__PROPERTIES:
        return ((InternalEList<?>)getProperties()).basicRemove(otherEnd, msgs);
      case Draft7Package.SCHEMA__ENUM_VALUES:
        return ((InternalEList<?>)getEnumValues()).basicRemove(otherEnd, msgs);
      case Draft7Package.SCHEMA__ID:
        return basicSetId(null, msgs);
      case Draft7Package.SCHEMA__IF_SCHEMA:
        return basicSetIfSchema(null, msgs);
      case Draft7Package.SCHEMA__THEN_SCHEMA:
        return basicSetThenSchema(null, msgs);
      case Draft7Package.SCHEMA__ELSE_SCHEMA:
        return basicSetElseSchema(null, msgs);
      case Draft7Package.SCHEMA__CONST:
        return basicSetConst(null, msgs);
      case Draft7Package.SCHEMA__ANY_OFS:
        return ((InternalEList<?>)getAnyOfs()).basicRemove(otherEnd, msgs);
      case Draft7Package.SCHEMA__ONE_OFS:
        return ((InternalEList<?>)getOneOfs()).basicRemove(otherEnd, msgs);
      case Draft7Package.SCHEMA__ALL_OFS:
        return ((InternalEList<?>)getAllOfs()).basicRemove(otherEnd, msgs);
      case Draft7Package.SCHEMA__NOT:
        return basicSetNot(null, msgs);
      case Draft7Package.SCHEMA__PROPERTY_NAMES:
        return basicSetPropertyNames(null, msgs);
      case Draft7Package.SCHEMA__PATTERN:
        return basicSetPattern(null, msgs);
      case Draft7Package.SCHEMA__MEDIA_TYPE:
        return basicSetMediaType(null, msgs);
      case Draft7Package.SCHEMA__ENCODING:
        return basicSetEncoding(null, msgs);
      case Draft7Package.SCHEMA__MINIMUM:
        return basicSetMinimum(null, msgs);
      case Draft7Package.SCHEMA__EXCLUSIVE_MINIMUM:
        return basicSetExclusiveMinimum(null, msgs);
      case Draft7Package.SCHEMA__MAXIMUM:
        return basicSetMaximum(null, msgs);
      case Draft7Package.SCHEMA__EXCLUSIVE_MAXIMUM:
        return basicSetExclusiveMaximum(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case Draft7Package.SCHEMA__TYPE:
        return getType();
      case Draft7Package.SCHEMA__DEPENDENCIES:
        return getDependencies();
      case Draft7Package.SCHEMA__ADDITIONAL_PROPERTIES:
        return getAdditionalProperties();
      case Draft7Package.SCHEMA__ADDITIONAL_ITEMS:
        return getAdditionalItems();
      case Draft7Package.SCHEMA__DEFAULT:
        return getDefault();
      case Draft7Package.SCHEMA__PATTERN_PROPERTIES:
        return getPatternProperties();
      case Draft7Package.SCHEMA__EXAMPLE:
        return getExample();
      case Draft7Package.SCHEMA__ITEMS:
        return getItems();
      case Draft7Package.SCHEMA__CONTAINS:
        return getContains();
      case Draft7Package.SCHEMA__DEFINITIONS:
        return getDefinitions();
      case Draft7Package.SCHEMA__TITLE:
        return getTitle();
      case Draft7Package.SCHEMA__REQUIRED_PROPERTIES:
        return getRequiredProperties();
      case Draft7Package.SCHEMA__DESCRIPTION:
        return getDescription();
      case Draft7Package.SCHEMA__PROPERTIES:
        return getProperties();
      case Draft7Package.SCHEMA__ENUM_VALUES:
        return getEnumValues();
      case Draft7Package.SCHEMA__ID:
        return getId();
      case Draft7Package.SCHEMA__IF_SCHEMA:
        return getIfSchema();
      case Draft7Package.SCHEMA__THEN_SCHEMA:
        return getThenSchema();
      case Draft7Package.SCHEMA__ELSE_SCHEMA:
        return getElseSchema();
      case Draft7Package.SCHEMA__CONST:
        return getConst();
      case Draft7Package.SCHEMA__CONST_BOOLEAN:
        return getConstBoolean();
      case Draft7Package.SCHEMA__ANY_OFS:
        return getAnyOfs();
      case Draft7Package.SCHEMA__ONE_OFS:
        return getOneOfs();
      case Draft7Package.SCHEMA__ALL_OFS:
        return getAllOfs();
      case Draft7Package.SCHEMA__NOT:
        return getNot();
      case Draft7Package.SCHEMA__UNIQUE:
        return getUnique();
      case Draft7Package.SCHEMA__PROPERTY_NAMES:
        return getPropertyNames();
      case Draft7Package.SCHEMA__MIN_PROPERTIES:
        return getMinProperties();
      case Draft7Package.SCHEMA__MAX_PROPERTIES:
        return getMaxProperties();
      case Draft7Package.SCHEMA__MAX_ITEMS:
        return getMaxItems();
      case Draft7Package.SCHEMA__MIN_ITEMS:
        return getMinItems();
      case Draft7Package.SCHEMA__MAX_LENGTH:
        return getMaxLength();
      case Draft7Package.SCHEMA__MIN_LENGTH:
        return getMinLength();
      case Draft7Package.SCHEMA__PATTERN:
        return getPattern();
      case Draft7Package.SCHEMA__FORMAT:
        return getFormat();
      case Draft7Package.SCHEMA__MEDIA_TYPE:
        return getMediaType();
      case Draft7Package.SCHEMA__ENCODING:
        return getEncoding();
      case Draft7Package.SCHEMA__MULTIPLE_OF:
        return getMultipleOf();
      case Draft7Package.SCHEMA__MINIMUM:
        return getMinimum();
      case Draft7Package.SCHEMA__EXCLUSIVE_MINIMUM:
        return getExclusiveMinimum();
      case Draft7Package.SCHEMA__MAXIMUM:
        return getMaximum();
      case Draft7Package.SCHEMA__EXCLUSIVE_MAXIMUM:
        return getExclusiveMaximum();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case Draft7Package.SCHEMA__TYPE:
        setType((Types)newValue);
        return;
      case Draft7Package.SCHEMA__DEPENDENCIES:
        setDependencies((Dependencies)newValue);
        return;
      case Draft7Package.SCHEMA__ADDITIONAL_PROPERTIES:
        setAdditionalProperties((AdditionalProperties)newValue);
        return;
      case Draft7Package.SCHEMA__ADDITIONAL_ITEMS:
        setAdditionalItems((AdditionalItems)newValue);
        return;
      case Draft7Package.SCHEMA__DEFAULT:
        setDefault((Default)newValue);
        return;
      case Draft7Package.SCHEMA__PATTERN_PROPERTIES:
        getPatternProperties().clear();
        getPatternProperties().addAll((Collection<? extends NamedSchema>)newValue);
        return;
      case Draft7Package.SCHEMA__EXAMPLE:
        setExample((Example)newValue);
        return;
      case Draft7Package.SCHEMA__ITEMS:
        setItems((Items)newValue);
        return;
      case Draft7Package.SCHEMA__CONTAINS:
        setContains((Contains)newValue);
        return;
      case Draft7Package.SCHEMA__DEFINITIONS:
        getDefinitions().clear();
        getDefinitions().addAll((Collection<? extends NamedSchema>)newValue);
        return;
      case Draft7Package.SCHEMA__TITLE:
        setTitle((String)newValue);
        return;
      case Draft7Package.SCHEMA__REQUIRED_PROPERTIES:
        getRequiredProperties().clear();
        getRequiredProperties().addAll((Collection<? extends AnyString>)newValue);
        return;
      case Draft7Package.SCHEMA__DESCRIPTION:
        setDescription((String)newValue);
        return;
      case Draft7Package.SCHEMA__PROPERTIES:
        getProperties().clear();
        getProperties().addAll((Collection<? extends NamedSchema>)newValue);
        return;
      case Draft7Package.SCHEMA__ENUM_VALUES:
        getEnumValues().clear();
        getEnumValues().addAll((Collection<? extends AnyString>)newValue);
        return;
      case Draft7Package.SCHEMA__ID:
        setId((AnyString)newValue);
        return;
      case Draft7Package.SCHEMA__IF_SCHEMA:
        setIfSchema((Schema)newValue);
        return;
      case Draft7Package.SCHEMA__THEN_SCHEMA:
        setThenSchema((Schema)newValue);
        return;
      case Draft7Package.SCHEMA__ELSE_SCHEMA:
        setElseSchema((Schema)newValue);
        return;
      case Draft7Package.SCHEMA__CONST:
        setConst((AnyString)newValue);
        return;
      case Draft7Package.SCHEMA__CONST_BOOLEAN:
        setConstBoolean((org.xtext.json.schema.draft7.Boolean)newValue);
        return;
      case Draft7Package.SCHEMA__ANY_OFS:
        getAnyOfs().clear();
        getAnyOfs().addAll((Collection<? extends AbstractSchema>)newValue);
        return;
      case Draft7Package.SCHEMA__ONE_OFS:
        getOneOfs().clear();
        getOneOfs().addAll((Collection<? extends AbstractSchema>)newValue);
        return;
      case Draft7Package.SCHEMA__ALL_OFS:
        getAllOfs().clear();
        getAllOfs().addAll((Collection<? extends AbstractSchema>)newValue);
        return;
      case Draft7Package.SCHEMA__NOT:
        setNot((AbstractSchema)newValue);
        return;
      case Draft7Package.SCHEMA__UNIQUE:
        setUnique((org.xtext.json.schema.draft7.Boolean)newValue);
        return;
      case Draft7Package.SCHEMA__PROPERTY_NAMES:
        setPropertyNames((AbstractSchema)newValue);
        return;
      case Draft7Package.SCHEMA__MIN_PROPERTIES:
        setMinProperties((Integer)newValue);
        return;
      case Draft7Package.SCHEMA__MAX_PROPERTIES:
        setMaxProperties((Integer)newValue);
        return;
      case Draft7Package.SCHEMA__MAX_ITEMS:
        setMaxItems((Integer)newValue);
        return;
      case Draft7Package.SCHEMA__MIN_ITEMS:
        setMinItems((Integer)newValue);
        return;
      case Draft7Package.SCHEMA__MAX_LENGTH:
        setMaxLength((Integer)newValue);
        return;
      case Draft7Package.SCHEMA__MIN_LENGTH:
        setMinLength((Integer)newValue);
        return;
      case Draft7Package.SCHEMA__PATTERN:
        setPattern((AnyString)newValue);
        return;
      case Draft7Package.SCHEMA__FORMAT:
        setFormat((FormatTypes)newValue);
        return;
      case Draft7Package.SCHEMA__MEDIA_TYPE:
        setMediaType((AnyString)newValue);
        return;
      case Draft7Package.SCHEMA__ENCODING:
        setEncoding((AnyString)newValue);
        return;
      case Draft7Package.SCHEMA__MULTIPLE_OF:
        setMultipleOf((Integer)newValue);
        return;
      case Draft7Package.SCHEMA__MINIMUM:
        setMinimum((org.xtext.json.schema.draft7.Number)newValue);
        return;
      case Draft7Package.SCHEMA__EXCLUSIVE_MINIMUM:
        setExclusiveMinimum((org.xtext.json.schema.draft7.Number)newValue);
        return;
      case Draft7Package.SCHEMA__MAXIMUM:
        setMaximum((org.xtext.json.schema.draft7.Number)newValue);
        return;
      case Draft7Package.SCHEMA__EXCLUSIVE_MAXIMUM:
        setExclusiveMaximum((org.xtext.json.schema.draft7.Number)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case Draft7Package.SCHEMA__TYPE:
        setType((Types)null);
        return;
      case Draft7Package.SCHEMA__DEPENDENCIES:
        setDependencies((Dependencies)null);
        return;
      case Draft7Package.SCHEMA__ADDITIONAL_PROPERTIES:
        setAdditionalProperties((AdditionalProperties)null);
        return;
      case Draft7Package.SCHEMA__ADDITIONAL_ITEMS:
        setAdditionalItems((AdditionalItems)null);
        return;
      case Draft7Package.SCHEMA__DEFAULT:
        setDefault((Default)null);
        return;
      case Draft7Package.SCHEMA__PATTERN_PROPERTIES:
        getPatternProperties().clear();
        return;
      case Draft7Package.SCHEMA__EXAMPLE:
        setExample((Example)null);
        return;
      case Draft7Package.SCHEMA__ITEMS:
        setItems((Items)null);
        return;
      case Draft7Package.SCHEMA__CONTAINS:
        setContains((Contains)null);
        return;
      case Draft7Package.SCHEMA__DEFINITIONS:
        getDefinitions().clear();
        return;
      case Draft7Package.SCHEMA__TITLE:
        setTitle(TITLE_EDEFAULT);
        return;
      case Draft7Package.SCHEMA__REQUIRED_PROPERTIES:
        getRequiredProperties().clear();
        return;
      case Draft7Package.SCHEMA__DESCRIPTION:
        setDescription(DESCRIPTION_EDEFAULT);
        return;
      case Draft7Package.SCHEMA__PROPERTIES:
        getProperties().clear();
        return;
      case Draft7Package.SCHEMA__ENUM_VALUES:
        getEnumValues().clear();
        return;
      case Draft7Package.SCHEMA__ID:
        setId((AnyString)null);
        return;
      case Draft7Package.SCHEMA__IF_SCHEMA:
        setIfSchema((Schema)null);
        return;
      case Draft7Package.SCHEMA__THEN_SCHEMA:
        setThenSchema((Schema)null);
        return;
      case Draft7Package.SCHEMA__ELSE_SCHEMA:
        setElseSchema((Schema)null);
        return;
      case Draft7Package.SCHEMA__CONST:
        setConst((AnyString)null);
        return;
      case Draft7Package.SCHEMA__CONST_BOOLEAN:
        setConstBoolean(CONST_BOOLEAN_EDEFAULT);
        return;
      case Draft7Package.SCHEMA__ANY_OFS:
        getAnyOfs().clear();
        return;
      case Draft7Package.SCHEMA__ONE_OFS:
        getOneOfs().clear();
        return;
      case Draft7Package.SCHEMA__ALL_OFS:
        getAllOfs().clear();
        return;
      case Draft7Package.SCHEMA__NOT:
        setNot((AbstractSchema)null);
        return;
      case Draft7Package.SCHEMA__UNIQUE:
        setUnique(UNIQUE_EDEFAULT);
        return;
      case Draft7Package.SCHEMA__PROPERTY_NAMES:
        setPropertyNames((AbstractSchema)null);
        return;
      case Draft7Package.SCHEMA__MIN_PROPERTIES:
        setMinProperties(MIN_PROPERTIES_EDEFAULT);
        return;
      case Draft7Package.SCHEMA__MAX_PROPERTIES:
        setMaxProperties(MAX_PROPERTIES_EDEFAULT);
        return;
      case Draft7Package.SCHEMA__MAX_ITEMS:
        setMaxItems(MAX_ITEMS_EDEFAULT);
        return;
      case Draft7Package.SCHEMA__MIN_ITEMS:
        setMinItems(MIN_ITEMS_EDEFAULT);
        return;
      case Draft7Package.SCHEMA__MAX_LENGTH:
        setMaxLength(MAX_LENGTH_EDEFAULT);
        return;
      case Draft7Package.SCHEMA__MIN_LENGTH:
        setMinLength(MIN_LENGTH_EDEFAULT);
        return;
      case Draft7Package.SCHEMA__PATTERN:
        setPattern((AnyString)null);
        return;
      case Draft7Package.SCHEMA__FORMAT:
        setFormat(FORMAT_EDEFAULT);
        return;
      case Draft7Package.SCHEMA__MEDIA_TYPE:
        setMediaType((AnyString)null);
        return;
      case Draft7Package.SCHEMA__ENCODING:
        setEncoding((AnyString)null);
        return;
      case Draft7Package.SCHEMA__MULTIPLE_OF:
        setMultipleOf(MULTIPLE_OF_EDEFAULT);
        return;
      case Draft7Package.SCHEMA__MINIMUM:
        setMinimum((org.xtext.json.schema.draft7.Number)null);
        return;
      case Draft7Package.SCHEMA__EXCLUSIVE_MINIMUM:
        setExclusiveMinimum((org.xtext.json.schema.draft7.Number)null);
        return;
      case Draft7Package.SCHEMA__MAXIMUM:
        setMaximum((org.xtext.json.schema.draft7.Number)null);
        return;
      case Draft7Package.SCHEMA__EXCLUSIVE_MAXIMUM:
        setExclusiveMaximum((org.xtext.json.schema.draft7.Number)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case Draft7Package.SCHEMA__TYPE:
        return type != null;
      case Draft7Package.SCHEMA__DEPENDENCIES:
        return dependencies != null;
      case Draft7Package.SCHEMA__ADDITIONAL_PROPERTIES:
        return additionalProperties != null;
      case Draft7Package.SCHEMA__ADDITIONAL_ITEMS:
        return additionalItems != null;
      case Draft7Package.SCHEMA__DEFAULT:
        return default_ != null;
      case Draft7Package.SCHEMA__PATTERN_PROPERTIES:
        return patternProperties != null && !patternProperties.isEmpty();
      case Draft7Package.SCHEMA__EXAMPLE:
        return example != null;
      case Draft7Package.SCHEMA__ITEMS:
        return items != null;
      case Draft7Package.SCHEMA__CONTAINS:
        return contains != null;
      case Draft7Package.SCHEMA__DEFINITIONS:
        return definitions != null && !definitions.isEmpty();
      case Draft7Package.SCHEMA__TITLE:
        return TITLE_EDEFAULT == null ? title != null : !TITLE_EDEFAULT.equals(title);
      case Draft7Package.SCHEMA__REQUIRED_PROPERTIES:
        return requiredProperties != null && !requiredProperties.isEmpty();
      case Draft7Package.SCHEMA__DESCRIPTION:
        return DESCRIPTION_EDEFAULT == null ? description != null : !DESCRIPTION_EDEFAULT.equals(description);
      case Draft7Package.SCHEMA__PROPERTIES:
        return properties != null && !properties.isEmpty();
      case Draft7Package.SCHEMA__ENUM_VALUES:
        return enumValues != null && !enumValues.isEmpty();
      case Draft7Package.SCHEMA__ID:
        return id != null;
      case Draft7Package.SCHEMA__IF_SCHEMA:
        return ifSchema != null;
      case Draft7Package.SCHEMA__THEN_SCHEMA:
        return thenSchema != null;
      case Draft7Package.SCHEMA__ELSE_SCHEMA:
        return elseSchema != null;
      case Draft7Package.SCHEMA__CONST:
        return const_ != null;
      case Draft7Package.SCHEMA__CONST_BOOLEAN:
        return constBoolean != CONST_BOOLEAN_EDEFAULT;
      case Draft7Package.SCHEMA__ANY_OFS:
        return anyOfs != null && !anyOfs.isEmpty();
      case Draft7Package.SCHEMA__ONE_OFS:
        return oneOfs != null && !oneOfs.isEmpty();
      case Draft7Package.SCHEMA__ALL_OFS:
        return allOfs != null && !allOfs.isEmpty();
      case Draft7Package.SCHEMA__NOT:
        return not != null;
      case Draft7Package.SCHEMA__UNIQUE:
        return unique != UNIQUE_EDEFAULT;
      case Draft7Package.SCHEMA__PROPERTY_NAMES:
        return propertyNames != null;
      case Draft7Package.SCHEMA__MIN_PROPERTIES:
        return minProperties != MIN_PROPERTIES_EDEFAULT;
      case Draft7Package.SCHEMA__MAX_PROPERTIES:
        return maxProperties != MAX_PROPERTIES_EDEFAULT;
      case Draft7Package.SCHEMA__MAX_ITEMS:
        return maxItems != MAX_ITEMS_EDEFAULT;
      case Draft7Package.SCHEMA__MIN_ITEMS:
        return minItems != MIN_ITEMS_EDEFAULT;
      case Draft7Package.SCHEMA__MAX_LENGTH:
        return maxLength != MAX_LENGTH_EDEFAULT;
      case Draft7Package.SCHEMA__MIN_LENGTH:
        return minLength != MIN_LENGTH_EDEFAULT;
      case Draft7Package.SCHEMA__PATTERN:
        return pattern != null;
      case Draft7Package.SCHEMA__FORMAT:
        return format != FORMAT_EDEFAULT;
      case Draft7Package.SCHEMA__MEDIA_TYPE:
        return mediaType != null;
      case Draft7Package.SCHEMA__ENCODING:
        return encoding != null;
      case Draft7Package.SCHEMA__MULTIPLE_OF:
        return multipleOf != MULTIPLE_OF_EDEFAULT;
      case Draft7Package.SCHEMA__MINIMUM:
        return minimum != null;
      case Draft7Package.SCHEMA__EXCLUSIVE_MINIMUM:
        return exclusiveMinimum != null;
      case Draft7Package.SCHEMA__MAXIMUM:
        return maximum != null;
      case Draft7Package.SCHEMA__EXCLUSIVE_MAXIMUM:
        return exclusiveMaximum != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (title: ");
    result.append(title);
    result.append(", description: ");
    result.append(description);
    result.append(", constBoolean: ");
    result.append(constBoolean);
    result.append(", unique: ");
    result.append(unique);
    result.append(", minProperties: ");
    result.append(minProperties);
    result.append(", maxProperties: ");
    result.append(maxProperties);
    result.append(", maxItems: ");
    result.append(maxItems);
    result.append(", minItems: ");
    result.append(minItems);
    result.append(", maxLength: ");
    result.append(maxLength);
    result.append(", minLength: ");
    result.append(minLength);
    result.append(", format: ");
    result.append(format);
    result.append(", multipleOf: ");
    result.append(multipleOf);
    result.append(')');
    return result.toString();
  }

} //SchemaImpl
