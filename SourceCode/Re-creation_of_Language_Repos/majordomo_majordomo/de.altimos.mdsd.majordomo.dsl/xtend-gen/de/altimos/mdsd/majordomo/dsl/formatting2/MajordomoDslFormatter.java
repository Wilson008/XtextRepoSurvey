/**
 * generated by Xtext 2.35.0
 */
package de.altimos.mdsd.majordomo.dsl.formatting2;

import com.google.inject.Inject;
import de.altimos.mdsd.majordomo.dsl.services.MajordomoDslGrammarAccess;
import java.util.Arrays;
import majordomo.House;
import majordomo.Majordomo;
import majordomo.PreparedActionSet;
import majordomo.PreparedStatement;
import majordomo.PreparedValue;
import majordomo.Program;
import majordomo.Room;
import majordomo.Rule;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.formatting2.AbstractFormatter2;
import org.eclipse.xtext.formatting2.IFormattableDocument;
import org.eclipse.xtext.resource.XtextResource;
import org.eclipse.xtext.xbase.lib.Extension;

@SuppressWarnings("all")
public class MajordomoDslFormatter extends AbstractFormatter2 {
  @Inject
  @Extension
  private MajordomoDslGrammarAccess _majordomoDslGrammarAccess;

  protected void _format(final Majordomo majordomo, @Extension final IFormattableDocument document) {
    document.<House>format(majordomo.getHouse());
    EList<Room> _rooms = majordomo.getRooms();
    for (final Room room : _rooms) {
      document.<Room>format(room);
    }
    document.<Program>format(majordomo.getProgram());
  }

  protected void _format(final Program program, @Extension final IFormattableDocument document) {
    EList<Rule> _rules = program.getRules();
    for (final Rule rule : _rules) {
      document.<Rule>format(rule);
    }
    EList<PreparedStatement> _preparedStatements = program.getPreparedStatements();
    for (final PreparedStatement preparedStatement : _preparedStatements) {
      document.<PreparedStatement>format(preparedStatement);
    }
    EList<PreparedActionSet> _preparedActionSets = program.getPreparedActionSets();
    for (final PreparedActionSet preparedActionSet : _preparedActionSets) {
      document.<PreparedActionSet>format(preparedActionSet);
    }
    EList<PreparedValue> _constants = program.getConstants();
    for (final PreparedValue preparedValue : _constants) {
      document.<PreparedValue>format(preparedValue);
    }
  }

  public void format(final Object majordomo, final IFormattableDocument document) {
    if (majordomo instanceof XtextResource) {
      _format((XtextResource)majordomo, document);
      return;
    } else if (majordomo instanceof Majordomo) {
      _format((Majordomo)majordomo, document);
      return;
    } else if (majordomo instanceof Program) {
      _format((Program)majordomo, document);
      return;
    } else if (majordomo instanceof EObject) {
      _format((EObject)majordomo, document);
      return;
    } else if (majordomo == null) {
      _format((Void)null, document);
      return;
    } else if (majordomo != null) {
      _format(majordomo, document);
      return;
    } else {
      throw new IllegalArgumentException("Unhandled parameter types: " +
        Arrays.<Object>asList(majordomo, document).toString());
    }
  }
}
