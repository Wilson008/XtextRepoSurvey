/*
 * generated by Xtext 2.35.0
 */
grammar InternalMajordomoDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package de.altimos.mdsd.majordomo.dsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package de.altimos.mdsd.majordomo.dsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import de.altimos.mdsd.majordomo.dsl.services.MajordomoDslGrammarAccess;

}

@parser::members {

 	private MajordomoDslGrammarAccess grammarAccess;

    public InternalMajordomoDslParser(TokenStream input, MajordomoDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Majordomo";
   	}

   	@Override
   	protected MajordomoDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleMajordomo
entryRuleMajordomo returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMajordomoRule()); }
	iv_ruleMajordomo=ruleMajordomo
	{ $current=$iv_ruleMajordomo.current; }
	EOF;

// Rule Majordomo
ruleMajordomo returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getMajordomoAccess().getMajordomoAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getMajordomoAccess().getHouseHouseParserRuleCall_1_0());
				}
				lv_house_1_0=ruleHouse
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMajordomoRule());
					}
					set(
						$current,
						"house",
						lv_house_1_0,
						"de.altimos.mdsd.majordomo.dsl.MajordomoDsl.House");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getMajordomoAccess().getRoomsRoomParserRuleCall_2_0());
				}
				lv_rooms_2_0=ruleRoom
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMajordomoRule());
					}
					add(
						$current,
						"rooms",
						lv_rooms_2_0,
						"de.altimos.mdsd.majordomo.dsl.MajordomoDsl.Room");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getMajordomoAccess().getProgramProgramParserRuleCall_3_0());
				}
				lv_program_3_0=ruleProgram
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMajordomoRule());
					}
					set(
						$current,
						"program",
						lv_program_3_0,
						"de.altimos.mdsd.majordomo.dsl.MajordomoDsl.Program");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleProgram
entryRuleProgram returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProgramRule()); }
	iv_ruleProgram=ruleProgram
	{ $current=$iv_ruleProgram.current; }
	EOF;

// Rule Program
ruleProgram returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getProgramAccess().getProgramAction_0(),
					$current);
			}
		)
		otherlv_1='program'
		{
			newLeafNode(otherlv_1, grammarAccess.getProgramAccess().getProgramKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getProgramAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getProgramAccess().getRulesRuleParserRuleCall_3_0_0_0());
						}
						lv_rules_3_0=ruleRule
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getProgramRule());
							}
							add(
								$current,
								"rules",
								lv_rules_3_0,
								"de.altimos.mdsd.majordomo.dsl.MajordomoDsl.Rule");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_4=';'
					{
						newLeafNode(otherlv_4, grammarAccess.getProgramAccess().getSemicolonKeyword_3_0_1());
					}
				)?
			)
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getProgramAccess().getPreparedStatementsPreparedStatementParserRuleCall_3_1_0_0());
						}
						lv_preparedStatements_5_0=rulePreparedStatement
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getProgramRule());
							}
							add(
								$current,
								"preparedStatements",
								lv_preparedStatements_5_0,
								"de.altimos.mdsd.majordomo.dsl.MajordomoDsl.PreparedStatement");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_6=';'
					{
						newLeafNode(otherlv_6, grammarAccess.getProgramAccess().getSemicolonKeyword_3_1_1());
					}
				)?
			)
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getProgramAccess().getPreparedActionSetsPreparedActionSetParserRuleCall_3_2_0_0());
						}
						lv_preparedActionSets_7_0=rulePreparedActionSet
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getProgramRule());
							}
							add(
								$current,
								"preparedActionSets",
								lv_preparedActionSets_7_0,
								"de.altimos.mdsd.majordomo.dsl.MajordomoDsl.PreparedActionSet");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_8=';'
					{
						newLeafNode(otherlv_8, grammarAccess.getProgramAccess().getSemicolonKeyword_3_2_1());
					}
				)?
			)
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getProgramAccess().getConstantsPreparedValueParserRuleCall_3_3_0_0());
						}
						lv_constants_9_0=rulePreparedValue
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getProgramRule());
							}
							add(
								$current,
								"constants",
								lv_constants_9_0,
								"de.altimos.mdsd.majordomo.dsl.MajordomoDsl.PreparedValue");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_10=';'
					{
						newLeafNode(otherlv_10, grammarAccess.getProgramAccess().getSemicolonKeyword_3_3_1());
					}
				)?
			)
		)*
		otherlv_11='}'
		{
			newLeafNode(otherlv_11, grammarAccess.getProgramAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleHouse
entryRuleHouse returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getHouseRule()); }
	iv_ruleHouse=ruleHouse
	{ $current=$iv_ruleHouse.current; }
	EOF;

// Rule House
ruleHouse returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getHouseAccess().getHouseAction_0(),
					$current);
			}
		)
		otherlv_1='house'
		{
			newLeafNode(otherlv_1, grammarAccess.getHouseAccess().getHouseKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getHouseAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getHouseAccess().getSensorsSensorParserRuleCall_3_0_0_0());
						}
						lv_sensors_3_0=ruleSensor
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getHouseRule());
							}
							add(
								$current,
								"sensors",
								lv_sensors_3_0,
								"de.altimos.mdsd.majordomo.dsl.MajordomoDsl.Sensor");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getHouseAccess().getActorsActorParserRuleCall_3_0_1_0());
						}
						lv_actors_4_0=ruleActor
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getHouseRule());
							}
							add(
								$current,
								"actors",
								lv_actors_4_0,
								"de.altimos.mdsd.majordomo.dsl.MajordomoDsl.Actor");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			(
				otherlv_5=';'
				{
					newLeafNode(otherlv_5, grammarAccess.getHouseAccess().getSemicolonKeyword_3_1());
				}
			)?
		)*
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getHouseAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleRoom
entryRuleRoom returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRoomRule()); }
	iv_ruleRoom=ruleRoom
	{ $current=$iv_ruleRoom.current; }
	EOF;

// Rule Room
ruleRoom returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getRoomAccess().getRoomAction_0(),
					$current);
			}
		)
		otherlv_1='room'
		{
			newLeafNode(otherlv_1, grammarAccess.getRoomAccess().getRoomKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRoomAccess().getNameNameParserRuleCall_2_0());
				}
				lv_name_2_0=ruleName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRoomRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"de.altimos.mdsd.majordomo.dsl.MajordomoDsl.Name");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getRoomAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getRoomAccess().getSensorsSensorParserRuleCall_4_0_0_0());
						}
						lv_sensors_4_0=ruleSensor
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getRoomRule());
							}
							add(
								$current,
								"sensors",
								lv_sensors_4_0,
								"de.altimos.mdsd.majordomo.dsl.MajordomoDsl.Sensor");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getRoomAccess().getActorsActorParserRuleCall_4_0_1_0());
						}
						lv_actors_5_0=ruleActor
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getRoomRule());
							}
							add(
								$current,
								"actors",
								lv_actors_5_0,
								"de.altimos.mdsd.majordomo.dsl.MajordomoDsl.Actor");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			(
				otherlv_6=';'
				{
					newLeafNode(otherlv_6, grammarAccess.getRoomAccess().getSemicolonKeyword_4_1());
				}
			)?
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getRoomAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleSensor
entryRuleSensor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSensorRule()); }
	iv_ruleSensor=ruleSensor
	{ $current=$iv_ruleSensor.current; }
	EOF;

// Rule Sensor
ruleSensor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getSensorAccess().getLightSensorParserRuleCall_0());
		}
		this_LightSensor_0=ruleLightSensor
		{
			$current = $this_LightSensor_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSensorAccess().getTemperatureSensorParserRuleCall_1());
		}
		this_TemperatureSensor_1=ruleTemperatureSensor
		{
			$current = $this_TemperatureSensor_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSensorAccess().getRainSensorParserRuleCall_2());
		}
		this_RainSensor_2=ruleRainSensor
		{
			$current = $this_RainSensor_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSensorAccess().getSwitchSensorParserRuleCall_3());
		}
		this_SwitchSensor_3=ruleSwitchSensor
		{
			$current = $this_SwitchSensor_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSensorAccess().getNumberSensorParserRuleCall_4());
		}
		this_NumberSensor_4=ruleNumberSensor
		{
			$current = $this_NumberSensor_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSensorAccess().getClockSensorParserRuleCall_5());
		}
		this_ClockSensor_5=ruleClockSensor
		{
			$current = $this_ClockSensor_5.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleActor
entryRuleActor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActorRule()); }
	iv_ruleActor=ruleActor
	{ $current=$iv_ruleActor.current; }
	EOF;

// Rule Actor
ruleActor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getActorAccess().getLampActorParserRuleCall_0());
		}
		this_LampActor_0=ruleLampActor
		{
			$current = $this_LampActor_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getActorAccess().getRollerActorParserRuleCall_1());
		}
		this_RollerActor_1=ruleRollerActor
		{
			$current = $this_RollerActor_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getActorAccess().getRoofWindowActorParserRuleCall_2());
		}
		this_RoofWindowActor_2=ruleRoofWindowActor
		{
			$current = $this_RoofWindowActor_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getActorAccess().getRadiatorActorParserRuleCall_3());
		}
		this_RadiatorActor_3=ruleRadiatorActor
		{
			$current = $this_RadiatorActor_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getActorAccess().getBoilerActorParserRuleCall_4());
		}
		this_BoilerActor_4=ruleBoilerActor
		{
			$current = $this_BoilerActor_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getActorAccess().getCoffeeActorParserRuleCall_5());
		}
		this_CoffeeActor_5=ruleCoffeeActor
		{
			$current = $this_CoffeeActor_5.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleRule
entryRuleRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRuleRule()); }
	iv_ruleRule=ruleRule
	{ $current=$iv_ruleRule.current; }
	EOF;

// Rule Rule
ruleRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='on'
		{
			newLeafNode(otherlv_0, grammarAccess.getRuleAccess().getOnKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRuleAccess().getStatementStatementParserRuleCall_1_0());
				}
				lv_statement_1_0=ruleStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRuleRule());
					}
					set(
						$current,
						"statement",
						lv_statement_1_0,
						"de.altimos.mdsd.majordomo.dsl.MajordomoDsl.Statement");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='do'
		{
			newLeafNode(otherlv_2, grammarAccess.getRuleAccess().getDoKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRuleAccess().getActionsActionParserRuleCall_3_0());
				}
				lv_actions_3_0=ruleAction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRuleRule());
					}
					add(
						$current,
						"actions",
						lv_actions_3_0,
						"de.altimos.mdsd.majordomo.dsl.MajordomoDsl.Action");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getRuleAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRuleAccess().getActionsActionParserRuleCall_4_1_0());
					}
					lv_actions_5_0=ruleAction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRuleRule());
						}
						add(
							$current,
							"actions",
							lv_actions_5_0,
							"de.altimos.mdsd.majordomo.dsl.MajordomoDsl.Action");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleStatement
entryRuleStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStatementRule()); }
	iv_ruleStatement=ruleStatement
	{ $current=$iv_ruleStatement.current; }
	EOF;

// Rule Statement
ruleStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getStatementAccess().getBinaryOrOperationParserRuleCall());
	}
	this_BinaryOrOperation_0=ruleBinaryOrOperation
	{
		$current = $this_BinaryOrOperation_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleBinaryOrOperation
entryRuleBinaryOrOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBinaryOrOperationRule()); }
	iv_ruleBinaryOrOperation=ruleBinaryOrOperation
	{ $current=$iv_ruleBinaryOrOperation.current; }
	EOF;

// Rule BinaryOrOperation
ruleBinaryOrOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getBinaryOrOperationAccess().getBinaryAndOperationParserRuleCall_0());
		}
		this_BinaryAndOperation_0=ruleBinaryAndOperation
		{
			$current = $this_BinaryAndOperation_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getBinaryOrOperationAccess().getBinaryOrOperationLeftAction_1_0(),
						$current);
				}
			)
			{
				newCompositeNode(grammarAccess.getBinaryOrOperationAccess().getBinaryOrOperatorParserRuleCall_1_1());
			}
			ruleBinaryOrOperator
			{
				afterParserOrEnumRuleCall();
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBinaryOrOperationAccess().getRightBinaryAndOperationParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleBinaryAndOperation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBinaryOrOperationRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"de.altimos.mdsd.majordomo.dsl.MajordomoDsl.BinaryAndOperation");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleBinaryAndOperation
entryRuleBinaryAndOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBinaryAndOperationRule()); }
	iv_ruleBinaryAndOperation=ruleBinaryAndOperation
	{ $current=$iv_ruleBinaryAndOperation.current; }
	EOF;

// Rule BinaryAndOperation
ruleBinaryAndOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getBinaryAndOperationAccess().getNotOperationParserRuleCall_0());
		}
		this_NotOperation_0=ruleNotOperation
		{
			$current = $this_NotOperation_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getBinaryAndOperationAccess().getBinaryAndOperationLeftAction_1_0(),
						$current);
				}
			)
			{
				newCompositeNode(grammarAccess.getBinaryAndOperationAccess().getBinaryAndOperatorParserRuleCall_1_1());
			}
			ruleBinaryAndOperator
			{
				afterParserOrEnumRuleCall();
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBinaryAndOperationAccess().getRightNotOperationParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleNotOperation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBinaryAndOperationRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"de.altimos.mdsd.majordomo.dsl.MajordomoDsl.NotOperation");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleNotOperation
entryRuleNotOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNotOperationRule()); }
	iv_ruleNotOperation=ruleNotOperation
	{ $current=$iv_ruleNotOperation.current; }
	EOF;

// Rule NotOperation
ruleNotOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getNotOperationAccess().getUnaryStatementParserRuleCall_0());
		}
		this_UnaryStatement_0=ruleUnaryStatement
		{
			$current = $this_UnaryStatement_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getNotOperationAccess().getNotOperationAction_1_0(),
						$current);
				}
			)
			(
				otherlv_2='not'
				{
					newLeafNode(otherlv_2, grammarAccess.getNotOperationAccess().getNotKeyword_1_1_0());
				}
				    |
				otherlv_3='!'
				{
					newLeafNode(otherlv_3, grammarAccess.getNotOperationAccess().getExclamationMarkKeyword_1_1_1());
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getNotOperationAccess().getStatementUnaryStatementParserRuleCall_1_2_0());
					}
					lv_statement_4_0=ruleUnaryStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNotOperationRule());
						}
						set(
							$current,
							"statement",
							lv_statement_4_0,
							"de.altimos.mdsd.majordomo.dsl.MajordomoDsl.UnaryStatement");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleUnaryStatement
entryRuleUnaryStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnaryStatementRule()); }
	iv_ruleUnaryStatement=ruleUnaryStatement
	{ $current=$iv_ruleUnaryStatement.current; }
	EOF;

// Rule UnaryStatement
ruleUnaryStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='('
			{
				newLeafNode(otherlv_0, grammarAccess.getUnaryStatementAccess().getLeftParenthesisKeyword_0_0());
			}
			{
				newCompositeNode(grammarAccess.getUnaryStatementAccess().getStatementParserRuleCall_0_1());
			}
			this_Statement_1=ruleStatement
			{
				$current = $this_Statement_1.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_2=')'
			{
				newLeafNode(otherlv_2, grammarAccess.getUnaryStatementAccess().getRightParenthesisKeyword_0_2());
			}
		)
		    |
		{
			newCompositeNode(grammarAccess.getUnaryStatementAccess().getStatementReferenceParserRuleCall_1());
		}
		this_StatementReference_3=ruleStatementReference
		{
			$current = $this_StatementReference_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getUnaryStatementAccess().getBooleanSensorStatementParserRuleCall_2());
		}
		this_BooleanSensorStatement_4=ruleBooleanSensorStatement
		{
			$current = $this_BooleanSensorStatement_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getUnaryStatementAccess().getCompareOperationParserRuleCall_3());
		}
		this_CompareOperation_5=ruleCompareOperation
		{
			$current = $this_CompareOperation_5.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleBooleanSensorStatement
entryRuleBooleanSensorStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanSensorStatementRule()); }
	iv_ruleBooleanSensorStatement=ruleBooleanSensorStatement
	{ $current=$iv_ruleBooleanSensorStatement.current; }
	EOF;

// Rule BooleanSensorStatement
ruleBooleanSensorStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBooleanSensorStatementRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getBooleanSensorStatementAccess().getSensorBooleanSensorCrossReference_0_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='?'
		{
			newLeafNode(otherlv_1, grammarAccess.getBooleanSensorStatementAccess().getQuestionMarkKeyword_1());
		}
	)
;

// Entry rule entryRuleCompareOperation
entryRuleCompareOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCompareOperationRule()); }
	iv_ruleCompareOperation=ruleCompareOperation
	{ $current=$iv_ruleCompareOperation.current; }
	EOF;

// Rule CompareOperation
ruleCompareOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getCompareOperationAccess().getLeftValueExpressionParserRuleCall_0_0());
				}
				lv_left_0_0=ruleValueExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCompareOperationRule());
					}
					set(
						$current,
						"left",
						lv_left_0_0,
						"de.altimos.mdsd.majordomo.dsl.MajordomoDsl.ValueExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getCompareOperationAccess().getComparatorComparatorEnumRuleCall_1_0());
				}
				lv_comparator_1_0=ruleComparator
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCompareOperationRule());
					}
					set(
						$current,
						"comparator",
						lv_comparator_1_0,
						"de.altimos.mdsd.majordomo.dsl.MajordomoDsl.Comparator");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getCompareOperationAccess().getRightValueExpressionParserRuleCall_2_0());
				}
				lv_right_2_0=ruleValueExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCompareOperationRule());
					}
					set(
						$current,
						"right",
						lv_right_2_0,
						"de.altimos.mdsd.majordomo.dsl.MajordomoDsl.ValueExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleValueExpression
entryRuleValueExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getValueExpressionRule()); }
	iv_ruleValueExpression=ruleValueExpression
	{ $current=$iv_ruleValueExpression.current; }
	EOF;

// Rule ValueExpression
ruleValueExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getValueExpressionAccess().getSensorValueParserRuleCall_0());
		}
		this_SensorValue_0=ruleSensorValue
		{
			$current = $this_SensorValue_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getValueExpressionAccess().getConstantValueParserRuleCall_1());
		}
		this_ConstantValue_1=ruleConstantValue
		{
			$current = $this_ConstantValue_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getValueExpressionAccess().getValueReferenceParserRuleCall_2());
		}
		this_ValueReference_2=ruleValueReference
		{
			$current = $this_ValueReference_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSensorValue
entryRuleSensorValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSensorValueRule()); }
	iv_ruleSensorValue=ruleSensorValue
	{ $current=$iv_ruleSensorValue.current; }
	EOF;

// Rule SensorValue
ruleSensorValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getSensorValueRule());
				}
			}
			{
				newCompositeNode(grammarAccess.getSensorValueAccess().getSensorFloatSensorCrossReference_0());
			}
			ruleQualifiedName
			{
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleConstantValue
entryRuleConstantValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConstantValueRule()); }
	iv_ruleConstantValue=ruleConstantValue
	{ $current=$iv_ruleConstantValue.current; }
	EOF;

// Rule ConstantValue
ruleConstantValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getConstantValueAccess().getValueEFloatParserRuleCall_0());
			}
			lv_value_0_0=ruleEFloat
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getConstantValueRule());
				}
				set(
					$current,
					"value",
					lv_value_0_0,
					"de.altimos.mdsd.majordomo.dsl.MajordomoDsl.EFloat");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleValueReference
entryRuleValueReference returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getValueReferenceRule()); }
	iv_ruleValueReference=ruleValueReference
	{ $current=$iv_ruleValueReference.current; }
	EOF;

// Rule ValueReference
ruleValueReference returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getValueReferenceRule());
				}
			}
			{
				newCompositeNode(grammarAccess.getValueReferenceAccess().getRefPreparedValueCrossReference_0());
			}
			ruleConstID
			{
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRulePreparedStatement
entryRulePreparedStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPreparedStatementRule()); }
	iv_rulePreparedStatement=rulePreparedStatement
	{ $current=$iv_rulePreparedStatement.current; }
	EOF;

// Rule PreparedStatement
rulePreparedStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='def'
		{
			newLeafNode(otherlv_0, grammarAccess.getPreparedStatementAccess().getDefKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPreparedStatementAccess().getNameNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPreparedStatementRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"de.altimos.mdsd.majordomo.dsl.MajordomoDsl.Name");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getPreparedStatementAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPreparedStatementAccess().getStatementStatementParserRuleCall_3_0());
				}
				lv_statement_3_0=ruleStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPreparedStatementRule());
					}
					set(
						$current,
						"statement",
						lv_statement_3_0,
						"de.altimos.mdsd.majordomo.dsl.MajordomoDsl.Statement");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleStatementReference
entryRuleStatementReference returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStatementReferenceRule()); }
	iv_ruleStatementReference=ruleStatementReference
	{ $current=$iv_ruleStatementReference.current; }
	EOF;

// Rule StatementReference
ruleStatementReference returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getStatementReferenceRule());
				}
			}
			{
				newCompositeNode(grammarAccess.getStatementReferenceAccess().getRefPreparedStatementCrossReference_0());
			}
			ruleName
			{
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRulePreparedActionSet
entryRulePreparedActionSet returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPreparedActionSetRule()); }
	iv_rulePreparedActionSet=rulePreparedActionSet
	{ $current=$iv_rulePreparedActionSet.current; }
	EOF;

// Rule PreparedActionSet
rulePreparedActionSet returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='set'
		{
			newLeafNode(otherlv_0, grammarAccess.getPreparedActionSetAccess().getSetKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPreparedActionSetAccess().getNameNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPreparedActionSetRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"de.altimos.mdsd.majordomo.dsl.MajordomoDsl.Name");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getPreparedActionSetAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPreparedActionSetAccess().getActionsActionParserRuleCall_3_0());
				}
				lv_actions_3_0=ruleAction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPreparedActionSetRule());
					}
					add(
						$current,
						"actions",
						lv_actions_3_0,
						"de.altimos.mdsd.majordomo.dsl.MajordomoDsl.Action");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getPreparedActionSetAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPreparedActionSetAccess().getActionsActionParserRuleCall_4_1_0());
					}
					lv_actions_5_0=ruleAction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPreparedActionSetRule());
						}
						add(
							$current,
							"actions",
							lv_actions_5_0,
							"de.altimos.mdsd.majordomo.dsl.MajordomoDsl.Action");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleActionSetReference
entryRuleActionSetReference returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActionSetReferenceRule()); }
	iv_ruleActionSetReference=ruleActionSetReference
	{ $current=$iv_ruleActionSetReference.current; }
	EOF;

// Rule ActionSetReference
ruleActionSetReference returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getActionSetReferenceRule());
				}
			}
			{
				newCompositeNode(grammarAccess.getActionSetReferenceAccess().getRefPreparedActionSetCrossReference_0());
			}
			ruleName
			{
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRulePreparedValue
entryRulePreparedValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPreparedValueRule()); }
	iv_rulePreparedValue=rulePreparedValue
	{ $current=$iv_rulePreparedValue.current; }
	EOF;

// Rule PreparedValue
rulePreparedValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='val'
		{
			newLeafNode(otherlv_0, grammarAccess.getPreparedValueAccess().getValKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPreparedValueAccess().getNameConstIDParserRuleCall_1_0());
				}
				lv_name_1_0=ruleConstID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPreparedValueRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"de.altimos.mdsd.majordomo.dsl.MajordomoDsl.ConstID");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getPreparedValueAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPreparedValueAccess().getValueValueExpressionParserRuleCall_3_0());
				}
				lv_value_3_0=ruleValueExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPreparedValueRule());
					}
					set(
						$current,
						"value",
						lv_value_3_0,
						"de.altimos.mdsd.majordomo.dsl.MajordomoDsl.ValueExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleAction
entryRuleAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActionRule()); }
	iv_ruleAction=ruleAction
	{ $current=$iv_ruleAction.current; }
	EOF;

// Rule Action
ruleAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getActionAccess().getBooleanActionParserRuleCall_0());
		}
		this_BooleanAction_0=ruleBooleanAction
		{
			$current = $this_BooleanAction_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getActionAccess().getFloatActionParserRuleCall_1());
		}
		this_FloatAction_1=ruleFloatAction
		{
			$current = $this_FloatAction_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getActionAccess().getActionSetReferenceParserRuleCall_2());
		}
		this_ActionSetReference_2=ruleActionSetReference
		{
			$current = $this_ActionSetReference_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleBooleanAction
entryRuleBooleanAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanActionRule()); }
	iv_ruleBooleanAction=ruleBooleanAction
	{ $current=$iv_ruleBooleanAction.current; }
	EOF;

// Rule BooleanAction
ruleBooleanAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBooleanActionRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getBooleanActionAccess().getActorBooleanActorCrossReference_0_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getBooleanActionAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBooleanActionAccess().getValueEBooleanParserRuleCall_2_0());
				}
				lv_value_2_0=ruleEBoolean
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBooleanActionRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"de.altimos.mdsd.majordomo.dsl.MajordomoDsl.EBoolean");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFloatAction
entryRuleFloatAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFloatActionRule()); }
	iv_ruleFloatAction=ruleFloatAction
	{ $current=$iv_ruleFloatAction.current; }
	EOF;

// Rule FloatAction
ruleFloatAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFloatActionRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getFloatActionAccess().getActorFloatActorCrossReference_0_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getFloatActionAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFloatActionAccess().getValueEFloatParserRuleCall_2_0());
				}
				lv_value_2_0=ruleEFloat
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFloatActionRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"de.altimos.mdsd.majordomo.dsl.MajordomoDsl.EFloat");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleLightSensor
entryRuleLightSensor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLightSensorRule()); }
	iv_ruleLightSensor=ruleLightSensor
	{ $current=$iv_ruleLightSensor.current; }
	EOF;

// Rule LightSensor
ruleLightSensor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='@light'
		{
			newLeafNode(otherlv_0, grammarAccess.getLightSensorAccess().getLightKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLightSensorAccess().getNameNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLightSensorRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"de.altimos.mdsd.majordomo.dsl.MajordomoDsl.Name");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleTemperatureSensor
entryRuleTemperatureSensor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTemperatureSensorRule()); }
	iv_ruleTemperatureSensor=ruleTemperatureSensor
	{ $current=$iv_ruleTemperatureSensor.current; }
	EOF;

// Rule TemperatureSensor
ruleTemperatureSensor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='@temp'
		{
			newLeafNode(otherlv_0, grammarAccess.getTemperatureSensorAccess().getTempKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTemperatureSensorAccess().getNameNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTemperatureSensorRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"de.altimos.mdsd.majordomo.dsl.MajordomoDsl.Name");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleRainSensor
entryRuleRainSensor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRainSensorRule()); }
	iv_ruleRainSensor=ruleRainSensor
	{ $current=$iv_ruleRainSensor.current; }
	EOF;

// Rule RainSensor
ruleRainSensor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='@rain'
		{
			newLeafNode(otherlv_0, grammarAccess.getRainSensorAccess().getRainKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRainSensorAccess().getNameNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRainSensorRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"de.altimos.mdsd.majordomo.dsl.MajordomoDsl.Name");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSwitchSensor
entryRuleSwitchSensor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSwitchSensorRule()); }
	iv_ruleSwitchSensor=ruleSwitchSensor
	{ $current=$iv_ruleSwitchSensor.current; }
	EOF;

// Rule SwitchSensor
ruleSwitchSensor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='@switch'
		{
			newLeafNode(otherlv_0, grammarAccess.getSwitchSensorAccess().getSwitchKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSwitchSensorAccess().getNameNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSwitchSensorRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"de.altimos.mdsd.majordomo.dsl.MajordomoDsl.Name");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleNumberSensor
entryRuleNumberSensor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNumberSensorRule()); }
	iv_ruleNumberSensor=ruleNumberSensor
	{ $current=$iv_ruleNumberSensor.current; }
	EOF;

// Rule NumberSensor
ruleNumberSensor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='@number'
		{
			newLeafNode(otherlv_0, grammarAccess.getNumberSensorAccess().getNumberKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNumberSensorAccess().getNameNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNumberSensorRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"de.altimos.mdsd.majordomo.dsl.MajordomoDsl.Name");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleClockSensor
entryRuleClockSensor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClockSensorRule()); }
	iv_ruleClockSensor=ruleClockSensor
	{ $current=$iv_ruleClockSensor.current; }
	EOF;

// Rule ClockSensor
ruleClockSensor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='@clock'
		{
			newLeafNode(otherlv_0, grammarAccess.getClockSensorAccess().getClockKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getClockSensorAccess().getNameNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClockSensorRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"de.altimos.mdsd.majordomo.dsl.MajordomoDsl.Name");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleLampActor
entryRuleLampActor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLampActorRule()); }
	iv_ruleLampActor=ruleLampActor
	{ $current=$iv_ruleLampActor.current; }
	EOF;

// Rule LampActor
ruleLampActor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='@lamp'
		{
			newLeafNode(otherlv_0, grammarAccess.getLampActorAccess().getLampKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLampActorAccess().getNameNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLampActorRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"de.altimos.mdsd.majordomo.dsl.MajordomoDsl.Name");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleRollerActor
entryRuleRollerActor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRollerActorRule()); }
	iv_ruleRollerActor=ruleRollerActor
	{ $current=$iv_ruleRollerActor.current; }
	EOF;

// Rule RollerActor
ruleRollerActor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='@roller'
		{
			newLeafNode(otherlv_0, grammarAccess.getRollerActorAccess().getRollerKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRollerActorAccess().getNameNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRollerActorRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"de.altimos.mdsd.majordomo.dsl.MajordomoDsl.Name");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleRoofWindowActor
entryRuleRoofWindowActor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRoofWindowActorRule()); }
	iv_ruleRoofWindowActor=ruleRoofWindowActor
	{ $current=$iv_ruleRoofWindowActor.current; }
	EOF;

// Rule RoofWindowActor
ruleRoofWindowActor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='@roof'
		{
			newLeafNode(otherlv_0, grammarAccess.getRoofWindowActorAccess().getRoofKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRoofWindowActorAccess().getNameNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRoofWindowActorRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"de.altimos.mdsd.majordomo.dsl.MajordomoDsl.Name");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleRadiatorActor
entryRuleRadiatorActor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRadiatorActorRule()); }
	iv_ruleRadiatorActor=ruleRadiatorActor
	{ $current=$iv_ruleRadiatorActor.current; }
	EOF;

// Rule RadiatorActor
ruleRadiatorActor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='@radiator'
		{
			newLeafNode(otherlv_0, grammarAccess.getRadiatorActorAccess().getRadiatorKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRadiatorActorAccess().getNameNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRadiatorActorRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"de.altimos.mdsd.majordomo.dsl.MajordomoDsl.Name");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleBoilerActor
entryRuleBoilerActor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBoilerActorRule()); }
	iv_ruleBoilerActor=ruleBoilerActor
	{ $current=$iv_ruleBoilerActor.current; }
	EOF;

// Rule BoilerActor
ruleBoilerActor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='@boiler'
		{
			newLeafNode(otherlv_0, grammarAccess.getBoilerActorAccess().getBoilerKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBoilerActorAccess().getNameNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBoilerActorRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"de.altimos.mdsd.majordomo.dsl.MajordomoDsl.Name");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleCoffeeActor
entryRuleCoffeeActor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCoffeeActorRule()); }
	iv_ruleCoffeeActor=ruleCoffeeActor
	{ $current=$iv_ruleCoffeeActor.current; }
	EOF;

// Rule CoffeeActor
ruleCoffeeActor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='@coffee'
		{
			newLeafNode(otherlv_0, grammarAccess.getCoffeeActorAccess().getCoffeeKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCoffeeActorAccess().getNameNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCoffeeActorRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"de.altimos.mdsd.majordomo.dsl.MajordomoDsl.Name");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleName
entryRuleName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getNameRule()); }
	iv_ruleName=ruleName
	{ $current=$iv_ruleName.current.getText(); }
	EOF;

// Rule Name
ruleName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_ID_0=RULE_ID
	{
		$current.merge(this_ID_0);
	}
	{
		newLeafNode(this_ID_0, grammarAccess.getNameAccess().getIDTerminalRuleCall());
	}
;

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); }
	iv_ruleQualifiedName=ruleQualifiedName
	{ $current=$iv_ruleQualifiedName.current.getText(); }
	EOF;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getQualifiedNameAccess().getNameParserRuleCall_0());
		}
		this_Name_0=ruleName
		{
			$current.merge(this_Name_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0());
			}
			{
				newCompositeNode(grammarAccess.getQualifiedNameAccess().getNameParserRuleCall_1_1());
			}
			this_Name_2=ruleName
			{
				$current.merge(this_Name_2);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)*
	)
;

// Entry rule entryRuleConstID
entryRuleConstID returns [String current=null]:
	{ newCompositeNode(grammarAccess.getConstIDRule()); }
	iv_ruleConstID=ruleConstID
	{ $current=$iv_ruleConstID.current.getText(); }
	EOF;

// Rule ConstID
ruleConstID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_CONST_0=RULE_CONST
	{
		$current.merge(this_CONST_0);
	}
	{
		newLeafNode(this_CONST_0, grammarAccess.getConstIDAccess().getCONSTTerminalRuleCall());
	}
;

// Entry rule entryRuleBinaryAndOperator
entryRuleBinaryAndOperator returns [String current=null]:
	{ newCompositeNode(grammarAccess.getBinaryAndOperatorRule()); }
	iv_ruleBinaryAndOperator=ruleBinaryAndOperator
	{ $current=$iv_ruleBinaryAndOperator.current.getText(); }
	EOF;

// Rule BinaryAndOperator
ruleBinaryAndOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='and'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBinaryAndOperatorAccess().getAndKeyword_0());
		}
		    |
		kw='&&'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBinaryAndOperatorAccess().getAmpersandAmpersandKeyword_1());
		}
		    |
		kw='&'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBinaryAndOperatorAccess().getAmpersandKeyword_2());
		}
	)
;

// Entry rule entryRuleBinaryOrOperator
entryRuleBinaryOrOperator returns [String current=null]:
	{ newCompositeNode(grammarAccess.getBinaryOrOperatorRule()); }
	iv_ruleBinaryOrOperator=ruleBinaryOrOperator
	{ $current=$iv_ruleBinaryOrOperator.current.getText(); }
	EOF;

// Rule BinaryOrOperator
ruleBinaryOrOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='or'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBinaryOrOperatorAccess().getOrKeyword_0());
		}
		    |
		kw='||'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBinaryOrOperatorAccess().getVerticalLineVerticalLineKeyword_1());
		}
		    |
		kw='|'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBinaryOrOperatorAccess().getVerticalLineKeyword_2());
		}
	)
;

// Entry rule entryRuleEFloat
entryRuleEFloat returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEFloatRule()); }
	iv_ruleEFloat=ruleEFloat
	{ $current=$iv_ruleEFloat.current.getText(); }
	EOF;

// Rule EFloat
ruleEFloat returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEFloatAccess().getHyphenMinusKeyword_0());
			}
		)?
		(
			this_INT_1=RULE_INT
			{
				$current.merge(this_INT_1);
			}
			{
				newLeafNode(this_INT_1, grammarAccess.getEFloatAccess().getINTTerminalRuleCall_1());
			}
		)?
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEFloatAccess().getFullStopKeyword_2_0());
			}
			this_INT_3=RULE_INT
			{
				$current.merge(this_INT_3);
			}
			{
				newLeafNode(this_INT_3, grammarAccess.getEFloatAccess().getINTTerminalRuleCall_2_1());
			}
			(
				(
					kw='E'
					{
						$current.merge(kw);
						newLeafNode(kw, grammarAccess.getEFloatAccess().getEKeyword_2_2_0_0());
					}
					    |
					kw='e'
					{
						$current.merge(kw);
						newLeafNode(kw, grammarAccess.getEFloatAccess().getEKeyword_2_2_0_1());
					}
				)
				(
					kw='-'
					{
						$current.merge(kw);
						newLeafNode(kw, grammarAccess.getEFloatAccess().getHyphenMinusKeyword_2_2_1());
					}
				)?
				this_INT_7=RULE_INT
				{
					$current.merge(this_INT_7);
				}
				{
					newLeafNode(this_INT_7, grammarAccess.getEFloatAccess().getINTTerminalRuleCall_2_2_2());
				}
			)?
		)?
	)
;

// Entry rule entryRuleEBoolean
entryRuleEBoolean returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEBooleanRule()); }
	iv_ruleEBoolean=ruleEBoolean
	{ $current=$iv_ruleEBoolean.current.getText(); }
	EOF;

// Rule EBoolean
ruleEBoolean returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='true'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEBooleanAccess().getTrueKeyword_0());
		}
		    |
		kw='false'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEBooleanAccess().getFalseKeyword_1());
		}
	)
;

// Rule Comparator
ruleComparator returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='<'
			{
				$current = grammarAccess.getComparatorAccess().getLTEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getComparatorAccess().getLTEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='<='
			{
				$current = grammarAccess.getComparatorAccess().getLEEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getComparatorAccess().getLEEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='>='
			{
				$current = grammarAccess.getComparatorAccess().getGEEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getComparatorAccess().getGEEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='>'
			{
				$current = grammarAccess.getComparatorAccess().getGTEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getComparatorAccess().getGTEnumLiteralDeclaration_3());
			}
		)
	)
;

RULE_CONST : ('A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
