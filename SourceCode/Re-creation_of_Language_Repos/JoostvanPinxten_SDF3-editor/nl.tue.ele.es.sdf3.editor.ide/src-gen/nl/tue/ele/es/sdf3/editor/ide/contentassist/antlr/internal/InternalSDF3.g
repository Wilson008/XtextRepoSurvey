/*
 * generated by Xtext 2.35.0
 */
grammar InternalSDF3;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package nl.tue.ele.es.sdf3.editor.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package nl.tue.ele.es.sdf3.editor.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import nl.tue.ele.es.sdf3.editor.services.SDF3GrammarAccess;

}
@parser::members {
	private SDF3GrammarAccess grammarAccess;

	public void setGrammarAccess(SDF3GrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleSDF3
entryRuleSDF3
:
{ before(grammarAccess.getSDF3Rule()); }
	 ruleSDF3
{ after(grammarAccess.getSDF3Rule()); } 
	 EOF 
;

// Rule SDF3
ruleSDF3 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSDF3Access().getGroup()); }
		(rule__SDF3__Group__0)
		{ after(grammarAccess.getSDF3Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleApplicationGraph
entryRuleApplicationGraph
:
{ before(grammarAccess.getApplicationGraphRule()); }
	 ruleApplicationGraph
{ after(grammarAccess.getApplicationGraphRule()); } 
	 EOF 
;

// Rule ApplicationGraph
ruleApplicationGraph 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getApplicationGraphAccess().getGroup()); }
		(rule__ApplicationGraph__Group__0)
		{ after(grammarAccess.getApplicationGraphAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleActor
entryRuleActor
:
{ before(grammarAccess.getActorRule()); }
	 ruleActor
{ after(grammarAccess.getActorRule()); } 
	 EOF 
;

// Rule Actor
ruleActor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getActorAccess().getGroup()); }
		(rule__Actor__Group__0)
		{ after(grammarAccess.getActorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePort
entryRulePort
:
{ before(grammarAccess.getPortRule()); }
	 rulePort
{ after(grammarAccess.getPortRule()); } 
	 EOF 
;

// Rule Port
rulePort 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPortAccess().getGroup()); }
		(rule__Port__Group__0)
		{ after(grammarAccess.getPortAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleChannel
entryRuleChannel
:
{ before(grammarAccess.getChannelRule()); }
	 ruleChannel
{ after(grammarAccess.getChannelRule()); } 
	 EOF 
;

// Rule Channel
ruleChannel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getChannelAccess().getGroup()); }
		(rule__Channel__Group__0)
		{ after(grammarAccess.getChannelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFQN
entryRuleFQN
:
{ before(grammarAccess.getFQNRule()); }
	 ruleFQN
{ after(grammarAccess.getFQNRule()); } 
	 EOF 
;

// Rule FQN
ruleFQN 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFQNAccess().getGroup()); }
		(rule__FQN__Group__0)
		{ after(grammarAccess.getFQNAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProperty
entryRuleProperty
:
{ before(grammarAccess.getPropertyRule()); }
	 ruleProperty
{ after(grammarAccess.getPropertyRule()); } 
	 EOF 
;

// Rule Property
ruleProperty 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPropertyAccess().getAlternatives()); }
		(rule__Property__Alternatives)
		{ after(grammarAccess.getPropertyAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGraphProperty
entryRuleGraphProperty
:
{ before(grammarAccess.getGraphPropertyRule()); }
	 ruleGraphProperty
{ after(grammarAccess.getGraphPropertyRule()); } 
	 EOF 
;

// Rule GraphProperty
ruleGraphProperty 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGraphPropertyAccess().getGroup()); }
		(rule__GraphProperty__Group__0)
		{ after(grammarAccess.getGraphPropertyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleChannelProperty
entryRuleChannelProperty
:
{ before(grammarAccess.getChannelPropertyRule()); }
	 ruleChannelProperty
{ after(grammarAccess.getChannelPropertyRule()); } 
	 EOF 
;

// Rule ChannelProperty
ruleChannelProperty 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getChannelPropertyAccess().getGroup()); }
		(rule__ChannelProperty__Group__0)
		{ after(grammarAccess.getChannelPropertyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleActorProperty
entryRuleActorProperty
:
{ before(grammarAccess.getActorPropertyRule()); }
	 ruleActorProperty
{ after(grammarAccess.getActorPropertyRule()); } 
	 EOF 
;

// Rule ActorProperty
ruleActorProperty 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getActorPropertyAccess().getGroup()); }
		(rule__ActorProperty__Group__0)
		{ after(grammarAccess.getActorPropertyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSDF_TYPE
entryRuleSDF_TYPE
:
{ before(grammarAccess.getSDF_TYPERule()); }
	 ruleSDF_TYPE
{ after(grammarAccess.getSDF_TYPERule()); } 
	 EOF 
;

// Rule SDF_TYPE
ruleSDF_TYPE 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSDF_TYPEAccess().getAlternatives()); }
		(rule__SDF_TYPE__Alternatives)
		{ after(grammarAccess.getSDF_TYPEAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule PortType
rulePortType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPortTypeAccess().getAlternatives()); }
		(rule__PortType__Alternatives)
		{ after(grammarAccess.getPortTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyAccess().getActorPropertyParserRuleCall_0()); }
		ruleActorProperty
		{ after(grammarAccess.getPropertyAccess().getActorPropertyParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getPropertyAccess().getChannelPropertyParserRuleCall_1()); }
		ruleChannelProperty
		{ after(grammarAccess.getPropertyAccess().getChannelPropertyParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getPropertyAccess().getGraphPropertyParserRuleCall_2()); }
		ruleGraphProperty
		{ after(grammarAccess.getPropertyAccess().getGraphPropertyParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SDF_TYPE__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSDF_TYPEAccess().getSDFKeyword_0()); }
		'SDF'
		{ after(grammarAccess.getSDF_TYPEAccess().getSDFKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getSDF_TYPEAccess().getSADFKeyword_1()); }
		'SADF'
		{ after(grammarAccess.getSDF_TYPEAccess().getSADFKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PortType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPortTypeAccess().getINEnumLiteralDeclaration_0()); }
		('in')
		{ after(grammarAccess.getPortTypeAccess().getINEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getPortTypeAccess().getOUTEnumLiteralDeclaration_1()); }
		('out')
		{ after(grammarAccess.getPortTypeAccess().getOUTEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SDF3__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SDF3__Group__0__Impl
	rule__SDF3__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SDF3__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSDF3Access().getTypeKeyword_0()); }
	'type'
	{ after(grammarAccess.getSDF3Access().getTypeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SDF3__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SDF3__Group__1__Impl
	rule__SDF3__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SDF3__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSDF3Access().getSDF_TYPEParserRuleCall_1()); }
	ruleSDF_TYPE
	{ after(grammarAccess.getSDF3Access().getSDF_TYPEParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SDF3__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SDF3__Group__2__Impl
	rule__SDF3__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SDF3__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSDF3Access().getSemicolonKeyword_2()); }
	';'
	{ after(grammarAccess.getSDF3Access().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SDF3__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SDF3__Group__3__Impl
	rule__SDF3__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SDF3__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSDF3Access().getApplicationAssignment_3()); }
	(rule__SDF3__ApplicationAssignment_3)
	{ after(grammarAccess.getSDF3Access().getApplicationAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SDF3__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SDF3__Group__4__Impl
	rule__SDF3__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SDF3__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSDF3Access().getPropertiesKeyword_4()); }
	'properties'
	{ after(grammarAccess.getSDF3Access().getPropertiesKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SDF3__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SDF3__Group__5__Impl
	rule__SDF3__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__SDF3__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSDF3Access().getLeftCurlyBracketKeyword_5()); }
	'{'
	{ after(grammarAccess.getSDF3Access().getLeftCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SDF3__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SDF3__Group__6__Impl
	rule__SDF3__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__SDF3__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSDF3Access().getPropertiesAssignment_6()); }
	(rule__SDF3__PropertiesAssignment_6)*
	{ after(grammarAccess.getSDF3Access().getPropertiesAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SDF3__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SDF3__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SDF3__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSDF3Access().getRightCurlyBracketKeyword_7()); }
	'}'
	{ after(grammarAccess.getSDF3Access().getRightCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ApplicationGraph__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ApplicationGraph__Group__0__Impl
	rule__ApplicationGraph__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplicationGraph__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplicationGraphAccess().getApplicationKeyword_0()); }
	'application'
	{ after(grammarAccess.getApplicationGraphAccess().getApplicationKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplicationGraph__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ApplicationGraph__Group__1__Impl
	rule__ApplicationGraph__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplicationGraph__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplicationGraphAccess().getGraphKeyword_1()); }
	'graph'
	{ after(grammarAccess.getApplicationGraphAccess().getGraphKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplicationGraph__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ApplicationGraph__Group__2__Impl
	rule__ApplicationGraph__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplicationGraph__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplicationGraphAccess().getNameAssignment_2()); }
	(rule__ApplicationGraph__NameAssignment_2)
	{ after(grammarAccess.getApplicationGraphAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplicationGraph__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ApplicationGraph__Group__3__Impl
	rule__ApplicationGraph__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplicationGraph__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplicationGraphAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getApplicationGraphAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplicationGraph__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ApplicationGraph__Group__4__Impl
	rule__ApplicationGraph__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplicationGraph__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getApplicationGraphAccess().getActorsAssignment_4()); }
		(rule__ApplicationGraph__ActorsAssignment_4)
		{ after(grammarAccess.getApplicationGraphAccess().getActorsAssignment_4()); }
	)
	(
		{ before(grammarAccess.getApplicationGraphAccess().getActorsAssignment_4()); }
		(rule__ApplicationGraph__ActorsAssignment_4)*
		{ after(grammarAccess.getApplicationGraphAccess().getActorsAssignment_4()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplicationGraph__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ApplicationGraph__Group__5__Impl
	rule__ApplicationGraph__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplicationGraph__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getApplicationGraphAccess().getChannelsAssignment_5()); }
		(rule__ApplicationGraph__ChannelsAssignment_5)
		{ after(grammarAccess.getApplicationGraphAccess().getChannelsAssignment_5()); }
	)
	(
		{ before(grammarAccess.getApplicationGraphAccess().getChannelsAssignment_5()); }
		(rule__ApplicationGraph__ChannelsAssignment_5)*
		{ after(grammarAccess.getApplicationGraphAccess().getChannelsAssignment_5()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplicationGraph__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ApplicationGraph__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplicationGraph__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplicationGraphAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getApplicationGraphAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Actor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actor__Group__0__Impl
	rule__Actor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorAccess().getActorKeyword_0()); }
	'actor'
	{ after(grammarAccess.getActorAccess().getActorKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actor__Group__1__Impl
	rule__Actor__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorAccess().getNameAssignment_1()); }
	(rule__Actor__NameAssignment_1)
	{ after(grammarAccess.getActorAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actor__Group__2__Impl
	rule__Actor__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorAccess().getLeftSquareBracketKeyword_2()); }
	'['
	{ after(grammarAccess.getActorAccess().getLeftSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actor__Group__3__Impl
	rule__Actor__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorAccess().getTypeAssignment_3()); }
	(rule__Actor__TypeAssignment_3)
	{ after(grammarAccess.getActorAccess().getTypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actor__Group__4__Impl
	rule__Actor__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorAccess().getRightSquareBracketKeyword_4()); }
	']'
	{ after(grammarAccess.getActorAccess().getRightSquareBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actor__Group__5__Impl
	rule__Actor__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorAccess().getPortsAssignment_5()); }
	(rule__Actor__PortsAssignment_5)
	{ after(grammarAccess.getActorAccess().getPortsAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actor__Group__6__Impl
	rule__Actor__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorAccess().getGroup_6()); }
	(rule__Actor__Group_6__0)*
	{ after(grammarAccess.getActorAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actor__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorAccess().getSemicolonKeyword_7()); }
	';'
	{ after(grammarAccess.getActorAccess().getSemicolonKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Actor__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actor__Group_6__0__Impl
	rule__Actor__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorAccess().getCommaKeyword_6_0()); }
	','
	{ after(grammarAccess.getActorAccess().getCommaKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actor__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorAccess().getPortsAssignment_6_1()); }
	(rule__Actor__PortsAssignment_6_1)
	{ after(grammarAccess.getActorAccess().getPortsAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Port__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Port__Group__0__Impl
	rule__Port__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortAccess().getPortTypeAssignment_0()); }
	(rule__Port__PortTypeAssignment_0)
	{ after(grammarAccess.getPortAccess().getPortTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Port__Group__1__Impl
	rule__Port__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortAccess().getNameAssignment_1()); }
	(rule__Port__NameAssignment_1)
	{ after(grammarAccess.getPortAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Port__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortAccess().getRateAssignment_2()); }
	(rule__Port__RateAssignment_2)
	{ after(grammarAccess.getPortAccess().getRateAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Channel__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Channel__Group__0__Impl
	rule__Channel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Channel__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChannelAccess().getChannelKeyword_0()); }
	'channel'
	{ after(grammarAccess.getChannelAccess().getChannelKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Channel__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Channel__Group__1__Impl
	rule__Channel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Channel__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChannelAccess().getNameAssignment_1()); }
	(rule__Channel__NameAssignment_1)
	{ after(grammarAccess.getChannelAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Channel__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Channel__Group__2__Impl
	rule__Channel__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Channel__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChannelAccess().getSourceAssignment_2()); }
	(rule__Channel__SourceAssignment_2)
	{ after(grammarAccess.getChannelAccess().getSourceAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Channel__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Channel__Group__3__Impl
	rule__Channel__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Channel__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChannelAccess().getToKeyword_3()); }
	'to'
	{ after(grammarAccess.getChannelAccess().getToKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Channel__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Channel__Group__4__Impl
	rule__Channel__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Channel__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChannelAccess().getDestinationAssignment_4()); }
	(rule__Channel__DestinationAssignment_4)
	{ after(grammarAccess.getChannelAccess().getDestinationAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Channel__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Channel__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Channel__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChannelAccess().getGroup_5()); }
	(rule__Channel__Group_5__0)?
	{ after(grammarAccess.getChannelAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Channel__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Channel__Group_5__0__Impl
	rule__Channel__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Channel__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChannelAccess().getInitiallyKeyword_5_0()); }
	'initially'
	{ after(grammarAccess.getChannelAccess().getInitiallyKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Channel__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Channel__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Channel__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChannelAccess().getInitialTokensAssignment_5_1()); }
	(rule__Channel__InitialTokensAssignment_5_1)
	{ after(grammarAccess.getChannelAccess().getInitialTokensAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FQN__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FQN__Group__0__Impl
	rule__FQN__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFQNAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
	{ after(grammarAccess.getFQNAccess().getIDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FQN__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFQNAccess().getGroup_1()); }
	(rule__FQN__Group_1__0)*
	{ after(grammarAccess.getFQNAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FQN__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FQN__Group_1__0__Impl
	rule__FQN__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFQNAccess().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getFQNAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FQN__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFQNAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
	{ after(grammarAccess.getFQNAccess().getIDTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GraphProperty__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphProperty__Group__0__Impl
	rule__GraphProperty__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphProperty__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphPropertyAccess().getThroughputKeyword_0()); }
	'throughput'
	{ after(grammarAccess.getGraphPropertyAccess().getThroughputKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphProperty__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphProperty__Group__1__Impl
	rule__GraphProperty__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphProperty__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphPropertyAccess().getThroughputAssignment_1()); }
	(rule__GraphProperty__ThroughputAssignment_1)
	{ after(grammarAccess.getGraphPropertyAccess().getThroughputAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphProperty__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GraphProperty__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphProperty__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphPropertyAccess().getSemicolonKeyword_2()); }
	';'
	{ after(grammarAccess.getGraphPropertyAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ChannelProperty__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChannelProperty__Group__0__Impl
	rule__ChannelProperty__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelProperty__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChannelPropertyAccess().getForKeyword_0()); }
	'for'
	{ after(grammarAccess.getChannelPropertyAccess().getForKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelProperty__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChannelProperty__Group__1__Impl
	rule__ChannelProperty__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelProperty__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChannelPropertyAccess().getChannelKeyword_1()); }
	'channel'
	{ after(grammarAccess.getChannelPropertyAccess().getChannelKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelProperty__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChannelProperty__Group__2__Impl
	rule__ChannelProperty__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelProperty__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChannelPropertyAccess().getChannelAssignment_2()); }
	(rule__ChannelProperty__ChannelAssignment_2)
	{ after(grammarAccess.getChannelPropertyAccess().getChannelAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelProperty__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChannelProperty__Group__3__Impl
	rule__ChannelProperty__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelProperty__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChannelPropertyAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getChannelPropertyAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelProperty__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChannelProperty__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelProperty__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChannelPropertyAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getChannelPropertyAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ActorProperty__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActorProperty__Group__0__Impl
	rule__ActorProperty__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorProperty__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorPropertyAccess().getForKeyword_0()); }
	'for'
	{ after(grammarAccess.getActorPropertyAccess().getForKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorProperty__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActorProperty__Group__1__Impl
	rule__ActorProperty__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorProperty__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorPropertyAccess().getActorKeyword_1()); }
	'actor'
	{ after(grammarAccess.getActorPropertyAccess().getActorKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorProperty__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActorProperty__Group__2__Impl
	rule__ActorProperty__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorProperty__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorPropertyAccess().getActorAssignment_2()); }
	(rule__ActorProperty__ActorAssignment_2)
	{ after(grammarAccess.getActorPropertyAccess().getActorAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorProperty__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActorProperty__Group__3__Impl
	rule__ActorProperty__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorProperty__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorPropertyAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getActorPropertyAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorProperty__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActorProperty__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorProperty__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorPropertyAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getActorPropertyAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SDF3__ApplicationAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSDF3Access().getApplicationApplicationGraphParserRuleCall_3_0()); }
		ruleApplicationGraph
		{ after(grammarAccess.getSDF3Access().getApplicationApplicationGraphParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SDF3__PropertiesAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSDF3Access().getPropertiesPropertyParserRuleCall_6_0()); }
		ruleProperty
		{ after(grammarAccess.getSDF3Access().getPropertiesPropertyParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplicationGraph__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getApplicationGraphAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getApplicationGraphAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplicationGraph__ActorsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getApplicationGraphAccess().getActorsActorParserRuleCall_4_0()); }
		ruleActor
		{ after(grammarAccess.getApplicationGraphAccess().getActorsActorParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplicationGraph__ChannelsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getApplicationGraphAccess().getChannelsChannelParserRuleCall_5_0()); }
		ruleChannel
		{ after(grammarAccess.getApplicationGraphAccess().getChannelsChannelParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActorAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getActorAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__TypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActorAccess().getTypeIDTerminalRuleCall_3_0()); }
		RULE_ID
		{ after(grammarAccess.getActorAccess().getTypeIDTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__PortsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActorAccess().getPortsPortParserRuleCall_5_0()); }
		rulePort
		{ after(grammarAccess.getActorAccess().getPortsPortParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__PortsAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActorAccess().getPortsPortParserRuleCall_6_1_0()); }
		rulePort
		{ after(grammarAccess.getActorAccess().getPortsPortParserRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__PortTypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPortAccess().getPortTypePortTypeEnumRuleCall_0_0()); }
		rulePortType
		{ after(grammarAccess.getPortAccess().getPortTypePortTypeEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPortAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getPortAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__RateAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPortAccess().getRateINTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getPortAccess().getRateINTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Channel__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChannelAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getChannelAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Channel__SourceAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChannelAccess().getSourcePortCrossReference_2_0()); }
		(
			{ before(grammarAccess.getChannelAccess().getSourcePortFQNParserRuleCall_2_0_1()); }
			ruleFQN
			{ after(grammarAccess.getChannelAccess().getSourcePortFQNParserRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getChannelAccess().getSourcePortCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Channel__DestinationAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChannelAccess().getDestinationPortCrossReference_4_0()); }
		(
			{ before(grammarAccess.getChannelAccess().getDestinationPortFQNParserRuleCall_4_0_1()); }
			ruleFQN
			{ after(grammarAccess.getChannelAccess().getDestinationPortFQNParserRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getChannelAccess().getDestinationPortCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Channel__InitialTokensAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChannelAccess().getInitialTokensINTTerminalRuleCall_5_1_0()); }
		RULE_INT
		{ after(grammarAccess.getChannelAccess().getInitialTokensINTTerminalRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GraphProperty__ThroughputAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGraphPropertyAccess().getThroughputDECIMALTerminalRuleCall_1_0()); }
		RULE_DECIMAL
		{ after(grammarAccess.getGraphPropertyAccess().getThroughputDECIMALTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelProperty__ChannelAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChannelPropertyAccess().getChannelChannelCrossReference_2_0()); }
		(
			{ before(grammarAccess.getChannelPropertyAccess().getChannelChannelIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getChannelPropertyAccess().getChannelChannelIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getChannelPropertyAccess().getChannelChannelCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorProperty__ActorAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActorPropertyAccess().getActorActorCrossReference_2_0()); }
		(
			{ before(grammarAccess.getActorPropertyAccess().getActorActorFQNParserRuleCall_2_0_1()); }
			ruleFQN
			{ after(grammarAccess.getActorPropertyAccess().getActorActorFQNParserRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getActorPropertyAccess().getActorActorCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_DECIMAL : ('0'..'9')* '.' ('0'..'9')+;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
